Search.setIndex({"alltitles": {"AbsoluteTransformation": [[321, null]], "Acquisition Function Values": [[481, "acquisition-function-values"]], "AcquisitionFunction": [[26, null]], "Active Learning": [[479, null]], "Added": [[475, "added"], [475, "id6"], [475, "id15"], [475, "id26"], [475, "id30"], [475, "id36"], [475, "id43"], [475, "id52"], [475, "id58"], [475, "id62"], [475, "id69"], [475, "id74"], [475, "id80"], [475, "id86"], [475, "id90"], [475, "id94"], [475, "id98"], [475, "id103"], [475, "id107"], [475, "id110"], [475, "id114"], [475, "id118"], [475, "id122"], [475, "id125"], [475, "id129"], [475, "id133"], [475, "id137"], [475, "id141"], [475, "id147"], [475, "id150"]], "Adding Fake Target Measurements and Parameter Noise": [[497, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[494, null]], "Adding Measurements": [[481, "adding-measurements"]], "Adding Partial Results": [[480, "adding-partial-results"]], "Addition": [[495, "addition"]], "AdditiveKernel": [[120, null]], "AdditiveTransformation": [[334, null]], "Advanced Example: Chemical Substances": [[473, "advanced-example-chemical-substances"]], "AffinePosteriorTransform": [[306, null]], "AffineTransformation": [[322, null], [495, "affinetransformation"]], "Array-Based Callables": [[491, null]], "Asynchronous Workflows": [[480, null]], "Auto-Replication": [[492, "auto-replication"]], "Automatic Wrapping": [[495, null]], "Automatic field conversion": [[490, "automatic-field-conversion"]], "Available Models": [[492, "available-models"]], "Backtesting": [[429, null]], "BaseSequentialMetaRecommender": [[187, null]], "Basic Creation": [[481, "basic-creation"]], "Basic Instructions": [[483, "basic-instructions"]], "Basic Transformations": [[495, "basic-transformations"]], "Basic Usage": [[485, "basic-usage"]], "Basic string assembly": [[490, "basic-string-assembly"]], "BasicKernel": [[107, null]], "Basics": [[434, null], [481, "basics"]], "Batch Optimization": [[481, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[473, null]], "Bayesian Recommenders": [[488, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[284, null]], "BayesianRecommender": [[198, null]], "BellTransformation": [[323, null], [495, "belltransformation"]], "BetaBernoulliMultiArmedBanditSurrogate": [[257, null]], "BetaPrior": [[173, null]], "BinaryTarget": [[303, null]], "BotorchRecommender": [[200, null]], "Breaking Changes": [[475, "breaking-changes"], [475, "id35"], [475, "id42"]], "Building from the Product of Parameter Values": [[489, "building-from-the-product-of-parameter-values"], [489, "id2"]], "CPUs without AVX support \u2013 Installation of polars": [[474, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[481, "caching-of-recommendations"]], "Campaign": [[34, null]], "Campaigns": [[481, null]], "Candidate Control in Discrete Spaces": [[481, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[484, null]], "CardinalityConstraint": [[37, null]], "CategoricalEncoding": [[150, null]], "CategoricalParameter": [[145, null], [487, "categoricalparameter"]], "Caution": [[484, null]], "ChainedMCObjective": [[128, null]], "ChainedTransformation": [[335, null]], "Chaining": [[495, "chaining"]], "Chaining Custom Transformations": [[495, null]], "Changed": [[475, "changed"], [475, "id2"], [475, "id7"], [475, "id11"], [475, "id13"], [475, "id16"], [475, "id21"], [475, "id27"], [475, "id31"], [475, "id37"], [475, "id44"], [475, "id49"], [475, "id53"], [475, "id59"], [475, "id63"], [475, "id66"], [475, "id70"], [475, "id75"], [475, "id81"], [475, "id87"], [475, "id91"], [475, "id95"], [475, "id99"], [475, "id104"], [475, "id108"], [475, "id111"], [475, "id115"], [475, "id119"], [475, "id123"], [475, "id126"], [475, "id130"], [475, "id134"], [475, "id138"], [475, "id142"]], "Changelog": [[475, null]], "ClampingTransformation": [[324, null], [495, "clampingtransformation"]], "Clustering Recommenders": [[488, "clustering-recommenders"]], "Code Design": [[476, "code-design"]], "ColumnTransformer": [[418, null]], "Composite Surrogates": [[492, "composite-surrogates"]], "Composite Transformations": [[495, "composite-transformations"]], "CompositeKernel": [[108, null]], "CompositeSurrogate": [[264, null]], "Compression": [[495, null]], "Computational Challenges": [[482, null]], "Condition": [[43, null]], "Conditions": [[482, "conditions"]], "Constraint": [[38, null]], "Constraints": [[482, null]], "Constraints Continuous": [[437, null]], "Constraints Discrete": [[440, null]], "Constructing Full Search Spaces": [[489, "constructing-full-search-spaces"]], "Constructing from a Dataframe": [[489, "constructing-from-a-dataframe"], [489, "id1"], [489, "id3"]], "Continuous Constraints": [[482, "continuous-constraints"]], "Continuous Parameters": [[487, "continuous-parameters"]], "Continuous Subspaces": [[489, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[47, null], [482, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[39, null]], "ContinuousLinearConstraint": [[48, null], [482, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[40, null]], "ContinuousParameter": [[141, null]], "Contributing to BayBE": [[476, null]], "Contributors": [[477, null], [477, "id1"]], "Convenience Construction": [[493, "convenience-construction"], [495, null], [495, null], [495, null]], "Convenience Construction and Implicit Conversion": [[486, null]], "Convenience Multi-Output Casting": [[486, null]], "Conventions for attrs classes": [[476, "conventions-for-attrs-classes"]], "Creating a Campaign": [[481, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[489, "creating-a-simplex-bound-discrete-subspace"]], "Creation From a JSON Config": [[481, "creation-from-a-json-config"]], "Creation from Existing Transformations": [[495, null]], "Current Scalarization Limitations": [[492, null]], "Current Scope": [[495, null]], "Custom Hooks": [[445, null]], "Custom Surrogates": [[449, null]], "Custom Transformations": [[495, "custom-transformations"]], "CustomDiscreteParameter": [[148, null], [487, "customdiscreteparameter"]], "CustomEncoding": [[151, null]], "CustomONNXSurrogate": [[266, null]], "CustomTransformation": [[325, null]], "DUMMY FILE": [[430, null], [431, null], [432, null], [433, null], [435, null], [436, null], [438, null], [439, null], [441, null], [442, null], [443, null], [444, null], [446, null], [447, null], [448, null], [450, null], [451, null], [453, null], [454, null], [456, null], [458, null], [459, null], [461, null], [462, null], [463, null], [465, null], [466, null], [467, null], [469, null], [470, null]], "Dataframe deserialization": [[490, "dataframe-deserialization"]], "DefaultKernelFactory": [[280, null]], "Defining the Optimization Objective": [[473, "defining-the-optimization-objective"]], "Defining the Search Space": [[473, "defining-the-search-space"]], "Deprecations": [[475, "deprecations"], [475, "id19"], [475, "id33"], [475, "id40"], [475, "id47"], [475, "id56"], [475, "id72"], [475, "id78"], [475, "id84"], [475, "id101"]], "Deserialization from configuration strings": [[490, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[130, null], [486, "desirabilityobjective"]], "Developer Tools": [[476, "developer-tools"]], "Discrete Constraints": [[482, "discrete-constraints"]], "Discrete Parameters": [[487, "discrete-parameters"]], "Discrete Subspaces": [[489, "discrete-subspaces"]], "DiscreteCardinalityConstraint": [[54, null], [482, "discretecardinalityconstraint"]], "DiscreteConstraint": [[41, null]], "DiscreteCustomConstraint": [[55, null], [482, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[56, null], [482, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[57, null], [482, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[58, null], [482, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[59, null], [482, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[142, null]], "DiscretePermutationInvarianceConstraint": [[60, null], [482, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[61, null]], "DiscreteSamplingMethod": [[414, null]], "DiscreteSumConstraint": [[62, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[482, "discretesumconstraint-and-discreteproductconstraint"]], "Disk Caching": [[483, "disk-caching"]], "Dummy": [[346, null]], "Dynamic Exclusion": [[484, "dynamic-exclusion"]], "EDBOKernelFactory": [[282, null]], "EXPERIMENTAL: Floating Point Precision": [[483, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[497, null]], "Environment Variables": [[483, null]], "Equivalent copies": [[490, null]], "Estimation with Constraints": [[497, null]], "Example 1 \u2013 Normalized Targets": [[486, "example-1-normalized-targets"]], "Example 2 \u2013 Non-Normalized Targets": [[486, "example-2-non-normalized-targets"]], "Examples": [[471, null]], "Examples On This Page": [[485, null]], "Excluding Configurations": [[484, "excluding-configurations"]], "Expectations": [[494, null]], "ExpectedImprovement": [[3, null]], "Experimental Feature": [[483, null]], "Experimental Feature \u2013>": [[483, null]], "Experimental Representation Limits": [[485, null]], "Experimental and Computational Representations": [[485, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[475, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[475, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[475, "expired-deprecations-from-0-9"]], "Explainers": [[485, "explainers"]], "ExponentialTransformation": [[326, null]], "Extending BayBE\u2019s Functionality": [[476, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[492, "extracting-the-model-for-advanced-study"]], "FAQ": [[472, null]], "FPSInitialization": [[212, null]], "FPSRecommender": [[213, null]], "Fixed": [[475, "fixed"], [475, "id3"], [475, "id8"], [475, "id17"], [475, "id22"], [475, "id24"], [475, "id28"], [475, "id32"], [475, "id38"], [475, "id46"], [475, "id50"], [475, "id55"], [475, "id60"], [475, "id64"], [475, "id71"], [475, "id76"], [475, "id82"], [475, "id88"], [475, "id96"], [475, "id100"], [475, "id105"], [475, "id112"], [475, "id116"], [475, "id120"], [475, "id127"], [475, "id131"], [475, "id135"], [475, "id139"], [475, "id143"], [475, "id145"], [475, "id148"]], "For Label-Like Parameters: Values and Active Values": [[487, "label-like"]], "From GitHub": [[473, "from-github"]], "From Local Clone": [[473, "from-local-clone"]], "From Package Index": [[473, "from-package-index"]], "From the Default Constructor": [[489, "from-the-default-constructor"]], "Further Information": [[481, "further-information"]], "GammaPrior": [[174, null]], "GaussianMixtureClusteringRecommender": [[207, null]], "GaussianProcessPreset": [[277, null]], "GaussianProcessSurrogate": [[270, null]], "General Information": [[488, "general-information"]], "General Workflow": [[476, "general-workflow"]], "Getting Recommendations": [[481, "getting-recommendations"], [484, null]], "Global Uncertainty Reduction": [[479, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[175, null]], "HalfNormalPrior": [[176, null]], "Hybrid constraints": [[482, null]], "IdentityTransformation": [[327, null]], "Important": [[493, null]], "IndependentGaussianSurrogate": [[259, null]], "Indices and Tables": [[473, "indices-and-tables"]], "Influence of Continuous Parameters": [[497, null]], "Insights": [[485, null]], "Installation Related Issues": [[474, "installation-related-issues"]], "Interval": [[400, null]], "Invoking alternative constructors": [[490, "invoking-alternative-constructors"]], "JSON (de-)serialization": [[490, "json-de-serialization"]], "KMeansClusteringRecommender": [[208, null]], "KMedoids": [[375, null]], "Kernel": [[109, null]], "KernelFactory": [[272, null]], "Known Issues": [[474, null]], "License": [[478, null]], "Limitations": [[480, null], [493, "limitations"]], "LinearKernel": [[111, null]], "Local Uncertainty Reduction": [[479, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[177, null]], "LogarithmicTransformation": [[328, null]], "Maintainers": [[477, "maintainers"]], "Manual Negation": [[493, null]], "Marking Experiments as Pending": [[480, "marking-experiments-as-pending"]], "MaternKernel": [[112, null]], "MeanPredictionSurrogate": [[286, null]], "Memory During Optimization": [[497, null]], "MemorySize": [[224, null]], "Meta Recommenders": [[484, null], [488, "meta-recommenders"]], "MetaRecommender": [[185, null]], "Method overrides": [[476, "method-overrides"]], "Missing Lookup Values": [[491, null]], "Mixtures": [[452, null]], "Model Interpretation in BO": [[485, null]], "MonotonicTransformation": [[318, null]], "Multi Target": [[457, null]], "Multi-Armed Bandit": [[455, null]], "Multi-Output Modeling": [[492, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[485, "multi-output-surrogate-models"]], "Multiplication": [[495, "multiplication"]], "MultiplicativeTransformation": [[336, null]], "NGBoostSurrogate": [[288, null]], "NaiveHybridSpaceRecommender": [[192, null]], "Nesting objects": [[490, "nesting-objects"]], "Non-Dominated Configurations": [[486, null]], "NonPredictiveRecommender": [[205, null]], "NormalPrior": [[178, null]], "NumericalContinuousParameter": [[155, null], [487, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[156, null], [487, "numericaldiscreteparameter"]], "NumericalTarget": [[309, null], [493, "numericaltarget"]], "Objective": [[125, null], [486, null]], "Optional Dependencies": [[473, "optional-dependencies"]], "Optional Dependency": [[487, null]], "Optional: Defining the Optimization Strategy": [[473, "optional-defining-the-optimization-strategy"]], "Order of Operations": [[495, null]], "PAMClusteringRecommender": [[209, null]], "Parallel Runs in Scenario Simulations": [[483, "parallel-runs-in-scenario-simulations"]], "Parameter": [[143, null]], "Parameter Encoding": [[487, null]], "Parameter Importance via SHAP": [[485, "parameter-importance-via-shap"]], "Parameter Names": [[487, null]], "Parameter tolerances": [[481, null]], "ParameterEncoding": [[152, null]], "Parameters": [[487, null]], "ParetoObjective": [[134, null], [486, "paretoobjective"]], "PartialAcquisitionFunction": [[28, null]], "PeriodicKernel": [[113, null]], "Permanent Exclusion": [[484, "permanent-exclusion"]], "PiecewisePolynomialKernel": [[114, null]], "PlainKernelFactory": [[273, null]], "Plots": [[485, "plots"]], "Polars": [[483, "polars"]], "PolynomialKernel": [[115, null]], "Posterior Statistics with Desirability Objectives": [[481, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "PowerTransformation": [[329, null]], "Pre-Defined Transformations": [[495, "pre-defined-transformations"]], "Predictive Statistics": [[481, "predictive-statistics"]], "Prior": [[171, null]], "ProbabilityOfImprovement": [[7, null]], "ProductKernel": [[121, null]], "Pure Recommenders": [[488, "pure-recommenders"]], "PureRecommender": [[195, null]], "Purely Continuous Search Spaces": [[479, null]], "PyCharm vs. exceptiongroup": [[474, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[116, null]], "RFFKernel": [[117, null]], "RQKernel": [[118, null]], "RandomForestSurrogate": [[290, null]], "RandomRecommender": [[214, null]], "RecommenderProtocol": [[182, null]], "Recommenders": [[488, null]], "Removed": [[475, "removed"], [475, "id4"], [475, "id9"], [475, "id18"], [475, "id39"], [475, "id45"], [475, "id54"], [475, "id67"], [475, "id77"], [475, "id83"], [475, "id92"]], "Representation of Data within Discrete Subspaces": [[489, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[497, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[489, "restricting-search-spaces-using-constraints"]], "Row Order": [[483, null]], "SHAPInsight": [[100, null]], "SKLearnClusteringRecommender": [[210, null]], "Sampling Recommenders": [[488, "sampling-recommenders"]], "Scalarizer": [[132, null]], "ScaleKernel": [[122, null]], "Search Space Memory Estimation": [[497, "search-space-memory-estimation"]], "Search Spaces": [[489, null]], "SearchSpace": [[219, null]], "SearchSpaceType": [[220, null]], "Searchspaces": [[460, null]], "Seeing Transfer Learning in Action": [[494, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[481, null]], "SequentialMetaRecommender": [[188, null]], "SerialMixin": [[242, null]], "Serialization": [[464, null], [481, "serialization"], [490, null]], "SigmoidTransformation": [[330, null]], "Simulating Multiple Scenarios": [[491, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[491, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[491, "simulating-a-single-experiment"]], "Simulation": [[491, null]], "SingleTargetObjective": [[136, null], [486, "singletargetobjective"]], "SmoothedBoxPrior": [[179, null]], "StreamingSequentialMetaRecommender": [[189, null]], "Sub-Sampling Method": [[479, null]], "SubSelectionCondition": [[44, null], [482, "subselectioncondition"]], "SubspaceContinuous": [[217, null]], "SubspaceDiscrete": [[225, null]], "SubstanceEncoding": [[153, null]], "SubstanceParameter": [[159, null], [487, "substanceparameter"]], "Suggested Fix": [[474, null], [474, null], [474, null], [474, null]], "Supported Acquisition Functions": [[480, null]], "Supported Recommenders": [[480, null]], "Surrogate": [[261, null]], "Surrogate Replication": [[492, "surrogate-replication"]], "SurrogateProtocol": [[262, null]], "Surrogates": [[492, null]], "Synchronizing Pull Requests": [[476, "synchronizing-pull-requests"]], "Target": [[301, null]], "Target Normalization": [[486, "target-normalization"]], "Targets": [[493, null]], "TaskParameter": [[146, null], [487, "taskparameter"]], "Technology": [[494, null]], "Telemetry": [[483, "telemetry"]], "Telemetry Scope": [[483, null]], "Terminology": [[490, null], [494, null]], "Terminology Continued": [[494, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[491, "terminology-what-do-we-mean-by-simulation"]], "The Lookup Mechanism": [[491, "the-lookup-mechanism"]], "The Optimization Loop": [[473, "the-optimization-loop"]], "The Role of the TaskParameter": [[494, "the-role-of-the-taskparameter"]], "The recommend Call": [[484, "the-recommend-call"]], "The type field": [[490, "the-type-field"]], "ThresholdCondition": [[45, null], [482, "thresholdcondition"]], "Trajectory-Based Control": [[484, null]], "Transfer Learning": [[468, null], [494, null]], "Transformation": [[319, null]], "Transformations": [[495, null]], "TriangularTransformation": [[331, null], [495, "triangulartransformation"]], "TwoPhaseMetaRecommender": [[190, null]], "TwoSidedAffineTransformation": [[332, null], [495, "twosidedaffinetransformation"]], "Uninstalling Internet Packages": [[483, null]], "Unlocking Data Treasures Through Transfer Learning": [[494, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[348, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[496, null]], "Using Custom Models": [[492, "using-custom-models"]], "Using Explicit Bounds": [[489, "using-explicit-bounds"]], "Using None": [[491, "using-none"]], "Using a Callable": [[491, "using-a-callable"]], "Using a Dataframe": [[491, "using-a-dataframe"]], "Using abbreviations": [[490, "using-abbreviations"]], "Using default values": [[490, "using-default-values"]], "Utilities": [[497, null]], "Windows \u2013 Torch Problems": [[474, "windows-torch-problems"]], "Writing Docstrings": [[476, "writing-docstrings"]], "Writing classes": [[476, "writing-classes"]], "[0.1.0] - 2022-10-01": [[475, "id149"]], "[0.10.0] - 2024-08-02": [[475, "id41"]], "[0.11.0] - 2024-09-09": [[475, "id34"]], "[0.11.1] - 2024-10-01": [[475, "id29"]], "[0.11.2] - 2024-10-11": [[475, "id25"]], "[0.11.3] - 2024-11-06": [[475, "id23"]], "[0.11.4] - 2025-01-27": [[475, "id20"]], "[0.12.0] - 2025-01-28": [[475, "id14"]], "[0.12.1] - 2025-01-29": [[475, "id12"]], "[0.12.2] - 2025-01-31": [[475, "id10"]], "[0.13.0] - 2025-04-16": [[475, "id5"]], "[0.13.1] - 2025-06-06": [[475, "id1"]], "[0.2.0] - 2022-11-10": [[475, "id146"]], "[0.2.1] - 2022-12-01": [[475, "id144"]], "[0.2.2] - 2023-01-13": [[475, "id140"]], "[0.2.3] - 2023-03-14": [[475, "id136"]], "[0.2.4] - 2023-03-24": [[475, "id132"]], "[0.3.0] - 2023-06-27": [[475, "id128"]], "[0.3.1] - 2023-07-17": [[475, "id124"]], "[0.3.2] - 2023-07-24": [[475, "id121"]], "[0.4.0] - 2023-08-16": [[475, "id117"]], "[0.4.1] - 2023-08-23": [[475, "id113"]], "[0.4.2] - 2023-08-29": [[475, "id109"]], "[0.5.0] - 2023-09-15": [[475, "id106"]], "[0.5.1] - 2023-10-19": [[475, "id102"]], "[0.6.0] - 2023-11-17": [[475, "id97"]], "[0.6.1] - 2023-11-27": [[475, "id93"]], "[0.7.0] - 2023-12-04": [[475, "id89"]], "[0.7.1] - 2023-12-07": [[475, "id85"]], "[0.7.2] - 2024-01-24": [[475, "id79"]], "[0.7.3] - 2024-02-09": [[475, "id73"]], "[0.7.4] - 2024-02-28": [[475, "id68"]], "[0.8.0] - 2024-02-29": [[475, "id65"]], "[0.8.1] - 2024-03-11": [[475, "id61"]], "[0.8.2] - 2024-03-27": [[475, "id57"]], "[0.9.0] - 2024-05-21": [[475, "id51"]], "[0.9.1] - 2024-06-04": [[475, "id48"]], "[Unreleased]": [[475, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[25, null]], "baybe.acquisition.partial": [[27, null]], "baybe.acquisition.utils": [[29, null]], "baybe.acquisition.utils.convert_acqf": [[30, null]], "baybe.acquisition.utils.make_partitioning": [[31, null]], "baybe.acquisition.utils.str_to_acqf": [[32, null]], "baybe.campaign": [[33, null]], "baybe.constraints": [[35, null]], "baybe.constraints.base": [[36, null]], "baybe.constraints.conditions": [[42, null]], "baybe.constraints.continuous": [[46, null]], "baybe.constraints.deprecation": [[49, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[50, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[51, null]], "baybe.constraints.deprecation.structure_constraints": [[52, null]], "baybe.constraints.discrete": [[53, null]], "baybe.constraints.utils": [[63, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[64, null]], "baybe.constraints.validation": [[65, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[66, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[67, null]], "baybe.constraints.validation.validate_constraints": [[68, null]], "baybe.exceptions": [[69, null]], "baybe.exceptions.DeprecationError": [[70, null]], "baybe.exceptions.EmptySearchSpaceError": [[71, null]], "baybe.exceptions.IncompatibilityError": [[72, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[73, null]], "baybe.exceptions.IncompatibleArgumentError": [[74, null]], "baybe.exceptions.IncompatibleExplainerError": [[75, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[76, null]], "baybe.exceptions.IncompatibleSurrogateError": [[77, null]], "baybe.exceptions.IncompleteMeasurementsError": [[78, null]], "baybe.exceptions.InfeasibilityError": [[79, null]], "baybe.exceptions.InputDataTypeWarning": [[80, null]], "baybe.exceptions.InvalidSurrogateModelError": [[81, null]], "baybe.exceptions.InvalidTargetValueError": [[82, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[83, null]], "baybe.exceptions.ModelNotTrainedError": [[84, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[85, null]], "baybe.exceptions.NoMeasurementsError": [[86, null]], "baybe.exceptions.NoRecommendersLeftError": [[87, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[88, null]], "baybe.exceptions.NothingToSimulateError": [[89, null]], "baybe.exceptions.NumericalUnderflowError": [[90, null]], "baybe.exceptions.OptionalImportError": [[91, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[92, null]], "baybe.exceptions.UnidentifiedSubclassError": [[93, null]], "baybe.exceptions.UnmatchedAttributeError": [[94, null]], "baybe.exceptions.UnusedObjectWarning": [[95, null]], "baybe.insights": [[96, null]], "baybe.insights.shap": [[97, null]], "baybe.insights.shap.EXPLAINERS": [[98, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[99, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[101, null]], "baybe.insights.shap.SHAP_PLOTS": [[102, null]], "baybe.insights.shap.is_shap_explainer": [[103, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[104, null]], "baybe.kernels": [[105, null]], "baybe.kernels.base": [[106, null]], "baybe.kernels.basic": [[110, null]], "baybe.kernels.composite": [[119, null]], "baybe.objectives": [[123, null]], "baybe.objectives.base": [[124, null]], "baybe.objectives.base.to_objective": [[126, null]], "baybe.objectives.botorch": [[127, null]], "baybe.objectives.desirability": [[129, null]], "baybe.objectives.enum": [[131, null]], "baybe.objectives.pareto": [[133, null]], "baybe.objectives.single": [[135, null]], "baybe.objectives.validation": [[137, null]], "baybe.objectives.validation.validate_target_names": [[138, null]], "baybe.parameters": [[139, null]], "baybe.parameters.base": [[140, null]], "baybe.parameters.categorical": [[144, null]], "baybe.parameters.custom": [[147, null]], "baybe.parameters.enum": [[149, null]], "baybe.parameters.numerical": [[154, null]], "baybe.parameters.substance": [[157, null]], "baybe.parameters.substance.Smiles": [[158, null]], "baybe.parameters.utils": [[160, null]], "baybe.parameters.utils.activate_parameter": [[161, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[162, null]], "baybe.parameters.utils.is_inactive": [[163, null]], "baybe.parameters.utils.sort_parameters": [[164, null]], "baybe.parameters.validation": [[165, null]], "baybe.parameters.validation.validate_decorrelation": [[166, null]], "baybe.parameters.validation.validate_is_finite": [[167, null]], "baybe.parameters.validation.validate_unique_values": [[168, null]], "baybe.priors": [[169, null]], "baybe.priors.base": [[170, null]], "baybe.priors.basic": [[172, null]], "baybe.recommenders": [[180, null]], "baybe.recommenders.base": [[181, null]], "baybe.recommenders.meta": [[183, null]], "baybe.recommenders.meta.base": [[184, null]], "baybe.recommenders.meta.sequential": [[186, null]], "baybe.recommenders.naive": [[191, null]], "baybe.recommenders.pure": [[193, null]], "baybe.recommenders.pure.base": [[194, null]], "baybe.recommenders.pure.bayesian": [[196, null]], "baybe.recommenders.pure.bayesian.base": [[197, null]], "baybe.recommenders.pure.bayesian.botorch": [[199, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[201, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[202, null]], "baybe.recommenders.pure.nonpredictive": [[203, null]], "baybe.recommenders.pure.nonpredictive.base": [[204, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[206, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[211, null]], "baybe.searchspace": [[215, null]], "baybe.searchspace.continuous": [[216, null]], "baybe.searchspace.core": [[218, null]], "baybe.searchspace.core.to_searchspace": [[221, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[222, null]], "baybe.searchspace.discrete": [[223, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[226, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[227, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[228, null]], "baybe.searchspace.validation": [[229, null]], "baybe.searchspace.validation.get_transform_parameters": [[230, null]], "baybe.searchspace.validation.validate_parameter_names": [[231, null]], "baybe.searchspace.validation.validate_parameters": [[232, null]], "baybe.serialization": [[233, null]], "baybe.serialization.core": [[234, null]], "baybe.serialization.core.block_deserialization_hook": [[235, null]], "baybe.serialization.core.block_serialization_hook": [[236, null]], "baybe.serialization.core.converter": [[237, null]], "baybe.serialization.core.get_base_structure_hook": [[238, null]], "baybe.serialization.core.select_constructor_hook": [[239, null]], "baybe.serialization.core.unstructure_base": [[240, null]], "baybe.serialization.mixin": [[241, null]], "baybe.serialization.utils": [[243, null]], "baybe.serialization.utils.deserialize_dataframe": [[244, null]], "baybe.serialization.utils.serialize_dataframe": [[245, null]], "baybe.simulation": [[246, null]], "baybe.simulation.core": [[247, null]], "baybe.simulation.core.simulate_experiment": [[248, null]], "baybe.simulation.lookup": [[249, null]], "baybe.simulation.lookup.look_up_targets": [[250, null]], "baybe.simulation.scenarios": [[251, null]], "baybe.simulation.scenarios.simulate_scenarios": [[252, null]], "baybe.simulation.transfer_learning": [[253, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[254, null]], "baybe.surrogates": [[255, null]], "baybe.surrogates.bandit": [[256, null]], "baybe.surrogates.base": [[258, null]], "baybe.surrogates.base.PosteriorStatistic": [[260, null]], "baybe.surrogates.composite": [[263, null]], "baybe.surrogates.custom": [[265, null]], "baybe.surrogates.custom.register_custom_architecture": [[267, null]], "baybe.surrogates.gaussian_process": [[268, null]], "baybe.surrogates.gaussian_process.core": [[269, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[271, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[274, null]], "baybe.surrogates.gaussian_process.presets": [[275, null]], "baybe.surrogates.gaussian_process.presets.core": [[276, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[278, null]], "baybe.surrogates.gaussian_process.presets.default": [[279, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[281, null]], "baybe.surrogates.linear": [[283, null]], "baybe.surrogates.naive": [[285, null]], "baybe.surrogates.ngboost": [[287, null]], "baybe.surrogates.random_forest": [[289, null]], "baybe.surrogates.utils": [[291, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[292, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[293, null]], "baybe.surrogates.utils.catch_constant_targets": [[294, null]], "baybe.surrogates.validation": [[295, null]], "baybe.surrogates.validation.make_dict_validator": [[296, null]], "baybe.surrogates.validation.type_validation_converter": [[297, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[298, null]], "baybe.targets": [[299, null]], "baybe.targets.base": [[300, null]], "baybe.targets.binary": [[302, null]], "baybe.targets.binary.ChoiceValue": [[304, null]], "baybe.targets.botorch": [[305, null]], "baybe.targets.enum": [[307, null]], "baybe.targets.numerical": [[308, null]], "baybe.targets.transforms": [[310, null]], "baybe.telemetry": [[311, null]], "baybe.telemetry.get_user_details": [[312, null]], "baybe.telemetry.is_enabled": [[313, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[314, null]], "baybe.telemetry.telemetry_record_value": [[315, null]], "baybe.transformations": [[316, null]], "baybe.transformations.base": [[317, null]], "baybe.transformations.basic": [[320, null]], "baybe.transformations.composite": [[333, null]], "baybe.transformations.utils": [[337, null]], "baybe.transformations.utils.combine_affine_transformations": [[338, null]], "baybe.transformations.utils.compress_transformations": [[339, null]], "baybe.transformations.utils.convert_transformation": [[340, null]], "baybe.utils": [[341, null]], "baybe.utils.augmentation": [[342, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[343, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[344, null]], "baybe.utils.basic": [[345, null]], "baybe.utils.basic.UNSPECIFIED": [[347, null]], "baybe.utils.basic.compose": [[350, null]], "baybe.utils.basic.compose_two": [[351, null]], "baybe.utils.basic.convert_to_float": [[352, null]], "baybe.utils.basic.find_subclass": [[353, null]], "baybe.utils.basic.get_baseclasses": [[354, null]], "baybe.utils.basic.get_subclasses": [[355, null]], "baybe.utils.basic.group_duplicate_values": [[356, null]], "baybe.utils.basic.hilberts_factory": [[357, null]], "baybe.utils.basic.is_all_instance": [[358, null]], "baybe.utils.basic.match_attributes": [[359, null]], "baybe.utils.basic.refers_to": [[360, null]], "baybe.utils.basic.register_hooks": [[361, null]], "baybe.utils.basic.to_tuple": [[362, null]], "baybe.utils.boolean": [[363, null]], "baybe.utils.boolean.check_if_in": [[364, null]], "baybe.utils.boolean.is_abstract": [[365, null]], "baybe.utils.boolean.strtobool": [[366, null]], "baybe.utils.chemistry": [[367, null]], "baybe.utils.chemistry.get_canonical_smiles": [[368, null]], "baybe.utils.chemistry.get_fingerprint_class": [[369, null]], "baybe.utils.chemistry.name_to_smiles": [[370, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[371, null]], "baybe.utils.clustering_algorithms": [[372, null]], "baybe.utils.clustering_algorithms.third_party": [[373, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[374, null]], "baybe.utils.conversion": [[376, null]], "baybe.utils.conversion.fraction_to_float": [[377, null]], "baybe.utils.conversion.nonstring_to_tuple": [[378, null]], "baybe.utils.conversion.to_string": [[379, null]], "baybe.utils.dataframe": [[380, null]], "baybe.utils.dataframe.add_fake_measurements": [[381, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[382, null]], "baybe.utils.dataframe.add_parameter_noise": [[383, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[384, null]], "baybe.utils.dataframe.create_fake_input": [[385, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[386, null]], "baybe.utils.dataframe.df_drop_string_columns": [[387, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[388, null]], "baybe.utils.dataframe.filter_df": [[389, null]], "baybe.utils.dataframe.fuzzy_row_match": [[390, null]], "baybe.utils.dataframe.get_transform_objects": [[391, null]], "baybe.utils.dataframe.handle_missing_values": [[392, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[393, null]], "baybe.utils.dataframe.pretty_print_df": [[394, null]], "baybe.utils.dataframe.to_tensor": [[395, null]], "baybe.utils.dataframe.transform_target_columns": [[396, null]], "baybe.utils.interval": [[397, null]], "baybe.utils.interval.ConvertibleToInterval": [[398, null]], "baybe.utils.interval.InfiniteIntervalError": [[399, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[401, null]], "baybe.utils.memory": [[402, null]], "baybe.utils.memory.bytes_to_human_readable": [[403, null]], "baybe.utils.numerical": [[404, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[405, null]], "baybe.utils.numerical.DTypeFloatONNX": [[406, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[407, null]], "baybe.utils.numerical.closer_element": [[408, null]], "baybe.utils.numerical.closest_element": [[409, null]], "baybe.utils.random": [[410, null]], "baybe.utils.random.set_random_seed": [[411, null]], "baybe.utils.random.temporary_seed": [[412, null]], "baybe.utils.sampling_algorithms": [[413, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[415, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[416, null]], "baybe.utils.scaling": [[417, null]], "baybe.utils.torch": [[419, null]], "baybe.utils.torch.DTypeFloatTorch": [[420, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[421, null]], "baybe.utils.validation": [[422, null]], "baybe.utils.validation.finite_float": [[423, null]], "baybe.utils.validation.non_inf_float": [[424, null]], "baybe.utils.validation.non_nan_float": [[425, null]], "baybe.utils.validation.validate_not_nan": [[426, null]], "baybe.utils.validation.validate_parameter_input": [[427, null]], "baybe.utils.validation.validate_target_input": [[428, null]], "classproperty": [[349, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[474, "macos-arm64-leaked-semaphore"]], "qExpectedHypervolumeImprovement": [[9, null]], "qExpectedImprovement": [[10, null]], "qKnowledgeGradient": [[11, null]], "qLogExpectedHypervolumeImprovement": [[12, null]], "qLogExpectedImprovement": [[13, null]], "qLogNParEGO": [[14, null]], "qLogNoisyExpectedHypervolumeImprovement": [[15, null]], "qLogNoisyExpectedImprovement": [[16, null]], "qNegIntegratedPosteriorVariance": [[17, null]], "qNoisyExpectedHypervolumeImprovement": [[18, null]], "qNoisyExpectedImprovement": [[19, null]], "qPosteriorStandardDeviation": [[20, null]], "qProbabilityOfImprovement": [[21, null]], "qSimpleRegret": [[22, null]], "qThompsonSampling": [[23, null]], "qUpperConfidenceBound": [[24, null]], "\u26a1 Quick Start": [[473, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[473, "maintainers"]], "\ud83d\udcbb Installation": [[473, "installation"]], "\ud83d\udcc4 License": [[473, "license"]], "\ud83d\udce1 Telemetry": [[473, "telemetry"]], "\ud83d\udd0b Batteries Included": [[473, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[473, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.make_partitioning", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.botorch", "_autosummary/baybe.objectives.botorch.ChainedMCObjective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.botorch", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.transformations", "_autosummary/baybe.transformations.base", "_autosummary/baybe.transformations.base.MonotonicTransformation", "_autosummary/baybe.transformations.base.Transformation", "_autosummary/baybe.transformations.basic", "_autosummary/baybe.transformations.basic.AbsoluteTransformation", "_autosummary/baybe.transformations.basic.AffineTransformation", "_autosummary/baybe.transformations.basic.BellTransformation", "_autosummary/baybe.transformations.basic.ClampingTransformation", "_autosummary/baybe.transformations.basic.CustomTransformation", "_autosummary/baybe.transformations.basic.ExponentialTransformation", "_autosummary/baybe.transformations.basic.IdentityTransformation", "_autosummary/baybe.transformations.basic.LogarithmicTransformation", "_autosummary/baybe.transformations.basic.PowerTransformation", "_autosummary/baybe.transformations.basic.SigmoidTransformation", "_autosummary/baybe.transformations.basic.TriangularTransformation", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation", "_autosummary/baybe.transformations.composite", "_autosummary/baybe.transformations.composite.AdditiveTransformation", "_autosummary/baybe.transformations.composite.ChainedTransformation", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation", "_autosummary/baybe.transformations.utils", "_autosummary/baybe.transformations.utils.combine_affine_transformations", "_autosummary/baybe.transformations.utils.compress_transformations", "_autosummary/baybe.transformations.utils.convert_transformation", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.compose", "_autosummary/baybe.utils.basic.compose_two", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.ConvertibleToInterval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/transformations", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.make_partitioning.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.botorch.rst", "_autosummary/baybe.objectives.botorch.ChainedMCObjective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.botorch.rst", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.transformations.rst", "_autosummary/baybe.transformations.base.rst", "_autosummary/baybe.transformations.base.MonotonicTransformation.rst", "_autosummary/baybe.transformations.base.Transformation.rst", "_autosummary/baybe.transformations.basic.rst", "_autosummary/baybe.transformations.basic.AbsoluteTransformation.rst", "_autosummary/baybe.transformations.basic.AffineTransformation.rst", "_autosummary/baybe.transformations.basic.BellTransformation.rst", "_autosummary/baybe.transformations.basic.ClampingTransformation.rst", "_autosummary/baybe.transformations.basic.CustomTransformation.rst", "_autosummary/baybe.transformations.basic.ExponentialTransformation.rst", "_autosummary/baybe.transformations.basic.IdentityTransformation.rst", "_autosummary/baybe.transformations.basic.LogarithmicTransformation.rst", "_autosummary/baybe.transformations.basic.PowerTransformation.rst", "_autosummary/baybe.transformations.basic.SigmoidTransformation.rst", "_autosummary/baybe.transformations.basic.TriangularTransformation.rst", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation.rst", "_autosummary/baybe.transformations.composite.rst", "_autosummary/baybe.transformations.composite.AdditiveTransformation.rst", "_autosummary/baybe.transformations.composite.ChainedTransformation.rst", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation.rst", "_autosummary/baybe.transformations.utils.rst", "_autosummary/baybe.transformations.utils.combine_affine_transformations.rst", "_autosummary/baybe.transformations.utils.compress_transformations.rst", "_autosummary/baybe.transformations.utils.convert_transformation.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.compose.rst", "_autosummary/baybe.utils.basic.compose_two.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.ConvertibleToInterval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/transformations.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[70, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[71, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[72, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[73, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[74, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[75, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[76, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[77, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[78, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[79, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[80, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[81, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[82, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[83, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[84, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[85, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[86, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[87, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[88, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[89, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[90, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[91, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[92, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[93, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[94, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[95, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[182, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[195, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[219, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[224, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[262, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[272, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[280, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[282, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[301, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[303, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.__init__", false]], "__init__() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.__init__", false]], "__init__() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.__init__", false]], "__init__() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.__init__", false]], "__init__() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.__init__", false]], "__init__() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.__init__", false]], "__init__() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.__init__", false]], "__init__() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.__init__", false]], "__init__() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.__init__", false]], "__init__() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.__init__", false]], "__init__() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.__init__", false]], "__init__() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.__init__", false]], "__init__() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.__init__", false]], "__init__() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.__init__", false]], "__init__() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.__init__", false]], "__init__() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.__init__", false]], "__init__() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[349, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[346, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[399, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[418, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[70, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[71, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[72, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[73, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[74, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[75, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[76, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[77, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[78, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[79, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[80, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[81, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[82, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[83, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[84, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[85, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[86, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[87, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[88, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[89, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[90, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[91, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[92, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[93, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[94, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[95, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[150, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[151, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[153, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[399, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[179, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "abs() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.abs", false]], "abs() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.abs", false]], "abs() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.abs", false]], "abs() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.abs", false]], "abs() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.abs", false]], "abs() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.abs", false]], "abs() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.abs", false]], "abs() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.abs", false]], "abs() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.abs", false]], "abs() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.abs", false]], "abs() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.abs", false]], "abs() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.abs", false]], "abs() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.abs", false]], "abs() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.abs", false]], "abs() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.abs", false]], "abs() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.abs", false]], "abs() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.abs", false]], "abs() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.abs", false]], "absolutetransformation (class in baybe.transformations.basic)": [[321, "baybe.transformations.basic.AbsoluteTransformation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[26, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[381, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.add_measurements", false]], "add_module() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.add_module", false]], "add_module() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.add_module", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[382, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[383, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[120, "baybe.kernels.composite.AdditiveKernel", false]], "additivetransformation (class in baybe.transformations.composite)": [[334, "baybe.transformations.composite.AdditiveTransformation", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "affineposteriortransform (class in baybe.targets.botorch)": [[306, "baybe.targets.botorch.AffinePosteriorTransform", false]], "affinetransformation (class in baybe.transformations.basic)": [[322, "baybe.transformations.basic.AffineTransformation", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[195, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[195, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[195, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[173, "baybe.priors.basic.BetaPrior.alpha", false]], "apply() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.apply", false]], "apply() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.apply", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[384, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[179, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[100, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[122, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[120, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[121, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[107, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[292, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[293, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[277, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[25, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[27, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[29, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[33, "module-baybe.campaign", false]], "baybe.constraints": [[35, "module-baybe.constraints", false]], "baybe.constraints.base": [[36, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[42, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[46, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[49, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[53, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[63, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[65, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[69, "module-baybe.exceptions", false]], "baybe.insights": [[96, "module-baybe.insights", false]], "baybe.insights.shap": [[97, "module-baybe.insights.shap", false]], "baybe.kernels": [[105, "module-baybe.kernels", false]], "baybe.kernels.base": [[106, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[110, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[119, "module-baybe.kernels.composite", false]], "baybe.objectives": [[123, "module-baybe.objectives", false]], "baybe.objectives.base": [[124, "module-baybe.objectives.base", false]], "baybe.objectives.botorch": [[127, "module-baybe.objectives.botorch", false]], "baybe.objectives.desirability": [[129, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[131, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[133, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[135, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[137, "module-baybe.objectives.validation", false]], "baybe.parameters": [[139, "module-baybe.parameters", false]], "baybe.parameters.base": [[140, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[144, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[147, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[149, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[154, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[157, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[160, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[165, "module-baybe.parameters.validation", false]], "baybe.priors": [[169, "module-baybe.priors", false]], "baybe.priors.base": [[170, "module-baybe.priors.base", false]], "baybe.priors.basic": [[172, "module-baybe.priors.basic", false]], "baybe.recommenders": [[180, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[181, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[183, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[184, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[186, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[191, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[193, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[194, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[196, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[197, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[199, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[201, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[203, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[204, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[206, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[211, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[215, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[216, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[218, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[223, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[229, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[233, "module-baybe.serialization", false]], "baybe.serialization.core": [[234, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[241, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[243, "module-baybe.serialization.utils", false]], "baybe.simulation": [[246, "module-baybe.simulation", false]], "baybe.simulation.core": [[247, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[249, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[251, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[253, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[255, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[256, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[258, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[263, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[265, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[268, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[269, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[271, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[275, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[276, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[279, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[281, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[283, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[285, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[287, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[289, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[291, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[295, "module-baybe.surrogates.validation", false]], "baybe.targets": [[299, "module-baybe.targets", false]], "baybe.targets.base": [[300, "module-baybe.targets.base", false]], "baybe.targets.binary": [[302, "module-baybe.targets.binary", false]], "baybe.targets.botorch": [[305, "module-baybe.targets.botorch", false]], "baybe.targets.enum": [[307, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[308, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[310, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[311, "module-baybe.telemetry", false]], "baybe.transformations": [[316, "module-baybe.transformations", false]], "baybe.transformations.base": [[317, "module-baybe.transformations.base", false]], "baybe.transformations.basic": [[320, "module-baybe.transformations.basic", false]], "baybe.transformations.composite": [[333, "module-baybe.transformations.composite", false]], "baybe.transformations.utils": [[337, "module-baybe.transformations.utils", false]], "baybe.utils": [[341, "module-baybe.utils", false]], "baybe.utils.augmentation": [[342, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[345, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[363, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[367, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[372, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[373, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[374, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[376, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[380, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[397, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[402, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[404, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[410, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[413, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[417, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[419, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[422, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "belltransformation (class in baybe.transformations.basic)": [[323, "baybe.transformations.basic.BellTransformation", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[173, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.BetaPrior", false]], "bfloat16() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.bfloat16", false]], "bfloat16() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.bfloat16", false]], "binarytarget (class in baybe.targets.binary)": [[303, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.transformations.basic.clampingtransformation attribute)": [[324, "baybe.transformations.basic.ClampingTransformation.bounds", false]], "buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.buffers", false]], "buffers() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.buffers", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[403, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[34, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[294, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[145, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.transformations.basic.belltransformation attribute)": [[323, "baybe.transformations.basic.BellTransformation.center", false]], "center (baybe.transformations.basic.sigmoidtransformation attribute)": [[330, "baybe.transformations.basic.SigmoidTransformation.center", false]], "center (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.center", false]], "chain() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.chain", false]], "chain() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.chain", false]], "chain() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.chain", false]], "chain() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.chain", false]], "chain() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.chain", false]], "chain() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.chain", false]], "chain() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.chain", false]], "chain() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.chain", false]], "chain() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.chain", false]], "chain() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.chain", false]], "chain() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.chain", false]], "chain() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.chain", false]], "chain() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.chain", false]], "chain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.chain", false]], "chain() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.chain", false]], "chain() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.chain", false]], "chain() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.chain", false]], "chainedmcobjective (class in baybe.objectives.botorch)": [[128, "baybe.objectives.botorch.ChainedMCObjective", false]], "chainedtransformation (class in baybe.transformations.composite)": [[335, "baybe.transformations.composite.ChainedTransformation", false]], "check_if_in() (in module baybe.utils.boolean)": [[364, "baybe.utils.boolean.check_if_in", false]], "children() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.children", false]], "children() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.children", false]], "choicevalue (in module baybe.targets.binary)": [[304, "baybe.targets.binary.ChoiceValue", false]], "clamp() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.clamp", false]], "clamp() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.clamp", false]], "clamp() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.clamp", false]], "clamp() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.clamp", false]], "clamp() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.clamp", false]], "clamp() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.clamp", false]], "clamp() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.clamp", false]], "clamp() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.clamp", false]], "clamp() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.clamp", false]], "clamp() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.clamp", false]], "clamp() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.clamp", false]], "clamp() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.clamp", false]], "clamp() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.clamp", false]], "clamp() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.clamp", false]], "clamp() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.clamp", false]], "clamp() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.clamp", false]], "clamp() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.clamp", false]], "clamp() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.clamp", false]], "clampingtransformation (class in baybe.transformations.basic)": [[324, "baybe.transformations.basic.ClampingTransformation", false]], "classproperty (class in baybe.utils.basic)": [[349, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[408, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[409, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[418, "baybe.utils.scaling.ColumnTransformer", false]], "combine_affine_transformations() (in module baybe.transformations.utils)": [[338, "baybe.transformations.utils.combine_affine_transformations", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[224, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[224, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[224, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[195, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compile() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.compile", false]], "compile() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.compile", false]], "compose() (in module baybe.utils.basic)": [[350, "baybe.utils.basic.compose", false]], "compose_two() (in module baybe.utils.basic)": [[351, "baybe.utils.basic.compose_two", false]], "compositekernel (class in baybe.kernels.base)": [[108, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[264, "baybe.surrogates.composite.CompositeSurrogate", false]], "compress_transformations() (in module baybe.transformations.utils)": [[339, "baybe.transformations.utils.compress_transformations", false]], "compute_ref_point() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement static method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement static method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[174, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[43, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[219, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[220, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[39, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[50, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[51, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[141, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[30, "baybe.acquisition.utils.convert_acqf", false]], "convert_to_float() (in module baybe.utils.basic)": [[352, "baybe.utils.basic.convert_to_float", false]], "convert_transformation() (in module baybe.transformations.utils)": [[340, "baybe.transformations.utils.convert_transformation", false]], "converter (in module baybe.serialization.core)": [[237, "baybe.serialization.core.converter", false]], "convertibletointerval (in module baybe.utils.interval)": [[398, "baybe.utils.interval.ConvertibleToInterval", false]], "cpu() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.cpu", false]], "cpu() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.cpu", false]], "create() (baybe.utils.interval.interval class method)": [[400, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[385, "baybe.utils.dataframe.create_fake_input", false]], "cuda() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.cuda", false]], "cuda() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.cuda", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[151, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[148, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[151, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "customtransformation (class in baybe.transformations.basic)": [[325, "baybe.transformations.basic.CustomTransformation", false]], "cutoffs (baybe.transformations.basic.triangulartransformation attribute)": [[331, "baybe.transformations.basic.TriangularTransformation.cutoffs", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[280, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[70, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[244, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[130, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[343, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[344, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[386, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[387, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[388, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[219, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[220, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[41, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[142, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[414, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "double() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.double", false]], "double() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.double", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[405, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[406, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[420, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[346, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[282, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[220, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[71, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[219, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.eval", false]], "eval() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.eval", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "evaluate() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.evaluate", false]], "exp() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.exp", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[224, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[224, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[224, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[100, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.EXPLAINERS", false]], "exponent (baybe.transformations.basic.powertransformation attribute)": [[329, "baybe.transformations.basic.PowerTransformation.exponent", false]], "exponentialtransformation (class in baybe.transformations.basic)": [[326, "baybe.transformations.basic.ExponentialTransformation", false]], "extra_repr() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.extra_repr", false]], "extra_repr() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.extra_repr", false]], "factor (baybe.transformations.basic.affinetransformation attribute)": [[322, "baybe.transformations.basic.AffineTransformation.factor", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[303, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[415, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[389, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[353, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[423, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[262, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[418, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "float() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.float", false]], "float() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.float", false]], "forward() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.forward", false]], "forward() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.forward", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[414, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[377, "baybe.utils.conversion.fraction_to_float", false]], "from_anchors() (baybe.transformations.basic.sigmoidtransformation class method)": [[330, "baybe.transformations.basic.SigmoidTransformation.from_anchors", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[100, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[219, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[107, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[108, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[109, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[111, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[112, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[113, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[115, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[116, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[117, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[118, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[120, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[121, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[122, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[125, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[134, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[136, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[141, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[142, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[143, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[145, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[146, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[159, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[171, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[173, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[174, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[175, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[176, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[177, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[178, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[219, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[242, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[261, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[301, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[303, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.transformations.base.monotonictransformation class method)": [[318, "baybe.transformations.base.MonotonicTransformation.from_dict", false]], "from_dict() (baybe.transformations.base.transformation class method)": [[319, "baybe.transformations.base.Transformation.from_dict", false]], "from_dict() (baybe.transformations.basic.absolutetransformation class method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.affinetransformation class method)": [[322, "baybe.transformations.basic.AffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.belltransformation class method)": [[323, "baybe.transformations.basic.BellTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.clampingtransformation class method)": [[324, "baybe.transformations.basic.ClampingTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.customtransformation class method)": [[325, "baybe.transformations.basic.CustomTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.exponentialtransformation class method)": [[326, "baybe.transformations.basic.ExponentialTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.identitytransformation class method)": [[327, "baybe.transformations.basic.IdentityTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.logarithmictransformation class method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.powertransformation class method)": [[329, "baybe.transformations.basic.PowerTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.sigmoidtransformation class method)": [[330, "baybe.transformations.basic.SigmoidTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.triangulartransformation class method)": [[331, "baybe.transformations.basic.TriangularTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.additivetransformation class method)": [[334, "baybe.transformations.composite.AdditiveTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.chainedtransformation class method)": [[335, "baybe.transformations.composite.ChainedTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.multiplicativetransformation class method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[400, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[107, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[108, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[109, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[111, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[112, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[113, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[115, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[116, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[117, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[118, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[120, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[121, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[122, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[125, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[134, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[136, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[141, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[142, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[143, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[145, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[146, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[159, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[171, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[173, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[174, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[175, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[176, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[177, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[178, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[219, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[242, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[261, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[301, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[303, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.transformations.base.monotonictransformation class method)": [[318, "baybe.transformations.base.MonotonicTransformation.from_json", false]], "from_json() (baybe.transformations.base.transformation class method)": [[319, "baybe.transformations.base.Transformation.from_json", false]], "from_json() (baybe.transformations.basic.absolutetransformation class method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.from_json", false]], "from_json() (baybe.transformations.basic.affinetransformation class method)": [[322, "baybe.transformations.basic.AffineTransformation.from_json", false]], "from_json() (baybe.transformations.basic.belltransformation class method)": [[323, "baybe.transformations.basic.BellTransformation.from_json", false]], "from_json() (baybe.transformations.basic.clampingtransformation class method)": [[324, "baybe.transformations.basic.ClampingTransformation.from_json", false]], "from_json() (baybe.transformations.basic.customtransformation class method)": [[325, "baybe.transformations.basic.CustomTransformation.from_json", false]], "from_json() (baybe.transformations.basic.exponentialtransformation class method)": [[326, "baybe.transformations.basic.ExponentialTransformation.from_json", false]], "from_json() (baybe.transformations.basic.identitytransformation class method)": [[327, "baybe.transformations.basic.IdentityTransformation.from_json", false]], "from_json() (baybe.transformations.basic.logarithmictransformation class method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.from_json", false]], "from_json() (baybe.transformations.basic.powertransformation class method)": [[329, "baybe.transformations.basic.PowerTransformation.from_json", false]], "from_json() (baybe.transformations.basic.sigmoidtransformation class method)": [[330, "baybe.transformations.basic.SigmoidTransformation.from_json", false]], "from_json() (baybe.transformations.basic.triangulartransformation class method)": [[331, "baybe.transformations.basic.TriangularTransformation.from_json", false]], "from_json() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.from_json", false]], "from_json() (baybe.transformations.composite.additivetransformation class method)": [[334, "baybe.transformations.composite.AdditiveTransformation.from_json", false]], "from_json() (baybe.transformations.composite.chainedtransformation class method)": [[335, "baybe.transformations.composite.ChainedTransformation.from_json", false]], "from_json() (baybe.transformations.composite.multiplicativetransformation class method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[400, "baybe.utils.interval.Interval.from_json", false]], "from_legacy_interface() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.from_legacy_interface", false]], "from_margins() (baybe.transformations.basic.triangulartransformation class method)": [[331, "baybe.transformations.basic.TriangularTransformation.from_margins", false]], "from_modern_interface() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.from_modern_interface", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[219, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_points_mapped_to_unit_interval_bounds() (baybe.transformations.basic.affinetransformation class method)": [[322, "baybe.transformations.basic.AffineTransformation.from_points_mapped_to_unit_interval_bounds", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[219, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[100, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[100, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "from_width() (baybe.transformations.basic.triangulartransformation class method)": [[331, "baybe.transformations.basic.TriangularTransformation.from_width", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "function (baybe.transformations.basic.customtransformation attribute)": [[325, "baybe.transformations.basic.CustomTransformation.function", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[390, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[277, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[132, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[238, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[354, "baybe.utils.basic.get_baseclasses", false]], "get_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_buffer", false]], "get_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.get_buffer", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[368, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[219, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_extra_state", false]], "get_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.get_extra_state", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[369, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_image() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.get_image", false]], "get_image() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.get_image", false]], "get_image() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.get_image", false]], "get_image() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.get_image", false]], "get_image() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.get_image", false]], "get_image() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.get_image", false]], "get_image() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.get_image", false]], "get_image() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.get_image", false]], "get_image() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.get_image", false]], "get_image() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.get_image", false]], "get_image() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.get_image", false]], "get_image() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.get_image", false]], "get_image() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.get_image", false]], "get_image() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.get_image", false]], "get_image() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.get_image", false]], "get_image() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.get_image", false]], "get_image() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.get_image", false]], "get_image() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.get_image", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_parameter", false]], "get_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.get_parameter", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[219, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[162, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[355, "baybe.utils.basic.get_subclasses", false]], "get_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_submodule", false]], "get_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.get_submodule", false]], "get_surrogate() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[391, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[230, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[312, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[356, "baybe.utils.basic.group_duplicate_values", false]], "half() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.half", false]], "half() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.half", false]], "halfcauchyprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[392, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[357, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[220, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "identitytransformation (class in baybe.transformations.basic)": [[327, "baybe.transformations.basic.IdentityTransformation", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[72, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[73, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[74, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[75, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[76, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[77, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[78, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[79, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[399, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[80, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[150, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[400, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[81, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[82, "baybe.exceptions.InvalidTargetValueError", false]], "ipu() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.ipu", false]], "ipu() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.ipu", false]], "is_abstract() (in module baybe.utils.boolean)": [[365, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[358, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[64, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[313, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[163, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[125, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[134, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[136, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_normalized (baybe.targets.numerical.numericaltarget property)": [[309, "baybe.targets.numerical.NumericalTarget.is_normalized", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[141, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[143, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[400, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[103, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[185, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[109, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[272, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[112, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[116, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[117, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[118, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[112, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[116, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[117, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[118, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linearkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "load_state_dict() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.load_state_dict", false]], "load_state_dict() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.load_state_dict", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[177, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[178, "baybe.priors.basic.NormalPrior.loc", false]], "log() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.log", false]], "logarithmictransformation (class in baybe.transformations.basic)": [[328, "baybe.transformations.basic.LogarithmicTransformation", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[177, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[250, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[400, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[296, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[104, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[278, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "make_partitioning() (in module baybe.acquisition.utils)": [[31, "baybe.acquisition.utils.make_partitioning", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[418, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "margins (baybe.transformations.basic.triangulartransformation property)": [[331, "baybe.transformations.basic.TriangularTransformation.margins", false]], "match_absolute() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.match_absolute", false]], "match_attributes() (in module baybe.utils.basic)": [[359, "baybe.utils.basic.match_attributes", false]], "match_bell() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.match_bell", false]], "match_power() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.match_power", false]], "match_quadratic() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.match_quadratic", false]], "match_triangular() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.match_triangular", false]], "maternkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.MaternKernel", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[132, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[185, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "midpoint (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.midpoint", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimize (baybe.targets.numerical.numericaltarget attribute)": [[309, "baybe.targets.numerical.NumericalTarget.minimize", false]], "minimumcardinalityviolatedwarning": [[83, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[84, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [25, "module-baybe.acquisition.base", false], [27, "module-baybe.acquisition.partial", false], [29, "module-baybe.acquisition.utils", false], [33, "module-baybe.campaign", false], [35, "module-baybe.constraints", false], [36, "module-baybe.constraints.base", false], [42, "module-baybe.constraints.conditions", false], [46, "module-baybe.constraints.continuous", false], [49, "module-baybe.constraints.deprecation", false], [53, "module-baybe.constraints.discrete", false], [63, "module-baybe.constraints.utils", false], [65, "module-baybe.constraints.validation", false], [69, "module-baybe.exceptions", false], [96, "module-baybe.insights", false], [97, "module-baybe.insights.shap", false], [105, "module-baybe.kernels", false], [106, "module-baybe.kernels.base", false], [110, "module-baybe.kernels.basic", false], [119, "module-baybe.kernels.composite", false], [123, "module-baybe.objectives", false], [124, "module-baybe.objectives.base", false], [127, "module-baybe.objectives.botorch", false], [129, "module-baybe.objectives.desirability", false], [131, "module-baybe.objectives.enum", false], [133, "module-baybe.objectives.pareto", false], [135, "module-baybe.objectives.single", false], [137, "module-baybe.objectives.validation", false], [139, "module-baybe.parameters", false], [140, "module-baybe.parameters.base", false], [144, "module-baybe.parameters.categorical", false], [147, "module-baybe.parameters.custom", false], [149, "module-baybe.parameters.enum", false], [154, "module-baybe.parameters.numerical", false], [157, "module-baybe.parameters.substance", false], [160, "module-baybe.parameters.utils", false], [165, "module-baybe.parameters.validation", false], [169, "module-baybe.priors", false], [170, "module-baybe.priors.base", false], [172, "module-baybe.priors.basic", false], [180, "module-baybe.recommenders", false], [181, "module-baybe.recommenders.base", false], [183, "module-baybe.recommenders.meta", false], [184, "module-baybe.recommenders.meta.base", false], [186, "module-baybe.recommenders.meta.sequential", false], [191, "module-baybe.recommenders.naive", false], [193, "module-baybe.recommenders.pure", false], [194, "module-baybe.recommenders.pure.base", false], [196, "module-baybe.recommenders.pure.bayesian", false], [197, "module-baybe.recommenders.pure.bayesian.base", false], [199, "module-baybe.recommenders.pure.bayesian.botorch", false], [201, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [203, "module-baybe.recommenders.pure.nonpredictive", false], [204, "module-baybe.recommenders.pure.nonpredictive.base", false], [206, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [211, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [215, "module-baybe.searchspace", false], [216, "module-baybe.searchspace.continuous", false], [218, "module-baybe.searchspace.core", false], [223, "module-baybe.searchspace.discrete", false], [229, "module-baybe.searchspace.validation", false], [233, "module-baybe.serialization", false], [234, "module-baybe.serialization.core", false], [241, "module-baybe.serialization.mixin", false], [243, "module-baybe.serialization.utils", false], [246, "module-baybe.simulation", false], [247, "module-baybe.simulation.core", false], [249, "module-baybe.simulation.lookup", false], [251, "module-baybe.simulation.scenarios", false], [253, "module-baybe.simulation.transfer_learning", false], [255, "module-baybe.surrogates", false], [256, "module-baybe.surrogates.bandit", false], [258, "module-baybe.surrogates.base", false], [263, "module-baybe.surrogates.composite", false], [265, "module-baybe.surrogates.custom", false], [268, "module-baybe.surrogates.gaussian_process", false], [269, "module-baybe.surrogates.gaussian_process.core", false], [271, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [275, "module-baybe.surrogates.gaussian_process.presets", false], [276, "module-baybe.surrogates.gaussian_process.presets.core", false], [279, "module-baybe.surrogates.gaussian_process.presets.default", false], [281, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [283, "module-baybe.surrogates.linear", false], [285, "module-baybe.surrogates.naive", false], [287, "module-baybe.surrogates.ngboost", false], [289, "module-baybe.surrogates.random_forest", false], [291, "module-baybe.surrogates.utils", false], [295, "module-baybe.surrogates.validation", false], [299, "module-baybe.targets", false], [300, "module-baybe.targets.base", false], [302, "module-baybe.targets.binary", false], [305, "module-baybe.targets.botorch", false], [307, "module-baybe.targets.enum", false], [308, "module-baybe.targets.numerical", false], [310, "module-baybe.targets.transforms", false], [311, "module-baybe.telemetry", false], [316, "module-baybe.transformations", false], [317, "module-baybe.transformations.base", false], [320, "module-baybe.transformations.basic", false], [333, "module-baybe.transformations.composite", false], [337, "module-baybe.transformations.utils", false], [341, "module-baybe.utils", false], [342, "module-baybe.utils.augmentation", false], [345, "module-baybe.utils.basic", false], [363, "module-baybe.utils.boolean", false], [367, "module-baybe.utils.chemistry", false], [372, "module-baybe.utils.clustering_algorithms", false], [373, "module-baybe.utils.clustering_algorithms.third_party", false], [374, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [376, "module-baybe.utils.conversion", false], [380, "module-baybe.utils.dataframe", false], [397, "module-baybe.utils.interval", false], [402, "module-baybe.utils.memory", false], [404, "module-baybe.utils.numerical", false], [410, "module-baybe.utils.random", false], [413, "module-baybe.utils.sampling_algorithms", false], [417, "module-baybe.utils.scaling", false], [419, "module-baybe.utils.torch", false], [422, "module-baybe.utils.validation", false]], "modules() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.modules", false]], "modules() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.modules", false]], "monotonictransformation (class in baybe.transformations.base)": [[318, "baybe.transformations.base.MonotonicTransformation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "mtia() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.mtia", false]], "mtia() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.mtia", false]], "multiplicativetransformation (class in baybe.transformations.composite)": [[336, "baybe.transformations.composite.MultiplicativeTransformation", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[141, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[143, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[301, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[303, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[309, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[370, "baybe.utils.chemistry.name_to_smiles", false]], "named_buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_buffers", false]], "named_buffers() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.named_buffers", false]], "named_children() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_children", false]], "named_children() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.named_children", false]], "named_modules() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_modules", false]], "named_modules() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.named_modules", false]], "named_parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_parameters", false]], "named_parameters() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.named_parameters", false]], "negate() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.negate", false]], "negate() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.negate", false]], "negate() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.negate", false]], "negate() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.negate", false]], "negate() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.negate", false]], "negate() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.negate", false]], "negate() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.negate", false]], "negate() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.negate", false]], "negate() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.negate", false]], "negate() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.negate", false]], "negate() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.negate", false]], "negate() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.negate", false]], "negate() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.negate", false]], "negate() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.negate", false]], "negate() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.negate", false]], "negate() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.negate", false]], "negate() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.negate", false]], "negate() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.negate", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[85, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[86, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[424, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[425, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[99, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[378, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[87, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.normalize", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[393, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalize_ramp() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.normalize_ramp", false]], "normalize_sigmoid() (baybe.targets.numerical.numericaltarget class method)": [[309, "baybe.targets.numerical.NumericalTarget.normalize_sigmoid", false]], "normalprior (class in baybe.priors.basic)": [[178, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[88, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[89, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[112, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[117, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[309, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[90, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[125, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[115, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[115, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[150, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[91, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[122, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[122, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[143, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[226, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[227, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[152, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.parameters", false]], "parameters() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[134, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "peak (baybe.transformations.basic.triangulartransformation attribute)": [[331, "baybe.transformations.basic.TriangularTransformation.peak", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[260, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[115, "baybe.kernels.basic.PolynomialKernel.power", false]], "power() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.power", false]], "powertransformation (class in baybe.transformations.basic)": [[329, "baybe.transformations.basic.PowerTransformation", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[394, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[171, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[121, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[195, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[23, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[414, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[174, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[116, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[182, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[195, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[213, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[214, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[182, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[360, "baybe.utils.basic.refers_to", false]], "register_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_backward_hook", false]], "register_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_backward_hook", false]], "register_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_buffer", false]], "register_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_buffer", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[267, "baybe.surrogates.custom.register_custom_architecture", false]], "register_forward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook", false]], "register_forward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook", false]], "register_forward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook", false]], "register_forward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook", false]], "register_full_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook", false]], "register_full_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook", false]], "register_full_backward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook", false]], "register_full_backward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook", false]], "register_hooks() (in module baybe.utils.basic)": [[361, "baybe.utils.basic.register_hooks", false]], "register_load_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_post_hook", false]], "register_load_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_post_hook", false]], "register_load_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook", false]], "register_load_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook", false]], "register_module() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_module", false]], "register_module() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_module", false]], "register_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_parameter", false]], "register_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_parameter", false]], "register_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_post_hook", false]], "register_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_post_hook", false]], "register_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_pre_hook", false]], "register_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_pre_hook", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "require_normalization (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.require_normalization", false]], "requires_grad_() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.requires_grad_", false]], "requires_grad_() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_", false]], "rffkernel (class in baybe.kernels.basic)": [[117, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[118, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[416, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[132, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[175, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[176, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[177, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[178, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[122, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[219, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[92, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[220, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[239, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[44, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[202, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[245, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[242, "baybe.serialization.mixin.SerialMixin", false]], "set_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.set_extra_state", false]], "set_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[411, "baybe.utils.random.set_random_seed", false]], "set_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.set_submodule", false]], "set_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.set_submodule", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[101, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[102, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[100, "baybe.insights.shap.SHAPInsight", false]], "share_memory() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.share_memory", false]], "share_memory() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.share_memory", false]], "shift (baybe.transformations.basic.affinetransformation attribute)": [[322, "baybe.transformations.basic.AffineTransformation.shift", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[179, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "sigma (baybe.transformations.basic.belltransformation attribute)": [[323, "baybe.transformations.basic.BellTransformation.sigma", false]], "sigmoidtransformation (class in baybe.transformations.basic)": [[330, "baybe.transformations.basic.SigmoidTransformation", false]], "simulate_experiment() (in module baybe.simulation.core)": [[248, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[252, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[254, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[136, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[210, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "slope_left (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_left", false]], "slope_right (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_right", false]], "smiles (in module baybe.parameters.substance)": [[158, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[371, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[179, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[164, "baybe.parameters.utils.sort_parameters", false]], "state_dict() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.state_dict", false]], "state_dict() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.state_dict", false]], "steepness (baybe.transformations.basic.sigmoidtransformation attribute)": [[330, "baybe.transformations.basic.SigmoidTransformation.steepness", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[32, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[366, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[52, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[44, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[217, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[153, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[159, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[303, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[301, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[303, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[261, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[261, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[261, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[262, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[264, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[301, "baybe.targets.base.Target", false]], "targets (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.targets", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[146, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[314, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[315, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[412, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[45, "baybe.constraints.conditions.ThresholdCondition", false]], "to() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.to", false]], "to() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.to", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.to_botorch", false]], "to_botorch() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.to_botorch", false]], "to_botorch() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.to_botorch", false]], "to_botorch() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[262, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_botorch_objective() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.to_botorch_objective", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.to_botorch_posterior_transform", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[219, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[242, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[301, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[303, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.to_dict", false]], "to_dict() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.to_dict", false]], "to_dict() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.to_dict", false]], "to_empty() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.to_empty", false]], "to_empty() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.to_empty", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[219, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[242, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[257, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[259, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[261, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[264, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[270, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[273, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[284, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[286, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[288, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[290, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[301, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[303, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.transformations.base.monotonictransformation method)": [[318, "baybe.transformations.base.MonotonicTransformation.to_json", false]], "to_json() (baybe.transformations.base.transformation method)": [[319, "baybe.transformations.base.Transformation.to_json", false]], "to_json() (baybe.transformations.basic.absolutetransformation method)": [[321, "baybe.transformations.basic.AbsoluteTransformation.to_json", false]], "to_json() (baybe.transformations.basic.affinetransformation method)": [[322, "baybe.transformations.basic.AffineTransformation.to_json", false]], "to_json() (baybe.transformations.basic.belltransformation method)": [[323, "baybe.transformations.basic.BellTransformation.to_json", false]], "to_json() (baybe.transformations.basic.clampingtransformation method)": [[324, "baybe.transformations.basic.ClampingTransformation.to_json", false]], "to_json() (baybe.transformations.basic.customtransformation method)": [[325, "baybe.transformations.basic.CustomTransformation.to_json", false]], "to_json() (baybe.transformations.basic.exponentialtransformation method)": [[326, "baybe.transformations.basic.ExponentialTransformation.to_json", false]], "to_json() (baybe.transformations.basic.identitytransformation method)": [[327, "baybe.transformations.basic.IdentityTransformation.to_json", false]], "to_json() (baybe.transformations.basic.logarithmictransformation method)": [[328, "baybe.transformations.basic.LogarithmicTransformation.to_json", false]], "to_json() (baybe.transformations.basic.powertransformation method)": [[329, "baybe.transformations.basic.PowerTransformation.to_json", false]], "to_json() (baybe.transformations.basic.sigmoidtransformation method)": [[330, "baybe.transformations.basic.SigmoidTransformation.to_json", false]], "to_json() (baybe.transformations.basic.triangulartransformation method)": [[331, "baybe.transformations.basic.TriangularTransformation.to_json", false]], "to_json() (baybe.transformations.basic.twosidedaffinetransformation method)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation.to_json", false]], "to_json() (baybe.transformations.composite.additivetransformation method)": [[334, "baybe.transformations.composite.AdditiveTransformation.to_json", false]], "to_json() (baybe.transformations.composite.chainedtransformation method)": [[335, "baybe.transformations.composite.ChainedTransformation.to_json", false]], "to_json() (baybe.transformations.composite.multiplicativetransformation method)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[274, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[301, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[303, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[126, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[221, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[379, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[395, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[400, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[362, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "total_transformation (baybe.targets.numerical.numericaltarget property)": [[309, "baybe.targets.numerical.NumericalTarget.total_transformation", false]], "train() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.train", false]], "train() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.train", false]], "transform() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[217, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[219, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[225, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[301, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[303, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[309, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[375, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[418, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[396, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (class in baybe.transformations.base)": [[319, "baybe.transformations.base.Transformation", false]], "transformations (baybe.transformations.composite.additivetransformation attribute)": [[334, "baybe.transformations.composite.AdditiveTransformation.transformations", false]], "transformations (baybe.transformations.composite.chainedtransformation attribute)": [[335, "baybe.transformations.composite.ChainedTransformation.transformations", false]], "transformations (baybe.transformations.composite.multiplicativetransformation attribute)": [[336, "baybe.transformations.composite.MultiplicativeTransformation.transformations", false]], "triangulartransformation (class in baybe.transformations.basic)": [[331, "baybe.transformations.basic.TriangularTransformation", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "twosidedaffinetransformation (class in baybe.transformations.basic)": [[332, "baybe.transformations.basic.TwoSidedAffineTransformation", false]], "type (baybe.searchspace.core.searchspace property)": [[219, "baybe.searchspace.core.SearchSpace.type", false]], "type() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.type", false]], "type() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[297, "baybe.surrogates.validation.type_validation_converter", false]], "unidentifiedsubclasserror": [[93, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[94, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[347, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[348, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[240, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[95, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[400, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[401, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[66, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[67, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[266, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[68, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[298, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[166, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[167, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[426, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[427, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[231, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[232, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[222, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[228, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[428, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[138, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[168, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[111, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[111, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[407, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[421, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]], "xpu() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.xpu", false]], "xpu() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.xpu", false]], "zero_grad() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.zero_grad", false]], "zero_grad() (baybe.targets.botorch.affineposteriortransform method)": [[306, "baybe.targets.botorch.AffinePosteriorTransform.zero_grad", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [33, 0, 0, "-", "campaign"], [35, 0, 0, "-", "constraints"], [69, 0, 0, "-", "exceptions"], [96, 0, 0, "-", "insights"], [105, 0, 0, "-", "kernels"], [123, 0, 0, "-", "objectives"], [139, 0, 0, "-", "parameters"], [169, 0, 0, "-", "priors"], [180, 0, 0, "-", "recommenders"], [215, 0, 0, "-", "searchspace"], [233, 0, 0, "-", "serialization"], [246, 0, 0, "-", "simulation"], [255, 0, 0, "-", "surrogates"], [299, 0, 0, "-", "targets"], [311, 0, 0, "-", "telemetry"], [316, 0, 0, "-", "transformations"], [341, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [25, 0, 0, "-", "base"], [27, 0, 0, "-", "partial"], [29, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedHypervolumeImprovement"], [10, 1, 1, "", "qExpectedImprovement"], [11, 1, 1, "", "qKnowledgeGradient"], [12, 1, 1, "", "qLogExpectedHypervolumeImprovement"], [13, 1, 1, "", "qLogExpectedImprovement"], [14, 1, 1, "", "qLogNParEGO"], [15, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [16, 1, 1, "", "qLogNoisyExpectedImprovement"], [17, 1, 1, "", "qNegIntegratedPosteriorVariance"], [18, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [19, 1, 1, "", "qNoisyExpectedImprovement"], [20, 1, 1, "", "qPosteriorStandardDeviation"], [21, 1, 1, "", "qProbabilityOfImprovement"], [22, 1, 1, "", "qSimpleRegret"], [23, 1, 1, "", "qThompsonSampling"], [24, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 3, 1, "", "alpha"], [9, 2, 1, "", "compute_ref_point"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "reference_point"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point.params": [[9, 4, 1, "", "array"], [9, 4, 1, "", "factor"], [9, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "num_fantasies"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 3, 1, "", "alpha"], [12, 2, 1, "", "compute_ref_point"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "reference_point"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point.params": [[12, 4, 1, "", "array"], [12, 4, 1, "", "factor"], [12, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "compute_ref_point"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 3, 1, "", "prune_baseline"], [15, 3, 1, "", "reference_point"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[15, 4, 1, "", "array"], [15, 4, 1, "", "factor"], [15, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "get_integration_points"], [17, 3, 1, "", "sampling_fraction"], [17, 3, 1, "", "sampling_method"], [17, 3, 1, "", "sampling_n_points"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[17, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "compute_ref_point"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "prune_baseline"], [18, 3, 1, "", "reference_point"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[18, 4, 1, "", "array"], [18, 4, 1, "", "factor"], [18, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "prune_baseline"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "abbreviation"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_json"], [23, 3, 1, "", "n_mc_samples"], [23, 3, 1, "", "supports_multi_output"], [23, 2, 1, "", "to_botorch"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[23, 4, 1, "", "candidates"], [23, 4, 1, "", "jointly"], [23, 4, 1, "", "measurements"], [23, 4, 1, "", "objective"], [23, 4, 1, "", "pending_experiments"], [23, 4, 1, "", "searchspace"], [23, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[23, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[23, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 3, 1, "", "beta"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.base": [[26, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "abbreviation"], [26, 2, 1, "", "evaluate"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_json"], [26, 3, 1, "", "supports_multi_output"], [26, 2, 1, "", "to_botorch"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[26, 4, 1, "", "candidates"], [26, 4, 1, "", "jointly"], [26, 4, 1, "", "measurements"], [26, 4, 1, "", "objective"], [26, 4, 1, "", "pending_experiments"], [26, 4, 1, "", "searchspace"], [26, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[26, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[26, 4, 1, "", "string"]], "baybe.acquisition.partial": [[28, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "botorch_acqf"], [28, 3, 1, "", "pin_discrete"], [28, 3, 1, "", "pinned_part"], [28, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[28, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[30, 5, 1, "", "convert_acqf"], [31, 5, 1, "", "make_partitioning"], [32, 5, 1, "", "str_to_acqf"]], "baybe.acquisition.utils.make_partitioning.params": [[31, 4, 1, "", "alpha"], [31, 4, 1, "", "predictions"], [31, 4, 1, "", "ref_point"]], "baybe.campaign": [[34, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "acquisition_values"], [34, 2, 1, "", "add_measurements"], [34, 3, 1, "", "allow_recommending_already_measured"], [34, 3, 1, "", "allow_recommending_already_recommended"], [34, 3, 1, "", "allow_recommending_pending_experiments"], [34, 2, 1, "", "from_config"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_acquisition_function"], [34, 2, 1, "", "get_surrogate"], [34, 2, 1, "", "joint_acquisition_value"], [34, 6, 1, "", "measurements"], [34, 3, 1, "", "n_batches_done"], [34, 3, 1, "", "n_fits_done"], [34, 3, 1, "", "objective"], [34, 6, 1, "", "parameters"], [34, 2, 1, "", "posterior"], [34, 2, 1, "", "posterior_stats"], [34, 2, 1, "", "recommend"], [34, 3, 1, "", "recommender"], [34, 3, 1, "", "searchspace"], [34, 6, 1, "", "targets"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"], [34, 2, 1, "", "toggle_discrete_candidates"], [34, 2, 1, "", "update_measurements"], [34, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[34, 4, 1, "", "acquisition_function"], [34, 4, 1, "", "batch_size"], [34, 4, 1, "", "candidates"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[34, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[34, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[34, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[34, 4, 1, "", "candidates"], [34, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[34, 4, 1, "", "complement"], [34, 4, 1, "", "constraints"], [34, 4, 1, "", "dry_run"], [34, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[34, 4, 1, "", "config_json"]], "baybe.constraints": [[36, 0, 0, "-", "base"], [42, 0, 0, "-", "conditions"], [46, 0, 0, "-", "continuous"], [49, 0, 0, "-", "deprecation"], [53, 0, 0, "-", "discrete"], [63, 0, 0, "-", "utils"], [65, 0, 0, "-", "validation"]], "baybe.constraints.base": [[37, 1, 1, "", "CardinalityConstraint"], [38, 1, 1, "", "Constraint"], [39, 1, 1, "", "ContinuousConstraint"], [40, 1, 1, "", "ContinuousNonlinearConstraint"], [41, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "max_cardinality"], [37, 3, 1, "", "min_cardinality"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "eval_during_augmentation"], [39, 3, 1, "", "eval_during_creation"], [39, 3, 1, "", "eval_during_modeling"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 6, 1, "", "is_continuous"], [39, 6, 1, "", "is_discrete"], [39, 3, 1, "", "numerical_only"], [39, 3, 1, "", "parameters"], [39, 2, 1, "", "summary"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 2, 1, "", "get_invalid"], [41, 2, 1, "", "get_invalid_polars"], [41, 2, 1, "", "get_valid"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[41, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[41, 4, 1, "", "df"]], "baybe.constraints.conditions": [[43, 1, 1, "", "Condition"], [44, 1, 1, "", "SubSelectionCondition"], [45, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[43, 2, 1, "", "evaluate"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"], [43, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[43, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[43, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[43, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[43, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "evaluate"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 6, 1, "", "selection"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"], [44, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[44, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[44, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "evaluate"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "threshold"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"], [45, 2, 1, "", "to_polars"], [45, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[45, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[45, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[47, 1, 1, "", "ContinuousCardinalityConstraint"], [48, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_absolute_thresholds"], [47, 2, 1, "", "inactive_parameter_combinations"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 6, 1, "", "n_inactive_parameter_combinations"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "relative_threshold"], [47, 2, 1, "", "sample_inactive_parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[47, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[47, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "coefficients"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 6, 1, "", "is_eq"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "operator"], [48, 3, 1, "", "parameters"], [48, 3, 1, "", "rhs"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_botorch"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[48, 4, 1, "", "idx_offset"], [48, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[50, 5, 1, "", "ContinuousLinearEqualityConstraint"], [51, 5, 1, "", "ContinuousLinearInequalityConstraint"], [52, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[54, 1, 1, "", "DiscreteCardinalityConstraint"], [55, 1, 1, "", "DiscreteCustomConstraint"], [56, 1, 1, "", "DiscreteDependenciesConstraint"], [57, 1, 1, "", "DiscreteExcludeConstraint"], [58, 1, 1, "", "DiscreteLinkedParametersConstraint"], [59, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [60, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [61, 1, 1, "", "DiscreteProductConstraint"], [62, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "max_cardinality"], [54, 3, 1, "", "min_cardinality"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"], [55, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "affected_parameters"], [56, 3, 1, "", "conditions"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 3, 1, "", "permutation_invariant"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "combiner"], [57, 3, 1, "", "conditions"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "dependencies"], [60, 3, 1, "", "eval_during_augmentation"], [60, 3, 1, "", "eval_during_creation"], [60, 3, 1, "", "eval_during_modeling"], [60, 2, 1, "", "from_dict"], [60, 2, 1, "", "from_json"], [60, 2, 1, "", "get_invalid"], [60, 2, 1, "", "get_invalid_polars"], [60, 2, 1, "", "get_valid"], [60, 6, 1, "", "is_continuous"], [60, 6, 1, "", "is_discrete"], [60, 3, 1, "", "numerical_only"], [60, 3, 1, "", "parameters"], [60, 2, 1, "", "summary"], [60, 2, 1, "", "to_dict"], [60, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[60, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[60, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[60, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[60, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "condition"], [61, 3, 1, "", "eval_during_augmentation"], [61, 3, 1, "", "eval_during_creation"], [61, 3, 1, "", "eval_during_modeling"], [61, 2, 1, "", "from_dict"], [61, 2, 1, "", "from_json"], [61, 2, 1, "", "get_invalid"], [61, 2, 1, "", "get_invalid_polars"], [61, 2, 1, "", "get_valid"], [61, 6, 1, "", "is_continuous"], [61, 6, 1, "", "is_discrete"], [61, 3, 1, "", "numerical_only"], [61, 3, 1, "", "parameters"], [61, 2, 1, "", "summary"], [61, 2, 1, "", "to_dict"], [61, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[61, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[61, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[61, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[61, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[62, 2, 1, "", "__init__"], [62, 3, 1, "", "condition"], [62, 3, 1, "", "eval_during_augmentation"], [62, 3, 1, "", "eval_during_creation"], [62, 3, 1, "", "eval_during_modeling"], [62, 2, 1, "", "from_dict"], [62, 2, 1, "", "from_json"], [62, 2, 1, "", "get_invalid"], [62, 2, 1, "", "get_invalid_polars"], [62, 2, 1, "", "get_valid"], [62, 6, 1, "", "is_continuous"], [62, 6, 1, "", "is_discrete"], [62, 3, 1, "", "numerical_only"], [62, 3, 1, "", "parameters"], [62, 2, 1, "", "summary"], [62, 2, 1, "", "to_dict"], [62, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[62, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[62, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[62, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[62, 4, 1, "", "df"]], "baybe.constraints.utils": [[64, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[64, 4, 1, "", "check_maximum"], [64, 4, 1, "", "check_minimum"], [64, 4, 1, "", "df"], [64, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[66, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [67, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [68, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[66, 4, 1, "", "constraint"], [66, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[67, 4, 1, "", "constraints"]], "baybe.exceptions": [[70, 7, 1, "", "DeprecationError"], [71, 7, 1, "", "EmptySearchSpaceError"], [72, 7, 1, "", "IncompatibilityError"], [73, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [74, 7, 1, "", "IncompatibleArgumentError"], [75, 7, 1, "", "IncompatibleExplainerError"], [76, 7, 1, "", "IncompatibleSearchSpaceError"], [77, 7, 1, "", "IncompatibleSurrogateError"], [78, 7, 1, "", "IncompleteMeasurementsError"], [79, 7, 1, "", "InfeasibilityError"], [80, 7, 1, "", "InputDataTypeWarning"], [81, 7, 1, "", "InvalidSurrogateModelError"], [82, 7, 1, "", "InvalidTargetValueError"], [83, 7, 1, "", "MinimumCardinalityViolatedWarning"], [84, 7, 1, "", "ModelNotTrainedError"], [85, 7, 1, "", "NoMCAcquisitionFunctionError"], [86, 7, 1, "", "NoMeasurementsError"], [87, 7, 1, "", "NoRecommendersLeftError"], [88, 7, 1, "", "NotEnoughPointsLeftError"], [89, 7, 1, "", "NothingToSimulateError"], [90, 7, 1, "", "NumericalUnderflowError"], [91, 7, 1, "", "OptionalImportError"], [92, 7, 1, "", "SearchSpaceMatchWarning"], [93, 7, 1, "", "UnidentifiedSubclassError"], [94, 7, 1, "", "UnmatchedAttributeError"], [95, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__new__"]], "baybe.insights": [[97, 0, 0, "-", "shap"]], "baybe.insights.shap": [[98, 8, 1, "", "EXPLAINERS"], [99, 8, 1, "", "NON_SHAP_EXPLAINERS"], [100, 1, 1, "", "SHAPInsight"], [101, 8, 1, "", "SHAP_EXPLAINERS"], [102, 8, 1, "", "SHAP_PLOTS"], [103, 5, 1, "", "is_shap_explainer"], [104, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[100, 2, 1, "", "__init__"], [100, 3, 1, "", "background_data"], [100, 2, 1, "", "explain"], [100, 2, 1, "", "explain_target"], [100, 3, 1, "", "explainers"], [100, 2, 1, "", "from_campaign"], [100, 2, 1, "", "from_recommender"], [100, 2, 1, "", "from_surrogate"], [100, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[100, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[100, 4, 1, "", "data"], [100, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[100, 4, 1, "", "campaign"], [100, 4, 1, "", "explainer_cls"], [100, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[100, 4, 1, "", "explainer_cls"], [100, 4, 1, "", "measurements"], [100, 4, 1, "", "objective"], [100, 4, 1, "", "recommender"], [100, 4, 1, "", "searchspace"], [100, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[100, 4, 1, "", "**kwargs"], [100, 4, 1, "", "data"], [100, 4, 1, "", "explanation_index"], [100, 4, 1, "", "plot_type"], [100, 4, 1, "", "show"], [100, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[104, 4, 1, "", "data"], [104, 4, 1, "", "explainer_cls"], [104, 4, 1, "", "surrogate"], [104, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[106, 0, 0, "-", "base"], [110, 0, 0, "-", "basic"], [119, 0, 0, "-", "composite"]], "baybe.kernels.base": [[107, 1, 1, "", "BasicKernel"], [108, 1, 1, "", "CompositeKernel"], [109, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic": [[111, 1, 1, "", "LinearKernel"], [112, 1, 1, "", "MaternKernel"], [113, 1, 1, "", "PeriodicKernel"], [114, 1, 1, "", "PiecewisePolynomialKernel"], [115, 1, 1, "", "PolynomialKernel"], [116, 1, 1, "", "RBFKernel"], [117, 1, 1, "", "RFFKernel"], [118, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"], [111, 3, 1, "", "variance_initial_value"], [111, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 3, 1, "", "nu"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 3, 1, "", "period_length_initial_value"], [113, 3, 1, "", "period_length_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 3, 1, "", "q"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "offset_initial_value"], [115, 3, 1, "", "offset_prior"], [115, 3, 1, "", "power"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "lengthscale_initial_value"], [116, 3, 1, "", "lengthscale_prior"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "lengthscale_initial_value"], [117, 3, 1, "", "lengthscale_prior"], [117, 3, 1, "", "num_samples"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 3, 1, "", "lengthscale_initial_value"], [118, 3, 1, "", "lengthscale_prior"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.kernels.composite": [[120, 1, 1, "", "AdditiveKernel"], [121, 1, 1, "", "ProductKernel"], [122, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[120, 2, 1, "", "__init__"], [120, 3, 1, "", "base_kernels"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_factory"], [120, 2, 1, "", "to_gpytorch"], [120, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[120, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[121, 2, 1, "", "__init__"], [121, 3, 1, "", "base_kernels"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_factory"], [121, 2, 1, "", "to_gpytorch"], [121, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[121, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[122, 2, 1, "", "__init__"], [122, 3, 1, "", "base_kernel"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 3, 1, "", "outputscale_initial_value"], [122, 3, 1, "", "outputscale_prior"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_factory"], [122, 2, 1, "", "to_gpytorch"], [122, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives": [[124, 0, 0, "-", "base"], [127, 0, 0, "-", "botorch"], [129, 0, 0, "-", "desirability"], [131, 0, 0, "-", "enum"], [133, 0, 0, "-", "pareto"], [135, 0, 0, "-", "single"], [137, 0, 0, "-", "validation"]], "baybe.objectives.base": [[125, 1, 1, "", "Objective"], [126, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 3, 1, "", "is_multi_output"], [125, 6, 1, "", "n_outputs"], [125, 6, 1, "", "targets"], [125, 2, 1, "", "to_botorch"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[125, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[125, 4, 1, "", "allow_extra"], [125, 4, 1, "", "allow_missing"], [125, 4, 1, "", "df"]], "baybe.objectives.botorch": [[128, 1, 1, "", "ChainedMCObjective"]], "baybe.objectives.botorch.ChainedMCObjective": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "add_module"], [128, 2, 1, "", "apply"], [128, 2, 1, "", "bfloat16"], [128, 2, 1, "", "buffers"], [128, 2, 1, "", "children"], [128, 2, 1, "", "compile"], [128, 2, 1, "", "cpu"], [128, 2, 1, "", "cuda"], [128, 2, 1, "", "double"], [128, 2, 1, "", "eval"], [128, 2, 1, "", "extra_repr"], [128, 2, 1, "", "float"], [128, 2, 1, "", "forward"], [128, 2, 1, "", "get_buffer"], [128, 2, 1, "", "get_extra_state"], [128, 2, 1, "", "get_parameter"], [128, 2, 1, "", "get_submodule"], [128, 2, 1, "", "half"], [128, 2, 1, "", "ipu"], [128, 2, 1, "", "load_state_dict"], [128, 2, 1, "", "modules"], [128, 2, 1, "", "mtia"], [128, 2, 1, "", "named_buffers"], [128, 2, 1, "", "named_children"], [128, 2, 1, "", "named_modules"], [128, 2, 1, "", "named_parameters"], [128, 2, 1, "", "parameters"], [128, 2, 1, "", "register_backward_hook"], [128, 2, 1, "", "register_buffer"], [128, 2, 1, "", "register_forward_hook"], [128, 2, 1, "", "register_forward_pre_hook"], [128, 2, 1, "", "register_full_backward_hook"], [128, 2, 1, "", "register_full_backward_pre_hook"], [128, 2, 1, "", "register_load_state_dict_post_hook"], [128, 2, 1, "", "register_load_state_dict_pre_hook"], [128, 2, 1, "", "register_module"], [128, 2, 1, "", "register_parameter"], [128, 2, 1, "", "register_state_dict_post_hook"], [128, 2, 1, "", "register_state_dict_pre_hook"], [128, 2, 1, "", "requires_grad_"], [128, 2, 1, "", "set_extra_state"], [128, 2, 1, "", "set_submodule"], [128, 2, 1, "", "share_memory"], [128, 2, 1, "", "state_dict"], [128, 2, 1, "", "to"], [128, 2, 1, "", "to_empty"], [128, 2, 1, "", "train"], [128, 2, 1, "", "type"], [128, 2, 1, "", "xpu"], [128, 2, 1, "", "zero_grad"]], "baybe.objectives.botorch.ChainedMCObjective.add_module.params": [[128, 4, 1, "", "module"], [128, 4, 1, "", "name"]], "baybe.objectives.botorch.ChainedMCObjective.apply.params": [[128, 4, 1, "", "fn"]], "baybe.objectives.botorch.ChainedMCObjective.buffers.params": [[128, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.cuda.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.forward.params": [[128, 4, 1, "", "X"], [128, 4, 1, "", "samples"]], "baybe.objectives.botorch.ChainedMCObjective.get_buffer.params": [[128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_parameter.params": [[128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_submodule.params": [[128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.ipu.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.load_state_dict.params": [[128, 4, 1, "", "assign"], [128, 4, 1, "", "state_dict"], [128, 4, 1, "", "strict"]], "baybe.objectives.botorch.ChainedMCObjective.mtia.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.named_buffers.params": [[128, 4, 1, "", "prefix"], [128, 4, 1, "", "recurse"], [128, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_modules.params": [[128, 4, 1, "", "memo"], [128, 4, 1, "", "prefix"], [128, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_parameters.params": [[128, 4, 1, "", "prefix"], [128, 4, 1, "", "recurse"], [128, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.parameters.params": [[128, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.register_buffer.params": [[128, 4, 1, "", "name"], [128, 4, 1, "", "persistent"], [128, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook.params": [[128, 4, 1, "", "always_call"], [128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"], [128, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook.params": [[128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"], [128, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook.params": [[128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook.params": [[128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook.params": [[128, 4, 1, "", "hook"]], "baybe.objectives.botorch.ChainedMCObjective.register_parameter.params": [[128, 4, 1, "", "name"], [128, 4, 1, "", "param"]], "baybe.objectives.botorch.ChainedMCObjective.requires_grad_.params": [[128, 4, 1, "", "requires_grad"]], "baybe.objectives.botorch.ChainedMCObjective.set_extra_state.params": [[128, 4, 1, "", "state"]], "baybe.objectives.botorch.ChainedMCObjective.set_submodule.params": [[128, 4, 1, "", "module"], [128, 4, 1, "", "strict"], [128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.state_dict.params": [[128, 4, 1, "", "destination"], [128, 4, 1, "", "keep_vars"], [128, 4, 1, "", "prefix"]], "baybe.objectives.botorch.ChainedMCObjective.to.params": [[128, 4, 1, "", "device"], [128, 4, 1, "", "dtype"], [128, 4, 1, "", "memory_format"], [128, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.to_empty.params": [[128, 4, 1, "", "device"], [128, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.train.params": [[128, 4, 1, "", "mode"]], "baybe.objectives.botorch.ChainedMCObjective.type.params": [[128, 4, 1, "", "dst_type"]], "baybe.objectives.botorch.ChainedMCObjective.xpu.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.zero_grad.params": [[128, 4, 1, "", "set_to_none"]], "baybe.objectives.desirability": [[130, 1, 1, "", "DesirabilityObjective"]], "baybe.objectives.desirability.DesirabilityObjective": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 6, 1, "", "n_outputs"], [130, 3, 1, "", "require_normalization"], [130, 3, 1, "", "scalarizer"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_botorch"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"], [130, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "df"]], "baybe.objectives.enum": [[132, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[132, 3, 1, "", "GEOM_MEAN"], [132, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[134, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "from_dict"], [134, 2, 1, "", "from_json"], [134, 3, 1, "", "is_multi_output"], [134, 6, 1, "", "n_outputs"], [134, 6, 1, "", "targets"], [134, 2, 1, "", "to_botorch"], [134, 2, 1, "", "to_dict"], [134, 2, 1, "", "to_json"], [134, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[134, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[134, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[134, 4, 1, "", "allow_extra"], [134, 4, 1, "", "allow_missing"], [134, 4, 1, "", "df"]], "baybe.objectives.single": [[136, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 3, 1, "", "is_multi_output"], [136, 6, 1, "", "n_outputs"], [136, 6, 1, "", "targets"], [136, 2, 1, "", "to_botorch"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[136, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[136, 4, 1, "", "allow_extra"], [136, 4, 1, "", "allow_missing"], [136, 4, 1, "", "df"]], "baybe.objectives.validation": [[138, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[140, 0, 0, "-", "base"], [144, 0, 0, "-", "categorical"], [147, 0, 0, "-", "custom"], [149, 0, 0, "-", "enum"], [154, 0, 0, "-", "numerical"], [157, 0, 0, "-", "substance"], [160, 0, 0, "-", "utils"], [165, 0, 0, "-", "validation"]], "baybe.parameters.base": [[141, 1, 1, "", "ContinuousParameter"], [142, 1, 1, "", "DiscreteParameter"], [143, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "comp_rep_columns"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "comp_rep_columns"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.categorical": [[145, 1, 1, "", "CategoricalParameter"], [146, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "active_values"], [145, 6, 1, "", "comp_df"], [145, 6, 1, "", "comp_rep_columns"], [145, 3, 1, "", "encoding"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"], [145, 2, 1, "", "transform"], [145, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[145, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[145, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[146, 2, 1, "", "__init__"], [146, 6, 1, "", "active_values"], [146, 6, 1, "", "comp_df"], [146, 6, 1, "", "comp_rep_columns"], [146, 3, 1, "", "encoding"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 6, 1, "", "is_continuous"], [146, 6, 1, "", "is_discrete"], [146, 2, 1, "", "is_in_range"], [146, 3, 1, "", "is_numerical"], [146, 3, 1, "", "name"], [146, 2, 1, "", "summary"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_json"], [146, 2, 1, "", "to_searchspace"], [146, 2, 1, "", "to_subspace"], [146, 2, 1, "", "transform"], [146, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[146, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[146, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[146, 4, 1, "", "series"]], "baybe.parameters.custom": [[148, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[148, 2, 1, "", "__init__"], [148, 6, 1, "", "active_values"], [148, 6, 1, "", "comp_df"], [148, 6, 1, "", "comp_rep_columns"], [148, 3, 1, "", "data"], [148, 3, 1, "", "decorrelate"], [148, 3, 1, "", "encoding"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 6, 1, "", "is_continuous"], [148, 6, 1, "", "is_discrete"], [148, 2, 1, "", "is_in_range"], [148, 3, 1, "", "is_numerical"], [148, 3, 1, "", "name"], [148, 2, 1, "", "summary"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_json"], [148, 2, 1, "", "to_searchspace"], [148, 2, 1, "", "to_subspace"], [148, 2, 1, "", "transform"], [148, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[148, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[148, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[148, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[148, 4, 1, "", "series"]], "baybe.parameters.enum": [[150, 1, 1, "", "CategoricalEncoding"], [151, 1, 1, "", "CustomEncoding"], [152, 1, 1, "", "ParameterEncoding"], [153, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[150, 3, 1, "", "INT"], [150, 3, 1, "", "OHE"], [150, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[151, 3, 1, "", "CUSTOM"], [151, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[153, 3, 1, "", "ATOMPAIR"], [153, 3, 1, "", "AUTOCORR"], [153, 3, 1, "", "AVALON"], [153, 3, 1, "", "BCUT2D"], [153, 3, 1, "", "E3FP"], [153, 3, 1, "", "ECFP"], [153, 3, 1, "", "ELECTROSHAPE"], [153, 3, 1, "", "ERG"], [153, 3, 1, "", "ESTATE"], [153, 3, 1, "", "FUNCTIONALGROUPS"], [153, 3, 1, "", "GETAWAY"], [153, 3, 1, "", "GHOSECRIPPEN"], [153, 3, 1, "", "KLEKOTAROTH"], [153, 3, 1, "", "LAGGNER"], [153, 3, 1, "", "LAYERED"], [153, 3, 1, "", "LINGO"], [153, 3, 1, "", "MACCS"], [153, 3, 1, "", "MAP"], [153, 3, 1, "", "MHFP"], [153, 3, 1, "", "MORDRED"], [153, 3, 1, "", "MORGAN_FP"], [153, 3, 1, "", "MORSE"], [153, 3, 1, "", "MQNS"], [153, 3, 1, "", "PATTERN"], [153, 3, 1, "", "PHARMACOPHORE"], [153, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [153, 3, 1, "", "PUBCHEM"], [153, 3, 1, "", "RDF"], [153, 3, 1, "", "RDKIT"], [153, 3, 1, "", "RDKIT2DDESCRIPTORS"], [153, 3, 1, "", "RDKITFINGERPRINT"], [153, 3, 1, "", "SECFP"], [153, 3, 1, "", "TOPOLOGICALTORSION"], [153, 3, 1, "", "USR"], [153, 3, 1, "", "USRCAT"], [153, 3, 1, "", "VSA"], [153, 3, 1, "", "WHIM"], [153, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[155, 1, 1, "", "NumericalContinuousParameter"], [156, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "bounds"], [155, 6, 1, "", "comp_rep_columns"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[155, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[156, 2, 1, "", "__init__"], [156, 6, 1, "", "active_values"], [156, 6, 1, "", "comp_df"], [156, 6, 1, "", "comp_rep_columns"], [156, 3, 1, "", "encoding"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 6, 1, "", "is_continuous"], [156, 6, 1, "", "is_discrete"], [156, 2, 1, "", "is_in_range"], [156, 3, 1, "", "is_numerical"], [156, 3, 1, "", "name"], [156, 2, 1, "", "summary"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"], [156, 2, 1, "", "to_searchspace"], [156, 2, 1, "", "to_subspace"], [156, 3, 1, "", "tolerance"], [156, 2, 1, "", "transform"], [156, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[156, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[156, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[156, 4, 1, "", "series"]], "baybe.parameters.substance": [[158, 3, 1, "", "Smiles"], [159, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[159, 2, 1, "", "__init__"], [159, 6, 1, "", "active_values"], [159, 6, 1, "", "comp_df"], [159, 6, 1, "", "comp_rep_columns"], [159, 3, 1, "", "data"], [159, 3, 1, "", "decorrelate"], [159, 3, 1, "", "encoding"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 6, 1, "", "is_continuous"], [159, 6, 1, "", "is_discrete"], [159, 2, 1, "", "is_in_range"], [159, 3, 1, "", "is_numerical"], [159, 3, 1, "", "kwargs_conformer"], [159, 3, 1, "", "kwargs_fingerprint"], [159, 3, 1, "", "name"], [159, 2, 1, "", "summary"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_json"], [159, 2, 1, "", "to_searchspace"], [159, 2, 1, "", "to_subspace"], [159, 2, 1, "", "transform"], [159, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[159, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[159, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[159, 4, 1, "", "series"]], "baybe.parameters.utils": [[161, 5, 1, "", "activate_parameter"], [162, 5, 1, "", "get_parameters_from_dataframe"], [163, 5, 1, "", "is_inactive"], [164, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[161, 4, 1, "", "parameter"], [161, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[162, 4, 1, "", "df"], [162, 4, 1, "", "factory"], [162, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[163, 4, 1, "", "lower_threshold"], [163, 4, 1, "", "upper_threshold"], [163, 4, 1, "", "x"]], "baybe.parameters.validation": [[166, 5, 1, "", "validate_decorrelation"], [167, 5, 1, "", "validate_is_finite"], [168, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[170, 0, 0, "-", "base"], [172, 0, 0, "-", "basic"]], "baybe.priors.base": [[171, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic": [[173, 1, 1, "", "BetaPrior"], [174, 1, 1, "", "GammaPrior"], [175, 1, 1, "", "HalfCauchyPrior"], [176, 1, 1, "", "HalfNormalPrior"], [177, 1, 1, "", "LogNormalPrior"], [178, 1, 1, "", "NormalPrior"], [179, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "alpha"], [173, 3, 1, "", "beta"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "concentration"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "rate"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "scale"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[176, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 3, 1, "", "loc"], [177, 3, 1, "", "scale"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_gpytorch"], [177, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[177, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[177, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "from_dict"], [178, 2, 1, "", "from_json"], [178, 3, 1, "", "loc"], [178, 3, 1, "", "scale"], [178, 2, 1, "", "to_dict"], [178, 2, 1, "", "to_gpytorch"], [178, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[178, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[178, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "a"], [179, 3, 1, "", "b"], [179, 2, 1, "", "from_dict"], [179, 2, 1, "", "from_json"], [179, 3, 1, "", "sigma"], [179, 2, 1, "", "to_dict"], [179, 2, 1, "", "to_gpytorch"], [179, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[179, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[179, 4, 1, "", "string"]], "baybe.recommenders": [[181, 0, 0, "-", "base"], [183, 0, 0, "-", "meta"], [191, 0, 0, "-", "naive"], [193, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[182, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[182, 4, 1, "", "batch_size"], [182, 4, 1, "", "measurements"], [182, 4, 1, "", "objective"], [182, 4, 1, "", "pending_experiments"], [182, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[184, 0, 0, "-", "base"], [186, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[185, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[187, 1, 1, "", "BaseSequentialMetaRecommender"], [188, 1, 1, "", "SequentialMetaRecommender"], [189, 1, 1, "", "StreamingSequentialMetaRecommender"], [190, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 6, 1, "", "is_stateful"], [187, 2, 1, "", "recommend"], [187, 2, 1, "", "select_recommender"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[187, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_json"], [188, 2, 1, "", "get_current_recommender"], [188, 2, 1, "", "get_next_recommender"], [188, 2, 1, "", "get_non_meta_recommender"], [188, 6, 1, "", "is_stateful"], [188, 3, 1, "", "mode"], [188, 2, 1, "", "recommend"], [188, 3, 1, "", "recommenders"], [188, 2, 1, "", "select_recommender"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[188, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[188, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_json"], [189, 2, 1, "", "get_current_recommender"], [189, 2, 1, "", "get_next_recommender"], [189, 2, 1, "", "get_non_meta_recommender"], [189, 6, 1, "", "is_stateful"], [189, 2, 1, "", "recommend"], [189, 3, 1, "", "recommenders"], [189, 2, 1, "", "select_recommender"], [189, 2, 1, "", "to_dict"], [189, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[189, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[189, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "from_dict"], [190, 2, 1, "", "from_json"], [190, 2, 1, "", "get_current_recommender"], [190, 2, 1, "", "get_next_recommender"], [190, 2, 1, "", "get_non_meta_recommender"], [190, 3, 1, "", "initial_recommender"], [190, 6, 1, "", "is_stateful"], [190, 2, 1, "", "recommend"], [190, 3, 1, "", "recommender"], [190, 3, 1, "", "remain_switched"], [190, 2, 1, "", "select_recommender"], [190, 3, 1, "", "switch_after"], [190, 2, 1, "", "to_dict"], [190, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[190, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[190, 4, 1, "", "string"]], "baybe.recommenders.naive": [[192, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 3, 1, "", "cont_recommender"], [192, 3, 1, "", "disc_recommender"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[194, 0, 0, "-", "base"], [196, 0, 0, "-", "bayesian"], [203, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[195, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[195, 2, 1, "", "__init__"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[197, 0, 0, "-", "base"], [199, 0, 0, "-", "botorch"], [201, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[198, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[198, 2, 1, "", "__init__"], [198, 3, 1, "", "acquisition_function"], [198, 2, 1, "", "acquisition_values"], [198, 6, 1, "", "allow_recommending_already_measured"], [198, 6, 1, "", "allow_recommending_pending_experiments"], [198, 6, 1, "", "allow_repeated_recommendations"], [198, 3, 1, "", "compatibility"], [198, 2, 1, "", "get_acquisition_function"], [198, 2, 1, "", "get_surrogate"], [198, 2, 1, "", "joint_acquisition_value"], [198, 2, 1, "", "recommend"], [198, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[198, 4, 1, "", "acquisition_function"], [198, 4, 1, "", "candidates"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[198, 4, 1, "", "batch_size"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[200, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[200, 2, 1, "", "__init__"], [200, 3, 1, "", "acquisition_function"], [200, 2, 1, "", "acquisition_values"], [200, 6, 1, "", "allow_recommending_already_measured"], [200, 6, 1, "", "allow_recommending_pending_experiments"], [200, 6, 1, "", "allow_repeated_recommendations"], [200, 3, 1, "", "compatibility"], [200, 2, 1, "", "get_acquisition_function"], [200, 2, 1, "", "get_surrogate"], [200, 3, 1, "", "hybrid_sampler"], [200, 2, 1, "", "joint_acquisition_value"], [200, 3, 1, "", "max_n_subspaces"], [200, 3, 1, "", "n_raw_samples"], [200, 3, 1, "", "n_restarts"], [200, 2, 1, "", "recommend"], [200, 3, 1, "", "sampling_percentage"], [200, 3, 1, "", "sequential_continuous"], [200, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[200, 4, 1, "", "acquisition_function"], [200, 4, 1, "", "candidates"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[200, 4, 1, "", "batch_size"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[202, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[204, 0, 0, "-", "base"], [206, 0, 0, "-", "clustering"], [211, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[205, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[207, 1, 1, "", "GaussianMixtureClusteringRecommender"], [208, 1, 1, "", "KMeansClusteringRecommender"], [209, 1, 1, "", "PAMClusteringRecommender"], [210, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[208, 2, 1, "", "__init__"], [208, 6, 1, "", "allow_recommending_already_measured"], [208, 6, 1, "", "allow_recommending_pending_experiments"], [208, 6, 1, "", "allow_repeated_recommendations"], [208, 3, 1, "", "compatibility"], [208, 3, 1, "", "model_cluster_num_parameter_name"], [208, 3, 1, "", "model_params"], [208, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[208, 4, 1, "", "batch_size"], [208, 4, 1, "", "measurements"], [208, 4, 1, "", "objective"], [208, 4, 1, "", "pending_experiments"], [208, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[209, 2, 1, "", "__init__"], [209, 6, 1, "", "allow_recommending_already_measured"], [209, 6, 1, "", "allow_recommending_pending_experiments"], [209, 6, 1, "", "allow_repeated_recommendations"], [209, 3, 1, "", "compatibility"], [209, 3, 1, "", "model_cluster_num_parameter_name"], [209, 3, 1, "", "model_params"], [209, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[209, 4, 1, "", "batch_size"], [209, 4, 1, "", "measurements"], [209, 4, 1, "", "objective"], [209, 4, 1, "", "pending_experiments"], [209, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 3, 1, "", "model_cluster_num_parameter_name"], [210, 3, 1, "", "model_params"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[212, 1, 1, "", "FPSInitialization"], [213, 1, 1, "", "FPSRecommender"], [214, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[212, 3, 1, "", "FARTHEST"], [212, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "allow_recommending_already_measured"], [213, 6, 1, "", "allow_recommending_pending_experiments"], [213, 6, 1, "", "allow_repeated_recommendations"], [213, 3, 1, "", "compatibility"], [213, 3, 1, "", "initialization"], [213, 3, 1, "", "random_tie_break"], [213, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[213, 4, 1, "", "batch_size"], [213, 4, 1, "", "measurements"], [213, 4, 1, "", "objective"], [213, 4, 1, "", "pending_experiments"], [213, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[214, 2, 1, "", "__init__"], [214, 6, 1, "", "allow_recommending_already_measured"], [214, 6, 1, "", "allow_recommending_pending_experiments"], [214, 6, 1, "", "allow_repeated_recommendations"], [214, 3, 1, "", "compatibility"], [214, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[214, 4, 1, "", "batch_size"], [214, 4, 1, "", "measurements"], [214, 4, 1, "", "objective"], [214, 4, 1, "", "pending_experiments"], [214, 4, 1, "", "searchspace"]], "baybe.searchspace": [[216, 0, 0, "-", "continuous"], [218, 0, 0, "-", "core"], [223, 0, 0, "-", "discrete"], [229, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[217, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[217, 2, 1, "", "__init__"], [217, 6, 1, "", "comp_rep_bounds"], [217, 6, 1, "", "comp_rep_columns"], [217, 6, 1, "", "constraints_cardinality"], [217, 3, 1, "", "constraints_lin_eq"], [217, 3, 1, "", "constraints_lin_ineq"], [217, 3, 1, "", "constraints_nonlin"], [217, 2, 1, "", "empty"], [217, 2, 1, "", "from_bounds"], [217, 2, 1, "", "from_dataframe"], [217, 2, 1, "", "from_dict"], [217, 2, 1, "", "from_json"], [217, 2, 1, "", "from_parameter"], [217, 2, 1, "", "from_product"], [217, 6, 1, "", "full_factorial"], [217, 2, 1, "", "get_parameters_by_name"], [217, 2, 1, "", "inactive_parameter_combinations"], [217, 6, 1, "", "is_empty"], [217, 6, 1, "", "n_inactive_parameter_combinations"], [217, 6, 1, "", "parameter_names"], [217, 6, 1, "", "parameter_names_in_cardinality_constraints"], [217, 3, 1, "", "parameters"], [217, 2, 1, "", "sample_from_full_factorial"], [217, 2, 1, "", "sample_uniform"], [217, 2, 1, "", "samples_full_factorial"], [217, 2, 1, "", "samples_random"], [217, 6, 1, "", "scaling_bounds"], [217, 2, 1, "", "to_dict"], [217, 2, 1, "", "to_json"], [217, 2, 1, "", "to_searchspace"], [217, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[217, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[217, 4, 1, "", "df"], [217, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[217, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[217, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[217, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[217, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[217, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[217, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[219, 1, 1, "", "SearchSpace"], [220, 1, 1, "", "SearchSpaceType"], [221, 5, 1, "", "to_searchspace"], [222, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[219, 2, 1, "", "__init__"], [219, 6, 1, "", "comp_rep_bounds"], [219, 6, 1, "", "comp_rep_columns"], [219, 6, 1, "", "constraints"], [219, 6, 1, "", "constraints_augmentable"], [219, 3, 1, "", "continuous"], [219, 3, 1, "", "discrete"], [219, 2, 1, "", "estimate_product_space_size"], [219, 2, 1, "", "from_dataframe"], [219, 2, 1, "", "from_dict"], [219, 2, 1, "", "from_json"], [219, 2, 1, "", "from_parameter"], [219, 2, 1, "", "from_product"], [219, 2, 1, "", "get_comp_rep_parameter_indices"], [219, 2, 1, "", "get_parameters_by_name"], [219, 6, 1, "", "n_tasks"], [219, 6, 1, "", "parameter_names"], [219, 6, 1, "", "parameters"], [219, 6, 1, "", "scaling_bounds"], [219, 6, 1, "", "task_idx"], [219, 2, 1, "", "to_dict"], [219, 2, 1, "", "to_json"], [219, 2, 1, "", "transform"], [219, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[219, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[219, 4, 1, "", "df"], [219, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[219, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[219, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[219, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[219, 4, 1, "", "constraints"], [219, 4, 1, "", "empty_encoding"], [219, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[219, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[219, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[219, 4, 1, "", "allow_extra"], [219, 4, 1, "", "allow_missing"], [219, 4, 1, "", "data"], [219, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[220, 3, 1, "", "CONTINUOUS"], [220, 3, 1, "", "DISCRETE"], [220, 3, 1, "", "EITHER"], [220, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[224, 1, 1, "", "MemorySize"], [225, 1, 1, "", "SubspaceDiscrete"], [226, 5, 1, "", "parameter_cartesian_prod_pandas"], [227, 5, 1, "", "parameter_cartesian_prod_polars"], [228, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[224, 2, 1, "", "__init__"], [224, 3, 1, "", "comp_rep_bytes"], [224, 6, 1, "", "comp_rep_human_readable"], [224, 3, 1, "", "comp_rep_shape"], [224, 3, 1, "", "exp_rep_bytes"], [224, 6, 1, "", "exp_rep_human_readable"], [224, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[225, 2, 1, "", "__init__"], [225, 3, 1, "", "comp_rep"], [225, 6, 1, "", "comp_rep_bounds"], [225, 6, 1, "", "comp_rep_columns"], [225, 3, 1, "", "constraints"], [225, 2, 1, "", "empty"], [225, 3, 1, "", "empty_encoding"], [225, 2, 1, "", "estimate_product_space_size"], [225, 3, 1, "", "exp_rep"], [225, 2, 1, "", "from_dataframe"], [225, 2, 1, "", "from_dict"], [225, 2, 1, "", "from_json"], [225, 2, 1, "", "from_parameter"], [225, 2, 1, "", "from_product"], [225, 2, 1, "", "from_simplex"], [225, 2, 1, "", "get_candidates"], [225, 2, 1, "", "get_parameters_by_name"], [225, 6, 1, "", "is_empty"], [225, 6, 1, "", "metadata"], [225, 6, 1, "", "parameter_names"], [225, 3, 1, "", "parameters"], [225, 6, 1, "", "scaling_bounds"], [225, 2, 1, "", "to_dict"], [225, 2, 1, "", "to_json"], [225, 2, 1, "", "to_searchspace"], [225, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[225, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[225, 4, 1, "", "df"], [225, 4, 1, "", "empty_encoding"], [225, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[225, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[225, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[225, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[225, 4, 1, "", "boundary_only"], [225, 4, 1, "", "constraints"], [225, 4, 1, "", "max_nonzero"], [225, 4, 1, "", "max_sum"], [225, 4, 1, "", "min_nonzero"], [225, 4, 1, "", "product_parameters"], [225, 4, 1, "", "simplex_parameters"], [225, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[225, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[226, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[227, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[230, 5, 1, "", "get_transform_parameters"], [231, 5, 1, "", "validate_parameter_names"], [232, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[234, 0, 0, "-", "core"], [241, 0, 0, "-", "mixin"], [243, 0, 0, "-", "utils"]], "baybe.serialization.core": [[235, 5, 1, "", "block_deserialization_hook"], [236, 5, 1, "", "block_serialization_hook"], [237, 8, 1, "", "converter"], [238, 5, 1, "", "get_base_structure_hook"], [239, 5, 1, "", "select_constructor_hook"], [240, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[238, 4, 1, "", "base"], [238, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[240, 4, 1, "", "base"], [240, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[242, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[242, 2, 1, "", "from_dict"], [242, 2, 1, "", "from_json"], [242, 2, 1, "", "to_dict"], [242, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[242, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[242, 4, 1, "", "string"]], "baybe.serialization.utils": [[244, 5, 1, "", "deserialize_dataframe"], [245, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[247, 0, 0, "-", "core"], [249, 0, 0, "-", "lookup"], [251, 0, 0, "-", "scenarios"], [253, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[248, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "campaign"], [248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "initial_data"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "noise_percent"], [248, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[250, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[250, 4, 1, "", "impute_mode"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "queries"], [250, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[252, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[252, 4, 1, "", "batch_size"], [252, 4, 1, "", "groupby"], [252, 4, 1, "", "impute_mode"], [252, 4, 1, "", "initial_data"], [252, 4, 1, "", "lookup"], [252, 4, 1, "", "n_doe_iterations"], [252, 4, 1, "", "n_mc_iterations"], [252, 4, 1, "", "noise_percent"], [252, 4, 1, "", "parallel_runs"], [252, 4, 1, "", "random_seed"], [252, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[254, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[254, 4, 1, "", "batch_size"], [254, 4, 1, "", "campaign"], [254, 4, 1, "", "groupby"], [254, 4, 1, "", "lookup"], [254, 4, 1, "", "n_doe_iterations"], [254, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[256, 0, 0, "-", "bandit"], [258, 0, 0, "-", "base"], [263, 0, 0, "-", "composite"], [265, 0, 0, "-", "custom"], [268, 0, 0, "-", "gaussian_process"], [283, 0, 0, "-", "linear"], [285, 0, 0, "-", "naive"], [287, 0, 0, "-", "ngboost"], [289, 0, 0, "-", "random_forest"], [291, 0, 0, "-", "utils"], [295, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[257, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_means"], [257, 2, 1, "", "posterior_modes"], [257, 2, 1, "", "posterior_stats"], [257, 3, 1, "", "prior"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base": [[259, 1, 1, "", "IndependentGaussianSurrogate"], [260, 8, 1, "", "PosteriorStatistic"], [261, 1, 1, "", "Surrogate"], [262, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 2, 1, "", "posterior"], [259, 2, 1, "", "posterior_stats"], [259, 2, 1, "", "replicate"], [259, 3, 1, "", "supports_multi_output"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[259, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[259, 4, 1, "", "candidates"], [259, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 2, 1, "", "posterior"], [261, 2, 1, "", "posterior_stats"], [261, 2, 1, "", "replicate"], [261, 3, 1, "", "supports_multi_output"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[261, 4, 1, "", "candidates"], [261, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[264, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 2, 1, "", "from_replication"], [264, 2, 1, "", "posterior"], [264, 2, 1, "", "posterior_stats"], [264, 3, 1, "", "surrogates"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.custom": [[266, 1, 1, "", "CustomONNXSurrogate"], [267, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 3, 1, "", "onnx_input_name"], [266, 3, 1, "", "onnx_str"], [266, 2, 1, "", "posterior"], [266, 2, 1, "", "posterior_stats"], [266, 2, 1, "", "replicate"], [266, 3, 1, "", "supports_multi_output"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"], [266, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[266, 4, 1, "", "candidates"], [266, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[266, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[269, 0, 0, "-", "core"], [271, 0, 0, "-", "kernel_factory"], [275, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[270, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[270, 2, 1, "", "__init__"], [270, 2, 1, "", "fit"], [270, 2, 1, "", "from_dict"], [270, 2, 1, "", "from_json"], [270, 2, 1, "", "from_preset"], [270, 3, 1, "", "kernel_factory"], [270, 2, 1, "", "posterior"], [270, 2, 1, "", "posterior_stats"], [270, 2, 1, "", "replicate"], [270, 3, 1, "", "supports_multi_output"], [270, 3, 1, "", "supports_transfer_learning"], [270, 2, 1, "", "to_botorch"], [270, 2, 1, "", "to_dict"], [270, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[270, 4, 1, "", "measurements"], [270, 4, 1, "", "objective"], [270, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[270, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[270, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[270, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[270, 4, 1, "", "candidates"], [270, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[272, 1, 1, "", "KernelFactory"], [273, 1, 1, "", "PlainKernelFactory"], [274, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[272, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[273, 2, 1, "", "__init__"], [273, 2, 1, "", "from_dict"], [273, 2, 1, "", "from_json"], [273, 3, 1, "", "kernel"], [273, 2, 1, "", "to_dict"], [273, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[273, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[273, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[276, 0, 0, "-", "core"], [279, 0, 0, "-", "default"], [281, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[277, 1, 1, "", "GaussianProcessPreset"], [278, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[277, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[280, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[280, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[282, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[282, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[284, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[286, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[286, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[288, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[288, 2, 1, "", "__init__"], [288, 2, 1, "", "fit"], [288, 2, 1, "", "from_dict"], [288, 2, 1, "", "from_json"], [288, 3, 1, "", "model_params"], [288, 2, 1, "", "posterior"], [288, 2, 1, "", "posterior_stats"], [288, 2, 1, "", "replicate"], [288, 3, 1, "", "supports_multi_output"], [288, 3, 1, "", "supports_transfer_learning"], [288, 2, 1, "", "to_botorch"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[288, 4, 1, "", "measurements"], [288, 4, 1, "", "objective"], [288, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[288, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[288, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[288, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[288, 4, 1, "", "candidates"], [288, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[290, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[290, 2, 1, "", "__init__"], [290, 2, 1, "", "fit"], [290, 2, 1, "", "from_dict"], [290, 2, 1, "", "from_json"], [290, 3, 1, "", "model_params"], [290, 2, 1, "", "posterior"], [290, 2, 1, "", "posterior_stats"], [290, 2, 1, "", "replicate"], [290, 3, 1, "", "supports_multi_output"], [290, 3, 1, "", "supports_transfer_learning"], [290, 2, 1, "", "to_botorch"], [290, 2, 1, "", "to_dict"], [290, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[290, 4, 1, "", "measurements"], [290, 4, 1, "", "objective"], [290, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[290, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[290, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[290, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[290, 4, 1, "", "candidates"], [290, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[292, 5, 1, "", "batchify_ensemble_predictor"], [293, 5, 1, "", "batchify_mean_var_prediction"], [294, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[292, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[294, 4, 1, "", "cls"], [294, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[296, 5, 1, "", "make_dict_validator"], [297, 8, 1, "", "type_validation_converter"], [298, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[296, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[298, 4, 1, "", "model_cls"]], "baybe.targets": [[300, 0, 0, "-", "base"], [302, 0, 0, "-", "binary"], [305, 0, 0, "-", "botorch"], [307, 0, 0, "-", "enum"], [308, 0, 0, "-", "numerical"], [310, 0, 0, "-", "transforms"]], "baybe.targets.base": [[301, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[301, 2, 1, "", "__init__"], [301, 2, 1, "", "from_dict"], [301, 2, 1, "", "from_json"], [301, 3, 1, "", "name"], [301, 2, 1, "", "summary"], [301, 2, 1, "", "to_dict"], [301, 2, 1, "", "to_json"], [301, 2, 1, "", "to_objective"], [301, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[301, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[301, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[301, 4, 1, "", "series"]], "baybe.targets.binary": [[303, 1, 1, "", "BinaryTarget"], [304, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[303, 2, 1, "", "__init__"], [303, 3, 1, "", "failure_value"], [303, 2, 1, "", "from_dict"], [303, 2, 1, "", "from_json"], [303, 3, 1, "", "name"], [303, 3, 1, "", "success_value"], [303, 2, 1, "", "summary"], [303, 2, 1, "", "to_dict"], [303, 2, 1, "", "to_json"], [303, 2, 1, "", "to_objective"], [303, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[303, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[303, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[303, 4, 1, "", "series"]], "baybe.targets.botorch": [[306, 1, 1, "", "AffinePosteriorTransform"]], "baybe.targets.botorch.AffinePosteriorTransform": [[306, 2, 1, "", "__init__"], [306, 2, 1, "", "add_module"], [306, 2, 1, "", "apply"], [306, 2, 1, "", "bfloat16"], [306, 2, 1, "", "buffers"], [306, 2, 1, "", "children"], [306, 2, 1, "", "compile"], [306, 2, 1, "", "cpu"], [306, 2, 1, "", "cuda"], [306, 2, 1, "", "double"], [306, 2, 1, "", "eval"], [306, 2, 1, "", "evaluate"], [306, 2, 1, "", "extra_repr"], [306, 2, 1, "", "float"], [306, 2, 1, "", "forward"], [306, 2, 1, "", "get_buffer"], [306, 2, 1, "", "get_extra_state"], [306, 2, 1, "", "get_parameter"], [306, 2, 1, "", "get_submodule"], [306, 2, 1, "", "half"], [306, 2, 1, "", "ipu"], [306, 2, 1, "", "load_state_dict"], [306, 2, 1, "", "modules"], [306, 2, 1, "", "mtia"], [306, 2, 1, "", "named_buffers"], [306, 2, 1, "", "named_children"], [306, 2, 1, "", "named_modules"], [306, 2, 1, "", "named_parameters"], [306, 2, 1, "", "parameters"], [306, 2, 1, "", "register_backward_hook"], [306, 2, 1, "", "register_buffer"], [306, 2, 1, "", "register_forward_hook"], [306, 2, 1, "", "register_forward_pre_hook"], [306, 2, 1, "", "register_full_backward_hook"], [306, 2, 1, "", "register_full_backward_pre_hook"], [306, 2, 1, "", "register_load_state_dict_post_hook"], [306, 2, 1, "", "register_load_state_dict_pre_hook"], [306, 2, 1, "", "register_module"], [306, 2, 1, "", "register_parameter"], [306, 2, 1, "", "register_state_dict_post_hook"], [306, 2, 1, "", "register_state_dict_pre_hook"], [306, 2, 1, "", "requires_grad_"], [306, 2, 1, "", "set_extra_state"], [306, 2, 1, "", "set_submodule"], [306, 2, 1, "", "share_memory"], [306, 2, 1, "", "state_dict"], [306, 2, 1, "", "to"], [306, 2, 1, "", "to_empty"], [306, 2, 1, "", "train"], [306, 2, 1, "", "type"], [306, 2, 1, "", "xpu"], [306, 2, 1, "", "zero_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.add_module.params": [[306, 4, 1, "", "module"], [306, 4, 1, "", "name"]], "baybe.targets.botorch.AffinePosteriorTransform.apply.params": [[306, 4, 1, "", "fn"]], "baybe.targets.botorch.AffinePosteriorTransform.buffers.params": [[306, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.cuda.params": [[306, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.evaluate.params": [[306, 4, 1, "", "Y"]], "baybe.targets.botorch.AffinePosteriorTransform.forward.params": [[306, 4, 1, "", "posterior"]], "baybe.targets.botorch.AffinePosteriorTransform.get_buffer.params": [[306, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_parameter.params": [[306, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_submodule.params": [[306, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.ipu.params": [[306, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.load_state_dict.params": [[306, 4, 1, "", "assign"], [306, 4, 1, "", "state_dict"], [306, 4, 1, "", "strict"]], "baybe.targets.botorch.AffinePosteriorTransform.mtia.params": [[306, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.named_buffers.params": [[306, 4, 1, "", "prefix"], [306, 4, 1, "", "recurse"], [306, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_modules.params": [[306, 4, 1, "", "memo"], [306, 4, 1, "", "prefix"], [306, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_parameters.params": [[306, 4, 1, "", "prefix"], [306, 4, 1, "", "recurse"], [306, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.parameters.params": [[306, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.register_buffer.params": [[306, 4, 1, "", "name"], [306, 4, 1, "", "persistent"], [306, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook.params": [[306, 4, 1, "", "always_call"], [306, 4, 1, "", "hook"], [306, 4, 1, "", "prepend"], [306, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook.params": [[306, 4, 1, "", "hook"], [306, 4, 1, "", "prepend"], [306, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook.params": [[306, 4, 1, "", "hook"], [306, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook.params": [[306, 4, 1, "", "hook"], [306, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook.params": [[306, 4, 1, "", "hook"]], "baybe.targets.botorch.AffinePosteriorTransform.register_parameter.params": [[306, 4, 1, "", "name"], [306, 4, 1, "", "param"]], "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_.params": [[306, 4, 1, "", "requires_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state.params": [[306, 4, 1, "", "state"]], "baybe.targets.botorch.AffinePosteriorTransform.set_submodule.params": [[306, 4, 1, "", "module"], [306, 4, 1, "", "strict"], [306, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.state_dict.params": [[306, 4, 1, "", "destination"], [306, 4, 1, "", "keep_vars"], [306, 4, 1, "", "prefix"]], "baybe.targets.botorch.AffinePosteriorTransform.to.params": [[306, 4, 1, "", "device"], [306, 4, 1, "", "dtype"], [306, 4, 1, "", "memory_format"], [306, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.to_empty.params": [[306, 4, 1, "", "device"], [306, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.train.params": [[306, 4, 1, "", "mode"]], "baybe.targets.botorch.AffinePosteriorTransform.type.params": [[306, 4, 1, "", "dst_type"]], "baybe.targets.botorch.AffinePosteriorTransform.xpu.params": [[306, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.zero_grad.params": [[306, 4, 1, "", "set_to_none"]], "baybe.targets.numerical": [[309, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[309, 2, 1, "", "__init__"], [309, 2, 1, "", "abs"], [309, 2, 1, "", "clamp"], [309, 2, 1, "", "exp"], [309, 2, 1, "", "from_dict"], [309, 2, 1, "", "from_json"], [309, 2, 1, "", "from_legacy_interface"], [309, 2, 1, "", "from_modern_interface"], [309, 2, 1, "", "get_image"], [309, 6, 1, "", "is_normalized"], [309, 2, 1, "", "log"], [309, 2, 1, "", "match_absolute"], [309, 2, 1, "", "match_bell"], [309, 2, 1, "", "match_power"], [309, 2, 1, "", "match_quadratic"], [309, 2, 1, "", "match_triangular"], [309, 3, 1, "", "minimize"], [309, 3, 1, "", "name"], [309, 2, 1, "", "negate"], [309, 2, 1, "", "normalize"], [309, 2, 1, "", "normalize_ramp"], [309, 2, 1, "", "normalize_sigmoid"], [309, 2, 1, "", "power"], [309, 2, 1, "", "summary"], [309, 2, 1, "", "to_dict"], [309, 2, 1, "", "to_json"], [309, 2, 1, "", "to_objective"], [309, 6, 1, "", "total_transformation"], [309, 2, 1, "", "transform"]], "baybe.targets.numerical.NumericalTarget.clamp.params": [[309, 4, 1, "", "max"], [309, 4, 1, "", "min"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[309, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[309, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.from_legacy_interface.params": [[309, 4, 1, "", "bounds"], [309, 4, 1, "", "mode"], [309, 4, 1, "", "name"], [309, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_modern_interface.params": [[309, 4, 1, "", "minimize"], [309, 4, 1, "", "name"], [309, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.match_absolute.params": [[309, 4, 1, "", "match_value"], [309, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_bell.params": [[309, 4, 1, "", "match_value"], [309, 4, 1, "", "name"], [309, 4, 1, "", "sigma"]], "baybe.targets.numerical.NumericalTarget.match_power.params": [[309, 4, 1, "", "exponent"], [309, 4, 1, "", "match_value"], [309, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_quadratic.params": [[309, 4, 1, "", "match_value"], [309, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_triangular.params": [[309, 4, 1, "", "cutoffs"], [309, 4, 1, "", "margins"], [309, 4, 1, "", "match_value"], [309, 4, 1, "", "name"], [309, 4, 1, "", "width"]], "baybe.targets.numerical.NumericalTarget.normalize_ramp.params": [[309, 4, 1, "", "cutoffs"], [309, 4, 1, "", "descending"], [309, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.normalize_sigmoid.params": [[309, 4, 1, "", "anchors"], [309, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.power.params": [[309, 4, 1, "", "exponent"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[309, 4, 1, "", "series"]], "baybe.telemetry": [[312, 5, 1, "", "get_user_details"], [313, 5, 1, "", "is_enabled"], [314, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [315, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[314, 4, 1, "", "cached_recommendation"], [314, 4, 1, "", "measurements"], [314, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[315, 4, 1, "", "instrument_name"], [315, 4, 1, "", "value"]], "baybe.transformations": [[317, 0, 0, "-", "base"], [320, 0, 0, "-", "basic"], [333, 0, 0, "-", "composite"], [337, 0, 0, "-", "utils"]], "baybe.transformations.base": [[318, 1, 1, "", "MonotonicTransformation"], [319, 1, 1, "", "Transformation"]], "baybe.transformations.base.MonotonicTransformation": [[318, 2, 1, "", "__init__"], [318, 2, 1, "", "abs"], [318, 2, 1, "", "chain"], [318, 2, 1, "", "clamp"], [318, 2, 1, "", "from_dict"], [318, 2, 1, "", "from_json"], [318, 2, 1, "", "get_image"], [318, 2, 1, "", "negate"], [318, 2, 1, "", "to_botorch_objective"], [318, 2, 1, "", "to_dict"], [318, 2, 1, "", "to_json"]], "baybe.transformations.base.MonotonicTransformation.from_dict.params": [[318, 4, 1, "", "dictionary"]], "baybe.transformations.base.MonotonicTransformation.from_json.params": [[318, 4, 1, "", "string"]], "baybe.transformations.base.Transformation": [[319, 2, 1, "", "__init__"], [319, 2, 1, "", "abs"], [319, 2, 1, "", "chain"], [319, 2, 1, "", "clamp"], [319, 2, 1, "", "from_dict"], [319, 2, 1, "", "from_json"], [319, 2, 1, "", "get_image"], [319, 2, 1, "", "negate"], [319, 2, 1, "", "to_botorch_objective"], [319, 2, 1, "", "to_dict"], [319, 2, 1, "", "to_json"]], "baybe.transformations.base.Transformation.from_dict.params": [[319, 4, 1, "", "dictionary"]], "baybe.transformations.base.Transformation.from_json.params": [[319, 4, 1, "", "string"]], "baybe.transformations.basic": [[321, 1, 1, "", "AbsoluteTransformation"], [322, 1, 1, "", "AffineTransformation"], [323, 1, 1, "", "BellTransformation"], [324, 1, 1, "", "ClampingTransformation"], [325, 1, 1, "", "CustomTransformation"], [326, 1, 1, "", "ExponentialTransformation"], [327, 1, 1, "", "IdentityTransformation"], [328, 1, 1, "", "LogarithmicTransformation"], [329, 1, 1, "", "PowerTransformation"], [330, 1, 1, "", "SigmoidTransformation"], [331, 1, 1, "", "TriangularTransformation"], [332, 1, 1, "", "TwoSidedAffineTransformation"]], "baybe.transformations.basic.AbsoluteTransformation": [[321, 2, 1, "", "__init__"], [321, 2, 1, "", "abs"], [321, 2, 1, "", "chain"], [321, 2, 1, "", "clamp"], [321, 2, 1, "", "from_dict"], [321, 2, 1, "", "from_json"], [321, 2, 1, "", "get_image"], [321, 2, 1, "", "negate"], [321, 2, 1, "", "to_botorch_objective"], [321, 2, 1, "", "to_dict"], [321, 2, 1, "", "to_json"]], "baybe.transformations.basic.AbsoluteTransformation.from_dict.params": [[321, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AbsoluteTransformation.from_json.params": [[321, 4, 1, "", "string"]], "baybe.transformations.basic.AffineTransformation": [[322, 2, 1, "", "__init__"], [322, 2, 1, "", "abs"], [322, 2, 1, "", "chain"], [322, 2, 1, "", "clamp"], [322, 3, 1, "", "factor"], [322, 2, 1, "", "from_dict"], [322, 2, 1, "", "from_json"], [322, 2, 1, "", "from_points_mapped_to_unit_interval_bounds"], [322, 2, 1, "", "get_image"], [322, 2, 1, "", "negate"], [322, 3, 1, "", "shift"], [322, 2, 1, "", "to_botorch_objective"], [322, 2, 1, "", "to_botorch_posterior_transform"], [322, 2, 1, "", "to_dict"], [322, 2, 1, "", "to_json"]], "baybe.transformations.basic.AffineTransformation.from_dict.params": [[322, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AffineTransformation.from_json.params": [[322, 4, 1, "", "string"]], "baybe.transformations.basic.AffineTransformation.from_points_mapped_to_unit_interval_bounds.params": [[322, 4, 1, "", "mapped_to_one"], [322, 4, 1, "", "mapped_to_zero"]], "baybe.transformations.basic.BellTransformation": [[323, 2, 1, "", "__init__"], [323, 2, 1, "", "abs"], [323, 3, 1, "", "center"], [323, 2, 1, "", "chain"], [323, 2, 1, "", "clamp"], [323, 2, 1, "", "from_dict"], [323, 2, 1, "", "from_json"], [323, 2, 1, "", "get_image"], [323, 2, 1, "", "negate"], [323, 3, 1, "", "sigma"], [323, 2, 1, "", "to_botorch_objective"], [323, 2, 1, "", "to_dict"], [323, 2, 1, "", "to_json"]], "baybe.transformations.basic.BellTransformation.from_dict.params": [[323, 4, 1, "", "dictionary"]], "baybe.transformations.basic.BellTransformation.from_json.params": [[323, 4, 1, "", "string"]], "baybe.transformations.basic.ClampingTransformation": [[324, 2, 1, "", "__init__"], [324, 2, 1, "", "abs"], [324, 3, 1, "", "bounds"], [324, 2, 1, "", "chain"], [324, 2, 1, "", "clamp"], [324, 2, 1, "", "from_dict"], [324, 2, 1, "", "from_json"], [324, 2, 1, "", "get_image"], [324, 2, 1, "", "negate"], [324, 2, 1, "", "to_botorch_objective"], [324, 2, 1, "", "to_dict"], [324, 2, 1, "", "to_json"]], "baybe.transformations.basic.ClampingTransformation.from_dict.params": [[324, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ClampingTransformation.from_json.params": [[324, 4, 1, "", "string"]], "baybe.transformations.basic.CustomTransformation": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "abs"], [325, 2, 1, "", "chain"], [325, 2, 1, "", "clamp"], [325, 2, 1, "", "from_dict"], [325, 2, 1, "", "from_json"], [325, 3, 1, "", "function"], [325, 2, 1, "", "get_image"], [325, 2, 1, "", "negate"], [325, 2, 1, "", "to_botorch_objective"], [325, 2, 1, "", "to_dict"], [325, 2, 1, "", "to_json"]], "baybe.transformations.basic.CustomTransformation.from_dict.params": [[325, 4, 1, "", "dictionary"]], "baybe.transformations.basic.CustomTransformation.from_json.params": [[325, 4, 1, "", "string"]], "baybe.transformations.basic.ExponentialTransformation": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "abs"], [326, 2, 1, "", "chain"], [326, 2, 1, "", "clamp"], [326, 2, 1, "", "from_dict"], [326, 2, 1, "", "from_json"], [326, 2, 1, "", "get_image"], [326, 2, 1, "", "negate"], [326, 2, 1, "", "to_botorch_objective"], [326, 2, 1, "", "to_dict"], [326, 2, 1, "", "to_json"]], "baybe.transformations.basic.ExponentialTransformation.from_dict.params": [[326, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ExponentialTransformation.from_json.params": [[326, 4, 1, "", "string"]], "baybe.transformations.basic.IdentityTransformation": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "abs"], [327, 2, 1, "", "chain"], [327, 2, 1, "", "clamp"], [327, 2, 1, "", "from_dict"], [327, 2, 1, "", "from_json"], [327, 2, 1, "", "get_image"], [327, 2, 1, "", "negate"], [327, 2, 1, "", "to_botorch_objective"], [327, 2, 1, "", "to_dict"], [327, 2, 1, "", "to_json"]], "baybe.transformations.basic.IdentityTransformation.from_dict.params": [[327, 4, 1, "", "dictionary"]], "baybe.transformations.basic.IdentityTransformation.from_json.params": [[327, 4, 1, "", "string"]], "baybe.transformations.basic.LogarithmicTransformation": [[328, 2, 1, "", "__init__"], [328, 2, 1, "", "abs"], [328, 2, 1, "", "chain"], [328, 2, 1, "", "clamp"], [328, 2, 1, "", "from_dict"], [328, 2, 1, "", "from_json"], [328, 2, 1, "", "get_image"], [328, 2, 1, "", "negate"], [328, 2, 1, "", "to_botorch_objective"], [328, 2, 1, "", "to_dict"], [328, 2, 1, "", "to_json"]], "baybe.transformations.basic.LogarithmicTransformation.from_dict.params": [[328, 4, 1, "", "dictionary"]], "baybe.transformations.basic.LogarithmicTransformation.from_json.params": [[328, 4, 1, "", "string"]], "baybe.transformations.basic.PowerTransformation": [[329, 2, 1, "", "__init__"], [329, 2, 1, "", "abs"], [329, 2, 1, "", "chain"], [329, 2, 1, "", "clamp"], [329, 3, 1, "", "exponent"], [329, 2, 1, "", "from_dict"], [329, 2, 1, "", "from_json"], [329, 2, 1, "", "get_image"], [329, 2, 1, "", "negate"], [329, 2, 1, "", "to_botorch_objective"], [329, 2, 1, "", "to_dict"], [329, 2, 1, "", "to_json"]], "baybe.transformations.basic.PowerTransformation.from_dict.params": [[329, 4, 1, "", "dictionary"]], "baybe.transformations.basic.PowerTransformation.from_json.params": [[329, 4, 1, "", "string"]], "baybe.transformations.basic.SigmoidTransformation": [[330, 2, 1, "", "__init__"], [330, 2, 1, "", "abs"], [330, 3, 1, "", "center"], [330, 2, 1, "", "chain"], [330, 2, 1, "", "clamp"], [330, 2, 1, "", "from_anchors"], [330, 2, 1, "", "from_dict"], [330, 2, 1, "", "from_json"], [330, 2, 1, "", "get_image"], [330, 2, 1, "", "negate"], [330, 3, 1, "", "steepness"], [330, 2, 1, "", "to_botorch_objective"], [330, 2, 1, "", "to_dict"], [330, 2, 1, "", "to_json"]], "baybe.transformations.basic.SigmoidTransformation.from_anchors.params": [[330, 4, 1, "", "anchors"]], "baybe.transformations.basic.SigmoidTransformation.from_dict.params": [[330, 4, 1, "", "dictionary"]], "baybe.transformations.basic.SigmoidTransformation.from_json.params": [[330, 4, 1, "", "string"]], "baybe.transformations.basic.TriangularTransformation": [[331, 2, 1, "", "__init__"], [331, 2, 1, "", "abs"], [331, 2, 1, "", "chain"], [331, 2, 1, "", "clamp"], [331, 3, 1, "", "cutoffs"], [331, 2, 1, "", "from_dict"], [331, 2, 1, "", "from_json"], [331, 2, 1, "", "from_margins"], [331, 2, 1, "", "from_width"], [331, 2, 1, "", "get_image"], [331, 6, 1, "", "margins"], [331, 2, 1, "", "negate"], [331, 3, 1, "", "peak"], [331, 2, 1, "", "to_botorch_objective"], [331, 2, 1, "", "to_dict"], [331, 2, 1, "", "to_json"]], "baybe.transformations.basic.TriangularTransformation.from_dict.params": [[331, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TriangularTransformation.from_json.params": [[331, 4, 1, "", "string"]], "baybe.transformations.basic.TwoSidedAffineTransformation": [[332, 2, 1, "", "__init__"], [332, 2, 1, "", "abs"], [332, 2, 1, "", "chain"], [332, 2, 1, "", "clamp"], [332, 2, 1, "", "from_dict"], [332, 2, 1, "", "from_json"], [332, 2, 1, "", "get_image"], [332, 3, 1, "", "midpoint"], [332, 2, 1, "", "negate"], [332, 3, 1, "", "slope_left"], [332, 3, 1, "", "slope_right"], [332, 2, 1, "", "to_botorch_objective"], [332, 2, 1, "", "to_dict"], [332, 2, 1, "", "to_json"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict.params": [[332, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_json.params": [[332, 4, 1, "", "string"]], "baybe.transformations.composite": [[334, 1, 1, "", "AdditiveTransformation"], [335, 1, 1, "", "ChainedTransformation"], [336, 1, 1, "", "MultiplicativeTransformation"]], "baybe.transformations.composite.AdditiveTransformation": [[334, 2, 1, "", "__init__"], [334, 2, 1, "", "abs"], [334, 2, 1, "", "chain"], [334, 2, 1, "", "clamp"], [334, 2, 1, "", "from_dict"], [334, 2, 1, "", "from_json"], [334, 2, 1, "", "get_image"], [334, 2, 1, "", "negate"], [334, 2, 1, "", "to_botorch_objective"], [334, 2, 1, "", "to_dict"], [334, 2, 1, "", "to_json"], [334, 3, 1, "", "transformations"]], "baybe.transformations.composite.AdditiveTransformation.from_dict.params": [[334, 4, 1, "", "dictionary"]], "baybe.transformations.composite.AdditiveTransformation.from_json.params": [[334, 4, 1, "", "string"]], "baybe.transformations.composite.ChainedTransformation": [[335, 2, 1, "", "__init__"], [335, 2, 1, "", "abs"], [335, 2, 1, "", "chain"], [335, 2, 1, "", "clamp"], [335, 2, 1, "", "from_dict"], [335, 2, 1, "", "from_json"], [335, 2, 1, "", "get_image"], [335, 2, 1, "", "negate"], [335, 2, 1, "", "to_botorch_objective"], [335, 2, 1, "", "to_dict"], [335, 2, 1, "", "to_json"], [335, 3, 1, "", "transformations"]], "baybe.transformations.composite.ChainedTransformation.from_dict.params": [[335, 4, 1, "", "dictionary"]], "baybe.transformations.composite.ChainedTransformation.from_json.params": [[335, 4, 1, "", "string"]], "baybe.transformations.composite.MultiplicativeTransformation": [[336, 2, 1, "", "__init__"], [336, 2, 1, "", "abs"], [336, 2, 1, "", "chain"], [336, 2, 1, "", "clamp"], [336, 2, 1, "", "from_dict"], [336, 2, 1, "", "from_json"], [336, 2, 1, "", "get_image"], [336, 2, 1, "", "negate"], [336, 2, 1, "", "to_botorch_objective"], [336, 2, 1, "", "to_dict"], [336, 2, 1, "", "to_json"], [336, 3, 1, "", "transformations"]], "baybe.transformations.composite.MultiplicativeTransformation.from_dict.params": [[336, 4, 1, "", "dictionary"]], "baybe.transformations.composite.MultiplicativeTransformation.from_json.params": [[336, 4, 1, "", "string"]], "baybe.transformations.utils": [[338, 5, 1, "", "combine_affine_transformations"], [339, 5, 1, "", "compress_transformations"], [340, 5, 1, "", "convert_transformation"]], "baybe.transformations.utils.compress_transformations.params": [[339, 4, 1, "", "transformations"]], "baybe.utils": [[342, 0, 0, "-", "augmentation"], [345, 0, 0, "-", "basic"], [363, 0, 0, "-", "boolean"], [367, 0, 0, "-", "chemistry"], [372, 0, 0, "-", "clustering_algorithms"], [376, 0, 0, "-", "conversion"], [380, 0, 0, "-", "dataframe"], [397, 0, 0, "-", "interval"], [402, 0, 0, "-", "memory"], [404, 0, 0, "-", "numerical"], [410, 0, 0, "-", "random"], [413, 0, 0, "-", "sampling_algorithms"], [417, 0, 0, "-", "scaling"], [419, 0, 0, "-", "torch"], [422, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[343, 5, 1, "", "df_apply_dependency_augmentation"], [344, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[343, 4, 1, "", "affected"], [343, 4, 1, "", "causing"], [343, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[344, 4, 1, "", "column_groups"], [344, 4, 1, "", "df"]], "baybe.utils.basic": [[346, 1, 1, "", "Dummy"], [347, 8, 1, "", "UNSPECIFIED"], [348, 1, 1, "", "UnspecifiedType"], [349, 1, 1, "", "classproperty"], [350, 5, 1, "", "compose"], [351, 5, 1, "", "compose_two"], [352, 5, 1, "", "convert_to_float"], [353, 5, 1, "", "find_subclass"], [354, 5, 1, "", "get_baseclasses"], [355, 5, 1, "", "get_subclasses"], [356, 5, 1, "", "group_duplicate_values"], [357, 5, 1, "", "hilberts_factory"], [358, 5, 1, "", "is_all_instance"], [359, 5, 1, "", "match_attributes"], [360, 5, 1, "", "refers_to"], [361, 5, 1, "", "register_hooks"], [362, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[346, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[349, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[354, 4, 1, "", "abstract"], [354, 4, 1, "", "cls"], [354, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[355, 4, 1, "", "abstract"], [355, 4, 1, "", "cls"], [355, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[356, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[359, 4, 1, "", "callable_"], [359, 4, 1, "", "ignore"], [359, 4, 1, "", "object"], [359, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[361, 4, 1, "", "post_hooks"], [361, 4, 1, "", "pre_hooks"], [361, 4, 1, "", "target"]], "baybe.utils.boolean": [[364, 5, 1, "", "check_if_in"], [365, 5, 1, "", "is_abstract"], [366, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[364, 4, 1, "", "allowed"], [364, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[365, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[366, 4, 1, "", "val"]], "baybe.utils.chemistry": [[368, 5, 1, "", "get_canonical_smiles"], [369, 5, 1, "", "get_fingerprint_class"], [370, 5, 1, "", "name_to_smiles"], [371, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[369, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[370, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[371, 4, 1, "", "encoding"], [371, 4, 1, "", "kwargs_conformer"], [371, 4, 1, "", "kwargs_fingerprint"], [371, 4, 1, "", "prefix"], [371, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[373, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[374, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[375, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[375, 2, 1, "", "__init__"], [375, 2, 1, "", "fit"], [375, 2, 1, "", "fit_predict"], [375, 2, 1, "", "fit_transform"], [375, 2, 1, "", "get_metadata_routing"], [375, 2, 1, "", "get_params"], [375, 2, 1, "", "predict"], [375, 2, 1, "", "set_output"], [375, 2, 1, "", "set_params"], [375, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[375, 4, 1, "", "-------"], [375, 4, 1, "", "Returns"], [375, 4, 1, "", "X"], [375, 4, 1, "", "self"], [375, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[375, 4, 1, "", "**kwargs"], [375, 4, 1, "", "X"], [375, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[375, 4, 1, "", "**fit_params"], [375, 4, 1, "", "X"], [375, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[375, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[375, 4, 1, "", "                [4"], [375, 4, 1, "", "-----"], [375, 4, 1, "", "--------"], [375, 4, 1, "", "----------"], [375, 4, 1, "", "0"], [375, 4, 1, "", "0]"], [375, 4, 1, "", "0]])"], [375, 4, 1, "", "1"], [375, 4, 1, "", "1])"], [375, 4, 1, "", "2]"], [375, 4, 1, "", "4]"], [375, 4, 1, "", "4]])"], [375, 4, 1, "", "A simple and fast algorithm for K-medoids"], [375, 4, 1, "", "Also"], [375, 4, 1, "", "Attributes"], [375, 4, 1, "", "Examples"], [375, 4, 1, "", "Jun"], [375, 4, 1, "", "KMeans"], [375, 4, 1, "", "Maranzana"], [375, 4, 1, "", "Notes"], [375, 4, 1, "", "On the location of supply points to minimize"], [375, 4, 1, "", "Park"], [375, 4, 1, "", "References"], [375, 4, 1, "", "X "], [375, 4, 1, "", "[1"], [375, 4, 1, "", "[4"], [375, 4, 1, "", "all pairwise distances are calculated and stored in memory for"], [375, 4, 1, "", "array([0"], [375, 4, 1, "", "cluster_centers_"], [375, 4, 1, "", "duration of fit"], [375, 4, 1, "", "import numpy as np"], [375, 4, 1, "", "inertia_"], [375, 4, 1, "", "init"], [375, 4, 1, "", "kmedoids "], [375, 4, 1, "", "labels_"], [375, 4, 1, "", "max_iter"], [375, 4, 1, "", "medoid_indices_"], [375, 4, 1, "", "method"], [375, 4, 1, "", "metric"], [375, 4, 1, "", "n_clusters"], [375, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.2": [[375, 4, 1, "", "]"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.8": [[375, 4, 1, "", "0"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.C.H": [[375, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.F.E": [[375, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.KMedoids with various distance metrics": [[375, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.array([[1": [[375, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.from baybe.utils": [[375, 4, 1, "", "clustering_algorithms import KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.kmedoids": [[375, 4, 1, "", "cluster_centers_"], [375, 4, 1, "", "inertia_"], [375, 4, 1, "", "labels_"], [375, 4, 1, "", "predict([[0"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.scikit-learn-extra/examples/plot_kmedoids_digits": [[375, 4, 1, "", "py for examples"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.space complexity is O(n_samples ** 2)": [[375, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[375, 4, 1, "", "-------"], [375, 4, 1, "", "Returns"], [375, 4, 1, "", "X"], [375, 4, 1, "", "labels"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[375, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[375, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[375, 4, 1, "", "-------"], [375, 4, 1, "", "Returns"], [375, 4, 1, "", "X"], [375, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[377, 5, 1, "", "fraction_to_float"], [378, 5, 1, "", "nonstring_to_tuple"], [379, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[377, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[379, 4, 1, "", "*fields"], [379, 4, 1, "", "header"], [379, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[381, 5, 1, "", "add_fake_measurements"], [382, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [383, 5, 1, "", "add_parameter_noise"], [384, 5, 1, "", "arrays_to_dataframes"], [385, 5, 1, "", "create_fake_input"], [386, 5, 1, "", "df_drop_single_value_columns"], [387, 5, 1, "", "df_drop_string_columns"], [388, 5, 1, "", "df_uncorrelated_features"], [389, 5, 1, "", "filter_df"], [390, 5, 1, "", "fuzzy_row_match"], [391, 5, 1, "", "get_transform_objects"], [392, 5, 1, "", "handle_missing_values"], [393, 5, 1, "", "normalize_input_dtypes"], [394, 5, 1, "", "pretty_print_df"], [395, 5, 1, "", "to_tensor"], [396, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[381, 4, 1, "", "data"], [381, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[382, 4, 1, "", "df"], [382, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[383, 4, 1, "", "data"], [383, 4, 1, "", "noise_level"], [383, 4, 1, "", "noise_type"], [383, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[384, 4, 1, "", "input_labels"], [384, 4, 1, "", "output_labels"], [384, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[385, 4, 1, "", "**kwargs"], [385, 4, 1, "", "n_rows"], [385, 4, 1, "", "parameters"], [385, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[386, 4, 1, "", "df"], [386, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[387, 4, 1, "", "df"], [387, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[388, 4, 1, "", "df"], [388, 4, 1, "", "exclude_list"], [388, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[389, 4, 1, "", "complement"], [389, 4, 1, "", "df"], [389, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[390, 4, 1, "", "left_df"], [390, 4, 1, "", "parameters"], [390, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[391, 4, 1, "", "allow_extra"], [391, 4, 1, "", "allow_missing"], [391, 4, 1, "", "df"], [391, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[392, 4, 1, "", "columns"], [392, 4, 1, "", "data"], [392, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[393, 4, 1, "", "df"], [393, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[394, 4, 1, "", "df"], [394, 4, 1, "", "max_columns"], [394, 4, 1, "", "max_colwidth"], [394, 4, 1, "", "max_rows"], [394, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[395, 4, 1, "", "*x"]], "baybe.utils.interval": [[398, 8, 1, "", "ConvertibleToInterval"], [399, 7, 1, "", "InfiniteIntervalError"], [400, 1, 1, "", "Interval"], [401, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[399, 2, 1, "", "__init__"], [399, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[400, 2, 1, "", "__init__"], [400, 6, 1, "", "center"], [400, 2, 1, "", "contains"], [400, 2, 1, "", "create"], [400, 2, 1, "", "from_dict"], [400, 2, 1, "", "from_json"], [400, 6, 1, "", "is_bounded"], [400, 6, 1, "", "is_degenerate"], [400, 6, 1, "", "is_fully_unbounded"], [400, 6, 1, "", "is_half_bounded"], [400, 6, 1, "", "is_left_bounded"], [400, 6, 1, "", "is_right_bounded"], [400, 3, 1, "", "lower"], [400, 2, 1, "", "to_dict"], [400, 2, 1, "", "to_json"], [400, 2, 1, "", "to_ndarray"], [400, 2, 1, "", "to_tensor"], [400, 2, 1, "", "to_tuple"], [400, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[400, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[400, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[400, 4, 1, "", "string"]], "baybe.utils.memory": [[403, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[403, 4, 1, "", "num"]], "baybe.utils.numerical": [[405, 3, 1, "", "DTypeFloatNumpy"], [406, 3, 1, "", "DTypeFloatONNX"], [407, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [408, 5, 1, "", "closer_element"], [409, 5, 1, "", "closest_element"]], "baybe.utils.numerical.closer_element.params": [[408, 4, 1, "", "target"], [408, 4, 1, "", "x"], [408, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[409, 4, 1, "", "array"], [409, 4, 1, "", "target"]], "baybe.utils.random": [[411, 5, 1, "", "set_random_seed"], [412, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[411, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[412, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[414, 1, 1, "", "DiscreteSamplingMethod"], [415, 5, 1, "", "farthest_point_sampling"], [416, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[414, 3, 1, "", "FPS"], [414, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[415, 4, 1, "", "initialization"], [415, 4, 1, "", "n_samples"], [415, 4, 1, "", "points"], [415, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[416, 4, 1, "", "df"], [416, 4, 1, "", "method"], [416, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[418, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[418, 2, 1, "", "__init__"], [418, 2, 1, "", "fit"], [418, 3, 1, "", "mapping"], [418, 2, 1, "", "transform"]], "baybe.utils.torch": [[420, 8, 1, "", "DTypeFloatTorch"], [421, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[423, 5, 1, "", "finite_float"], [424, 5, 1, "", "non_inf_float"], [425, 5, 1, "", "non_nan_float"], [426, 5, 1, "", "validate_not_nan"], [427, 5, 1, "", "validate_parameter_input"], [428, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[427, 4, 1, "", "data"], [427, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [427, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[428, 4, 1, "", "data"], [428, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 200, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 357, 375, 395, 400, 429, 455, 457, 464, 468, 473, 474, 475, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495], "0": [8, 9, 12, 15, 18, 24, 34, 37, 47, 48, 54, 112, 128, 148, 156, 159, 179, 187, 188, 189, 200, 225, 248, 250, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 322, 323, 330, 331, 332, 343, 344, 366, 375, 382, 383, 388, 389, 406, 473, 478, 479, 480, 481, 482, 486, 487, 489, 490, 491, 493, 495, 497], "00": 489, "001": [47, 382, 482], "01": 179, "021": [282, 388], "03213": [282, 388], "06": [225, 294], "1": [9, 12, 15, 18, 28, 34, 47, 112, 128, 148, 159, 190, 200, 217, 248, 250, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 315, 322, 323, 330, 331, 343, 344, 356, 366, 375, 383, 385, 389, 406, 415, 473, 474, 478, 480, 481, 482, 487, 489, 490, 491, 493, 495, 496, 497], "10": [9, 12, 15, 18, 200, 250, 282, 388, 473, 480, 481, 483, 486, 487, 491, 493, 495, 497], "100": [128, 306, 485, 486, 487, 491, 493, 495, 497], "1000": 491, "1024": [153, 475, 487], "1038": [282, 388], "105": 489, "11": [349, 474, 480], "1150": [128, 306], "12": [480, 481, 489], "120": 487, "126": 474, "128": 11, "129": 375, "13": [476, 489], "1337": 497, "135": 375, "14": [489, 493], "1454": 475, "15": [250, 473, 481, 489], "150": 482, "1500": 487, "16": [128, 306, 394, 406], "18": 481, "1913": [128, 306], "1914": [128, 306], "1963": 375, "1e": [225, 294], "1l": [128, 306], "2": [8, 9, 12, 15, 18, 24, 112, 114, 128, 250, 306, 330, 343, 344, 356, 375, 389, 415, 473, 478, 480, 481, 482, 485, 487, 489, 490, 491, 493, 495, 496], "20": [9, 12, 15, 18, 159, 250, 475, 487, 494, 495, 497], "200": [128, 306], "2004": 478, "2007": 494, "2009": 375, "2022": 473, "2025": 473, "20l": [128, 306], "22": [9, 12, 15, 18, 481], "221": 475, "23": [481, 491], "2324": [128, 306], "2325": [128, 306], "2382": [128, 306], "24": 489, "241": 487, "25": 489, "250": 479, "26": 489, "27": 489, "29": 473, "3": [128, 250, 306, 322, 343, 344, 349, 356, 389, 394, 473, 474, 476, 478, 480, 481, 482, 485, 487, 489, 490, 491, 493, 494, 495], "30": 487, "300": 375, "3078f3": 475, "32": [481, 487], "33": [128, 306], "3336": 375, "3341": 375, "34": 481, "3420": [128, 306], "36": 375, "37": 493, "3741": [128, 306], "38": 481, "39": 487, "4": [9, 12, 15, 18, 153, 343, 344, 375, 394, 473, 478, 480, 481, 482, 487, 489, 495], "40": 487, "40x": 475, "42": [481, 493], "4443": [128, 306], "468": 475, "47": 493, "4d": [128, 306], "4x": 475, "5": [112, 159, 330, 343, 344, 473, 478, 479, 480, 481, 482, 487, 489, 490, 491, 493, 494, 495, 497], "50": [478, 479, 486, 487, 489], "500": 487, "5112": [128, 306], "5113": [128, 306], "5313": 362, "54": [473, 481], "5593": [128, 306], "56": [481, 491], "59": [473, 481], "5l": [128, 306], "6": [330, 343, 344, 394, 478, 482, 489], "6122": [128, 306], "62": 481, "64": 200, "66368270ffd51418ec58bd793f2d9b1b": 494, "7": [159, 322, 343, 344, 388, 478, 480, 481, 487, 489], "71": 487, "72": 481, "745": 497, "75": 489, "79": 473, "7gz": 487, "7hf": 487, "8": [344, 375, 473, 478, 480, 482], "80": 482, "83": 481, "8389": 362, "8417": 362, "87": 481, "8jq": 487, "9": [9, 12, 15, 18, 478, 480, 481, 486, 489], "90": 489, "91": 481, "999": 482, "A": [0, 9, 12, 15, 18, 28, 31, 34, 41, 43, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 76, 78, 82, 84, 85, 86, 87, 90, 93, 95, 100, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 142, 145, 146, 148, 156, 159, 161, 162, 163, 172, 173, 174, 175, 176, 177, 178, 179, 182, 188, 189, 190, 192, 195, 198, 200, 202, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 226, 227, 242, 243, 248, 250, 252, 254, 257, 259, 261, 264, 266, 270, 272, 273, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 321, 323, 324, 325, 328, 329, 330, 331, 332, 334, 335, 336, 343, 349, 354, 355, 356, 359, 369, 375, 388, 389, 391, 392, 403, 413, 415, 418, 472, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495], "AND": [57, 478, 482], "AS": [473, 478], "And": [128, 306], "As": [473, 474, 475, 480, 481, 482, 485, 488, 489, 491], "By": [100, 130, 162, 225, 331, 365, 389, 476, 480, 481, 483, 484, 486, 488, 489], "FOR": 478, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 169, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 248, 254, 257, 259, 261, 262, 264, 266, 270, 273, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 311, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 361, 390, 396, 400, 415, 418, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 497], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 100, 104, 125, 128, 130, 134, 136, 138, 161, 162, 167, 168, 188, 189, 192, 198, 200, 217, 219, 225, 231, 232, 248, 250, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 314, 330, 344, 354, 355, 359, 361, 364, 366, 369, 375, 377, 379, 382, 383, 385, 388, 389, 390, 391, 392, 415, 416, 427, 428, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 497], "In": [34, 48, 60, 128, 161, 200, 219, 246, 248, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 359, 394, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497], "It": [28, 128, 182, 189, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 246, 265, 286, 306, 375, 480, 481, 482, 483, 487, 488, 489, 491, 495, 497], "Its": [128, 250, 306], "No": [390, 472, 475], "Not": [375, 478, 482], "OF": [473, 478], "OR": [473, 478], "Of": [445, 471, 490], "On": 375, "One": [150, 473, 493], "Or": 483, "Such": [482, 485, 491], "That": [47, 219, 250, 257, 259, 261, 266, 270, 284, 286, 288, 290, 476, 489, 491, 494], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 71, 100, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 237, 238, 240, 242, 246, 248, 250, 252, 257, 259, 261, 262, 264, 266, 270, 273, 284, 286, 288, 290, 292, 294, 298, 301, 303, 306, 309, 312, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 343, 344, 349, 354, 355, 356, 359, 361, 364, 365, 366, 369, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 403, 408, 409, 411, 412, 415, 416, 427, 428, 472, 474, 475, 476, 478, 480, 481, 482, 483, 485, 486, 487, 488, 489, 492, 493, 495, 496, 497], "Then": 495, "There": [89, 294, 406, 473, 474, 476, 480, 484, 489, 492], "These": [312, 429, 434, 437, 440, 445, 449, 452, 455, 457, 460, 464, 468, 473, 476, 480, 482, 483, 487, 489], "To": [128, 306, 473, 474, 476, 480, 481, 482, 483, 484, 486, 487, 491, 492], "Will": 479, "With": [473, 480, 482, 487, 490], "_": [138, 167, 168, 222, 228, 235, 375], "__": [138, 375], "__call__": [128, 306], "__excepthook__": 474, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 257, 259, 261, 262, 264, 266, 270, 272, 273, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 349, 375, 399, 400, 418, 489, 490], "__new__": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 150, 151, 153, 399], "__str__": 475, "__version__": 475, "_ardregressionparam": 284, "_arraylik": 384, "_buffer": [9, 12, 15, 18, 163, 409], "_c": 355, "_cumbest": 248, "_default_my_attribut": 476, "_discretelabellikeparamet": [145, 148, 159], "_expectedhypervolumeimprov": [9, 12, 15, 18], "_fit": 298, "_has_switch": 190, "_iterbest": 248, "_measur": 248, "_n_last_measur": [187, 188, 189], "_nbase": 371, "_nestedsequ": [9, 12, 15, 18, 163, 409], "_ngbregressorparam": 288, "_option": 475, "_posterior": 298, "_posterior_comp": 475, "_randomforestregressorparam": 290, "_sphinx_paramlinks_bayb": 375, "_step": [187, 188, 189], "_supportsarrai": [9, 12, 15, 18, 163, 409], "_surrogategett": 264, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 230, 238, 239, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 356, 357, 358, 378, 391, 393, 400], "_target": 475, "_tparamet": 162, "_tsurrog": [293, 294], "_u": 356, "_validate_my_attribut": 476, "_was_us": [187, 188, 189], "a1": 344, "a2": 344, "ab": [309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 493, 495], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 353, 360, 475, 496], "abc": [26, 37, 38, 39, 40, 41, 43, 107, 108, 109, 125, 142, 143, 171, 185, 195, 198, 205, 210, 259, 261, 301, 318, 319, 365], "abil": [479, 480, 484, 494], "abl": [474, 480, 482, 487, 490, 497], "about": [8, 28, 34, 143, 159, 301, 315, 473, 475, 476, 481, 485, 487, 489, 492], "abov": [128, 294, 306, 365, 388, 473, 476, 478, 479, 480, 481, 482, 483, 484, 487, 490, 491, 492, 493, 494, 495], "absenc": 486, "absolut": [47, 156, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 383, 473, 493, 495], "absolutetransform": 495, "abstract": [26, 37, 38, 39, 40, 41, 43, 107, 108, 109, 125, 141, 142, 143, 171, 185, 195, 198, 205, 261, 301, 318, 319, 354, 355, 365, 475, 482, 494], "acceler": [473, 475, 477, 494], "accept": [34, 128, 188, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 384, 475, 478, 483, 486, 487, 491, 493, 495], "access": [128, 217, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 475, 480, 482, 487, 490], "accord": [47, 183, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 479, 482, 483, 488, 497], "accordingli": [200, 481, 484, 486, 490], "account": 480, "accumul": [173, 494], "accur": [375, 481], "achiev": [23, 128, 225, 306, 473, 476, 479, 481, 482, 484, 486, 492, 493, 495], "ack": 473, "acq_valu": 481, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32], "acqf1": 490, "acqf2": 490, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 73, 85, 198, 200, 473, 475, 479, 486, 488, 490, 492, 496], "acquisition_funct": [34, 198, 200, 475], "acquisition_function_cl": 475, "acquisition_valu": [34, 198, 200, 475, 481], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 32, 34, 198, 200, 475, 490], "across": [480, 488, 494], "act": [475, 478, 482, 491], "action": [23, 472, 475, 496], "activ": [17, 37, 161, 190, 200, 473, 474, 475, 476, 482, 483, 484, 485, 488, 493, 494, 496, 497], "activate_paramet": 475, "active_dim": [107, 108, 109, 112, 114, 116, 117, 118], "active_valu": [142, 145, 146, 148, 156, 159, 475, 484, 487, 494], "actual": [188, 219, 246, 475, 485, 489, 491, 494, 497], "ad": [34, 128, 225, 306, 314, 334, 343, 375, 381, 415, 472, 476, 479, 483, 484, 492, 493, 496], "adapt": [189, 282, 366, 388], "add": [34, 128, 240, 250, 306, 381, 382, 473, 478, 480, 481, 482, 485, 489, 494, 495, 497], "add_fake_measur": [385, 475, 480, 491, 497], "add_fake_result": 475, "add_measur": [34, 385, 473, 475, 480, 481, 483, 484], "add_modul": [128, 306], "add_noise_to_perturb_degenerate_row": 475, "add_parameter_nois": [385, 475, 497], "addendum": 478, "addit": [34, 100, 125, 128, 130, 134, 136, 188, 200, 219, 240, 248, 250, 252, 306, 375, 383, 385, 473, 475, 477, 478, 481, 482, 483, 485, 486, 487, 489, 490, 491, 493, 494, 496, 497], "addition": [473, 485], "additiveexplain": [98, 101], "additivekernel": 475, "additivetransform": 495, "address": 491, "adher": [475, 476], "adjust": [161, 189, 475, 484, 486], "adrian": [473, 477], "advanc": [189, 474, 475, 483, 486, 490, 494, 496], "advantag": 476, "advic": 476, "advis": [478, 491], "affect": [34, 56, 66, 68, 128, 200, 217, 306, 323, 343, 472, 474, 482, 495], "affected_paramet": [56, 482], "affili": [473, 483], "affin": [306, 309, 322, 332, 338, 339, 495], "affineposteriortransform": 322, "affinet": 322, "affinetransform": [493, 496], "afford": 481, "aforement": [219, 483], "after": [128, 190, 306, 361, 473, 481, 485, 486, 487, 490], "afterward": 490, "again": [480, 481, 482, 494], "against": [94, 128, 306, 314, 359, 478, 484, 494], "aggreg": 486, "agraw": 477, "agre": [473, 478, 485], "agreement": 478, "ai": [105, 169, 406], "aim": [480, 481, 485], "akin": 480, "al": [473, 487], "aldrich": 477, "alex": 477, "alexand": [473, 477], "algorithm": [193, 200, 375, 413, 415, 473, 475, 480, 485, 488, 493], "alia": [128, 158, 202, 260, 306, 398, 487], "alias": 475, "align": [161, 217, 361, 486, 489, 493, 494], "all": [25, 26, 36, 38, 43, 47, 56, 58, 64, 66, 100, 106, 107, 108, 109, 124, 125, 128, 130, 140, 143, 148, 152, 159, 170, 171, 181, 184, 185, 188, 194, 195, 197, 200, 204, 205, 217, 219, 226, 227, 250, 257, 258, 261, 300, 301, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 343, 358, 359, 375, 393, 473, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "alleg": 478, "allow": [23, 34, 37, 47, 54, 58, 125, 128, 130, 134, 136, 156, 162, 189, 219, 225, 252, 284, 290, 296, 306, 315, 364, 390, 391, 427, 428, 473, 475, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 495, 497], "allow_": [475, 484], "allow_extra": [125, 130, 134, 136, 217, 219, 225, 230, 391, 396, 475], "allow_miss": [125, 130, 134, 136, 217, 219, 225, 230, 391, 396, 475], "allow_recommending_already_measur": [34, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 472, 475, 481], "allow_recommending_already_recommend": [34, 472, 475, 481], "allow_recommending_pending_experi": [34, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 475, 481], "allow_repeated_recommend": [192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 475], "alon": [475, 478], "along": [128, 306, 478, 487, 494], "alongsid": [128, 306, 478], "alpha": [9, 12, 31, 173], "alphabet": [164, 475], "alreadi": [34, 128, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 473, 475, 479, 480, 481, 484, 489, 491, 492, 493, 494, 497], "also": [34, 47, 60, 100, 128, 162, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 315, 359, 361, 375, 382, 383, 473, 475, 476, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "alter": [475, 481, 484], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 294, 375, 473, 475, 483, 484, 486, 492, 495, 496, 497], "although": [489, 491], "alwai": [17, 34, 43, 128, 235, 236, 306, 323, 415, 473, 479, 481, 482, 491, 492, 494, 497], "always_cal": [128, 306], "ambigu": [156, 347, 348, 489], "amend": 482, "among": [37, 473, 486, 494], "amount": [344, 416, 480, 485, 487, 497], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 73, 74, 75, 77, 79, 80, 81, 85, 91, 94, 95, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 238, 240, 242, 246, 248, 250, 252, 257, 259, 261, 264, 266, 267, 270, 273, 284, 286, 288, 290, 292, 293, 296, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 343, 347, 348, 350, 357, 359, 361, 364, 370, 375, 378, 379, 388, 389, 390, 392, 394, 398, 399, 400, 409, 415, 416, 434, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "analog": [219, 482, 489, 490, 495], "analogi": [183, 488], "analysi": [473, 485, 492], "analyt": [3, 4, 7, 8, 85, 480, 491, 494], "analyz": [473, 476, 485], "anchor": [309, 330, 486], "ani": [9, 12, 15, 18, 67, 68, 91, 100, 128, 141, 142, 143, 145, 146, 148, 159, 162, 163, 166, 167, 168, 235, 236, 240, 244, 245, 252, 306, 315, 339, 343, 358, 359, 361, 362, 364, 365, 379, 385, 390, 392, 401, 409, 423, 424, 425, 426, 428, 472, 473, 474, 475, 476, 478, 480, 481, 483, 484, 487, 490, 491, 493, 494, 495], "annot": [361, 478], "anonym": [473, 483], "anoth": [56, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 375, 476, 482, 494, 495], "ansatz": 475, "answer": 481, "anti": 389, "anymor": [475, 494], "anyth": 366, "anywai": 492, "apach": [473, 478], "apart": [476, 481], "api": [375, 473, 474, 490], "aplei": 485, "appar": 490, "appdata": 474, "appear": [359, 474, 475, 478, 490], "append": 493, "appendix": 478, "appli": [34, 43, 44, 45, 60, 128, 200, 219, 246, 248, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 350, 351, 359, 370, 383, 385, 418, 437, 440, 474, 475, 478, 482, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495], "applic": [375, 379, 473, 476, 478, 487, 488, 491], "approach": [225, 375, 473, 476, 479, 481, 484, 486, 488, 490, 492, 493, 494], "appropri": [50, 51, 225, 476, 478, 484, 486, 489, 493], "approxim": [11, 23, 31, 482, 485], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 72, 83, 87, 88, 89, 100, 125, 128, 130, 134, 136, 142, 145, 146, 148, 156, 159, 161, 162, 163, 168, 182, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 248, 250, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 312, 314, 315, 324, 330, 331, 343, 344, 354, 355, 356, 358, 359, 361, 365, 366, 375, 382, 384, 385, 386, 390, 391, 393, 415, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "arang": 487, "arbitrari": [189, 219, 325, 350, 401, 475, 482, 487, 488, 491, 494, 497], "arbitrarili": [486, 490], "architectur": [257, 259, 261, 266, 270, 284, 286, 288, 290, 298, 475, 492, 494], "ard_num_dim": [107, 108, 109, 112, 114, 116, 117, 118], "ardregress": 284, "arg": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 111, 113, 115, 120, 121, 122, 128, 171, 173, 174, 175, 176, 177, 178, 179, 182, 202, 262, 267, 272, 306, 309, 399, 476], "argument": [31, 34, 74, 95, 100, 105, 128, 159, 162, 169, 185, 187, 188, 189, 190, 198, 200, 217, 225, 252, 262, 264, 306, 361, 375, 385, 389, 475, 482, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495], "aris": [59, 475, 478, 482, 490, 497], "arithmet": [132, 486], "arizona": 477, "arm": [256, 257, 471, 477], "around": [9, 12, 15, 18, 47, 209, 252, 254, 475, 488, 490, 497], "arrai": [9, 12, 15, 18, 163, 346, 375, 384, 395, 405, 409, 415, 475, 488, 492], "arrays_to_datafram": [475, 491], "arriv": [473, 484], "artifici": 497, "aryl": [473, 487], "asarrai": 375, "ascend": 309, "ask": [473, 475, 476, 481, 484], "aspect": [434, 480, 483], "assembl": [490, 492], "assembli": [492, 496], "assert": [68, 138, 330, 390, 475, 478, 481, 482, 490, 492, 493, 495], "assess": [475, 485, 491], "assign": [128, 306, 486, 487, 493], "associ": [128, 219, 306, 478, 481, 483, 486, 494], "assum": [28, 48, 128, 265, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 361, 390, 391, 473, 478, 480, 482, 484, 487, 490, 492, 493, 497], "assumpt": 491, "assur": 482, "asymmetr": 47, "asynchron": [128, 306, 473, 481, 496], "atompair": 153, "atompairfingerprint": 153, "attach": [28, 361, 478], "attempt": [84, 91, 128, 265, 306, 474, 475, 480, 482, 485, 486, 488], "attent": 190, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 257, 259, 261, 264, 266, 270, 273, 280, 282, 284, 286, 288, 290, 296, 301, 303, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 359, 362, 400, 418, 426, 475], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 94, 97, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 159, 162, 166, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 219, 220, 224, 225, 234, 238, 240, 257, 258, 259, 261, 264, 266, 270, 273, 277, 280, 282, 284, 286, 288, 290, 295, 298, 301, 302, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 345, 348, 359, 375, 378, 391, 397, 400, 404, 414, 418, 419, 422, 423, 424, 425, 426, 475, 476, 478, 482, 488, 490, 492, 493], "attributeerror": [128, 306], "audit": [475, 476], "augment": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 219, 292, 293, 294, 381, 475, 481], "author": 478, "authorship": 478, "auto": [14, 15, 16, 18, 19, 475, 477], "auto_tutori": 406, "autocomplet": 493, "autocorr": 153, "autocorrfingerprint": 153, "autodoc": 475, "autograd": [128, 306], "automat": [34, 200, 270, 474, 475, 476, 485, 486, 488, 489, 492, 494, 496], "autowrap": 340, "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 78, 86, 132, 148, 150, 151, 153, 159, 188, 189, 248, 250, 277, 315, 414, 415, 416, 473, 474, 475, 476, 478, 480, 481, 483, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496], "avalon": 153, "avalonfingerprint": 153, "averag": [128, 286, 306, 487, 491], "avoid": [128, 219, 306, 362, 475, 476, 480, 481, 487, 489, 493], "awai": [9, 12, 15, 18, 161], "awar": [475, 479, 484, 490], "ax": [100, 495], "axi": [217, 248, 489], "azur": 475, "b": [47, 59, 179, 282, 343, 356, 388, 389, 472, 473, 476, 478, 481, 484, 487, 490, 495], "b1": 344, "b2": 344, "b950": [128, 306], "back": [0, 472, 475, 476, 484], "backend": 315, "background": [100, 104, 475, 480, 485], "background_data": 100, "backport": 474, "backtest": [246, 247, 253, 468, 471, 473, 475, 488, 491], "backtick": 476, "backward": [128, 201, 202, 219, 306, 475, 493], "backward_pr": [128, 306], "bad": [481, 483, 493], "badg": 475, "bai": 473, "baird": 477, "balanc": [130, 473], "banana": 476, "bandit": [257, 471, 473, 475, 477], "banner": 475, "bar": [100, 102, 473, 475, 485, 492], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 189, 190, 192, 195, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 224, 225, 238, 240, 242, 257, 259, 261, 262, 264, 265, 266, 270, 272, 273, 277, 280, 282, 284, 286, 288, 290, 294, 296, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 348, 349, 353, 354, 355, 375, 384, 389, 400, 414, 415, 418, 452, 471, 473, 475, 478, 479, 481, 482, 483, 485, 487, 488, 489, 490, 492], "base_kernel": [120, 121, 122], "base_predictor": 292, "baseestim": 375, "basefingerprinttransform": 369, "baselin": [473, 487], "basesequentialmetarecommend": [188, 189], "bashrc": 483, "basi": [116, 473, 478, 480, 485], "basic": [107, 111, 112, 113, 114, 115, 116, 117, 118, 173, 174, 175, 176, 177, 178, 179, 248, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 346, 348, 349, 445, 464, 468, 471, 475, 476, 484, 486, 487, 491, 493, 496], "basickernel": [111, 112, 113, 114, 115, 116, 117, 118, 475], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 182, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 251, 292, 293, 475, 480, 484, 488, 491], "batch_quant": 475, "batch_shap": [107, 108, 109, 112, 114, 116, 117, 118, 128, 306], "batch_siz": [34, 47, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 248, 252, 254, 473, 475, 480, 481, 483, 484, 491], "batchnorm": [128, 306], "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 219, 220, 224, 225, 242, 257, 259, 261, 262, 264, 266, 270, 272, 273, 277, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 348, 349, 375, 400, 414, 418, 429, 434, 455, 457, 464, 468, 472, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "baybe_cach": 483, "baybe_cache_dir": [475, 483], "baybe_deactivate_polar": [475, 483], "baybe_debug_fake_hosthash": 475, "baybe_debug_fake_userhash": 475, "baybe_numpy_use_single_precis": [407, 475, 483], "baybe_parallel_simulation_run": [252, 483], "baybe_telemetry_en": [473, 483], "baybe_telemetry_endpoint": [475, 483], "baybe_telemetry_host": 475, "baybe_telemetry_hostnam": [475, 483], "baybe_telemetry_usernam": [475, 483], "baybe_telemetry_vpn_check": [475, 483], "baybe_telemetry_vpn_check_timeout": [475, 483], "baybe_torch_use_single_precis": [421, 475, 483], "bayesian": [0, 192, 198, 200, 246, 248, 252, 254, 265, 284, 475, 479, 481, 485, 492, 496], "bayesianlinearsurrog": [475, 492], "bayesianrecommend": [192, 200, 265, 475, 488], "bcut2d": [153, 475], "bcut2dfingerprint": 153, "bcw07": 494, "becaus": [47, 89, 128, 156, 161, 219, 225, 254, 306, 365, 476, 479, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495], "becom": [219, 475, 479, 481, 482, 490, 493, 497], "been": [28, 34, 84, 85, 188, 257, 259, 261, 266, 270, 284, 286, 288, 290, 390, 473, 474, 475, 478, 480, 481, 486, 488, 493, 494], "beeswarm": [100, 102, 485], "befor": [84, 128, 190, 248, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 361, 473, 475, 476, 483, 484, 486, 487, 489, 493], "begin": [188, 331, 486, 488, 492, 495], "behalf": 478, "behav": 490, "behavior": [128, 161, 200, 306, 473, 475, 483, 486, 488, 489, 494], "behind": [486, 490, 491, 492, 493], "being": [9, 12, 15, 18, 122, 128, 306, 474, 475, 482, 483, 487, 489, 493, 495], "bell": [309, 323, 493, 495], "bell_transform": 475, "belltransform": [309, 496], "belong": [375, 490], "below": [128, 190, 294, 306, 476, 478, 479, 481, 482, 490, 492, 494], "benchmark": [473, 475, 477], "benefici": [478, 479, 483], "benefit": [482, 494], "benzo": 494, "bernoulli": [257, 455, 471, 477], "besid": [473, 486], "best": [9, 12, 14, 15, 16, 18, 19, 248, 250, 252, 473, 483, 488], "bet": 481, "beta": [8, 24, 173, 257, 475, 479], "betabernoullimultiarmedbanditsurrog": 475, "betaprior": [257, 475], "better": [11, 475, 481, 482, 484, 486, 487], "between": [9, 12, 15, 18, 37, 56, 128, 156, 189, 217, 225, 280, 306, 324, 331, 389, 473, 475, 476, 480, 481, 482, 483, 486, 487, 488, 489, 490, 493, 494], "beyond": [161, 473, 485], "bfloat16": [128, 306], "bia": [128, 306], "bias": 487, "big": 375, "binar": 475, "binari": [303, 428, 473, 474, 475, 490], "binarytarget": [304, 475], "bind": 478, "bit": [475, 487], "black": [246, 491, 494], "blackbox": [429, 471], "blank": 476, "blob": 282, "block": [473, 474, 475, 483, 490, 495], "boacquisitionfunct": [198, 200], "bonilla": 494, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 100, 103, 104, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 230, 252, 257, 259, 261, 266, 270, 284, 286, 288, 290, 303, 304, 306, 309, 313, 322, 354, 355, 359, 360, 365, 366, 375, 379, 384, 389, 391, 392, 396, 400, 409, 415, 427], "boolean": [9, 12, 15, 18, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 104, 130, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 185, 187, 188, 189, 190, 309, 391, 475, 481, 483, 486], "boost": 288, "both": [9, 11, 12, 15, 18, 128, 161, 162, 219, 225, 254, 306, 309, 331, 361, 473, 475, 476, 479, 481, 482, 485, 487, 489, 490, 492, 495, 497], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 125, 128, 130, 134, 136, 192, 200, 202, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 483, 488], "botorch_acqf": 28, "botorch_function_wrapp": 475, "botorchrecommend": [192, 202, 473, 475, 480, 481, 482, 484, 488], "bottom": 481, "bound": [8, 24, 37, 47, 128, 155, 161, 162, 179, 217, 219, 225, 230, 293, 294, 306, 309, 324, 355, 361, 391, 393, 400, 475, 487, 490, 493, 495, 496, 497], "boundari": [47, 225], "boundary_onli": 225, "bounded": 475, "bounds_transform_func": 475, "box": [179, 246, 491, 494], "boxdecomposit": 31, "brain": [491, 494], "branch": [473, 476], "break": [128, 265, 306, 490], "breviti": 493, "briefli": [491, 494], "bring": [473, 475, 495], "bro": 282, "broad": 490, "broadcast": 163, "brute": [200, 488], "budget": 481, "buf": [128, 306], "buffer": [128, 306], "bug": [475, 476], "build": [128, 217, 225, 265, 306, 375, 474, 475, 476, 482, 485, 490, 492, 494, 495, 496, 497], "built": [225, 473, 476, 481, 488, 492, 495], "builtin": 349, "bump": 475, "button": 475, "bypass": [162, 486, 492], "byte": [9, 12, 15, 18, 163, 224, 266, 403, 409, 475, 497], "c": [59, 343, 356, 375, 473, 474, 478, 481, 484, 487, 489, 490, 495], "c1": 487, "c1ccoc1": 482, "c_": 495, "c_1": 331, "c_2": 331, "c_i": 482, "cach": [34, 314, 475, 490, 496], "cached_recommend": 314, "calcul": [34, 314, 375, 481, 483, 485, 487, 489], "calibr": [322, 494], "call": [48, 95, 128, 185, 187, 188, 189, 190, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 306, 314, 315, 361, 384, 473, 474, 475, 479, 481, 482, 483, 487, 490, 491, 492, 493, 494, 495, 496], "callabl": [55, 74, 94, 128, 162, 238, 246, 248, 250, 252, 254, 292, 293, 296, 298, 306, 325, 340, 349, 350, 351, 357, 359, 361, 375, 384, 475, 495, 496], "callable_": 359, "caller": [128, 306], "campaign": [100, 248, 251, 252, 254, 383, 385, 434, 445, 471, 472, 473, 475, 479, 480, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 497], "campaign1": 491, "campaign2": 491, "campaign_json": 481, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 43, 44, 45, 59, 100, 128, 142, 148, 156, 159, 163, 182, 189, 192, 193, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 246, 250, 257, 259, 261, 262, 264, 265, 266, 270, 284, 286, 288, 290, 294, 304, 306, 309, 313, 315, 359, 361, 365, 375, 383, 384, 398, 406, 437, 440, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "canada": 477, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 198, 200, 210, 213, 217, 225, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 415, 475, 479, 488, 489, 496], "cannot": [17, 93, 94, 161, 265, 266, 294, 366, 475, 478, 480, 482, 483, 487, 488, 490, 492, 494], "canon": [368, 490], "capabl": [429, 455, 457, 464, 468, 475, 477, 481, 486, 492, 494], "captur": 487, "cardin": [37, 47, 54, 64, 66, 67, 68, 83, 200, 217, 473, 475, 477, 482], "cardinalityconstraint": [47, 54, 475], "care": [52, 476, 482, 485, 492], "carefulli": 483, "carlo": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 85, 128, 252, 475, 480, 491], "carri": [361, 478, 486], "cartesian": [219, 225, 226, 227, 473, 475, 484, 489], "case": [161, 189, 254, 294, 309, 331, 361, 375, 394, 452, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497], "cast": [48, 128, 306, 475], "cat": 389, "catch_constant_target": 475, "categor": [34, 145, 146, 150, 225, 232, 390, 473, 475, 487, 489, 493], "categori": [473, 475, 490, 493], "categorical_1": 481, "categorical_2": 481, "categorical_paramet": 490, "categorical_parameter_json": 490, "categorical_parameter_reconstruct": 490, "categoricalencod": [145, 146], "categoricalparamet": [146, 225, 473, 475, 484, 485, 489, 490, 496], "cattr": [237, 238, 240, 297, 474, 475, 476], "cauchi": 175, "caus": [156, 343, 349, 475, 478], "caution": 494, "cc": [487, 490, 494], "cc1": 487, "ccc": 473, "cccccccco": [482, 487], "cdot": [482, 486], "cdoubl": [128, 306], "cell": [487, 491, 494], "cell_lin": 494, "center": [323, 330, 331, 375, 400, 481, 495], "central": [475, 481], "certain": [34, 56, 94, 128, 190, 238, 240, 246, 306, 309, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 358, 473, 475, 476, 482, 484, 485, 488, 490, 493, 494, 497], "chai": 494, "chain": [41, 128, 185, 187, 188, 189, 190, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 349, 482, 493, 496], "chainedtransform": 495, "challeng": [476, 490], "chanc": 474, "chang": [56, 128, 188, 306, 382, 383, 473, 474, 476, 478, 481, 483, 485, 487, 489, 494], "channels_last": [128, 306], "charact": 478, "characterist": 349, "charg": 478, "chebyshev": 14, "check": [34, 64, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 306, 314, 358, 360, 363, 364, 365, 366, 375, 390, 392, 393, 400, 408, 473, 475, 476, 483, 485, 489, 490, 493], "check_maximum": 64, "check_minimum": 64, "checker": 475, "checkout": 476, "chem": [473, 475, 487], "chemic": [370, 475, 477, 482, 485, 487, 494], "cheminformat": [159, 473, 475], "chemistri": 148, "child": [128, 207, 208, 209, 210, 306, 476], "children": [128, 306], "chocol": 476, "choic": [248, 250, 415, 475, 482, 484, 486, 487, 488, 489, 490, 493], "choos": [183, 472, 473, 478, 479, 481, 488, 492], "chose": 490, "chosen": [81, 192, 248, 250, 254, 411, 412, 415, 475, 479, 482, 487, 489], "christoph": 494, "ci": [475, 476], "circ": 495, "circular": 487, "circumv": [474, 490], "cl": [52, 235, 239, 294, 354, 355, 360, 365, 401], "claim": 478, "clamp": [309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 486, 493, 495], "clampingtransform": 496, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 93, 97, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 225, 238, 240, 241, 242, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 298, 300, 301, 302, 303, 305, 306, 308, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 345, 346, 348, 349, 353, 354, 355, 360, 365, 369, 374, 375, 379, 397, 400, 413, 414, 417, 418, 475, 481, 482, 485, 486, 487, 488, 489, 490, 492, 493, 495], "classic": 486, "classifi": 487, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 349, 400, 475], "classvalidationerror": 474, "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 257, 259, 261, 266, 270, 284, 286, 288, 290], "clean": [386, 387, 388, 474, 475, 476], "cleanli": 493, "clear": [128, 306, 406, 494], "click": 487, "clone": 476, "close": [248, 254, 491], "closer": [9, 12, 15, 18, 408, 487], "closest": [375, 409], "closest_el": 475, "closur": [246, 491], "cluster": [207, 208, 209, 210, 372, 373, 374, 375, 475, 477, 496], "cluster_centers_": 375, "clustering_algorithm": 375, "clustering_x": 475, "clustermixin": 375, "coars": 473, "coc": 473, "code": [265, 473, 474, 475, 478, 482, 483, 487, 491, 493, 494, 497], "coeffici": [48, 50, 51, 482], "coerc": 475, "collect": [34, 66, 67, 68, 110, 120, 121, 138, 162, 164, 172, 188, 190, 217, 225, 231, 232, 243, 250, 264, 341, 343, 345, 358, 359, 372, 373, 391, 392, 413, 415, 473, 475, 481, 483], "column": [43, 44, 45, 100, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 248, 250, 252, 254, 343, 344, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 418, 427, 428, 475, 481, 489, 490, 491], "column_group": 344, "com": [282, 362, 388, 473, 475], "combin": [47, 57, 162, 200, 217, 219, 225, 226, 227, 338, 339, 349, 370, 473, 474, 478, 482, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 497], "combinatori": [200, 497], "combo_runn": 252, "come": [9, 12, 15, 18, 473, 481, 482, 485, 490, 493, 494, 495, 497], "command": 474, "comment": 475, "commerci": 478, "commit": [473, 475, 476], "common": [172, 475, 476, 478, 480, 481, 482, 487, 490, 493, 495], "commonli": 486, "commun": [478, 486, 494], "comp_df": [142, 145, 146, 148, 156, 159, 475], "comp_rep": [225, 475, 489], "comp_rep_bound": [217, 219, 225, 475], "comp_rep_byt": [224, 497], "comp_rep_column": [141, 142, 143, 145, 146, 148, 155, 156, 159, 217, 219, 225, 475], "comp_rep_human_read": [224, 497], "comp_rep_shap": [224, 497], "compar": [162, 188, 473, 475, 476, 482, 484, 487], "comparison": [128, 306, 488, 490, 495], "compat": [128, 138, 162, 192, 195, 198, 200, 201, 202, 205, 207, 208, 209, 210, 213, 214, 219, 220, 250, 257, 259, 261, 266, 270, 284, 286, 288, 290, 296, 306, 361, 391, 426, 475, 488, 492, 493], "compens": 475, "compil": [128, 306, 474, 478], "complain": 476, "complaint": 476, "complement": [34, 389, 484], "complementari": 47, "complet": [78, 480, 482, 484, 490, 493], "complex": [9, 12, 15, 18, 128, 163, 306, 375, 409, 476, 479, 480, 482, 484, 491, 494, 495], "complex128": [128, 306], "compli": 478, "complianc": 473, "complic": 494, "compon": [72, 375, 476, 479, 481, 482, 483, 484, 490, 492, 494], "compos": [119, 128, 264, 306, 335, 351, 475, 490, 495], "composit": [108, 120, 121, 122, 264, 334, 335, 336, 475, 496], "composite_a": 492, "composite_b": 492, "compositekernel": [120, 121, 122, 475], "compositesurrog": [257, 259, 261, 266, 270, 284, 286, 288, 290, 475, 480, 485, 486, 492], "compound": 370, "comprehens": [473, 492, 493], "compress": [339, 490], "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 90, 100, 104, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 198, 200, 217, 219, 224, 225, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 294, 301, 303, 306, 309, 321, 329, 371, 375, 475, 478, 479, 481, 483, 486, 487, 489, 490, 491, 493, 495, 496, 497], "computation": 200, "compute_ref_point": [9, 12, 15, 18], "concentr": [173, 174, 482], "concept": [343, 486, 487, 490, 495], "concern": [323, 493], "concis": [475, 493, 495], "concret": [475, 490], "conda": 475, "condit": [37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 389, 473, 475, 478, 494, 496], "conduct": [34, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 252, 257, 259, 261, 266, 270, 284, 286, 288, 290, 473, 476, 481, 494], "confid": [8, 24], "config": [464, 471, 475, 496], "config_json": 34, "configur": [9, 12, 15, 18, 34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 88, 89, 182, 189, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 246, 248, 254, 257, 259, 261, 262, 264, 266, 270, 276, 284, 286, 288, 290, 375, 415, 434, 460, 473, 474, 475, 478, 479, 480, 481, 482, 483, 487, 488, 489, 491, 494, 496, 497], "conflict": [473, 476, 486], "conform": [159, 371, 487], "confront": [473, 484], "confus": [128, 306], "conjunct": 492, "connect": [60, 475, 483, 487, 493], "consequ": [474, 482, 483, 488, 489, 491, 492], "consequenti": 478, "consid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 128, 130, 142, 145, 146, 148, 156, 159, 161, 163, 188, 200, 219, 252, 306, 390, 391, 473, 475, 476, 480, 482, 484, 485, 486, 487, 490, 497], "consider": [219, 480], "consist": [128, 183, 224, 306, 375, 476, 478, 485], "consol": 474, "consolid": [475, 488], "consortium": 477, "conspicu": 478, "constant": [286, 294, 322, 475, 476, 487, 489, 493, 495], "constitut": 478, "constrain": [475, 482, 494], "constraint": [34, 37, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 83, 143, 200, 217, 219, 225, 346, 471, 473, 475, 477, 483, 487, 496], "constraints_augment": 219, "constraints_cardin": 217, "constraints_lin_eq": 217, "constraints_lin_ineq": 217, "constraints_nonlin": 217, "constru": 478, "construct": [34, 128, 217, 219, 225, 266, 296, 306, 473, 475, 479, 482, 485, 490, 492, 496], "constructor": [207, 208, 209, 210, 219, 239, 284, 288, 290, 475, 479, 481, 484, 486, 487, 492, 493, 495, 496, 497], "consult": 473, "consum": 188, "consumpt": 483, "cont_recommend": 192, "contact": [473, 477], "contain": [9, 12, 15, 18, 34, 37, 43, 44, 45, 47, 68, 71, 76, 100, 125, 128, 130, 134, 136, 138, 142, 145, 146, 148, 156, 159, 161, 162, 163, 167, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 226, 227, 231, 246, 248, 250, 252, 257, 259, 261, 266, 270, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 343, 344, 361, 371, 375, 379, 383, 389, 390, 392, 400, 415, 427, 428, 474, 475, 476, 478, 481, 482, 484, 485, 488, 489, 490, 491, 497], "content": [162, 188, 219, 250, 382, 416, 475, 478, 490], "context": [78, 86, 128, 161, 185, 187, 188, 189, 190, 198, 200, 246, 262, 264, 306, 412, 475, 481, 484, 485, 487, 490, 491, 492, 493, 494, 495, 497], "contextu": 494, "continu": [11, 17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 76, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 192, 200, 217, 219, 220, 225, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 460, 471, 473, 475, 481, 483, 484, 488, 490, 491, 496], "continuous_subspac": 489, "continuouscardinalityconstraint": [66, 67, 217, 475, 496], "continuousconstraint": [40, 48, 217, 475, 482, 484], "continuouslinearconstraint": [217, 475, 496], "continuouslinearequalityconstraint": 475, "continuouslinearinequalityconstraint": 475, "continuousnonlinearconstraint": [47, 217, 475], "continuousparamet": [155, 217, 475], "contract": 478, "contrast": [225, 365, 480, 484, 486], "contribut": [473, 475, 478, 497], "contributor": [473, 478], "contributori": 478, "control": [9, 12, 15, 17, 18, 23, 31, 130, 162, 173, 200, 217, 225, 309, 391, 473, 475, 478, 479, 482, 483, 486, 487, 488, 493, 495, 496], "conv": [128, 306], "conv2d": [128, 306], "conv4": [128, 306], "conv5": [128, 306], "convei": 490, "conveni": [475, 489, 490, 492, 496], "convent": [219, 375], "converg": 485, "convers": [34, 189, 475, 478, 485, 492, 496], "convert": [30, 125, 126, 128, 130, 134, 136, 221, 234, 297, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 352, 362, 366, 370, 377, 378, 393, 394, 395, 398, 403, 406, 475, 481, 483, 490, 491], "convert_bound": 475, "convertibletofloat": [9, 12, 15, 18, 352], "cooki": 476, "coordin": [9, 12, 15, 18, 415], "copi": [128, 161, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 373, 393, 473, 475, 478, 497], "copyright": [473, 478], "core": [34, 217, 219, 220, 225, 252, 254, 257, 259, 261, 262, 264, 266, 270, 277, 284, 286, 288, 290, 309, 473, 475, 484, 493], "coregion": 494, "coretest": [475, 476], "corpu": 487, "correct": [34, 298, 473, 475, 476, 490], "correctli": [128, 306, 475], "correl": [148, 159, 388, 487, 494], "correspond": [28, 34, 47, 125, 128, 130, 134, 136, 161, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 238, 246, 248, 250, 257, 259, 260, 261, 266, 270, 284, 286, 288, 290, 296, 306, 314, 361, 364, 366, 369, 370, 384, 385, 391, 392, 393, 394, 396, 427, 428, 473, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "correspondingli": 34, "corrupt": 383, "cost": [375, 483, 493], "costli": [219, 222, 228, 481], "could": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 156, 306, 377, 475, 480, 482, 487, 491, 493, 494], "count": [315, 482], "counterclaim": 478, "counterpart": [361, 489], "cours": [476, 490, 494], "cousin": 482, "cov": [475, 476], "cover": [365, 482, 484], "coverag": [475, 476], "cpu": [128, 306], "craft": 491, "crash": [474, 475], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 226, 227, 242, 250, 257, 259, 261, 262, 264, 266, 270, 273, 278, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 379, 384, 385, 400, 415, 464, 471, 472, 473, 474, 475, 476, 480, 482, 483, 484, 485, 487, 490, 491, 492, 493, 495, 496, 497], "create_example_plot": 475, "creation": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 162, 222, 225, 228, 475, 489, 490, 493, 496], "criterion": [375, 479], "critic": 475, "cross": [330, 478], "crucial": [473, 493], "cube": 482, "cuda": [128, 306, 474], "cultur": [487, 494], "curran": 494, "current": [11, 34, 128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 252, 254, 265, 306, 313, 406, 479, 480, 481, 482, 483, 484, 487, 491, 493, 494, 497], "curv": [309, 323, 330, 482, 495], "custom": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 128, 141, 142, 143, 145, 146, 148, 151, 155, 156, 159, 162, 266, 298, 301, 303, 306, 309, 325, 361, 394, 429, 440, 471, 473, 475, 481, 482, 487, 488, 491, 493, 494, 496, 497], "custom_filt": 482, "customari": 478, "customdiscreteparamet": [475, 485, 496], "customencod": 148, "customonnxsurrog": 475, "customtransform": 495, "cut": 495, "cutoff": [309, 331, 486, 493, 495], "cycl": [188, 473, 475, 484], "cyclic": 188, "d": [9, 12, 15, 18, 28, 59, 128, 343, 356, 415, 473, 478, 489, 494], "damag": 478, "daniel": 477, "darmstadt": [473, 477, 483], "dashboard": 475, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 75, 80, 92, 100, 104, 130, 134, 136, 148, 156, 159, 182, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 248, 252, 254, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 303, 309, 315, 342, 346, 375, 381, 383, 390, 392, 405, 406, 416, 420, 427, 428, 429, 471, 472, 473, 475, 479, 480, 481, 482, 483, 485, 487, 488, 490, 491, 492, 496, 497], "databas": [34, 473, 490], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 92, 100, 104, 125, 130, 134, 136, 142, 145, 146, 148, 156, 159, 162, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 226, 227, 230, 244, 245, 248, 250, 252, 254, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 303, 309, 314, 343, 344, 370, 371, 375, 416, 427, 428, 475, 480, 481, 482, 484, 487, 496, 497], "datapoint": 475, "dataset": [188, 246, 375, 491], "datatyp": [128, 306, 475], "date": 478, "dditiv": 485, "de": [237, 464, 473, 474, 475, 476, 481, 482, 488, 496], "deactiv": [473, 475, 483], "deal": [480, 487, 491], "debug": 475, "decid": [156, 479], "declar": [56, 60, 68, 210, 476, 482], "decor": [122, 294, 349, 384, 475, 476, 491], "decorrel": [148, 159, 166, 487], "decreas": [188, 490, 494], "dedupl": 475, "deep": 375, "deepcopi": 475, "deeper": 485, "deepli": 492, "def": [128, 306, 476, 482, 491], "default": [9, 12, 15, 18, 45, 100, 128, 130, 148, 159, 162, 192, 198, 200, 207, 208, 209, 210, 217, 219, 225, 237, 257, 277, 280, 306, 309, 331, 375, 389, 473, 475, 476, 481, 482, 483, 485, 486, 487, 495, 496], "defaultscal": 475, "defend": 478, "defer": 475, "defin": [28, 34, 44, 47, 48, 55, 128, 151, 161, 182, 188, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 225, 246, 270, 272, 273, 298, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 383, 388, 389, 418, 475, 476, 478, 481, 482, 484, 487, 490, 491, 493, 496], "definit": [217, 225, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 365, 473, 475, 478, 486, 489, 493], "degener": [382, 400, 475], "degre": [128, 306, 490], "deliber": 478, "delici": 476, "delimit": 331, "deliveri": 487, "demand": 34, "demo": 475, "demonstr": [429, 434, 437, 440, 445, 449, 452, 455, 457, 460, 464, 468, 475, 489, 490, 493, 494, 495], "denot": [28, 331], "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 56, 60, 91, 128, 219, 225, 246, 343, 440, 471, 472, 474, 475, 476, 482, 483, 484, 485, 489, 491, 492, 494, 497], "dependenciesconstraint": 475, "deprec": [70, 128, 153, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 225, 230, 267, 306, 309, 310, 349], "depth": 489, "deriv": [207, 208, 209, 210, 225, 365, 478, 482, 489], "descend": [128, 306, 309, 486, 493], "describ": [207, 208, 209, 210, 257, 259, 261, 266, 270, 284, 286, 288, 290, 296, 476, 478, 480, 481, 482, 486, 487, 490, 491], "descript": 476, "descriptor": [159, 371, 475, 485, 487, 494], "deseri": [235, 239, 244, 474, 475, 481, 496], "deserialize_datafram": 490, "design": [0, 23, 28, 128, 248, 306, 375, 384, 478, 479, 482, 484, 485, 486, 488, 490], "desir": [128, 130, 132, 306, 385, 457, 471, 473, 475, 479, 483, 485, 486, 488, 490, 493, 495, 497], "desirabilityobject": [34, 473, 475, 480, 481, 490, 492, 493, 496], "desktop": 475, "despit": 475, "destin": [128, 306], "detach": [128, 306], "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 169, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 248, 252, 257, 259, 261, 262, 264, 266, 270, 273, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 311, 312, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 389, 396, 400, 418, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494], "detect": [346, 390, 474, 476], "determin": [9, 12, 15, 18, 34, 47, 100, 190, 225, 252, 365, 389, 403, 408, 415, 475, 478, 483, 488], "determinist": [128, 306, 415, 475], "detriment": 487, "dev": [473, 475, 476], "develop": [473, 475, 487, 491, 493], "deviat": [6, 20, 294, 323, 390, 475, 481, 495], "devic": [128, 306], "df": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 125, 130, 134, 136, 162, 217, 219, 225, 230, 245, 250, 343, 344, 370, 382, 386, 387, 388, 389, 391, 393, 394, 396, 416, 473, 482, 489, 490, 491], "dfa": [343, 344], "di": 477, "diagram": [128, 306], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 207, 208, 209, 210, 217, 219, 222, 225, 228, 238, 239, 240, 242, 252, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 306, 309, 312, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 356, 359, 371, 375, 400, 418, 475], "dict_solv": 482, "dictat": [125, 130, 134, 136, 200, 219], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 238, 240, 242, 252, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 294, 296, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 356, 359, 400, 487, 491], "diff": 476, "differ": [9, 12, 15, 18, 58, 128, 130, 200, 217, 219, 220, 225, 246, 254, 306, 314, 344, 383, 418, 473, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "differenti": [491, 494], "difficult": 494, "digit": 394, "dim": [28, 128, 306], "dimens": [28, 415, 475, 487, 489, 492, 494], "dimension": [9, 12, 15, 18, 141, 142, 143, 145, 146, 148, 155, 156, 159, 280, 384, 415, 475], "dimethylisoxazol": 494, "direct": [9, 12, 15, 18, 128, 306, 309, 473, 475, 478, 484, 487, 493, 497], "directli": [9, 12, 15, 18, 128, 365, 473, 475, 482, 483, 486, 490, 492, 495], "directori": 475, "disabl": [128, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 313, 475, 481, 483, 484, 486], "disadvantag": 490, "disappear": 475, "disc_recommend": 192, "discard": 8, "disclaim": 478, "discourag": 481, "discret": [17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 76, 141, 142, 143, 145, 146, 148, 155, 156, 159, 192, 200, 207, 208, 209, 210, 213, 217, 219, 220, 224, 225, 254, 414, 460, 471, 473, 475, 479, 484, 485, 488, 490, 491, 496, 497], "discrete_subspac": 489, "discretecardinalityconstraint": [475, 496], "discreteconstraint": [34, 54, 55, 56, 57, 58, 59, 60, 61, 62, 225, 475, 482, 484], "discretecustomconstraint": [475, 496], "discretedependenciesconstraint": [60, 68, 496], "discreteexcludeconstraint": [475, 484, 496], "discretelinkedparametersconstraint": [475, 496], "discretenolabelduplicatesconstraint": [60, 475, 496], "discreteparamet": [156, 225, 226, 227, 475], "discretepermutationinvarianceconstraint": 496, "discreteproductconstraint": [475, 496], "discretesamplingmethod": [17, 200, 416, 475, 479], "discretesumconstraint": [475, 496], "discuss": [478, 482, 489, 491], "disguis": 493, "disjoint": 225, "disk": [475, 496], "displai": [394, 478, 485], "distanc": [156, 212, 375, 415], "distinct": [481, 486, 488], "distinguish": [382, 475, 482, 487, 494], "distribut": [34, 169, 172, 257, 259, 261, 266, 270, 284, 286, 288, 290, 323, 473, 475, 478, 479, 480, 492, 495], "distutil": 366, "divers": 492, "divid": 493, "dll": 474, "dmf": 482, "do": [31, 66, 219, 225, 265, 472, 473, 474, 478, 480, 482, 483, 484, 485, 486, 487, 488, 490, 494, 495, 496, 497], "do_baybe_work": 483, "doc": [105, 169, 349, 473, 475], "doc101": 476, "doc103": 476, "docstr": [128, 306, 475], "doctest": 475, "document": [34, 128, 306, 406, 473, 475, 476, 477, 478, 481, 485, 491, 493], "doe": [33, 34, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 68, 100, 128, 161, 200, 246, 248, 250, 252, 257, 259, 261, 265, 266, 270, 284, 286, 288, 290, 298, 306, 330, 361, 370, 390, 406, 475, 476, 478, 480, 482, 486, 488, 491, 492, 493, 494, 495, 497], "doesn": [128, 306], "doi": [282, 388], "domain": [257, 259, 261, 266, 270, 284, 286, 288, 290, 473, 475, 489, 491, 493, 495], "don": [472, 484], "done": [34, 389, 390, 475, 479, 481, 482, 483, 484], "doubl": [128, 306, 406, 476, 483], "down": [490, 497], "downsid": 189, "draft": 475, "dramat": 494, "drastic": 487, "draw": [11, 117, 217], "drawback": 486, "drawn": [23, 200], "drive": 494, "driven": 479, "driver": 474, "drop": [31, 339, 386, 387, 388, 392, 475, 480, 482, 495], "dropout": [128, 306], "drug": 480, "dry_run": 34, "dst_type": [128, 306], "dtype": [9, 12, 15, 18, 128, 163, 306, 375, 393, 409, 475], "due": [161, 315, 473, 475, 479, 482, 483, 487, 488, 489, 490, 493], "dunder": 475, "duplic": [34, 60, 128, 168, 306, 346, 356, 475, 482], "durat": [375, 480, 493], "dure": [34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 219, 225, 246, 359, 415, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 489, 490, 491, 492], "dynam": [475, 490, 493, 496], "d\u00fcbendorf": 477, "e": [8, 23, 28, 34, 37, 47, 56, 58, 59, 76, 103, 128, 148, 162, 163, 190, 219, 225, 246, 306, 315, 346, 354, 355, 371, 375, 389, 390, 400, 423, 473, 474, 475, 476, 479, 480, 482, 483, 485, 487, 488, 489, 490, 491, 493, 494, 495, 497], "e3fp": 153, "e3fpfingerprint": 153, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 128, 130, 134, 136, 162, 182, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 219, 248, 250, 252, 254, 257, 259, 261, 265, 266, 270, 284, 286, 288, 290, 306, 330, 344, 371, 375, 382, 390, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 497], "eagerli": 475, "earli": 475, "earlier": [34, 472, 474], "easi": [370, 475, 476, 490], "easier": [476, 480, 497], "easiest": [473, 476], "easili": [473, 476, 481, 484, 487, 489, 490, 494, 495], "ecfp": [153, 475, 487], "ecfpfingerprint": 153, "ecosystem": 490, "edbo": [280, 282, 388, 475], "edbokernelfactori": [280, 475], "edg": 161, "edit": [473, 476], "editor": 494, "editori": 478, "edwin": 494, "effect": [58, 128, 185, 187, 188, 189, 190, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 475, 479, 482, 487, 488, 491, 494, 497], "effici": [225, 375, 473, 475, 489], "effortlessli": 491, "ei": 3, "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 128, 220, 248, 254, 270, 294, 306, 332, 390, 473, 478, 486, 487, 488, 489, 491, 492, 493], "elabor": 478, "electron": [477, 478], "electroshap": 153, "electroshapefingerprint": 153, "eleg": 490, "element": [43, 44, 45, 55, 163, 254, 335, 346, 358, 364, 375, 379, 408, 409, 475, 482, 491], "elimin": [476, 479, 493], "els": [365, 366], "embed": 495, "emd": 477, "emdgroup": [311, 473], "emelin": 477, "emerg": 481, "emploi": [34, 488], "employe": [473, 483], "empow": 492, "empti": [104, 128, 217, 219, 225, 232, 306, 344, 361, 370, 389, 394, 427, 428, 475, 489], "empty_encod": [219, 225], "emptysearchspaceerror": 232, "emul": [23, 474, 475], "en": [105, 169], "enabl": [189, 252, 313, 314, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 493, 494, 495], "encapsul": 375, "encod": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 219, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 369, 371, 473, 475, 482, 489, 490, 494], "encompass": 481, "encount": [161, 185, 187, 188, 189, 190, 415, 474, 475, 476, 486], "end": [0, 128, 306, 331, 400, 478, 482, 486, 490, 495], "endeavor": 479, "endpoint": [475, 483], "enforc": [128, 306, 407, 421, 475, 476, 487], "engin": [474, 488, 490, 491, 497], "enhanc": [28, 473], "enlarg": 487, "enough": [217, 490], "ensembl": 292, "ensur": [128, 161, 162, 306, 393, 473, 475, 482, 490, 491], "enter": [82, 225, 486, 489, 493, 495], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 314, 400, 416, 475, 476, 479, 481, 483, 497], "entiti": 478, "entri": [34, 41, 44, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 128, 240, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 344, 390, 416, 472, 475, 482, 483, 484, 485, 497], "enum": [132, 150, 151, 152, 153, 212, 220, 277, 348, 414, 475, 490], "enumer": [128, 131, 149, 306, 307], "env": [128, 306, 475, 476], "envar_nam": 483, "environ": [252, 313, 407, 421, 473, 474, 475, 476, 496], "envvar": 311, "envvar_nam": 483, "equal": [48, 130, 190, 217, 330, 475, 482, 486, 489, 490, 495], "equat": [48, 482, 491], "equidist": [415, 475, 487], "equip": 482, "equival": [23, 37, 60, 128, 306, 339, 475, 479, 482, 491, 493, 495], "erg": 153, "ergfingerprint": 153, "erron": 475, "error": [128, 188, 248, 250, 252, 267, 306, 359, 392, 474, 475, 480, 482, 488], "error_msg": [128, 306], "esian": 473, "especi": [476, 480, 493], "essenti": [481, 488], "establish": 494, "estat": 153, "estatefingerprint": 153, "estim": [219, 224, 225, 257, 375, 475, 492, 496], "estimate_product_space_s": [219, 225, 497], "et": [473, 487], "etc": [43, 44, 45, 128, 143, 219, 301, 306, 494], "ethan": 490, "ethanol": 482, "euclidean": [375, 415], "eval": [128, 306], "eval_during_augment": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "eval_during_cr": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "eval_during_model": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 198, 200, 292, 293, 306, 366, 475, 481, 483, 488, 491, 494], "even": [190, 294, 387, 478, 480, 481, 483, 487, 491, 492, 494, 495, 497], "event": [34, 314, 478], "everi": [128, 306, 375, 480, 497], "everyth": [476, 482, 493], "evolv": 476, "ex": 485, "exabyt": 497, "exact": [34, 390, 474, 475, 482, 486, 487, 492], "exactexplain": [98, 101, 485], "exactli": [9, 12, 15, 18, 47, 125, 128, 130, 134, 136, 219, 306, 475, 480, 481, 489, 490], "examin": 481, "exampl": [9, 12, 15, 18, 128, 161, 162, 250, 306, 322, 330, 343, 344, 356, 365, 375, 389, 429, 434, 437, 440, 445, 449, 452, 455, 457, 460, 464, 468, 474, 475, 476, 477, 478, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "exceedingli": 491, "except": [34, 128, 306, 361, 370, 378, 397, 399, 473, 474, 475, 478, 484, 492, 495], "excepthook": 474, "exceptiongroup": [66, 475], "excess": 497, "exchang": 495, "exclud": [34, 59, 386, 475, 478, 482, 496], "exclude_list": 388, "exclus": [57, 440, 471, 475, 478, 482, 491, 496], "execut": [34, 70, 128, 248, 306, 361, 474, 475, 476, 478, 483, 490, 491, 494], "exemplari": 481, "exercis": 478, "exhaust": [188, 200, 485, 488], "exist": [34, 122, 128, 219, 306, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 349, 361, 474, 475, 476, 479, 481, 482, 484, 490, 492, 493, 494], "exp": [309, 475, 486], "exp_rep": [225, 489], "exp_rep_byt": [224, 497], "exp_rep_human_read": [224, 497], "exp_rep_shap": [224, 497], "expect": [3, 4, 9, 10, 12, 13, 15, 16, 18, 19, 31, 55, 78, 86, 128, 262, 264, 272, 306, 361, 384, 393, 475, 476, 481, 482, 485, 486, 487, 490, 491, 493, 497], "expens": [11, 200, 491], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 182, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 246, 248, 257, 259, 261, 266, 270, 284, 286, 288, 290, 475, 479, 481, 482, 484, 486, 487, 488, 493, 494, 496], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 104, 125, 130, 134, 136, 142, 145, 146, 148, 156, 159, 182, 185, 186, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 219, 224, 225, 246, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 301, 303, 309, 383, 473, 475, 479, 480, 482, 484, 486, 487, 489, 490, 491, 493, 494, 496, 497], "experimentalist": 472, "expert": 375, "explain": [75, 99, 100, 101, 103, 104, 475, 477, 492, 496], "explain_target": [100, 475], "explainer_cl": [100, 104, 485], "explan": [100, 104, 128, 306, 475, 481, 485, 492], "explanation_index": [100, 485], "explicit": [162, 189, 475, 476, 486, 490, 492, 494, 495, 496], "explicitli": [128, 217, 225, 475, 478, 484, 486, 489, 494, 495], "exploit": [8, 23, 475], "explor": [8, 34, 479, 488, 489, 494], "exploratori": 479, "expon": [309, 329, 493, 495], "exponenti": [225, 309, 326], "exponentialtransform": 495, "expos": [34, 475], "exposur": 475, "expr": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62], "express": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 473, 475, 478, 482, 493, 495], "extend": [161, 309, 484, 487, 494], "extens": [475, 488], "extra": [128, 306, 375, 473, 475], "extra_repr": [128, 306], "extract": [34, 185, 187, 188, 189, 190, 391, 485, 496], "f": [331, 350, 351, 366, 375, 495, 497], "f1": 491, "f2": 491, "fabian": 477, "face": [257, 259, 261, 266, 270, 284, 286, 288, 290], "facilit": 488, "fact": [23, 472, 482, 486, 493], "factor": [9, 12, 15, 18, 306, 322, 473, 481, 482, 493, 495, 497], "factori": [162, 217, 270, 271, 272, 273, 274, 280, 282, 357, 475], "fail": [474, 475, 492], "failur": [303, 475, 478], "failure_valu": 303, "fairli": 486, "fake": [250, 381, 385, 475, 480, 491, 496], "fall": [161, 190, 481], "fallback": [225, 252, 401, 475, 489], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 100, 104, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 187, 188, 189, 190, 217, 219, 225, 230, 257, 259, 261, 266, 270, 284, 286, 288, 290, 303, 306, 309, 322, 354, 355, 359, 365, 366, 379, 384, 389, 391, 392, 396, 427, 473, 475, 483, 486, 490], "falsi": 483, "famili": 482, "fang": 477, "fantasi": 11, "far": [309, 481], "farthest": [212, 213, 414, 415, 473, 475, 477, 479, 488], "farthest_point_sampl": [213, 475], "fast": [375, 480, 489], "faster": [31, 225, 375, 480], "fault": 95, "faulti": 474, "favicon": 475, "favor": [128, 306, 475], "feasibl": [79, 481, 485], "featur": [100, 117, 159, 388, 473, 474, 475, 476, 482, 485, 492, 494, 495], "fed": [473, 485], "feder": 477, "fee": 478, "feed": [375, 472, 473, 484, 494], "feedback": 477, "few": [475, 476, 479, 487, 490, 492, 494, 497], "field": [128, 239, 306, 378, 379, 475, 494, 496], "fifti": 478, "file": [473, 475, 478, 483, 490, 494], "fill": [34, 250], "fill_": [128, 306], "filler": 482, "filter": [34, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 219, 225, 386, 389, 475, 482, 484, 489, 494, 497], "filter_attribut": 475, "filter_df": [34, 475], "final": 495, "find": [219, 359, 409, 473, 479, 481, 482, 486, 494], "fine": 473, "finer": [162, 473], "finetun": [128, 306], "fingerprint": [153, 159, 369, 371, 473, 475, 477, 487], "finish": 480, "finit": [188, 246, 254, 362, 399, 423, 487, 491], "fire": [128, 306], "first": [212, 219, 252, 335, 350, 351, 408, 415, 473, 474, 475, 481, 482, 486, 487, 488, 489, 493, 494, 495, 497], "fit": [34, 210, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 375, 416, 418, 475, 478, 480, 482, 487, 492, 495], "fit_gpytorch_ml": 475, "fit_gpytorch_mll_torch": 475, "fit_param": 375, "fit_predict": 375, "fit_transform": 375, "fitnr": 34, "fitzner": [473, 477], "fix": [246, 273, 476, 481, 487, 491, 494, 497], "flag": [28, 34, 56, 100, 104, 125, 130, 134, 136, 200, 219, 220, 225, 309, 384, 391, 472, 475, 481, 483, 484, 485, 486, 488], "flake8": 475, "flexibl": [475, 490, 491, 493], "flexibli": [486, 488], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 45, 47, 48, 50, 51, 111, 112, 113, 114, 115, 116, 117, 118, 122, 128, 130, 148, 155, 156, 159, 163, 166, 167, 173, 174, 175, 176, 177, 178, 179, 198, 200, 224, 225, 248, 252, 257, 259, 260, 261, 264, 266, 270, 284, 286, 288, 290, 294, 303, 304, 306, 309, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 352, 375, 377, 382, 383, 388, 395, 398, 400, 403, 405, 406, 408, 409, 420, 423, 424, 425, 475, 476, 480, 481, 496], "float16": [128, 306], "float64": [128, 306, 420], "fly": [189, 490, 492], "fn": [128, 306, 349], "focu": 481, "focus": [136, 473], "folder": [473, 476, 483, 492], "follow": [128, 163, 185, 187, 188, 189, 190, 219, 248, 250, 252, 306, 375, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "footprint": [11, 219], "forbid": 426, "forc": [100, 102, 161, 200, 475, 476, 485, 488], "forest": [289, 290], "fork": 476, "form": [128, 225, 246, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 306, 375, 472, 473, 478, 479, 481, 486, 487, 488, 489, 490, 491, 497], "formal": 472, "format": [48, 128, 306, 312, 375, 394, 403, 473, 474, 475, 476, 481, 483, 490, 491], "format_except": 474, "former": 475, "formul": [480, 494], "forrest": 475, "forward": [128, 306], "forward_pr": [128, 306], "found": [93, 128, 162, 217, 225, 306, 359, 369, 406, 409, 473, 474, 476, 481, 482, 488, 494], "foundat": 488, "four": 486, "fourier": 117, "fourth": 482, "fp": [414, 475, 479], "fp_size": [153, 487], "fpsiniti": 213, "fpsrecommend": [473, 475, 480, 488], "frac": [331, 486, 495], "fraction": [17, 31, 112, 377, 479, 482, 483], "fraction_1": 482, "fraction_2": 482, "fraction_3": 482, "fractur": 482, "frame": [383, 485, 497], "frame_1": 482, "frame_2": 482, "framework": [481, 487], "free": [476, 478, 483], "freedom": 490, "freez": [128, 306], "frequenc": 117, "frictionless": 490, "friendli": [475, 493], "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 153, 155, 156, 159, 161, 162, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 242, 250, 252, 254, 257, 259, 261, 264, 266, 270, 273, 278, 282, 284, 286, 288, 290, 294, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 361, 365, 366, 370, 373, 375, 383, 384, 386, 388, 400, 415, 416, 464, 471, 472, 474, 476, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 496, 497], "from_anchor": 330, "from_bound": [217, 475, 489], "from_campaign": [100, 485], "from_config": [34, 481], "from_datafram": [217, 219, 225, 475, 484, 489, 490, 497], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400, 490], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400, 481, 490], "from_legacy_interfac": [309, 493], "from_margin": [331, 495], "from_modern_interfac": [309, 493], "from_paramet": [217, 219, 225, 475], "from_points_mapped_to_unit_interval_bound": 322, "from_preset": 270, "from_product": [217, 219, 225, 473, 475, 482, 484, 489, 490, 491], "from_recommend": [100, 485], "from_record": [490, 491], "from_repl": [264, 492], "from_simplex": [225, 475, 484, 489, 497], "from_surrog": [100, 485], "from_width": [331, 495], "front": 486, "frozenset": [47, 217], "fsspec": 475, "fulfil": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64], "full": [28, 217, 406, 429, 471, 475, 481, 484, 485, 487, 493, 494, 496], "full_factori": 217, "fulli": [128, 306, 473, 475, 483, 484, 491], "fulltest": 476, "func": [375, 476], "funci": 475, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 42, 48, 49, 55, 63, 65, 73, 85, 95, 97, 100, 116, 124, 128, 129, 133, 135, 137, 160, 161, 165, 198, 200, 201, 218, 223, 229, 233, 234, 242, 243, 246, 247, 249, 251, 252, 253, 258, 265, 271, 276, 291, 295, 300, 306, 311, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 342, 345, 350, 351, 363, 367, 376, 380, 383, 385, 390, 391, 394, 397, 402, 404, 410, 413, 422, 473, 474, 475, 479, 482, 483, 484, 486, 488, 489, 491, 492, 494, 495, 496, 497], "functionalgroup": 153, "functionalgroupsfingerprint": 153, "fundament": [487, 490], "furo": 475, "further": [9, 12, 15, 18, 390, 473, 480, 484, 488, 489, 492, 494, 496], "furthermor": 480, "futur": [60, 128, 219, 265, 306, 485, 493], "fuzzi": 314, "fuzzy_row_match": [314, 475], "g": [56, 58, 59, 76, 103, 128, 148, 162, 219, 225, 306, 346, 351, 371, 390, 473, 474, 475, 476, 479, 480, 482, 483, 485, 487, 488, 489, 491, 493, 495, 497], "gain": [225, 481, 485], "gamma": 174, "gammaprior": 475, "gan": [128, 306], "garbag": 475, "gather": [190, 479, 494], "gaussian": [105, 207, 259, 268, 269, 270, 271, 275, 276, 277, 279, 280, 281, 282, 323, 475, 482, 488, 494, 495], "gaussian_process": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 270, 272, 273, 277, 280, 282, 475], "gaussianmixtureclusteringrecommend": 488, "gaussianprocesspreset": [270, 278], "gaussianprocesssurrog": [278, 475, 492], "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 152, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 257, 259, 261, 264, 266, 270, 273, 280, 282, 284, 286, 288, 290, 301, 303, 312, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 365, 371, 375, 382, 400, 410, 418, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 493, 494, 496, 497], "geom_mean": [130, 132, 475, 486], "geometr": 132, "germani": [473, 477, 483], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 198, 200, 217, 270, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 375, 472, 473, 475, 480, 493, 495, 496, 497], "get_absolute_threshold": [47, 475], "get_acquisition_funct": [34, 198, 200, 475], "get_buff": [128, 306], "get_candid": 225, "get_comp_rep_parameter_indic": [219, 475], "get_current_recommend": [185, 187, 188, 189, 190, 475], "get_extra_st": [128, 306], "get_imag": [309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475], "get_integration_point": 17, "get_invalid": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62], "get_invalid_polar": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62], "get_metadata_rout": 375, "get_next_recommend": [185, 187, 188, 189, 190, 475], "get_non_meta_recommend": [185, 187, 188, 189, 190, 475], "get_param": 375, "get_paramet": [128, 306], "get_parameters_by_nam": [217, 219, 225], "get_parameters_from_datafram": [217, 225], "get_submodul": [128, 306], "get_surrog": [34, 100, 198, 200, 475, 485, 492], "get_swap_module_params_on_convers": [128, 306], "get_transform_object": [396, 475], "get_transform_paramet": 475, "get_valid": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 475], "getawai": 153, "getawayfingerprint": 153, "ghosecrippen": 153, "ghosecrippenfingerprint": 153, "git": [473, 476], "github": [282, 311, 362, 388, 475, 476, 477], "give": [375, 478, 481, 482, 486, 490, 495], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 43, 44, 45, 47, 68, 93, 100, 103, 104, 125, 128, 130, 134, 136, 138, 159, 161, 162, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 231, 246, 250, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 294, 306, 309, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 344, 351, 354, 355, 359, 360, 361, 364, 365, 368, 369, 377, 379, 381, 384, 391, 400, 408, 415, 418, 475, 480, 481, 486, 489, 491, 492, 495], "glass_transition_tempc": 487, "global": [17, 128, 306, 411, 475, 496, 497], "gmm": 207, "go": [343, 473], "goal": [486, 493, 494], "goe": 492, "good": [481, 483, 493], "goodwil": 478, "googl": [475, 476], "govern": 473, "gp": [257, 259, 261, 266, 270, 284, 286, 288, 290, 475], "gpu": [128, 306], "gpu1": [128, 306], "gpytorch": [105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 169, 171, 173, 174, 175, 176, 177, 178, 179, 475], "gpytorchposterior": 306, "grab": 472, "grad": [128, 306], "grad_input": [128, 306], "grad_output": [128, 306], "gradient": [11, 128, 200, 288, 306, 475, 483, 488], "grant": [475, 478], "granular": 473, "great": 490, "greater": [190, 200], "greatli": 476, "greedi": [200, 375, 475, 488], "grossli": 478, "ground": [475, 493], "group": [91, 200, 344, 356, 418, 473, 475, 481, 485], "groupbi": [252, 254], "grow": 497, "gu16": 487, "guarante": [128, 306, 475, 482, 483, 488], "guid": [375, 473, 474, 475, 476, 479, 481, 484, 489, 491, 494, 495], "guidelin": [475, 476, 479], "h": [375, 495], "ha": [34, 56, 79, 80, 84, 85, 100, 128, 188, 217, 219, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 323, 343, 359, 361, 365, 382, 393, 415, 416, 473, 475, 476, 478, 480, 481, 482, 485, 487, 489, 490, 491, 493, 494, 495], "had": [246, 482, 487, 491], "half": [128, 156, 175, 176, 306, 400, 480], "halfcauchyprior": 475, "halfnormalprior": 475, "hamster": 494, "hand": [48, 159, 252, 473, 481, 490, 492], "handi": 482, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 100, 128, 134, 143, 248, 250, 257, 259, 261, 266, 270, 284, 286, 288, 290, 294, 306, 392, 397, 475, 481, 486, 493, 497], "happen": [92, 188, 474, 475, 476, 489, 490, 494, 495], "happili": 486, "hard": [475, 494, 497], "hardcod": 475, "harmless": 478, "hash": [312, 473, 483, 487], "hashabledict": 475, "have": [28, 31, 34, 41, 43, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 125, 128, 130, 134, 136, 159, 161, 210, 219, 246, 265, 298, 306, 344, 356, 359, 375, 390, 391, 406, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 494, 497], "head": 475, "header": 379, "heart": 494, "heatmap": [100, 102], "help": [128, 306, 490, 491, 494], "helper": [309, 490], "henc": [370, 480, 482, 487, 497], "here": [59, 406, 472, 473, 474, 480, 482, 484, 486, 487, 488, 489, 490, 491, 494, 495], "herebi": 478, "herein": [478, 481], "heurist": [200, 375], "hidden": 493, "hierarch": 490, "hierarchi": [93, 475, 476, 481, 490], "high": [280, 475, 476, 479, 481, 482, 487, 490], "higher": [159, 474, 482, 485, 486, 488, 493, 495], "highest": [331, 479, 490], "highlight": 494, "hing": 495, "hint": [476, 493], "histogram": 315, "histor": 487, "histori": 476, "hoc": 486, "hold": [47, 356, 478, 490], "homepag": [473, 475], "hood": 487, "hook": [52, 128, 225, 234, 238, 306, 361, 471, 474, 475, 476], "hopp": [473, 477], "host": [128, 306, 473, 475, 483], "hostnam": [312, 483], "hot": [150, 473, 475, 487], "how": [57, 128, 248, 250, 306, 309, 375, 390, 415, 434, 437, 440, 445, 449, 452, 473, 481, 482, 483, 486, 491, 492, 493, 494, 495], "howev": [128, 162, 225, 265, 306, 361, 472, 474, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 497], "hrovatin": 477, "html": [105, 169, 311, 349, 406, 475], "http": [105, 169, 282, 311, 349, 362, 388, 406, 473, 475, 478, 494], "human": [224, 403, 475, 477, 490], "hybrid": [27, 28, 76, 191, 192, 200, 214, 219, 220, 437, 460, 471, 473, 475, 488, 489], "hybrid_sampl": [200, 488], "hypercel": 31, "hyperrectangl": [217, 489], "hypervolum": [9, 12, 15, 18, 31], "hypothesi": [473, 475, 476], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 75, 76, 82, 84, 85, 87, 89, 100, 103, 104, 119, 122, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 232, 246, 248, 250, 252, 254, 257, 259, 261, 262, 264, 265, 266, 270, 280, 284, 286, 288, 290, 294, 298, 306, 309, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 344, 347, 348, 349, 350, 351, 354, 355, 359, 361, 362, 364, 365, 366, 369, 370, 375, 379, 382, 383, 384, 385, 389, 390, 391, 394, 399, 400, 406, 408, 409, 415, 416, 423, 427, 428, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "ibm": 375, "ideal": [480, 482, 491], "ident": [162, 327, 339, 343, 344, 484, 487, 490, 493, 494, 495], "identifi": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 252, 356, 370, 390, 391, 475, 482, 485, 486, 487, 489, 490, 491, 494], "identitytransform": 495, "idx": [128, 306], "idx_offset": 48, "ignor": [125, 128, 130, 134, 136, 188, 200, 219, 248, 250, 252, 306, 359, 375, 388, 475, 482, 490, 497], "ignore_exampl": 475, "ignore_list": 387, "ignore_w": [128, 306], "ii": 478, "iii": 478, "illustr": 484, "iloc": 480, "imag": [309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475], "immedi": [128, 306, 481], "immut": 475, "impact": 483, "imperfect": 383, "implement": [23, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 182, 193, 254, 262, 306, 334, 336, 363, 475, 476, 477, 479, 485, 488, 489, 491, 493, 494], "impli": [473, 478, 482, 487], "implicitli": 490, "import": [9, 12, 15, 18, 91, 100, 130, 250, 322, 330, 375, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497], "impos": [475, 482], "imposs": [473, 483, 484, 490], "imprint": 495, "improv": [3, 4, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 445, 471, 473, 475, 478, 483], "imput": [248, 250, 429, 471, 473], "impute_mod": [248, 250, 252, 491], "in_featur": [128, 306], "inabl": [473, 478], "inaccuraci": 473, "inact": [47, 161, 163, 200, 217, 475], "inactive_parameter_combin": [47, 217, 475], "inc": 494, "incident": 478, "includ": [66, 68, 125, 128, 130, 134, 136, 161, 190, 248, 306, 309, 354, 355, 387, 475, 476, 478, 479, 480, 482, 484, 497], "inclus": 478, "incom": [490, 495], "incompat": [72, 73, 74, 75, 76, 77, 104, 266, 482], "incompatibilityerror": [34, 309], "incompatible_kei": [128, 306], "incompatibleacquisitionfunctionerror": 480, "incompatibleexplainererror": 485, "incomplet": [475, 480], "inconsist": 475, "incorpor": [478, 480, 492, 497], "incorrect": 475, "incorrectli": 475, "increas": [11, 188, 252, 331, 475, 479, 487, 494], "increment": 225, "incur": 478, "inde": 481, "indefinit": [188, 248], "indemn": 478, "indemnifi": 478, "indent": [379, 475], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 192, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 475, 486, 488, 491, 492], "independentgaussiansurrog": [266, 284, 286, 288, 475], "index": [34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 219, 252, 264, 343, 344, 375, 389, 390, 475, 480, 485, 487, 489, 491], "indexkernel": 475, "indic": [9, 12, 15, 18, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 95, 103, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 185, 187, 188, 189, 190, 219, 257, 259, 261, 266, 270, 284, 286, 288, 290, 309, 343, 344, 347, 348, 375, 384, 415, 475, 478, 480, 484, 488, 491, 492], "indirect": [354, 355, 478], "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 56, 57, 120, 121, 128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 248, 264, 306, 335, 394, 478, 481, 484, 486, 488, 494, 495], "induc": 47, "industri": 494, "ineffici": 225, "inequ": [48, 217, 489], "inertia_": 375, "inf": [8, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400, 493, 495], "infeas": [482, 484], "infer": [162, 475, 489], "infin": 167, "infinit": [188, 189, 357, 399, 423, 424, 475, 487], "influenti": 494, "info": [315, 475], "inform": [28, 128, 143, 301, 306, 375, 391, 473, 475, 476, 478, 480, 483, 484, 487, 489, 494, 496], "infring": 478, "ingest": [225, 248, 475, 487, 488], "ingredi": 482, "inher": [23, 161, 257, 259, 261, 266, 270, 284, 286, 288, 290, 492], "inherit": 476, "init": [128, 306, 375], "init_weight": [128, 306], "initi": [111, 112, 113, 114, 115, 116, 117, 118, 122, 128, 190, 192, 200, 207, 208, 209, 210, 212, 213, 225, 248, 252, 306, 314, 375, 415, 429, 471, 475, 477, 480, 481, 483, 487, 488, 490, 491, 494], "initial_data": [248, 252, 491], "initial_recommend": [190, 473, 488], "initial_recommender_cl": 475, "initial_strategi": 475, "initialis": 375, "inject": 490, "inner": [183, 389, 485, 488, 490], "inplac": [128, 306, 497], "input": [43, 44, 45, 80, 128, 142, 145, 146, 148, 156, 159, 217, 219, 225, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 356, 375, 377, 378, 383, 384, 385, 389, 392, 393, 395, 400, 401, 408, 415, 427, 428, 475, 486, 490, 491, 494, 495], "input_label": 384, "inputtransform": 418, "insid": [331, 474, 490], "insight": [100, 473, 475, 477, 496], "inspect": 365, "inspir": 495, "instabl": [475, 482], "instal": [475, 476, 483, 485, 487, 497], "instanc": [43, 44, 45, 56, 59, 100, 128, 190, 219, 306, 375, 473, 474, 476, 480, 481, 482, 483, 485, 487, 489, 490, 491, 497], "instanti": 481, "instead": [128, 185, 187, 188, 189, 190, 306, 314, 370, 384, 392, 473, 474, 475, 481, 482, 486, 487, 490, 491, 494, 495, 497], "institut": [477, 478], "instruct": [473, 475, 496], "instrument_nam": 315, "int": [9, 11, 12, 15, 17, 18, 23, 34, 37, 47, 48, 54, 100, 107, 108, 109, 112, 114, 115, 116, 117, 118, 125, 128, 130, 134, 136, 150, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 248, 252, 254, 303, 304, 306, 309, 315, 329, 375, 385, 394, 395, 409, 411, 412, 415, 416, 418, 475, 476, 487], "int64": 375, "integ": [37, 150, 219, 252, 475, 476, 487], "integr": [17, 128, 306, 475, 476, 479, 481, 493], "intend": [476, 488], "intens": 487, "intention": 478, "interact": [33, 34, 473, 474, 481, 484, 490], "interconnect": 481, "interest": [481, 485, 486, 487, 497], "interfac": [182, 262, 272, 309, 475, 478, 481, 484, 485, 493], "intermedi": [210, 415], "intern": [34, 48, 60, 128, 188, 306, 475, 480, 482, 483, 487, 488, 489, 490], "internet": 473, "internship": 477, "interplai": 475, "interpol": [112, 280, 475], "interpret": [9, 12, 15, 18, 219, 246, 323, 377, 483, 489, 491, 495], "interrupt": 70, "interv": [34, 47, 155, 161, 163, 257, 259, 261, 266, 270, 284, 286, 288, 290, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 481, 487, 490, 493, 495], "intrins": 494, "introduc": [375, 474, 475, 482, 487, 488, 491], "intuit": [481, 485], "invalid": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 81, 128, 225, 306, 370, 416, 474, 475, 481, 482, 489], "invari": [56, 59, 60, 343, 344, 482], "invers": [238, 490], "invert": [34, 389, 475], "investig": [246, 491, 492], "invok": [128, 306, 491, 496, 497], "involv": [34, 225, 264, 473, 483, 485, 486, 487, 490, 493, 494], "io": 311, "ipu": [128, 306], "irrelev": [475, 482], "irrevoc": 478, "is_bound": [400, 475], "is_cardinality_fulfil": 475, "is_continu": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159], "is_degener": 400, "is_discret": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159], "is_empti": [217, 225, 475], "is_eq": 48, "is_finit": 475, "is_fully_unbound": 400, "is_half_bound": 400, "is_in_rang": [141, 142, 143, 145, 146, 148, 155, 156, 159], "is_inact": 475, "is_left_bound": 400, "is_mc": 475, "is_multi_output": [125, 130, 134, 136, 475], "is_norm": [309, 475], "is_numer": [141, 142, 143, 145, 146, 148, 155, 156, 159, 475], "is_right_bound": 400, "is_stat": [185, 187, 188, 189, 190, 475, 484], "isinst": 495, "isol": 481, "isoxazol": 494, "issu": [265, 349, 362, 393, 475, 478, 491, 497], "item": [44, 141, 142, 143, 145, 146, 148, 155, 156, 159, 487], "iter": [9, 12, 15, 18, 34, 44, 47, 120, 121, 128, 130, 134, 145, 146, 148, 159, 188, 189, 217, 219, 225, 248, 265, 306, 309, 335, 339, 352, 357, 362, 375, 381, 383, 385, 393, 398, 400, 427, 428, 473, 475, 479, 481, 487, 488, 491, 492, 497], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 217, 219, 225, 242, 252, 254, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 306, 309, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 343, 353, 361, 365, 400, 403, 473, 474, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "itself": [128, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 474, 493, 494], "j": [128, 306, 473, 487, 494], "januari": 478, "javadi": 477, "jin": 477, "join": [389, 474], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 198, 200, 264, 481, 492], "joint_acq_valu": 481, "joint_acquisition_valu": [34, 198, 200, 475, 481], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 481], "journal": 375, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400, 475, 496], "json_str": 490, "juli": 477, "julian": 477, "jump": [475, 494], "jun": 375, "just": [472, 476, 490, 493, 495], "k": [156, 208, 375, 415, 475, 484, 488, 497], "karin": 477, "keep": [55, 159, 217, 225, 475, 476], "keep_var": [128, 306], "kei": [128, 284, 290, 296, 306, 356, 476, 485], "kept": [389, 487, 492], "kernel": [107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 270, 271, 272, 273, 274, 280, 282, 375, 475, 482, 494], "kernel_factori": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 270, 272, 273], "kernel_or_factori": 270, "kernel_s": [128, 306], "kernelexplain": [98, 100, 101, 104, 485], "kernelfactori": [270, 273, 274, 280, 282, 475], "keyword": [100, 128, 159, 306, 475, 480, 482, 489, 491], "kgaa": [473, 477, 483], "kian": 494, "kickstart": 490, "kind": [200, 473, 475, 478, 482, 487, 488], "klekotaroth": 153, "klekotarothfingerprint": 153, "kmean": 375, "kmeansclusteringrecommend": 488, "knob": 473, "know": [473, 474, 486, 490, 494], "knowledg": [8, 11, 473, 475, 494, 495], "known": [482, 484, 492, 494], "koller": 494, "kwarg": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 111, 113, 115, 120, 121, 122, 128, 171, 173, 174, 175, 176, 177, 178, 179, 182, 202, 262, 267, 272, 306, 309, 371, 375, 385, 399], "kwargs_conform": [159, 371, 487], "kwargs_fingerprint": [159, 371, 487], "l": [128, 306], "l0": 37, "l1": 487, "l664": 282, "label": [59, 60, 148, 159, 315, 375, 384, 473, 475, 482, 484, 489, 491], "labels_": 375, "laggner": 153, "laggnerfingerprint": 153, "lambda": 492, "lanat": 485, "land": 475, "languag": [349, 473], "larg": [159, 225, 375, 475, 483, 487, 491, 493, 497], "larger": [112, 156, 416, 481, 482, 490, 494], "largest": [212, 415, 479], "last": [188, 476, 481, 488], "latent": 487, "later": [156, 474, 480, 481, 490], "latest": [189, 473, 476, 481], "latter": [23, 34, 128, 306, 343, 365, 375, 481, 486, 494, 495], "law": [473, 478], "lawsuit": 478, "layer": 153, "layeredfingerprint": 153, "layout": 475, "lazi": [227, 419, 475], "lazili": [475, 483], "lazyfram": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 227], "le_method": 476, "lead": [31, 90, 475, 483, 490], "lean": 476, "learn": [17, 253, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 375, 471, 473, 475, 482, 485, 487, 492, 493, 495, 496], "least": [163, 188, 473, 478, 480, 481], "leav": 490, "lee": 477, "left": [87, 88, 179, 248, 331, 332, 382, 390, 400, 475, 486, 495], "left_df": 390, "leftov": 475, "legaci": [309, 475, 493], "legal": 478, "length": [113, 188, 189, 257, 362], "lengthi": 481, "lengthscal": [112, 113, 114, 116, 117, 118], "lengthscale_initial_valu": [112, 113, 114, 116, 117, 118], "lengthscale_prior": [112, 113, 114, 116, 117, 118], "leq": [37, 331, 495], "less": [8, 31, 344, 385, 481, 493, 497], "let": [128, 306, 473, 480, 482, 486, 490], "level": [383, 475, 476, 480, 481, 482, 488, 490, 493, 495], "leverag": [480, 481, 488], "li": [163, 487], "liabil": 478, "liabl": 478, "lib": 474, "librari": 474, "licensor": 478, "lie": [34, 257, 259, 261, 266, 270, 284, 286, 288, 290], "liebig": 477, "life": [473, 476, 477, 497], "lifecycl": 481, "ligand": [473, 485, 487], "like": [9, 12, 15, 18, 128, 163, 210, 252, 306, 346, 375, 473, 474, 475, 476, 480, 481, 482, 484, 490, 491, 494, 495, 497], "likelihood": 257, "lime": [100, 103, 485], "limetabular": [98, 99, 485], "limit": [8, 280, 315, 473, 477, 478, 482, 489, 495, 496], "line": [128, 306, 379, 400, 475, 476, 479, 481, 487, 491, 494], "linear": [48, 111, 128, 217, 284, 306, 437, 471, 475, 476, 485, 489], "linear_transform": 475, "linearkernel": 475, "linearli": [280, 331, 475], "lingo": 153, "lingofingerprint": 153, "link": [58, 474, 475, 478, 487], "linspac": [495, 497], "lint": [473, 475, 476], "linter": [475, 476], "list": [37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 162, 168, 188, 189, 217, 219, 225, 226, 227, 230, 231, 232, 248, 252, 254, 306, 314, 354, 355, 356, 364, 371, 386, 387, 388, 391, 415, 473, 475, 476, 478, 482, 486, 487, 488, 489, 491, 493], "liter": [34, 100, 188, 248, 250, 252, 257, 259, 260, 261, 264, 266, 270, 284, 286, 288, 290, 383, 415, 476], "literatur": 475, "litig": 478, "littl": 474, "live": [128, 306, 492], "liver": [491, 494], "ll": 484, "ln": 495, "load": [128, 306, 419, 474, 475], "load_state_dict": [128, 306], "loc": [177, 178, 480], "local": [128, 306, 474, 476, 483, 485, 496], "local_metadata": [128, 306], "locat": [9, 12, 15, 18, 177, 178, 331, 375, 480, 483, 494, 495], "lockfil": 475, "log": [177, 309, 315, 473, 475, 483], "logarithm": [4, 12, 13, 15, 16, 309, 328], "logarithmictransform": [493, 495], "logei": [4, 475], "logic": [183, 264, 384, 475, 482, 488, 491, 495, 497], "lognormalprior": 475, "logo": 475, "long": [481, 490, 491], "longer": [161, 475, 483], "look": [128, 250, 306, 474, 479, 481, 482, 484, 485, 490, 491, 493], "look_up_target": 248, "lookup": [246, 248, 252, 254, 384, 390, 429, 471, 475, 483, 485, 496], "lookup_df": 250, "loop": [246, 248, 254, 475, 480, 485, 491, 497], "loss": [478, 495], "lost": 490, "low": [280, 474, 475, 485, 487, 490], "lower": [163, 179, 400, 482, 487, 493], "lower_bound": 489, "lower_threshold": 163, "lst_exclud": 386, "lt": 474, "luxuri": 481, "m": [128, 306], "m1": 474, "mac": 474, "macc": 153, "maccsfingerprint": 153, "machin": [473, 474, 476, 479, 483, 487, 493, 494], "machineri": [23, 200, 474, 475, 476, 484, 494, 497], "made": [34, 91, 128, 248, 306, 415, 473, 474, 478, 482, 483, 491], "magic": 494, "magnitud": [323, 382, 383, 495, 497], "mai": [34, 47, 125, 128, 130, 134, 136, 219, 306, 361, 375, 472, 473, 478, 481, 484, 490, 491, 492, 493], "mail": 478, "main": [33, 34, 473, 475], "maintain": [294, 476, 484, 486], "major": [475, 491], "make": [60, 128, 200, 257, 259, 261, 266, 270, 284, 286, 288, 290, 292, 293, 294, 306, 349, 382, 384, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 487, 490, 492, 494, 497], "make_explainer_for_surrog": 100, "malfunct": 478, "manag": [33, 217, 218, 219, 225, 412, 475, 478, 491], "mandatori": [472, 475], "mani": [200, 416, 473, 481, 487, 490, 493, 494], "manipul": [475, 483], "manner": 483, "manual": [474, 475, 490, 492], "map": [128, 148, 153, 159, 250, 252, 264, 306, 322, 359, 375, 384, 418, 491, 493], "mapfingerprint": 153, "mapl": [98, 99, 100, 103, 485], "mapped_to_on": 322, "mapped_to_zero": 322, "maranzana": 375, "margin": [309, 331, 475, 493, 495], "mark": [478, 481, 494, 496], "markdown": 475, "marker": 475, "marketplac": 475, "martin": [473, 477], "mask_good": 482, "mass": 173, "master": 282, "match": [34, 92, 94, 128, 142, 145, 146, 148, 156, 159, 162, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 301, 303, 306, 309, 314, 359, 361, 390, 391, 427, 473, 475, 480, 481, 484, 490, 491, 493], "match_": 493, "match_absolut": [309, 475, 486, 490, 493], "match_attribut": 475, "match_bel": [309, 475, 486, 493], "match_pow": [309, 475], "match_quadrat": [309, 475], "match_triangular": [309, 475, 493], "match_valu": [309, 486, 490, 493], "materi": [477, 494], "matern": 112, "maternkernel": 475, "mathemat": [318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 493, 495], "matmin": 474, "matplotlib": 475, "matrix": 375, "matter": [476, 486, 495], "max": [309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 382, 473, 475, 486, 493, 495], "max_cardin": [37, 47, 54, 482], "max_column": 394, "max_colwidth": 394, "max_it": 375, "max_n_subspac": [200, 475, 482], "max_nonzero": 225, "max_row": 394, "max_sum": [225, 489], "maxim": [6, 9, 12, 15, 18, 128, 473, 475, 485, 493], "maximum": [6, 37, 47, 54, 64, 159, 200, 217, 219, 225, 309, 323, 375, 394, 475, 482, 487, 489], "mc": 480, "mc_obj": 128, "mcacquisitionobject": [125, 128, 130, 134, 136, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336], "md": 475, "mean": [5, 8, 23, 34, 60, 132, 208, 246, 248, 250, 252, 257, 259, 260, 261, 264, 266, 270, 284, 286, 288, 290, 294, 375, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 496], "meaning": 486, "meaningless": 479, "meanpredictionsurrog": [294, 492], "meantim": [476, 482], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 78, 86, 100, 161, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 246, 248, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 301, 303, 309, 314, 385, 390, 472, 473, 475, 476, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496], "mechan": [34, 70, 128, 130, 132, 246, 249, 250, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 361, 375, 389, 401, 415, 475, 478, 484, 485, 487, 489, 490, 492, 494, 496], "mechanist": 473, "media": [478, 487, 494], "medic": 480, "mediocr": 493, "medium": [473, 478, 487], "medoid": [209, 375, 475, 488], "medoid_indices_": 375, "meet": [332, 478, 495], "mem_estim": 497, "member": [128, 306, 365, 482, 487], "memo": [128, 306], "memori": [11, 128, 219, 224, 225, 306, 375, 475, 483, 496], "memory_format": [128, 306], "memorys": [219, 225, 497], "mention": [479, 493], "merchant": 478, "merck": [473, 477, 483], "mere": [478, 486], "merg": 476, "messag": 92, "meta": [34, 87, 185, 187, 188, 189, 190, 193, 473, 475, 496], "metadata": [34, 217, 225, 312, 375, 475], "metadatarequest": 375, "metarecommend": [187, 188, 189, 190, 475, 484], "methan": 490, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 95, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 219, 224, 225, 242, 257, 259, 261, 262, 264, 266, 270, 272, 273, 280, 282, 284, 286, 288, 290, 293, 298, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 349, 361, 365, 375, 400, 414, 415, 416, 418, 472, 475, 477, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495], "methylisoxazol": 494, "metric": [375, 473, 483, 487], "mhfp": 153, "mhfpfingerprint": 153, "micromamba": 475, "mid": 495, "middl": 484, "midpoint": [309, 332, 495], "might": [56, 60, 159, 219, 474, 480, 481, 482, 483, 485, 489, 491, 494, 497], "migrat": 475, "mimic": [105, 169, 482], "min": [309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 382, 473, 475, 495], "min_cardin": [37, 47, 54, 482], "min_nonzero": 225, "mind": 492, "miniconda": 475, "minim": [6, 309, 375, 475, 482, 486, 489, 490, 493], "minimum": [37, 47, 54, 64, 83, 156, 217, 219, 225, 309, 339, 415, 475, 482], "minimumcardinalityviolatedwarn": [475, 482], "minor": 475, "mirror": [9, 12, 15, 18, 481, 490], "miss": [128, 248, 250, 306, 392, 427, 428, 475, 476], "missing_kei": [128, 306], "mistak": [34, 476], "mix": [254, 473, 482, 487, 490, 493, 494], "mixin": 242, "mixtur": [207, 471, 475, 482, 487, 488, 494, 497], "mobil": 475, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 128, 148, 159, 188, 248, 257, 259, 260, 261, 264, 266, 270, 284, 286, 288, 290, 306, 309, 359, 429, 471, 473, 474, 475, 481, 488], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 81, 84, 100, 104, 105, 128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 257, 259, 261, 262, 263, 264, 265, 266, 270, 284, 286, 288, 290, 294, 298, 306, 406, 449, 473, 475, 477, 479, 480, 481, 482, 486, 487, 488, 490, 491, 493, 494, 496], "model_cl": 298, "model_cluster_num_parameter_nam": [207, 208, 209, 210], "model_param": [207, 208, 209, 210, 284, 288, 290, 475], "modellist": 264, "modelnottrainederror": [257, 259, 261, 266, 270, 284, 286, 288, 290], "modern": 309, "modif": [128, 306, 474, 478], "modifi": [128, 189, 250, 294, 306, 381, 382, 383, 475, 478, 497], "modul": [0, 1, 35, 96, 97, 105, 123, 128, 139, 157, 169, 180, 183, 193, 196, 203, 215, 233, 234, 246, 255, 258, 268, 275, 295, 299, 302, 306, 316, 341, 345, 372, 373, 397, 404, 419, 422, 473, 474, 475, 476, 495], "modular": 476, "molecul": [58, 159, 370, 487], "molecular": [371, 487], "moment": [254, 280, 476], "monitor": [475, 483], "monkeypatch": 474, "monoton": 318, "monotonictransform": [322, 324, 326, 327, 328, 330], "mont": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 85, 128, 252, 475, 480, 491], "monte_carlo_run": 252, "mordr": [153, 159, 473, 475, 482, 487], "mordredcommun": 475, "mordredfingerprint": [153, 487], "more": [8, 11, 31, 60, 68, 88, 128, 159, 188, 189, 217, 219, 225, 232, 248, 294, 306, 309, 311, 314, 365, 375, 379, 396, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 495, 497], "morgan": 487, "morgan_fp": [153, 475], "mors": [153, 490], "morsefingerprint": 153, "most": [225, 248, 434, 473, 476, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497], "motiv": 475, "mous": 480, "move": [9, 12, 15, 18, 128, 161, 306, 475, 490], "mqn": 153, "mqnsfingerprint": 153, "mtia": [128, 306], "mu": [177, 178], "much": [486, 487], "multi": [100, 128, 133, 256, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 306, 471, 473, 475, 477, 480, 494, 496], "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 43, 125, 130, 134, 136, 251, 252, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 322, 383, 473, 475, 480, 482, 485, 486, 492, 493, 494, 496], "multipli": [121, 336, 495], "multiplicativetransform": 495, "multitask": 475, "must": [56, 125, 128, 130, 134, 136, 219, 225, 250, 254, 306, 330, 361, 375, 383, 427, 475, 476, 478, 479, 482, 483, 484, 485, 486, 487, 491], "mutual": 491, "my_attribut": 476, "my_valu": 483, "mypi": [349, 362, 473, 475, 476], "mystr": 476, "n": [28, 128, 257, 306, 344, 366, 415], "n_batches_don": 34, "n_cluster": [208, 209, 375], "n_compon": 207, "n_doe_iter": [248, 252, 254, 491], "n_featur": 375, "n_features_new": 375, "n_fits_don": 34, "n_inactive_parameter_combin": [47, 217, 475], "n_index": 375, "n_mc_iter": [252, 254, 483, 491], "n_mc_sampl": 23, "n_output": [31, 125, 130, 134, 136, 375, 475], "n_point": [217, 416], "n_queri": 375, "n_raw_sampl": [200, 475, 488], "n_restart": [200, 475, 488], "n_row": 385, "n_sampl": [31, 375, 415], "n_task": 219, "n_task_param": 475, "na": 480, "naiv": [192, 286, 294, 475, 489], "naivehybridrecommend": 475, "naivehybridspacerecommend": [475, 488], "nake": [314, 483], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 47, 68, 91, 128, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 164, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 231, 240, 252, 264, 266, 301, 303, 306, 309, 343, 353, 359, 360, 361, 370, 371, 375, 379, 386, 390, 391, 392, 407, 421, 473, 475, 476, 478, 480, 481, 482, 483, 486, 489, 490, 491, 492, 493, 494, 495, 497], "name_or_abbr": [353, 360], "named_buff": [128, 306], "named_children": [128, 306], "named_modul": [128, 306], "named_paramet": [128, 306], "namedtupl": [128, 306], "namespac": [201, 475, 476], "nan": [167, 257, 392, 400, 423, 425, 426, 427, 428, 475, 480], "nativ": [475, 492], "natur": [288, 476, 482, 488, 490, 493], "navig": [473, 481], "nbase": 371, "nd": 473, "ndarrai": [9, 12, 15, 18, 163, 375, 384, 395, 400, 415, 475, 491], "necessari": [391, 475, 476, 481, 482, 486, 487, 489, 491, 492, 493], "necessarili": [478, 481, 482, 489, 494], "need": [28, 34, 128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 254, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 306, 361, 390, 391, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497], "neg": [17, 475, 482, 493], "negat": [6, 48, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 494, 495], "neglig": 478, "neither": [8, 254, 383], "neq": 37, "nest": [128, 306, 375, 379, 481, 496], "net": [128, 306], "net_b": [128, 306], "net_c": [128, 306], "network": [128, 306], "neural": 494, "neurip": 494, "neutral": 8, "never": 480, "nevertheless": [365, 474], "new": [34, 50, 51, 128, 188, 190, 217, 250, 265, 306, 343, 375, 388, 389, 392, 473, 475, 476, 481, 482, 492, 493, 494, 495], "new_measur": 485, "new_rec": 481, "newli": [473, 476, 483, 484, 494], "next": [34, 473, 479, 480, 481, 488, 490, 495], "ngboost": [288, 475], "ngboostsurrog": [475, 492], "nice": 474, "nicknam": 370, "nn": [128, 306], "no_grad": [128, 306], "nois": [248, 382, 383, 475, 496], "noise_level": 383, "noise_perc": [248, 252, 491], "noise_ratio": 382, "noise_typ": 383, "noisi": [15, 16, 18, 19, 385, 473, 475, 494], "non": [67, 68, 99, 125, 128, 130, 134, 136, 185, 187, 188, 189, 190, 192, 219, 248, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 359, 361, 365, 375, 382, 415, 416, 423, 424, 425, 427, 428, 473, 475, 478, 480, 482, 484, 485, 489, 490, 493, 496], "non_block": [128, 306], "nondominatedpartit": 31, "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 45, 50, 51, 60, 66, 67, 68, 78, 86, 91, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 128, 130, 134, 136, 138, 142, 145, 146, 148, 155, 156, 159, 162, 166, 167, 168, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 222, 225, 228, 231, 232, 235, 236, 238, 240, 248, 250, 252, 254, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 298, 303, 306, 309, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 347, 348, 361, 371, 375, 386, 387, 388, 394, 398, 400, 418, 423, 424, 425, 426, 427, 428, 480, 489, 495, 496], "nonetheless": 494, "nonlinear": [40, 217, 493], "nonpredict": [205, 207, 208, 209, 210, 212, 213, 214], "nonpredictiverecommend": [210, 213, 214, 475], "nonzero": [37, 47, 225, 475], "noqa": [128, 306, 476], "nor": [8, 383, 472], "norecommenderslefterror": [188, 189], "noreturn": [192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 267], "normal": [130, 176, 177, 178, 309, 474, 475, 478, 489, 493, 495, 496], "normalize_": 493, "normalize_input_dtyp": 475, "normalize_ramp": [309, 475, 486, 493], "normalize_sigmoid": [309, 475, 486], "normalprior": 475, "notabl": [475, 484, 492], "notat": 495, "note": [37, 47, 60, 128, 219, 248, 252, 254, 265, 266, 306, 375, 382, 383, 472, 473, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494], "noteworthi": 481, "noth": [17, 34, 37, 45, 47, 48, 54, 89, 130, 159, 190, 192, 198, 200, 207, 208, 209, 210, 217, 219, 225, 257, 270, 284, 288, 290, 331, 478, 487], "notic": [476, 478, 490, 492], "notimplementederror": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 161, 232, 235, 236, 254, 257, 259, 261, 265, 266, 270, 284, 286, 288, 290], "notwithstand": 478, "now": [472, 473, 475, 494, 497], "np": [375, 480, 482, 487, 491, 497], "nu": 112, "num": [389, 403], "num_disc_1": 481, "num_experi": 248, "num_fantasi": 11, "num_featur": [128, 306], "num_sampl": 117, "num_valu": 489, "number": [11, 17, 23, 34, 47, 117, 125, 128, 130, 134, 136, 159, 182, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 248, 252, 254, 257, 306, 350, 375, 385, 394, 400, 403, 410, 415, 416, 473, 474, 475, 479, 481, 482, 483, 486, 487, 489, 490, 491, 497], "numer": [9, 12, 15, 18, 34, 37, 38, 39, 40, 41, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 90, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 217, 225, 250, 309, 382, 383, 390, 416, 427, 428, 473, 475, 482, 483, 485, 486, 487, 489, 491, 493, 495], "numerical_measurements_must_be_within_toler": [34, 427, 475, 481], "numerical_onli": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "numericalcontinuousparamet": [48, 66, 161, 217, 489, 490, 491, 495, 496], "numericaldiscreteparamet": [225, 473, 489, 490, 491, 496, 497], "numericaltarget": [130, 134, 250, 473, 475, 486, 490, 491, 495, 496], "numpi": [163, 375, 384, 395, 400, 405, 407, 475, 480, 482, 491, 497], "o": [128, 306, 375, 473, 482, 483, 487], "obj": [166, 167, 168, 236], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 226, 227, 236, 237, 240, 242, 257, 259, 261, 262, 264, 266, 270, 273, 284, 286, 288, 290, 297, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 349, 359, 361, 375, 383, 390, 391, 393, 396, 400, 418, 474, 475, 476, 478, 482, 484, 485, 488, 489, 491, 492, 493, 495, 496, 497], "objective_json": 490, "oblig": 478, "observ": [246, 257, 259, 261, 266, 270, 284, 286, 288, 290, 491, 493], "obsolet": 475, "obtain": [248, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 473, 475, 481, 485, 486, 490, 494], "occur": [59, 476], "occurr": [480, 482], "octanol": [482, 487], "off": [8, 254, 366, 473, 475, 480, 482, 483, 486], "offer": [361, 472, 473, 474, 478, 479, 484, 487, 488, 490, 491, 492, 493, 494, 497], "offset": [48, 115], "offset_initial_valu": 115, "offset_prior": 115, "often": [375, 474, 479, 482, 483, 484, 485, 487, 490, 497], "oftentim": [490, 491], "oh": [145, 150, 473, 489, 490], "old": 494, "omit": [9, 12, 15, 18, 198, 200, 252, 309, 361, 473, 489, 490], "onc": [128, 252, 306, 487, 491], "one": [9, 12, 15, 18, 23, 34, 66, 68, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 173, 182, 183, 188, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 219, 232, 250, 270, 294, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 343, 344, 379, 385, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495], "ones": [128, 219, 306, 314, 390, 475, 480, 493, 494, 495], "ongo": 494, "onli": [11, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 100, 112, 125, 128, 130, 134, 136, 159, 219, 225, 250, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 294, 306, 314, 315, 361, 362, 365, 375, 379, 390, 392, 400, 415, 416, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 497], "onnx": [265, 266, 406, 449, 473, 475, 492], "onnx_input_nam": 266, "onnx_str": [266, 475], "onto": [9, 12, 15, 18, 476], "open": [34, 47, 161, 163, 257, 259, 261, 266, 270, 284, 286, 288, 290, 473, 476], "opentelemetri": [473, 475, 483], "oper": [45, 48, 57, 128, 238, 257, 259, 261, 266, 270, 284, 286, 288, 290, 294, 306, 384, 404, 474, 475, 480, 482, 483, 484, 485, 488, 490], "opposit": 482, "opt": [473, 483], "optim": [14, 23, 34, 47, 48, 79, 128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 246, 248, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 434, 475, 477, 479, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495], "optimize_acqf": [48, 200], "optimize_acqf_": 48, "optimize_acqf_discret": 200, "optimize_acqf_mix": 200, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 91, 96, 100, 111, 112, 113, 114, 115, 116, 117, 118, 122, 128, 130, 134, 136, 142, 145, 146, 148, 156, 159, 162, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 238, 240, 248, 252, 254, 284, 288, 290, 303, 306, 309, 361, 371, 375, 386, 387, 388, 474, 475, 476, 479, 481, 482, 484, 485, 486, 489, 490, 491, 492, 493, 495, 497], "oracl": 491, "orchestr": [476, 481], "order": [128, 219, 225, 306, 472, 473, 475, 476, 481, 482, 487, 490, 494], "ordereddict": [128, 306], "ordin": [330, 493], "org": [282, 349, 388, 473, 478], "organ": 476, "origin": [28, 34, 161, 343, 344, 356, 375, 384, 393, 472, 475, 476, 478, 488, 490, 492, 493], "orthogon": 476, "oserror": 474, "other": [56, 119, 128, 161, 217, 306, 344, 375, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497], "otherwis": [48, 64, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 306, 393, 415, 478, 479, 484, 494], "our": [473, 476, 479, 481, 482, 484, 490, 491], "out": [128, 225, 306, 330, 473, 478, 483, 486, 491, 494], "out_featur": [128, 306], "outcom": [128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 473, 480, 487, 493], "outlier": 375, "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 100, 122, 125, 128, 130, 134, 136, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 375, 383, 384, 385, 474, 475, 477, 480, 491, 493, 495, 496], "output_label": 384, "outputscal": 122, "outputscale_initial_valu": 122, "outputscale_prior": 122, "outsid": [34, 161, 189, 257, 259, 261, 266, 270, 284, 286, 288, 290, 294, 309, 331, 475, 490], "outstand": 478, "over": [34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 217, 252, 306, 472, 475, 479, 481, 483, 484, 494], "overal": [219, 475, 476, 481, 486, 494], "overhead": 483, "overlap": [67, 68, 161, 482], "overload": 495, "overrid": [128, 238, 240, 306, 475], "overridden": 476, "overview": [473, 490, 493], "own": [128, 192, 306, 473, 474, 475, 476, 478, 482, 487], "owner": 478, "ownership": 478, "p": [331, 476, 484, 485, 490, 492, 495, 497], "p1": [330, 489, 490, 491, 495], "p1_json": 490, "p1_via_json": 490, "p2": [330, 489, 490, 491, 495], "p2_json": 490, "p2_via_json": 490, "p3": 490, "p_cont": 489, "p_disc": 489, "p_i": 37, "pack": 490, "packag": [100, 153, 312, 474, 475, 476, 487, 491, 492, 497], "page": [473, 475, 476, 484], "pair": [330, 343, 473, 487], "pairwis": 375, "pairwise_dist": 375, "pam": [209, 375], "pamclusteringrecommend": 488, "panda": [55, 226, 244, 245, 250, 370, 375, 395, 475, 480, 482, 483, 487, 489, 490, 491], "panic": 472, "paper": 494, "paper_fil": 494, "parallel": [252, 475, 476, 496], "parallel_run": [252, 483], "param": [128, 306, 375, 449, 471], "param1": [489, 491], "param2": [489, 491], "param_1": 480, "param_2": 480, "param_bounds_comp": 475, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 88, 92, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 221, 224, 225, 226, 227, 230, 231, 232, 238, 240, 242, 246, 248, 250, 252, 254, 257, 259, 261, 264, 266, 270, 273, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 301, 303, 306, 309, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 343, 344, 354, 355, 356, 359, 361, 364, 365, 366, 369, 370, 371, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 403, 408, 409, 411, 412, 415, 416, 418, 427, 428, 437, 440, 473, 475, 476, 482, 483, 484, 490, 491, 492, 494, 495, 496], "parameter": [173, 174, 175, 176, 177, 178, 179], "parameter_json": 490, "parameter_nam": [217, 219, 225], "parameter_names_in_cardinality_constraint": 217, "parameterencod": [142, 150, 151, 153, 156], "parametr": 482, "parent": [128, 306, 476], "pareto": [14, 31, 134, 457, 471, 473, 475, 486], "paretoobject": [473, 475, 480, 485, 496], "park": 375, "pars": [401, 475], "parser": 475, "part": [17, 28, 34, 43, 76, 128, 193, 217, 219, 225, 306, 428, 475, 476, 478, 479, 480, 481, 482, 487, 488, 489, 490, 493, 497], "parti": [373, 478, 491], "partial": [28, 473, 475, 496], "particl": 494, "particular": [34, 128, 225, 246, 306, 472, 473, 474, 476, 478, 481, 486, 487, 489, 490, 491], "particularli": [361, 481], "partit": [9, 12, 31, 209, 252, 254, 475, 488, 491], "partitionexplain": [98, 101], "pass": [34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 74, 100, 128, 159, 207, 208, 209, 210, 219, 225, 236, 270, 284, 288, 290, 306, 330, 375, 385, 391, 475, 476, 480, 484, 485, 487, 490, 493, 495], "passthrough": [30, 126, 221, 274, 340], "patch": 475, "patent": 478, "path": [91, 128, 306, 475, 476, 483, 497], "pattern": [153, 476, 494], "patternfingerprint": 153, "pd": [34, 198, 200, 225, 250, 264, 343, 344, 389, 475, 480, 482, 484, 487, 489, 490, 491], "pdf": 494, "peak": [331, 495], "peek": 490, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 473, 475, 496], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 475, 480, 481], "per": [248, 264, 475, 487, 489, 491], "percent": [248, 478], "percentag": [200, 314, 383, 488], "perfectli": 490, "perform": [128, 200, 248, 306, 314, 375, 390, 472, 473, 475, 476, 478, 479, 480, 481, 483, 485, 487, 488, 491, 492, 494], "period": [113, 493], "period_length_initial_valu": 113, "period_length_prior": 113, "periodickernel": 475, "perman": 496, "permiss": [473, 478], "permut": [56, 59, 60, 344, 475, 482], "permutation_invari": 56, "permutationexplain": [98, 101], "perpetu": 478, "persist": [128, 306, 475, 477, 481, 483, 490, 492], "perspect": [490, 495], "pertain": 478, "pharmacophor": 153, "pharmacophorefingerprint": 153, "phase": 190, "phenomenon": 481, "philosophi": 490, "physic": [485, 491], "physiochemicalproperti": 153, "physiochemicalpropertiesfingerprint": 153, "pi": 7, "pick": 375, "pickl": [128, 306, 475], "picklabl": [128, 306], "pictur": 473, "piec": [473, 481, 482], "piecewis": [114, 495], "piecewisepolynomialkernel": 475, "pin": [28, 128, 306, 475], "pin_discret": 28, "pinned_part": 28, "pip": [473, 475, 476, 485, 497], "pipe": 495, "pipelin": [375, 475, 476], "pl": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62], "place": [9, 12, 15, 18, 37, 128, 250, 306, 381, 382, 383, 474, 475, 476, 478, 481, 484, 487, 490, 494], "placehold": 346, "plai": [481, 485, 493], "plain": 274, "plainkernelfactori": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 270], "plan": [265, 484, 487, 495], "platt": 494, "pleas": [128, 306, 375, 473, 479, 485, 488, 493], "plenti": 485, "plot": [100, 102, 248, 475, 492, 494, 496], "plot_abegin_convert_pipelin": 406, "plot_ebegin_float_doubl": 406, "plot_kmedoids_digit": 375, "plot_typ": 100, "plu": [250, 473], "plugin": 475, "pm": 5, "po16": 487, "poetri": 475, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 33, 34, 100, 128, 156, 161, 182, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 375, 390, 405, 406, 413, 414, 415, 416, 420, 472, 473, 475, 477, 479, 480, 481, 484, 485, 486, 488, 489, 493, 495, 496, 497], "polar": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 227, 375, 473, 475, 477, 496, 497], "polym": 487, "polynomi": [114, 115], "polynomialkernel": 475, "polytop": 475, "popular": [485, 487, 492], "posit": [9, 12, 15, 18, 100, 128, 306, 361, 415, 475, 482, 485, 486, 495], "possibl": [34, 47, 128, 162, 217, 225, 226, 227, 246, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 361, 375, 473, 475, 478, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 494, 497], "possibli": [128, 306, 475, 480, 481], "post": [128, 306, 486, 487], "post_hook": 361, "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 128, 198, 200, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 293, 306, 322, 475, 479, 492], "posterior_mean": 257, "posterior_mod": 257, "posterior_stat": [34, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 475, 481], "posteriorlist": 264, "posteriorstandarddevi": [475, 479], "posteriortransform": 306, "postprocess": 370, "potenti": [219, 309, 473, 474, 475, 476, 481, 482, 485, 486, 489, 493, 497], "power": [115, 309, 329, 475, 478, 482, 488, 493, 495], "powertransform": [493, 495], "pp": 375, "pr": [475, 476], "practic": [479, 485, 488], "pre": [128, 162, 188, 273, 306, 449, 474, 475, 476, 493, 496], "pre_hook": 361, "preced": 483, "precis": [60, 188, 217, 314, 394, 406, 407, 421, 475, 495, 496], "precomput": [148, 375], "predefin": [481, 488], "predict": [31, 34, 84, 210, 257, 259, 261, 266, 270, 284, 286, 288, 290, 375, 473, 475, 479, 480, 486, 491, 492, 494, 496], "predictor": 292, "prefer": [34, 478, 484, 486, 490], "prefix": [128, 306, 371, 493], "preliminari": 494, "prepar": [476, 478, 497], "prepend": [128, 306], "preprocess": 475, "presenc": [200, 474, 475], "present": [34, 75, 100, 125, 128, 130, 134, 136, 219, 306, 343, 344, 361, 375, 475, 482, 491, 497], "preserv": [128, 306], "preset": [270, 277, 280, 282, 475], "pressur": [473, 482], "pretrain": [266, 449, 471], "pretti": 394, "pretty_print_df": 475, "prevent": [161, 235, 236, 361, 474, 475, 476], "previou": [188, 475, 481, 483, 493, 494], "previous": [34, 314, 480, 481], "price": 487, "primari": 481, "primarili": 479, "principl": 492, "print": [128, 250, 306, 379, 394, 473, 475, 489, 497], "prior": [111, 112, 113, 114, 115, 116, 117, 118, 122, 173, 174, 175, 176, 177, 178, 179, 257, 280, 473, 474, 475], "priori": [482, 490, 494], "privat": [475, 477], "probabilist": 479, "probabl": [7, 21, 23, 445, 471, 475], "problem": [79, 475, 476, 481, 486, 490, 493], "problemat": [365, 474, 487], "proce": [248, 480, 483], "procedur": [479, 494], "proceed": 494, "process": [34, 105, 128, 268, 269, 270, 271, 275, 276, 277, 279, 280, 281, 282, 306, 389, 415, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 490, 494, 495], "prod_i": 486, "produc": [125, 130, 134, 136, 250, 473, 475, 476, 483, 491, 493, 495], "product": [61, 121, 219, 225, 226, 227, 336, 357, 440, 471, 473, 475, 478, 482, 484, 493, 495, 496, 497], "product_paramet": [225, 489], "productkernel": 475, "progress": [34, 186, 475, 484], "prohibit": 479, "project": [473, 475, 483], "promin": 478, "promis": 480, "proper": 475, "properli": [28, 474, 475, 486, 489], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 219, 220, 224, 225, 257, 259, 261, 264, 266, 270, 273, 277, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 348, 349, 400, 414, 418, 475, 476, 482, 484, 487], "propos": 481, "protobuf": 475, "protocol": [181, 182, 262, 272, 365, 475], "prototyp": 477, "provid": [9, 12, 15, 17, 18, 34, 48, 100, 104, 128, 148, 159, 162, 182, 188, 189, 192, 193, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 238, 242, 246, 248, 250, 252, 254, 257, 259, 261, 266, 270, 280, 282, 284, 286, 288, 290, 306, 309, 343, 357, 361, 375, 377, 382, 383, 388, 391, 395, 415, 416, 473, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "proxim": 493, "prune": [14, 15, 16, 18, 19], "prune_baselin": [14, 15, 16, 18, 19], "pstd": [6, 475, 479], "pubchem": 153, "pubchemfingerprint": 153, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 219, 220, 224, 225, 242, 257, 259, 261, 262, 264, 266, 270, 272, 273, 277, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 348, 349, 375, 400, 414, 418, 475, 476], "publicli": 478, "publish": 475, "pull": 475, "punish": 8, "pure": [8, 11, 17, 183, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 219, 254, 265, 416, 475, 496], "purerecommend": [185, 187, 188, 189, 190, 192, 198, 205, 475], "purpos": [17, 473, 474, 476, 478, 481, 484, 490, 493, 497], "pursu": 493, "push": [47, 476], "put": [483, 487], "puzzl": 473, "py": [282, 375, 475, 483], "py313": 476, "pyarrow": 475, "pydant": 475, "pydoclint": [475, 476], "pydocstyl": 476, "pylint": 475, "pymatgen": 474, "pypi": [473, 475], "pyproject": 475, "pytest": [475, 476], "python": [33, 349, 362, 473, 474, 475, 476, 481, 483, 490], "python310": 474, "pytorch": 475, "pyupgrad": 475, "q": [114, 128, 292, 293, 306, 480], "qehvi": [9, 475], "qei": [10, 475], "qkg": [11, 475], "qlogehvi": [12, 475], "qlogei": [13, 475], "qlognehvi": [9, 12, 15, 18], "qlognei": [16, 475], "qlognoisyexpectedhypervolumeimprov": [475, 486], "qlognparego": 475, "qnegintegratedposteriorvari": 479, "qnehvi": 18, "qnei": [19, 475], "qnipv": [17, 475, 479], "qnoisyexpectedhypervolumeimprov": 475, "qpi": 21, "qposteriorstandarddevi": 479, "qpstd": [20, 475, 479, 481], "qsimpleregret": 23, "qsr": [22, 475], "qt": 23, "qthompsonsampl": 475, "quad": 495, "quadrat": [118, 309, 493, 495], "qualifi": [128, 306], "qualiti": 476, "quantif": 494, "quantifi": [479, 494], "quantil": [34, 257, 259, 260, 261, 266, 270, 284, 286, 288, 290, 481], "quantiti": [34, 58, 481, 483, 485, 486, 492, 493, 495, 497], "quantum": 148, "qucb": [24, 475, 479], "queri": [128, 183, 193, 246, 248, 250, 306, 473, 481, 483, 484, 491], "question": [476, 481, 494], "quick": 480, "quickli": [482, 493, 495], "qupperconfidencebound": 479, "qvarucb": 475, "r": 47, "radial": 116, "radiu": [153, 475, 487], "rais": [9, 12, 15, 17, 18, 31, 34, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 100, 104, 128, 138, 161, 162, 167, 168, 188, 189, 217, 219, 225, 231, 232, 235, 236, 248, 250, 254, 257, 259, 261, 265, 266, 267, 270, 284, 286, 288, 290, 298, 306, 309, 330, 344, 359, 361, 364, 366, 369, 377, 378, 379, 382, 383, 385, 390, 391, 392, 415, 416, 427, 428, 474, 475, 476, 480, 488], "random": [17, 117, 212, 217, 219, 248, 250, 252, 289, 290, 375, 414, 415, 416, 473, 475, 479, 487, 488, 491, 497], "random_forest": 290, "random_se": [248, 252, 491], "random_st": 375, "random_tie_break": [213, 415, 475], "randomforestregressor": 290, "randomforestsurrog": [475, 492], "randomli": [200, 214, 415, 479, 485, 486, 488], "randomrecommend": [475, 480, 488], "randomst": 375, "rang": [47, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 301, 309, 324, 382, 473, 475, 482, 486, 489, 490, 491, 495, 497], "rank": 493, "rare": 475, "rate": [174, 257], "rather": [474, 479, 490], "ration": 118, "raw": [200, 490], "rbf": 116, "rbfkernel": 475, "rdf": 153, "rdffingerprint": 153, "rdkit": [153, 475, 482, 487], "rdkit2ddescriptor": [153, 475], "rdkit2ddescriptorsfingerprint": 153, "rdkitfingerprint": 153, "re": [128, 306, 476, 488], "reach": [309, 323, 331, 495], "reachabl": 483, "reactant": [485, 487], "reaction": [473, 482, 485, 487, 494], "reactor": [480, 494], "reactora": 494, "reactorb": 494, "reactorc": 494, "read": [148, 219, 375, 473, 475, 476], "readabl": [224, 394, 403, 475, 477, 478, 490], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 248, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 476, 480], "readm": [475, 476], "reagent": [482, 487], "real": [400, 473, 481, 493], "realist": 491, "realiz": [246, 491], "realli": 495, "reason": [45, 128, 207, 208, 209, 210, 306, 475, 478, 479, 480, 482, 483, 486, 487, 491, 493], "reassembl": 490, "rebas": 476, "rec": [480, 481], "rec_finish": 480, "rec_next": 480, "rec_pend": 480, "receiv": [128, 306, 478, 483, 490], "recip": 476, "recipi": 478, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 76, 87, 88, 100, 142, 145, 146, 148, 156, 159, 161, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 212, 213, 214, 246, 248, 262, 264, 265, 314, 383, 385, 434, 471, 472, 473, 475, 476, 479, 483, 485, 487, 491, 492, 494, 495, 496, 497], "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 100, 185, 187, 188, 189, 190, 195, 198, 200, 262, 264, 472, 475, 480], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400, 473, 481, 483, 490], "record": [34, 128, 306, 314, 315, 473, 483, 494], "recreat": [277, 490], "recurs": [128, 185, 187, 188, 189, 190, 306, 354, 355], "redesign": [475, 493], "redistribut": 478, "reduc": [159, 484, 487, 493], "reduct": 496, "redund": [339, 495], "ref": 473, "ref_point": 31, "refactor": 475, "refer": [9, 12, 15, 18, 31, 128, 246, 282, 306, 322, 360, 375, 390, 406, 474, 475, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "referenc": [128, 306, 476], "reference_point": [9, 12, 15, 18], "refin": [473, 475, 481, 484], "reflect": [192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 475, 476, 479, 482, 487, 493], "regard": [37, 43, 476, 478], "regardless": [128, 306, 492], "regim": [475, 485], "region": [163, 309, 331], "regist": [128, 306, 361, 445], "register_backward_hook": [128, 306], "register_buff": [128, 306], "register_custom_architectur": 475, "register_forward_hook": [128, 306], "register_forward_pre_hook": [128, 306], "register_full_backward_hook": [128, 306], "register_full_backward_pre_hook": [128, 306], "register_hook": [445, 475], "register_load_state_dict_post_hook": [128, 306], "register_load_state_dict_pre_hook": [128, 306], "register_modul": [128, 306], "register_module_forward_hook": [128, 306], "register_module_forward_pre_hook": [128, 306], "register_module_full_backward_hook": [128, 306], "register_module_full_backward_pre_hook": [128, 306], "register_paramet": [128, 306], "register_state_dict_post_hook": [128, 306], "register_state_dict_pre_hook": [128, 306], "registr": 475, "regress": 284, "regret": [22, 23], "regroup": 475, "regular": [23, 161, 294, 474, 475, 480, 494], "reinstal": 473, "rel": [9, 12, 15, 18, 31, 47, 248, 382, 482, 486], "relat": [58, 125, 130, 131, 134, 136, 149, 219, 237, 307, 342, 472, 473, 475, 481, 482, 483, 494], "relationship": [473, 476, 486, 494], "relative_perc": 383, "relative_threshold": [47, 475, 482], "releas": [128, 306, 473, 475], "relev": [56, 100, 128, 250, 390, 391, 392, 475, 476, 481, 482, 484, 494, 497], "reli": [474, 475, 486, 495], "reliabl": 487, "reloc": 475, "remain": [59, 161, 190, 254, 478, 487, 490, 491], "remain_switch": [190, 475], "remaind": 416, "remind": 475, "remot": 476, "remov": [55, 58, 59, 128, 219, 225, 306, 339, 476, 482, 489, 495], "removablehandl": [128, 306], "remove_dupl": [128, 306], "renam": [475, 476], "render": 100, "reoccur": 494, "reorder": 475, "reorgan": 475, "repeat": [475, 476, 480, 481], "repetit": 252, "rephras": 482, "replac": [128, 306, 475, 476], "replic": [257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 475, 486, 490, 496], "repo": 475, "report": [182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 474], "repositori": [473, 476], "repres": [9, 12, 15, 18, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 120, 121, 148, 219, 254, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 325, 330, 377, 395, 400, 403, 415, 473, 475, 478, 481, 486, 487, 489, 491, 495, 497], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 242, 257, 259, 261, 262, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 366, 368, 377, 379, 394, 400, 452, 475, 480, 481, 487, 490, 491, 496, 497], "reproduc": [475, 478, 496], "reproduct": 478, "request": [34, 87, 88, 188, 189, 190, 232, 257, 259, 260, 261, 266, 270, 273, 284, 286, 288, 290, 312, 385, 415, 416, 472, 475, 480, 481, 484, 485], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 47, 48, 54, 85, 100, 128, 190, 225, 298, 306, 361, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497], "require_norm": [130, 486, 490], "requires_grad": [128, 306], "requires_grad_": [128, 306], "reserv": [473, 476], "reset": [34, 128, 306, 480], "reset_index": 480, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 490], "resolv": [128, 306, 370], "resort": [294, 476, 490, 497], "resource_track": 474, "resp": 220, "respect": [34, 128, 200, 220, 248, 252, 306, 313, 331, 343, 476, 481, 482, 484, 485, 486, 490, 491, 492, 493, 495, 497], "respond": 472, "respons": [185, 187, 188, 189, 190, 478, 481, 488], "restart": [188, 200], "restor": 490, "restr": 23, "restrain": 487, "restrict": [219, 225, 246, 252, 254, 475, 484, 491, 493, 494, 496], "result": [9, 11, 12, 15, 18, 34, 128, 159, 161, 225, 248, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 381, 389, 473, 475, 477, 478, 479, 481, 482, 483, 485, 487, 488, 490, 491, 493, 494, 495, 496, 497], "retain": [478, 482], "retrain": [265, 266, 492], "retriev": [219, 246, 353, 354, 355, 369, 475, 476, 491], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 100, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 202, 205, 207, 208, 209, 210, 213, 214, 217, 219, 221, 222, 225, 226, 227, 228, 230, 231, 232, 235, 236, 238, 239, 240, 242, 244, 245, 248, 250, 252, 254, 257, 259, 261, 262, 264, 266, 267, 270, 273, 274, 278, 284, 286, 288, 290, 292, 293, 294, 296, 298, 301, 303, 306, 309, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 340, 343, 344, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 403, 408, 409, 415, 416, 418, 423, 424, 425, 426, 427, 428, 475, 481, 482, 491, 492, 497], "reus": [190, 475], "reuse_last": 188, "revers": 495, "review": 476, "revis": [475, 478], "reward": 8, "rework": 475, "rewrit": 475, "rff": 117, "rffkernel": 475, "rh": [48, 50, 51, 482], "right": [48, 179, 331, 332, 390, 400, 473, 474, 476, 478, 482, 484, 486, 487, 493, 495], "right_df": 390, "rihana": 477, "rim": 477, "risk": [8, 474, 478, 481], "roam": 474, "robust": [375, 473, 475, 494], "robustli": 294, "role": [475, 476, 481, 485, 486, 491, 493, 496], "room": 481, "root": [473, 476, 482], "round": [394, 482], "roundtrip": [475, 490], "rout": [375, 490], "routin": 47, "row": [9, 12, 15, 18, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 250, 314, 343, 344, 375, 382, 385, 389, 390, 392, 394, 475, 480, 481, 484, 489, 491], "rowei": 494, "roya": 477, "royalti": 478, "rq": 118, "rqkernel": 475, "ruff": [475, 476], "rule": [475, 493, 495], "run": [128, 248, 252, 306, 473, 474, 475, 476, 481, 484, 487, 490, 491, 496, 497], "runner": [252, 483], "running_mean": [128, 306], "running_var": [128, 306], "runtim": [128, 306, 406, 474, 480], "runtimeerror": [128, 188, 306], "s3": 475, "s41586": [282, 388], "safe": [475, 476, 481], "safeti": 361, "sai": [128, 306, 482], "said": 476, "same": [58, 128, 138, 190, 225, 231, 250, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 323, 356, 474, 475, 482, 483, 484, 490, 491, 492, 494, 495], "sampl": [11, 17, 23, 47, 128, 200, 212, 213, 214, 217, 315, 375, 413, 414, 415, 416, 473, 475, 477, 485, 496], "sample_from_full_factori": [217, 475], "sample_inactive_paramet": 47, "sample_shap": 128, "sample_uniform": [217, 475, 491], "sampler": 128, "samples_full_factori": [217, 475], "samples_random": [217, 475], "sampling_algorithm": [213, 414, 479], "sampling_fract": [17, 479], "sampling_method": [17, 479], "sampling_n_point": [17, 479], "sampling_percentag": [200, 488], "satisfi": [43, 44, 45, 225], "save": [128, 306, 475, 491], "scalar": [14, 130, 473, 475, 481, 486, 490], "scale": [122, 175, 176, 177, 178, 179, 217, 219, 225, 309, 323, 375, 418, 475, 479, 486, 493, 495], "scalekernel": 475, "scaler": 475, "scaling_bound": [217, 219, 225], "scatter": [100, 102], "scenario": [254, 480, 482, 486, 494, 496, 497], "scene": [486, 491, 492], "schema": 481, "scheme": [475, 482], "scienc": [473, 477], "scientif": [475, 494], "scikit": [153, 375, 473, 475, 477, 487], "scipi": 475, "scm": 475, "screen": [356, 494], "script": [370, 474, 475, 483, 497], "scriptmodul": [128, 306], "seamlessli": 490, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 41, 55, 58, 71, 76, 88, 92, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 229, 248, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 314, 390, 391, 437, 440, 460, 475, 477, 480, 481, 482, 483, 484, 485, 488, 490, 491, 496], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 100, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 220, 224, 225, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 471, 473, 475, 481, 482, 483, 484, 485, 487, 489, 490, 491, 497], "searchspace_ful": 484, "searchspace_json": 490, "searchspace_reduc": 484, "searchspacetyp": [192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 219, 489], "secfp": 153, "secfpfingerprint": 153, "second": [389, 408, 482, 483, 485, 493, 495], "secondari": [473, 483], "section": [473, 475, 476, 478, 490], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 169, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 224, 225, 248, 252, 254, 257, 259, 261, 262, 264, 266, 270, 273, 280, 282, 284, 286, 288, 290, 301, 303, 306, 309, 311, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 359, 365, 375, 383, 389, 396, 400, 418, 472, 473, 476, 480, 481, 483, 484, 485, 487, 490, 491, 493, 495, 496], "seed": [248, 252, 411, 412, 473, 475, 497], "seek": 486, "seem": [406, 474, 493], "seen": 479, "segment": [332, 495], "select": [6, 43, 44, 45, 73, 77, 85, 185, 187, 188, 189, 190, 193, 200, 210, 212, 213, 257, 259, 261, 266, 270, 284, 286, 288, 290, 375, 389, 415, 473, 475, 479, 481, 482, 485, 486, 487, 488, 490, 492], "select_recommend": [185, 187, 188, 189, 190, 475], "selectivity_mean": 481, "selectivity_mod": 481, "selectivity_q_0": 481, "selectivity_std": 481, "self": [128, 306, 361, 375, 378, 423, 424, 425, 426, 476], "sell": 478, "semant": [475, 490, 493], "sens": [60, 134, 361, 365, 389, 482, 487, 492], "sent": 478, "sentinel": [347, 348], "separ": [252, 254, 294, 359, 375, 418, 419, 472, 475, 476, 478, 480, 485, 490, 493], "sequenc": [34, 48, 167, 188, 189, 217, 219, 225, 226, 227, 230, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 309, 314, 330, 331, 339, 343, 344, 361, 371, 378, 384, 390, 391, 396, 481, 486, 488, 495], "sequenti": [128, 187, 188, 189, 190, 200, 306, 475, 488, 495], "sequential_continu": [200, 475, 488], "sequential_greedy_x": 475, "sequentialgreedyrecommend": 475, "sequentialmetarecommend": [189, 488], "sequentialstrategi": 475, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 44, 45, 55, 142, 145, 146, 148, 156, 159, 198, 200, 301, 303, 309, 395, 475, 482, 484], "serial": [128, 189, 225, 242, 306, 315, 471, 474, 475, 476, 482, 488, 496], "serializ": [473, 482, 488], "serialize_datafram": 490, "serialized_df": 244, "serialmixin": [26, 34, 38, 43, 109, 125, 143, 171, 185, 217, 219, 225, 261, 264, 273, 301, 303, 309, 319, 400, 475], "serv": [254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 390, 481, 482, 487, 495], "servic": 478, "session": [483, 490], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 45, 47, 58, 60, 67, 68, 100, 104, 128, 159, 182, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 248, 252, 277, 306, 313, 375, 388, 389, 411, 412, 434, 452, 472, 473, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "set_extra_st": [128, 306], "set_output": 375, "set_param": 375, "set_random_se": 497, "set_submodul": [128, 306], "set_to_non": [128, 306], "set_x_pend": 28, "setpoint": 156, "setup": [248, 482, 491, 497], "setuptool": 475, "sever": [66, 128, 162, 183, 306, 335, 473, 475, 476, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 497], "sh": 485, "shall": [188, 383, 478, 486], "shallow": [128, 306], "shap": [100, 473, 475, 477, 492, 496], "shap_valu": 492, "shape": [9, 12, 23, 31, 217, 224, 331, 375, 415, 475, 489, 493, 495, 497], "shapinsight": [98, 99, 101, 102, 475, 485], "shaplei": 100, "share": [128, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 475, 478, 494], "share_memori": [128, 306], "share_memory_": [128, 306], "shield": [282, 388, 473, 487], "shift": [306, 322, 495], "shift_first": [322, 495], "ship": [419, 483, 490], "shm": 474, "short": 476, "shortcut": [225, 489, 490], "shorten": [475, 476], "shot": 494, "should": [34, 47, 56, 100, 128, 159, 190, 240, 252, 306, 309, 343, 344, 375, 381, 383, 387, 388, 394, 399, 400, 408, 473, 475, 476, 480, 481, 482, 485, 489, 491, 492, 494, 497], "show": [100, 128, 306, 482, 485, 493], "showcas": 488, "shown": [475, 481, 493], "shutdown": 474, "side": [48, 161, 332, 475, 493, 495], "sideproduct_yield": 493, "sigma": [176, 177, 178, 179, 309, 323, 477, 486, 493, 495], "sigmoid": [309, 330], "sigmoidtransform": 309, "signal": [70, 486], "signatur": [94, 128, 298, 306, 359, 361, 475, 476, 482, 490], "significantli": [225, 482, 483, 493], "silenc": 476, "silent": [475, 482], "similar": [128, 189, 306, 474, 475, 482, 483, 485, 487, 488, 489, 490, 494, 497], "similarli": [128, 306, 487], "simpl": [22, 23, 128, 306, 349, 375, 473, 475, 480, 481, 488, 491, 493, 494], "simpler": [476, 490], "simplest": [489, 492], "simplex": [225, 496], "simplex_paramet": [225, 489], "simpli": [365, 476, 482, 484, 486, 487, 488, 489, 490, 493, 494], "simplic": 361, "simplifi": 476, "simul": [89, 383, 473, 475, 494, 496], "simulate_experi": [252, 254, 491], "simulate_scenario": [254, 475, 483, 491], "simulate_transfer_learn": 491, "simultan": [486, 492], "sin": 495, "sinc": [60, 128, 161, 219, 265, 306, 361, 375, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 490, 491, 492, 494, 495], "singer": 494, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 56, 100, 128, 136, 161, 217, 219, 225, 248, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 301, 303, 306, 309, 379, 400, 407, 415, 421, 473, 475, 481, 482, 483, 484, 485, 486, 487, 489, 492, 493, 494, 495, 496], "single_lin": 379, "singledispatch": 401, "singletargetobject": [34, 301, 303, 309, 473, 475, 492, 496], "sinusoid": 495, "site": 474, "situat": [100, 161, 415, 474, 476, 480, 482, 486, 487, 490, 491, 493, 494], "size": [23, 107, 108, 109, 112, 114, 116, 117, 118, 128, 188, 190, 219, 224, 225, 306, 315, 403, 481, 490, 491, 494, 497], "skeleton": 475, "skew": 495, "skfp": 153, "skicit": 475, "skin": 491, "skip": [128, 222, 228, 306, 475, 481], "sklearn": [210, 406], "sklearnclusteringrecommend": [207, 208, 209, 475, 480], "slightli": [246, 491], "slope": [332, 495], "slope_left": [332, 495], "slope_right": [332, 495], "slot": [452, 471, 475, 482], "slow": [480, 489], "slower": [375, 480], "slowest": 475, "small": [341, 345, 475, 479, 487, 493], "smaller": [34, 481, 494], "smallest": [217, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 375, 390, 489], "smart": [473, 495], "smile": [159, 368, 370, 371, 473, 487], "smoke": 475, "smooth": [112, 114, 179], "smoothedboxprior": 475, "smoother": 112, "snippet": 483, "so": [34, 128, 248, 265, 306, 375, 389, 473, 474, 481, 482, 483, 484, 486, 487, 488, 490, 493, 495], "softwar": [473, 478], "sola": 477, "sole": 478, "solut": [79, 481, 482, 486, 489, 490, 494], "solv": [265, 475], "solvent": [473, 482, 487], "solvent_1": 482, "solvent_2": 482, "solvent_3": 482, "solvent_encoding1": 482, "solvent_encoding2": 482, "solvent_mordred_enc": 482, "solvent_rdkit_enc": 482, "solver": 491, "some": [56, 128, 306, 406, 475, 480, 481, 482, 483, 487, 488, 490, 491, 492, 493, 497], "someth": [92, 128, 306], "sometim": [482, 486, 491, 493], "somewhat": 483, "somewher": 481, "soon": [473, 481, 488], "sophist": [475, 484, 490], "sort": 164, "sourabh": 477, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 132, 134, 136, 138, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 202, 205, 207, 208, 209, 210, 212, 213, 214, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 238, 239, 240, 242, 244, 245, 248, 250, 252, 254, 257, 259, 261, 262, 264, 266, 267, 270, 272, 273, 274, 277, 278, 280, 282, 284, 286, 288, 290, 292, 293, 294, 296, 298, 301, 303, 306, 309, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 403, 408, 409, 411, 412, 414, 415, 416, 418, 426, 427, 428, 473, 474, 475, 476, 478], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 41, 48, 55, 58, 71, 76, 82, 88, 92, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 191, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 228, 229, 248, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 314, 375, 390, 415, 437, 440, 460, 471, 475, 477, 480, 482, 483, 484, 485, 487, 488, 490, 491, 496], "span": [64, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 314, 485], "spars": 375, "speak": 494, "spec": [222, 228, 239], "special": [190, 473, 474, 478, 479, 484, 494, 497], "specif": [105, 162, 169, 210, 219, 222, 235, 252, 294, 296, 309, 353, 427, 473, 475, 476, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 47, 56, 93, 100, 104, 128, 148, 159, 161, 162, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 238, 239, 248, 250, 252, 262, 306, 322, 324, 330, 343, 360, 369, 375, 384, 390, 391, 415, 416, 473, 474, 475, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495], "speed": [225, 483, 489], "speed_fast": 489, "speed_norm": 489, "speed_slow": 489, "speedup": [475, 494], "spell": 476, "spellcheck": 475, "sphinx": [475, 476], "split": [192, 480, 493], "sporad": 475, "sqrt": 482, "squar": [375, 482, 493], "squash": 476, "stabil": [475, 483], "stabl": [105, 169, 311], "stage": [481, 482, 490], "stand": 475, "standard": [6, 20, 294, 323, 475, 481, 487, 495], "start": [248, 474, 475, 480, 487, 488, 490, 491, 494, 495], "startup": 475, "stat": [34, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 312, 481], "state": [128, 185, 187, 188, 189, 190, 306, 375, 472, 475, 478, 481, 484], "state_dict": [128, 306], "stateless": [472, 475, 484], "statement": [394, 473, 478], "static": [9, 12, 15, 18, 219, 225, 270, 473, 476, 493, 494], "statist": [34, 257, 259, 260, 261, 266, 270, 284, 286, 288, 290, 315, 473, 475, 483, 496], "statu": 481, "std": [34, 257, 259, 260, 261, 264, 266, 270, 284, 286, 288, 290], "std_threshold": 294, "steep": 330, "steer": 495, "stem": [474, 494], "step": [222, 228, 248, 472, 473, 476, 481, 486, 490, 492, 493, 495], "sterl": 477, "still": [162, 480, 482, 483, 485, 487, 492, 494, 497], "stop": [445, 471, 475, 476], "stoppag": 478, "storag": [128, 306, 481, 483, 490], "store": [28, 128, 143, 294, 301, 306, 375, 473, 475, 481, 497], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 91, 92, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 198, 200, 207, 208, 209, 210, 217, 219, 224, 225, 238, 242, 252, 254, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 304, 306, 309, 312, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 343, 344, 353, 359, 360, 366, 368, 370, 371, 377, 379, 384, 387, 388, 392, 394, 400, 403, 409], "straightforward": [481, 493, 494], "strategi": [17, 200, 219, 246, 475], "stream": [357, 475, 483], "streamingsequentialmetarecommend": [188, 488], "streamingsequentialstrategi": 475, "streamlin": 476, "streamlit": [473, 475], "streibel": 477, "strict": [128, 297, 306, 359], "strictli": [128, 306], "stride": [128, 306], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 158, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 366, 370, 371, 375, 377, 378, 379, 387, 400, 475, 481, 482, 487, 496], "strip": 248, "strong": 475, "strongli": 481, "strtobool": [475, 483], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 52, 238, 473, 474, 475, 476, 477, 481, 487, 490], "studi": [183, 473, 485, 488, 496], "style": [475, 476], "sub": [128, 210, 306, 475, 485, 490], "subclass": [93, 238, 353, 355, 365, 475, 476, 488, 490], "subfold": 483, "subgraph": 487, "subject": 478, "sublicens": 478, "submiss": [475, 478], "submit": [28, 312, 314, 473, 476, 478], "submodul": [128, 306], "subobject": 375, "subpackag": [475, 476, 491], "subselectioncondit": [475, 484, 496], "subsequ": [128, 190, 219, 225, 252, 306, 339, 370, 472, 478, 481, 490, 492], "subset": [34, 125, 130, 134, 136, 159, 219, 356, 391, 415, 481, 482, 484, 487], "subspac": [28, 64, 192, 200, 216, 217, 219, 221, 223, 225, 475, 482, 488, 490, 496, 497], "subspace_continu": 64, "subspace_json": 490, "subspacecontinu": [34, 64, 141, 155, 219, 221, 475, 489], "subspacediscret": [34, 142, 145, 146, 148, 156, 159, 219, 221, 224, 475, 489, 490, 497], "substanc": [153, 159, 369, 475, 482, 485, 487, 494], "substance_12": 482, "substance_3": 482, "substance_43": 482, "substance_data": 475, "substanceencod": [159, 369, 371, 475, 487, 490], "substanceparamet": [473, 475, 482, 483, 485, 489, 490, 496], "substanti": [159, 497], "substrat": 494, "subtract": 493, "subtyp": 490, "success": [303, 415, 490, 495], "success_valu": 303, "suffic": 476, "suffici": [375, 489, 490], "suggest": [485, 491], "suit": 476, "suitabl": [210, 225, 248, 366, 375, 476, 479, 481, 487, 491, 492, 494], "sum": [62, 120, 225, 334, 375, 440, 471, 482, 486, 489, 495], "sum_": [482, 486], "summar": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159, 301, 303, 309], "summari": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159, 301, 303, 309, 475, 476], "superior": 479, "supersed": 478, "suppli": 375, "support": [11, 34, 98, 99, 100, 101, 102, 189, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 406, 473, 475, 476, 477, 478, 482, 485, 487, 488, 489, 491, 492, 493], "supports_batch": 475, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 257, 259, 261, 266, 270, 284, 286, 288, 290, 475, 492], "supports_pending_experi": 475, "supports_transfer_learn": [257, 259, 261, 266, 270, 284, 286, 288, 290, 492], "suppos": [314, 482], "sure": [473, 476], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 77, 81, 100, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 198, 200, 207, 208, 209, 210, 217, 219, 225, 257, 259, 262, 264, 266, 270, 272, 273, 277, 280, 282, 284, 286, 288, 290, 471, 473, 475, 477, 480, 481, 482, 486, 487, 488, 494, 496], "surrogate_model": [198, 200, 475], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 100, 198, 200, 261, 264, 475], "swiss": 477, "switch": [56, 186, 189, 190, 294, 473, 475, 482, 488], "switch_1": 482, "switch_2": 482, "switch_aft": [190, 488], "switzerland": 477, "sy": 474, "symmetr": [309, 495], "symmetri": 482, "syntax": [473, 475], "synthet": 475, "system": [375, 473, 474, 478, 483, 491, 494], "t": [128, 292, 293, 306, 330, 358, 366, 472, 484, 487, 491, 493, 495], "t1": [338, 486, 491, 493, 495], "t2": [338, 486, 493, 495], "t3": [493, 495], "t4": [486, 493, 495], "t5": [493, 495], "t6": 493, "t7": 493, "t_1": 486, "t_2": 486, "t_3": 486, "t_ab": 493, "t_alt1": 493, "t_alt2": 493, "t_bell": 493, "t_both": 495, "t_i": 486, "t_match": [486, 490], "t_max": [486, 490, 495], "t_min": [490, 495], "t_skew1": 495, "t_skew2": 495, "t_sym1": 495, "t_sym2": 495, "t_sym3": 495, "tabl": [394, 475, 481, 482, 485], "tabular": 491, "tag": [473, 475, 490], "tailor": 481, "take": [8, 52, 112, 142, 156, 161, 162, 257, 259, 261, 266, 270, 280, 284, 286, 288, 290, 304, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 475, 480, 481, 482, 483, 486, 487, 488, 494], "taken": [188, 475, 481, 484], "tantamount": 479, "target": [9, 12, 14, 15, 18, 34, 82, 100, 125, 126, 128, 130, 133, 134, 135, 136, 138, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 246, 248, 249, 250, 257, 259, 261, 264, 266, 270, 284, 286, 288, 290, 294, 303, 306, 309, 317, 361, 375, 381, 384, 385, 391, 392, 393, 396, 408, 409, 410, 428, 471, 473, 475, 480, 481, 483, 485, 490, 491, 492, 495, 496], "target_1": [480, 486], "target_2": [480, 486], "target_3": [480, 486], "target_4": 486, "target_a": 492, "target_b": 492, "target_index": [100, 475, 485], "target_max": 481, "targetmod": [309, 475], "targetnam": 248, "targettransform": [309, 475], "task": [146, 219, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 301, 303, 309, 475, 481, 488, 490, 491, 494], "task_idx": [219, 475], "task_param": 491, "task_paramet": 490, "task_parameter_json": 490, "task_parameter_reconstruct": 490, "taskparamet": [232, 475, 484, 490, 491, 496], "tb": 497, "technic": [128, 225, 306, 480, 491, 494], "techniqu": [210, 488], "technologi": 477, "telemetri": [475, 477, 496], "tell": 313, "temp": 477, "temperatur": [482, 487, 489, 494], "temporari": [201, 219, 412, 475, 483, 490, 493], "temporarili": [475, 497], "temporary_se": 497, "tempt": 494, "tenac": 475, "tensor": [28, 31, 48, 128, 257, 292, 293, 306, 322, 330, 340, 384, 395, 400, 418, 420, 475], "tensorcal": 325, "term": [115, 246, 476, 478, 481, 485, 489, 490, 491, 493, 494], "termin": [474, 478], "terminologi": 496, "test": [225, 248, 266, 473, 474, 475, 476, 481, 485, 491, 497], "testabl": [89, 248], "text": [37, 331, 478, 482, 483, 486, 495], "texttt": 495, "th": [344, 482], "than": [31, 34, 68, 88, 156, 188, 189, 190, 200, 217, 219, 232, 309, 344, 365, 375, 379, 385, 416, 479, 482, 483, 485, 487, 490, 492], "thank": 493, "thei": [128, 162, 183, 193, 306, 387, 391, 475, 476, 480, 481, 482, 485, 487, 488, 489, 490, 493, 494, 495, 497], "them": [41, 280, 382, 473, 474, 475, 476, 480, 482, 483, 484, 485, 487, 488, 490, 493, 494, 495], "theme": 475, "theori": 478, "therebi": 225, "therefor": [47, 190, 257, 259, 261, 266, 270, 284, 286, 288, 290, 474, 481, 490, 492, 494, 495], "therein": 475, "thereof": 478, "thf": 482, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 185, 187, 188, 189, 190, 192, 200, 207, 208, 209, 210, 217, 219, 225, 246, 250, 252, 254, 257, 259, 261, 262, 264, 265, 266, 270, 280, 284, 286, 288, 290, 294, 306, 315, 343, 361, 362, 365, 370, 375, 383, 385, 386, 388, 390, 394, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "think": 487, "third": [373, 478, 485, 491], "third_parti": 375, "thompson": [23, 477], "thomson": 23, "those": [66, 162, 190, 192, 246, 375, 415, 474, 478, 480, 482, 491], "though": [494, 495], "three": [473, 481, 482, 485, 486, 488, 489, 494], "threshold": [9, 12, 31, 45, 47, 148, 159, 161, 163, 190, 200, 294, 388, 475, 482, 487], "thresholdcondit": [61, 62, 496], "through": [34, 219, 330, 343, 391, 473, 475, 476, 478, 482, 486, 490, 491, 495, 496], "throughout": 190, "throw": [128, 306, 370, 482], "thrown": [128, 250, 306, 474, 480], "thu": [200, 361, 391, 474, 476, 481, 483, 484, 487, 488, 490, 491, 494, 497], "time": [11, 128, 200, 306, 315, 416, 473, 475, 480, 481, 482, 483, 484, 487, 490, 491, 492, 497], "timeout": [475, 483], "titl": 478, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 125, 130, 134, 136, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 475], "to_botorch_object": [318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336], "to_botorch_posterior_transform": 322, "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400], "to_empti": [128, 306], "to_factori": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122], "to_gpytorch": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 171, 173, 174, 175, 176, 177, 178, 179, 475], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 301, 303, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 400, 481, 490], "to_keep": 389, "to_ndarrai": 400, "to_object": [301, 303, 309, 486, 491], "to_polar": [43, 44, 45], "to_searchspac": [141, 142, 143, 145, 146, 148, 155, 156, 159, 217, 225, 475, 484], "to_str": 475, "to_subspac": [141, 142, 145, 146, 148, 155, 156, 159, 475], "to_tensor": [400, 475], "to_tupl": 400, "togeth": [41, 72, 344, 473, 475, 482, 495], "toggl": [34, 475], "toggle_discrete_candid": [34, 475, 484], "toler": [34, 45, 156, 225, 427, 473, 475, 482], "toluen": 487, "toml": 475, "too": [491, 494], "tool": [367, 473, 475, 482, 490], "toolbox": 473, "top": [475, 476], "topic": 481, "topolog": 487, "topologicaltors": 153, "topologicaltorsionfingerprint": 153, "torch": [128, 306, 322, 325, 330, 340, 384, 400, 475, 495], "torch_doctest_cuda1": [128, 306], "toronto": 477, "tort": 478, "total": [31, 189, 190, 309, 415, 489], "total_transform": [309, 475], "toward": [173, 482], "towel": 472, "tox": [475, 476], "tracebackexcept": 474, "track": [182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 225, 478, 484], "trade": [8, 478, 486], "trademark": 478, "tradit": [452, 471, 473, 475], "train": [84, 100, 128, 182, 188, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 254, 257, 259, 261, 262, 264, 265, 266, 270, 284, 286, 288, 290, 294, 306, 449, 475, 491], "trajectori": [246, 481, 491], "transfer": [253, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 471, 473, 475, 478, 487, 492, 496], "transform": [34, 84, 125, 130, 134, 136, 142, 143, 145, 146, 148, 156, 159, 217, 219, 225, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 301, 303, 305, 306, 309, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 371, 375, 384, 391, 396, 400, 418, 475, 478, 483, 486, 487, 492, 493, 496], "transform_rep_exp2comp": 475, "transformermixin": 375, "transit": [128, 306, 475, 493], "translat": [41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 309, 475, 478, 484, 487], "transmiss": 490, "transmit": 315, "transport": 375, "travers": 475, "treasur": 496, "treat": [159, 163, 257, 259, 261, 266, 270, 284, 286, 288, 290, 473, 482, 487, 493, 497], "tree": 475, "trend": 494, "tri": [128, 306, 489], "triangl": [309, 331, 495], "triangular": [309, 331, 493], "triangular_transform": 475, "triangulartransform": 496, "tricki": 485, "trigger": [188, 343, 475, 476, 480, 486, 490], "trivial": [273, 286, 486, 487, 492], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 100, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 200, 213, 219, 252, 270, 303, 306, 354, 355, 359, 365, 366, 375, 379, 389, 415, 427, 475, 480, 481, 482, 483, 484, 485, 486, 487, 490, 493, 495], "truncat": [473, 483], "trust": 483, "truth": 366, "truthi": 483, "try": [92, 474, 475, 497], "tune": 473, "tupl": [9, 12, 15, 18, 34, 44, 48, 100, 107, 108, 109, 112, 114, 116, 117, 118, 120, 121, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 164, 217, 219, 224, 225, 293, 306, 331, 334, 335, 336, 339, 343, 352, 358, 359, 362, 378, 395, 400, 403, 418, 475], "turn": [47, 217, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 403, 473, 474, 475, 482, 483, 486], "turnaround": 491, "twice": [484, 486, 495], "two": [9, 12, 15, 18, 37, 58, 67, 68, 128, 190, 200, 212, 246, 306, 330, 331, 332, 334, 336, 338, 344, 349, 351, 384, 408, 415, 472, 473, 475, 476, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495], "twophasemetarecommend": [473, 475, 488], "twophasestrategi": 475, "twosid": 495, "twosidedaffinetransform": 496, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 80, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 158, 159, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 202, 205, 207, 208, 209, 210, 213, 214, 217, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 235, 236, 238, 239, 240, 242, 244, 245, 248, 250, 252, 254, 257, 259, 260, 261, 262, 264, 266, 267, 270, 273, 274, 278, 284, 286, 288, 290, 292, 293, 294, 296, 297, 298, 301, 303, 304, 306, 309, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 340, 343, 344, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 403, 405, 406, 408, 409, 415, 416, 418, 420, 423, 424, 425, 426, 427, 428, 473, 475, 476, 478, 479, 482, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496], "typealia": 304, "typeddict": [296, 475], "typeerror": [34, 100, 104, 248, 257, 259, 261, 266, 270, 284, 286, 288, 290, 361, 382, 416, 427, 428], "typeguard": 358, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 217, 219, 225, 230, 238, 239, 242, 257, 259, 261, 264, 266, 270, 273, 284, 286, 288, 290, 293, 294, 301, 303, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 355, 356, 357, 358, 378, 384, 391, 393, 400], "typic": [17, 128, 306, 361, 379, 473, 480, 481, 485, 487, 490, 497], "typing_extens": 476, "typo": [475, 476], "u": [23, 473, 479, 480, 482, 486], "ucb": [8, 475, 479, 481, 490], "ultim": 476, "un": 475, "unavail": 475, "unawar": 480, "unbound": 400, "uncaught": 475, "uncertainti": [8, 17, 496], "unchang": [128, 161, 306, 375], "uncharacter": 494, "uncorrel": [388, 494], "undefin": [128, 257, 306, 484], "under": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 306, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 391, 473, 474, 478, 487], "underflow": 90, "underli": [34, 58, 473, 475, 481, 485, 488, 490], "underscor": 475, "understand": [473, 494], "undesir": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 95, 482, 484, 487, 497], "undo": 474, "unevenli": 487, "unexpect": [80, 92, 128, 306, 475], "unexpected_kei": [128, 306], "unfinish": 480, "unfortun": 494, "unhandl": 475, "uniform": [217, 257, 382, 383, 475], "uniformli": [212, 415], "uniniti": 365, "uninstal": [91, 473], "unintend": [95, 361, 475, 476], "unintention": 497, "union": [9, 12, 15, 18, 34, 163, 248, 252, 257, 259, 261, 266, 270, 284, 286, 288, 290, 309, 409, 478, 489], "uniqu": [59, 138, 162, 475, 487], "unit": [224, 309, 322, 330, 403], "unix": 495, "unknown": [189, 415, 475, 486, 492, 494], "unlabel": 384, "unless": [128, 306, 473, 476, 478, 483, 487, 490], "unlik": [14, 15, 16, 18, 19, 486, 497], "unlock": 496, "unmaintain": 475, "unmatch": 359, "unmatchedattributeerror": 359, "unmeasur": 248, "unnecessari": [475, 481, 495], "unnorm": 495, "unpromis": 480, "unreach": 475, "unrealist": 491, "unrepresent": 475, "unrestrict": 361, "unsaf": 475, "unspecifi": [348, 475, 490], "unspecifiedtyp": 34, "unstructur": [240, 490], "unstructure_bas": 238, "unsupervis": 375, "unsupport": [217, 250, 480], "until": [185, 187, 188, 189, 190, 248, 473, 480, 491], "untouch": 382, "untransform": [34, 492], "unusedobjectwarn": [475, 480], "unwant": 41, "unweight": 486, "up": [34, 225, 248, 250, 434, 452, 473, 474, 475, 479, 482, 483, 486, 493, 497], "updat": [34, 128, 306, 375, 475, 476, 480], "update_measur": [34, 475], "upgrad": 475, "upon": [192, 273, 474, 475, 476, 482, 489, 492, 494], "upper": [8, 24, 163, 179, 219, 225, 400, 475, 482, 497], "upper_bound": 489, "upper_threshold": 163, "upperconfidencebound": [24, 479, 490], "upstream": 476, "urg": 485, "url": [483, 494], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 72, 76, 100, 112, 128, 130, 148, 153, 156, 159, 162, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 217, 219, 225, 226, 227, 239, 248, 250, 252, 257, 259, 261, 266, 267, 270, 284, 286, 288, 290, 297, 306, 309, 314, 315, 346, 361, 362, 370, 371, 375, 383, 384, 390, 401, 405, 406, 415, 420, 445, 449, 452, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 495, 496, 497], "usa": 477, "usabl": [365, 474, 475, 487, 490], "usag": [402, 473, 475, 482, 483, 488, 496], "use_comp_rep": [100, 104, 485], "use_torch": 384, "user": [55, 56, 70, 85, 95, 128, 148, 151, 257, 259, 261, 266, 270, 284, 286, 288, 290, 298, 306, 312, 375, 383, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495], "userguid": 311, "usernam": [312, 475, 483], "userwarn": 474, "uses_shap_explain": 475, "usort": 475, "usr": 153, "usrcat": 153, "usrcatfingerprint": 153, "usrfingerprint": 153, "usual": [128, 248, 474, 483, 485, 487], "util": [34, 128, 200, 213, 217, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 314, 346, 348, 349, 375, 400, 414, 418, 445, 473, 475, 479, 480, 481, 485, 486, 487, 488, 490, 491, 492, 494, 496], "uv": 475, "v": 494, "val": [52, 366], "val_from_param1": 60, "val_from_param2": 60, "valid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 161, 162, 219, 222, 225, 228, 266, 385, 390, 464, 471, 474, 475, 476, 481, 482, 491], "validate_compat": 266, "validate_config": [34, 475, 481], "validate_parameter_input": 34, "validate_target_input": 34, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 43, 44, 45, 47, 48, 56, 58, 82, 100, 111, 112, 113, 114, 115, 116, 117, 118, 122, 125, 128, 130, 134, 136, 142, 145, 146, 148, 150, 151, 153, 156, 159, 161, 162, 163, 166, 167, 168, 190, 198, 200, 207, 208, 209, 210, 217, 219, 225, 226, 227, 246, 248, 250, 252, 257, 259, 261, 266, 270, 284, 286, 288, 290, 296, 303, 304, 306, 309, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 343, 347, 348, 356, 359, 366, 375, 377, 381, 382, 383, 385, 387, 390, 391, 394, 400, 401, 408, 409, 423, 424, 425, 426, 427, 428, 473, 475, 476, 479, 480, 482, 483, 484, 485, 486, 493, 494, 495, 496, 497], "valuabl": [488, 491], "valueerror": [9, 12, 15, 17, 18, 31, 34, 47, 66, 67, 68, 100, 104, 128, 138, 161, 162, 167, 168, 217, 219, 225, 231, 248, 250, 257, 259, 261, 266, 270, 284, 286, 288, 290, 298, 306, 309, 330, 344, 359, 364, 366, 369, 377, 379, 383, 385, 390, 391, 392, 415, 416, 427, 428, 474], "var": [34, 128, 257, 259, 260, 261, 264, 266, 270, 284, 286, 288, 290, 306, 496], "vari": [34, 225, 483, 486], "variabl": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 252, 257, 259, 261, 266, 270, 284, 286, 288, 290, 301, 313, 315, 407, 421, 473, 475, 476, 482, 487, 488, 490, 492], "varianc": [8, 17, 111, 286, 386, 475, 479], "variance_initial_valu": 111, "variance_prior": 111, "variant": [475, 485, 493, 494], "varieti": [476, 490, 491], "variou": [375, 400, 460, 475, 480, 485, 488, 491, 495], "varucb": 475, "vector": [37, 475, 477, 486], "vendor": 487, "verbal": 478, "verbos": 475, "veri": [375, 480, 483, 485, 487, 492, 497], "verifi": [365, 473, 476], "versa": 494, "versatil": 488, "version": [128, 219, 306, 312, 375, 406, 473, 474, 475, 476, 478, 490, 493, 495], "via": [14, 17, 23, 33, 34, 47, 100, 128, 190, 200, 213, 257, 259, 261, 262, 264, 266, 270, 284, 286, 288, 290, 314, 353, 361, 389, 473, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 493, 494, 495, 496], "via_init": 490, "via_json": 490, "viabl": 88, "vice": 494, "view": [128, 217, 225, 306, 489], "violat": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 83, 475], "virtual": 476, "visibl": 475, "visual": 485, "vitro": 480, "vivo": 480, "volum": [31, 494], "vpn": [473, 483], "vsa": 153, "vsafingerprint": 153, "vulner": [475, 476], "w_i": 486, "wa": [17, 73, 74, 77, 81, 82, 91, 95, 162, 190, 257, 259, 261, 266, 270, 284, 286, 288, 290, 375, 377, 385, 416, 474, 475, 476, 478, 483, 485, 487, 490, 494], "wai": [219, 460, 472, 473, 480, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497], "wait": 480, "wall": 11, "want": [55, 473, 475, 476, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493], "warn": [69, 362, 475, 476], "warranti": [473, 478], "water": [482, 487], "waterfal": [100, 102, 475], "we": [28, 128, 246, 306, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 497], "web": 476, "weber": 477, "weight": [128, 130, 306, 486, 490], "weight_kdalton": 487, "welcom": 476, "well": [128, 306, 312, 375, 452, 472, 475, 476, 481, 482, 485, 487, 491, 495], "were": [34, 78, 86, 474, 475, 480, 482, 483, 487, 489], "what": [162, 188, 219, 246, 375, 418, 472, 476, 479, 481, 485, 486, 487, 494, 496], "whatsnew": 349, "when": [9, 12, 15, 18, 34, 47, 56, 92, 128, 156, 161, 163, 188, 189, 190, 198, 200, 219, 252, 257, 259, 261, 266, 267, 270, 284, 286, 288, 290, 298, 306, 309, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 347, 348, 359, 361, 365, 375, 379, 384, 416, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "whenev": [28, 188, 490, 493], "where": [9, 12, 15, 18, 23, 28, 37, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 182, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 246, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 309, 330, 331, 332, 343, 415, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495], "wherea": [128, 306, 490], "wherev": [478, 480], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 104, 128, 130, 141, 142, 143, 145, 146, 148, 155, 156, 159, 200, 217, 225, 257, 259, 261, 266, 270, 284, 286, 288, 290, 306, 313, 383, 392, 400, 475, 478, 481, 483, 484], "which": [9, 12, 15, 17, 18, 34, 43, 44, 45, 47, 95, 100, 125, 128, 130, 134, 136, 162, 163, 182, 183, 185, 187, 188, 189, 190, 192, 195, 198, 200, 205, 207, 208, 209, 210, 213, 214, 219, 225, 252, 254, 257, 259, 261, 266, 270, 284, 286, 288, 290, 294, 306, 309, 314, 315, 324, 330, 361, 365, 375, 381, 383, 388, 390, 393, 394, 408, 409, 418, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497], "while": [128, 219, 222, 228, 306, 375, 474, 475, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "whim": 153, "whimfingerprint": 153, "whole": [128, 306, 478], "whom": 478, "whose": [128, 161, 162, 219, 250, 306, 356, 359, 384, 480, 491], "wide": [491, 495], "width": [309, 323, 331, 394, 493, 495], "wieczorek": 477, "william": 494, "willing": 481, "win": 257, "window": [475, 483], "winerror": 474, "wise": 493, "wish": 490, "with_kwarg": [128, 306], "within": [34, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 306, 375, 427, 475, 478, 482, 483, 487, 492, 494, 496, 497], "without": [128, 189, 306, 473, 475, 478, 480, 481, 482, 483, 487, 491, 494, 495, 497], "won": [128, 306, 487, 493], "work": [28, 128, 291, 306, 343, 375, 384, 473, 475, 476, 477, 478, 480, 482, 483, 488, 490, 491], "workaround": [474, 475], "workflow": [473, 481, 490, 496], "world": [473, 481], "worldwid": 478, "worst": [9, 12, 15, 18, 248, 250, 252], "would": [59, 90, 128, 161, 162, 246, 248, 254, 265, 306, 473, 476, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 497], "wrap": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 128, 270, 274, 292, 293, 306, 361, 473, 475, 486], "wrapper": [1, 27, 252, 254, 266, 362, 473, 488, 495], "write": [473, 474, 478, 490], "written": [476, 478], "wrong": 475, "wrongli": 474, "www": [473, 478], "x": [28, 126, 128, 163, 221, 248, 250, 274, 306, 331, 340, 352, 358, 362, 375, 378, 395, 408, 418, 473, 475, 489, 492, 495], "x0": 489, "x1": 489, "x2": 489, "x_1": 482, "x_2": 482, "x_3": 482, "x_i": 482, "x_new": 375, "x_pend": 28, "xdoctest": [128, 306], "xpu": [128, 306], "xxxx": 474, "y": [282, 306, 366, 375, 388, 408, 473, 494], "ye": 366, "year": 494, "yet": [28, 475, 480, 488, 493], "yield": [6, 112, 128, 260, 306, 473, 475, 479, 485, 486, 490, 493], "yield_mean": 481, "yield_mod": 481, "yield_q_0": 481, "yield_std": 481, "yml": 475, "you": [34, 55, 128, 306, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497], "your": [128, 306, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 485, 487, 490, 491, 492, 493, 494, 495, 497], "your_branch_nam": 476, "z": 473, "zero": [47, 66, 68, 128, 161, 163, 173, 306, 309, 322, 331, 375, 386, 482, 494, 495], "zero_grad": [128, 306], "\u00b5fmt": 475, "\u0161o\u0161i\u0107": [473, 477]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedHypervolumeImprovement", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedHypervolumeImprovement", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.make_partitioning", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.botorch", "ChainedMCObjective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.botorch", "AffinePosteriorTransform", "baybe.targets.enum", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.transformations", "baybe.transformations.base", "MonotonicTransformation", "Transformation", "baybe.transformations.basic", "AbsoluteTransformation", "AffineTransformation", "BellTransformation", "ClampingTransformation", "CustomTransformation", "ExponentialTransformation", "IdentityTransformation", "LogarithmicTransformation", "PowerTransformation", "SigmoidTransformation", "TriangularTransformation", "TwoSidedAffineTransformation", "baybe.transformations.composite", "AdditiveTransformation", "ChainedTransformation", "MultiplicativeTransformation", "baybe.transformations.utils", "baybe.transformations.utils.combine_affine_transformations", "baybe.transformations.utils.compress_transformations", "baybe.transformations.utils.convert_transformation", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.compose", "baybe.utils.basic.compose_two", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.ConvertibleToInterval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "Basics", "DUMMY FILE", "DUMMY FILE", "Constraints Continuous", "DUMMY FILE", "DUMMY FILE", "Constraints Discrete", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "Custom Hooks", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "Custom Surrogates", "DUMMY FILE", "DUMMY FILE", "Mixtures", "DUMMY FILE", "DUMMY FILE", "Multi-Armed Bandit", "DUMMY FILE", "Multi Target", "DUMMY FILE", "DUMMY FILE", "Searchspaces", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "Serialization", "DUMMY FILE", "DUMMY FILE", "DUMMY FILE", "Transfer Learning", "DUMMY FILE", "DUMMY FILE", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "Transformations", "User Guide", "Utilities"], "titleterms": {"": 476, "0": 475, "01": 475, "02": 475, "03": 475, "04": 475, "05": 475, "06": 475, "07": 475, "08": 475, "09": 475, "1": [475, 486], "10": 475, "11": 475, "12": 475, "13": 475, "14": 475, "15": 475, "16": 475, "17": 475, "19": 475, "2": [475, 486], "2022": 475, "2023": 475, "2024": 475, "2025": 475, "21": 475, "23": 475, "24": 475, "27": 475, "28": 475, "29": 475, "3": 475, "31": 475, "4": 475, "5": 475, "6": 475, "7": 475, "8": 475, "9": 475, "A": 473, "For": 487, "On": 485, "The": [473, 484, 490, 491, 494], "abbrevi": 490, "absolutetransform": 321, "acqf": 2, "acquisit": [1, 2, 25, 27, 29, 30, 31, 32, 480, 481], "acquisitionfunct": 26, "action": 494, "activ": [479, 487], "activate_paramet": 161, "ad": [475, 480, 481, 494, 497], "add_fake_measur": 381, "add_noise_to_perturb_degenerate_row": 382, "add_parameter_nois": 383, "addit": 495, "additivekernel": 120, "additivetransform": 334, "advanc": [473, 492], "affineposteriortransform": 306, "affinetransform": [322, 495], "altern": 490, "appli": 484, "arm": 455, "arm64": 474, "arrai": 491, "arrays_to_datafram": 384, "assembli": 490, "asynchron": 480, "attr": 476, "augment": [342, 343, 344], "auto": 492, "automat": [490, 495], "avail": 492, "avx": 474, "back": 473, "backtest": 429, "bandit": [256, 455], "base": [25, 36, 106, 124, 126, 140, 170, 181, 184, 194, 197, 204, 258, 260, 300, 317, 484, 491], "basesequentialmetarecommend": 187, "basic": [110, 172, 320, 345, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 434, 481, 483, 485, 490, 495], "basickernel": 107, "batch": 481, "batchify_ensemble_predictor": 292, "batchify_mean_var_predict": 293, "batteri": 473, "bayb": [0, 1, 2, 25, 27, 29, 30, 31, 32, 33, 35, 36, 42, 46, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 119, 123, 124, 126, 127, 129, 131, 133, 135, 137, 138, 139, 140, 144, 147, 149, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 181, 183, 184, 186, 191, 193, 194, 196, 197, 199, 201, 202, 203, 204, 206, 211, 215, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 263, 265, 267, 268, 269, 271, 274, 275, 276, 278, 279, 281, 283, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 320, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 473, 476], "bayesian": [196, 197, 199, 201, 202, 473, 488], "bayesianlinearsurrog": 284, "bayesianrecommend": 198, "belltransform": [323, 495], "betabernoullimultiarmedbanditsurrog": 257, "betaprior": 173, "binari": [302, 304], "binarytarget": 303, "block_deserialization_hook": 235, "block_serialization_hook": 236, "bo": 485, "boolean": [363, 364, 365, 366], "botorch": [127, 199, 305], "botorchrecommend": 200, "bound": 489, "break": 475, "build": 489, "bytes_to_human_read": 403, "cach": [481, 483], "call": 484, "callabl": 491, "campaign": [33, 34, 481], "candid": [481, 484], "cardinalityconstraint": 37, "cast": 486, "catch_constant_target": 294, "categor": 144, "categoricalencod": 150, "categoricalparamet": [145, 487], "caution": 484, "chain": 495, "chainedmcobject": 128, "chainedtransform": 335, "challeng": 482, "chang": 475, "changelog": 475, "check_if_in": 364, "chemic": 473, "chemistri": [367, 368, 369, 370, 371], "choicevalu": 304, "clampingtransform": [324, 495], "class": 476, "classproperti": 349, "clone": 473, "closer_el": 408, "closest_el": 409, "cluster": [206, 488], "clustering_algorithm": [372, 373, 374], "code": 476, "columntransform": 418, "combine_affine_transform": 338, "compos": 350, "compose_two": 351, "composit": [119, 263, 333, 492, 495], "compositekernel": 108, "compositesurrog": 264, "compress": 495, "compress_transform": 339, "comput": [482, 485], "condit": [42, 43, 482], "config": 481, "configur": [484, 486, 490], "constraint": [35, 36, 38, 42, 46, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 437, 440, 482, 484, 489, 497], "construct": [486, 489, 493, 495], "constructor": [489, 490], "continu": [46, 216, 437, 479, 482, 487, 489, 494, 497], "continuouscardinalityconstraint": [47, 482], "continuousconstraint": 39, "continuouslinearconstraint": [48, 482], "continuouslinearequalityconstraint": 50, "continuouslinearinequalityconstraint": 51, "continuousnonlinearconstraint": 40, "continuousparamet": 141, "contribut": 476, "contributor": 477, "control": [481, 484], "conveni": [486, 493, 495], "convent": 476, "convers": [376, 377, 378, 379, 486, 490], "convert": 237, "convert_acqf": 30, "convert_to_float": 352, "convert_transform": 340, "convertibletointerv": 398, "copi": 490, "core": [218, 221, 222, 234, 235, 236, 237, 238, 239, 240, 247, 248, 269, 276, 278], "cpu": 474, "creat": [481, 489], "create_fake_input": 385, "creation": [481, 495, 497], "current": [492, 495], "custom": [147, 265, 267, 445, 449, 492, 495], "customdiscreteparamet": [148, 487], "customencod": 151, "customonnxsurrog": 266, "customtransform": 325, "data": [489, 494], "datafram": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 489, 490, 491], "de": 490, "default": [279, 489, 490], "defaultkernelfactori": 280, "defin": [473, 495], "depend": [473, 487], "deprec": [49, 50, 51, 52, 475], "deprecationerror": 70, "deseri": 490, "deserialize_datafram": 244, "design": [473, 476], "desir": [129, 481], "desirabilityobject": [130, 486], "develop": 476, "df_apply_dependency_augment": 343, "df_apply_permutation_augment": 344, "df_drop_single_value_column": 386, "df_drop_string_column": 387, "df_uncorrelated_featur": 388, "discret": [53, 223, 226, 227, 228, 440, 481, 482, 487, 489], "discretecardinalityconstraint": [54, 482], "discreteconstraint": 41, "discretecustomconstraint": [55, 482], "discretedependenciesconstraint": [56, 482], "discreteexcludeconstraint": [57, 482], "discretelinkedparametersconstraint": [58, 482], "discretenolabelduplicatesconstraint": [59, 482], "discreteparamet": 142, "discretepermutationinvarianceconstraint": [60, 482], "discreteproductconstraint": [61, 482], "discretesamplingmethod": 414, "discretesumconstraint": [62, 482], "disk": 483, "do": 491, "docstr": 476, "domin": 486, "dtypefloatnumpi": 405, "dtypefloatonnx": 406, "dtypefloattorch": 420, "dummi": [346, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470], "dure": 497, "dynam": 484, "edbo": 281, "edbokernelfactori": 282, "effici": 497, "emptysearchspaceerror": 71, "encod": 487, "end": 473, "enum": [131, 149, 307], "environ": 483, "equival": 490, "estim": 497, "exampl": [471, 473, 485, 486], "except": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "exceptiongroup": 474, "exclud": 484, "exclus": 484, "exist": 495, "expect": 494, "expectedimprov": 3, "experi": [473, 480, 491], "experiment": [481, 483, 485], "expir": 475, "explain": [98, 485], "explicit": 489, "exponentialtransform": 326, "extend": 476, "extract": 492, "fake": 497, "faq": 472, "farthest_point_sampl": 415, "featur": 483, "field": 490, "file": [430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470], "filter_df": 389, "find_subclass": 353, "finite_float": 423, "fix": [474, 475], "float": 483, "fpsiniti": 212, "fpsrecommend": 213, "fraction_to_float": 377, "from": [473, 475, 481, 489, 490, 495], "full": 489, "function": [476, 480, 481], "further": 481, "fuzzy_row_match": 390, "gammaprior": 174, "gaussian_process": [268, 269, 271, 274, 275, 276, 278, 279, 281], "gaussianmixtureclusteringrecommend": 207, "gaussianprocesspreset": 277, "gaussianprocesssurrog": 270, "gener": [476, 488], "get": [481, 484], "get_base_structure_hook": 238, "get_baseclass": 354, "get_canonical_smil": 368, "get_fingerprint_class": 369, "get_parameters_from_datafram": 162, "get_subclass": 355, "get_transform_object": 391, "get_transform_paramet": 230, "get_user_detail": 312, "github": 473, "global": 479, "group_duplicate_valu": 356, "guid": 496, "halfcauchyprior": 175, "halfnormalprior": 176, "handle_missing_valu": 392, "hilberts_factori": 357, "hook": 445, "hybrid": 482, "identitytransform": 327, "implicit": 486, "import": [485, 493], "includ": 473, "incompatibilityerror": 72, "incompatibleacquisitionfunctionerror": 73, "incompatibleargumenterror": 74, "incompatibleexplainererror": 75, "incompatiblesearchspaceerror": 76, "incompatiblesurrogateerror": 77, "incompletemeasurementserror": 78, "independentgaussiansurrog": 259, "index": 473, "indic": 473, "infeasibilityerror": 79, "infiniteintervalerror": 399, "influenc": 497, "inform": [481, 488], "inputdatatypewarn": 80, "insight": [96, 97, 98, 99, 101, 102, 103, 104, 485], "instal": [473, 474], "instruct": 483, "internet": 483, "interpret": 485, "interv": [397, 398, 399, 400, 401], "invalidsurrogatemodelerror": 81, "invalidtargetvalueerror": 82, "invok": 490, "irrelev": 494, "is_abstract": 365, "is_all_inst": 358, "is_cardinality_fulfil": 64, "is_en": 313, "is_inact": 163, "is_shap_explain": 103, "issu": [473, 474], "json": [481, 490], "kernel": [105, 106, 109, 110, 119], "kernel_factori": [271, 274], "kernelfactori": 272, "kmeansclusteringrecommend": 208, "kmedoid": [374, 375], "known": [473, 474], "label": 487, "leak": 474, "learn": [468, 479, 491, 494], "licens": [473, 478], "like": 487, "limit": [480, 485, 492, 493], "linear": 283, "linearkernel": 111, "local": [473, 479], "logarithmictransform": 328, "logexpectedimprov": 4, "lognormalprior": 177, "look_up_target": 250, "lookup": [249, 250, 491], "loop": 473, "maco": 474, "maintain": [473, 477], "make_dict_valid": 296, "make_explainer_for_surrog": 104, "make_gp_from_preset": 278, "make_partit": 31, "manual": 493, "mark": 480, "match_attribut": 359, "maternkernel": 112, "mean": 491, "meanpredictionsurrog": 286, "measur": [481, 497], "mechan": 491, "memori": [402, 403, 497], "memorys": 224, "meta": [183, 184, 186, 484, 488], "metarecommend": 185, "method": [476, 479], "minimumcardinalityviolatedwarn": 83, "miss": 491, "mixin": 241, "mixtur": 452, "model": [485, 492], "modelnottrainederror": 84, "monotonictransform": 318, "multi": [455, 457, 485, 486, 492], "multipl": [491, 495], "multiplicativetransform": 336, "naiv": [191, 285], "naivehybridspacerecommend": 192, "name": 487, "name_to_smil": 370, "negat": 493, "nest": 490, "ngboost": 287, "ngboostsurrog": 288, "nois": 497, "nomcacquisitionfunctionerror": 85, "nomeasurementserror": 86, "non": 486, "non_inf_float": 424, "non_nan_float": 425, "non_shap_explain": 99, "none": 491, "nonpredict": [203, 204, 206, 211], "nonpredictiverecommend": 205, "nonstring_to_tupl": 378, "norecommenderslefterror": 87, "normal": 486, "normalize_input_dtyp": 393, "normalprior": 178, "notenoughpointslefterror": 88, "nothingtosimulateerror": 89, "numer": [154, 308, 404, 405, 406, 407, 408, 409], "numericalcontinuousparamet": [155, 487], "numericaldiscreteparamet": [156, 487], "numericaltarget": [309, 493], "numericalunderflowerror": 90, "object": [123, 124, 125, 126, 127, 129, 131, 133, 135, 137, 138, 473, 481, 486, 490], "oper": 495, "optim": [473, 481, 497], "option": [473, 487], "optionalimporterror": 91, "order": [483, 495], "output": [485, 486, 492], "overrid": 476, "packag": [473, 483], "page": 485, "pamclusteringrecommend": 209, "parallel": [481, 483], "paramet": [139, 140, 143, 144, 147, 149, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 481, 485, 487, 489, 497], "parameter_cartesian_prod_panda": 226, "parameter_cartesian_prod_polar": 227, "parameterencod": 152, "pareto": 133, "paretoobject": [134, 486], "partial": [27, 480], "partialacquisitionfunct": 28, "pend": 480, "periodickernel": 113, "perman": 484, "piecewisepolynomialkernel": 114, "plainkernelfactori": 273, "plot": 485, "point": 483, "polar": [474, 483], "polynomialkernel": 115, "posterior": 481, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 260, "powertransform": 329, "pre": 495, "precis": 483, "predict": 481, "preset": [275, 276, 278, 279, 281], "pretty_print_df": 394, "prior": [169, 170, 171, 172], "probabilityofimprov": 7, "problem": 474, "product": 489, "productkernel": 121, "pull": 476, "pure": [193, 194, 196, 197, 199, 201, 202, 203, 204, 206, 211, 479, 488], "purerecommend": 195, "pycharm": 474, "qexpectedhypervolumeimprov": 9, "qexpectedimprov": 10, "qknowledgegradi": 11, "qlogexpectedhypervolumeimprov": 12, "qlogexpectedimprov": 13, "qlognoisyexpectedhypervolumeimprov": 15, "qlognoisyexpectedimprov": 16, "qlognparego": 14, "qnegintegratedposteriorvari": 17, "qnoisyexpectedhypervolumeimprov": 18, "qnoisyexpectedimprov": 19, "qposteriorstandarddevi": 20, "qprobabilityofimprov": 21, "qsimpleregret": 22, "qthompsonsampl": 23, "quick": 473, "qupperconfidencebound": 24, "random": [410, 411, 412], "random_forest": 289, "randomforestsurrog": 290, "randomrecommend": 214, "rbfkernel": 116, "recommend": [180, 181, 183, 184, 186, 191, 193, 194, 196, 197, 199, 201, 202, 203, 204, 206, 211, 480, 481, 484, 488], "recommenderprotocol": 182, "reduct": 479, "refers_to": 360, "register_custom_architectur": 267, "register_hook": 361, "relat": 474, "remov": 475, "replic": 492, "represent": [485, 489], "reproduc": 497, "request": 476, "restrict": 489, "result": 480, "rffkernel": 117, "role": 494, "row": 483, "rqkernel": 118, "run": 483, "sampl": [211, 479, 488], "sample_numerical_df": 416, "sampling_algorithm": [413, 415, 416], "scalar": [132, 492], "scale": 417, "scalekernel": 122, "scenario": [251, 252, 483, 491], "scope": [483, 495], "search": [473, 479, 489, 497], "searchspac": [215, 216, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 460], "searchspacematchwarn": 92, "searchspacetyp": 220, "see": 494, "select_constructor_hook": 239, "semaphor": 474, "sequenti": [186, 481], "sequential_greedi": [201, 202], "sequentialgreedyrecommend": 202, "sequentialmetarecommend": 188, "serial": [233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 464, 481, 490], "serialize_datafram": 245, "serialmixin": 242, "set_random_se": 411, "shap": [97, 98, 99, 101, 102, 103, 104, 485], "shap_explain": 101, "shap_plot": 102, "shapinsight": 100, "sigmoidtransform": 330, "simplex": 489, "simul": [246, 247, 248, 249, 250, 251, 252, 253, 254, 483, 491], "simulate_experi": 248, "simulate_scenario": 252, "simulate_transfer_learn": 254, "singl": [135, 491], "singletargetobject": [136, 486], "sklearnclusteringrecommend": 210, "smile": 158, "smiles_to_fingerprint_featur": 371, "smoothedboxprior": 179, "sort_paramet": 164, "space": [473, 479, 481, 489, 497], "start": 473, "statist": 481, "str_to_acqf": 32, "strategi": 473, "streamingsequentialmetarecommend": 189, "string": 490, "strtobool": 366, "structure_constraint": 52, "studi": 492, "sub": 479, "subselectioncondit": [44, 482], "subspac": 489, "subspacecontinu": 217, "subspacediscret": 225, "substanc": [157, 158, 473], "substanceencod": 153, "substanceparamet": [159, 487], "suggest": 474, "support": [474, 480], "surrog": [255, 256, 258, 260, 261, 263, 265, 267, 268, 269, 271, 274, 275, 276, 278, 279, 281, 283, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 449, 485, 492], "surrogateprotocol": 262, "synchron": 476, "tabl": 473, "target": [299, 300, 301, 302, 304, 305, 307, 308, 310, 457, 486, 493, 497], "taskparamet": [146, 487, 494], "technologi": 494, "telemetri": [311, 312, 313, 314, 315, 473, 483], "telemetry_record_recommended_measurement_percentag": 314, "telemetry_record_valu": 315, "temporary_se": 412, "terminologi": [490, 491, 494], "thi": 485, "third_parti": [373, 374], "thresholdcondit": [45, 482], "through": 494, "to_kernel_factori": 274, "to_object": 126, "to_searchspac": 221, "to_str": 379, "to_tensor": 395, "to_tupl": 362, "toggl": 484, "toler": 481, "tool": 476, "torch": [419, 420, 421, 474], "trajectori": 484, "transfer": [468, 491, 494], "transfer_learn": [253, 254], "transform": [310, 316, 317, 319, 320, 333, 337, 338, 339, 340, 495], "transform_target_column": 396, "treasur": 494, "triangulartransform": [331, 495], "twophasemetarecommend": 190, "twosidedaffinetransform": [332, 495], "type": 490, "type_validation_convert": 297, "uncertainti": 479, "unidentifiedsubclasserror": 93, "uninstal": 483, "unlock": 494, "unmatchedattributeerror": 94, "unreleas": 475, "unspecifi": 347, "unspecifiedtyp": 348, "unstructure_bas": 240, "unusedobjectwarn": 95, "upperconfidencebound": 8, "us": [489, 490, 491, 492], "usag": 485, "use_fallback_constructor_hook": 401, "user": 496, "util": [29, 30, 31, 32, 63, 64, 160, 161, 162, 163, 164, 243, 244, 245, 291, 292, 293, 294, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 497], "v": [474, 481, 484], "valid": [65, 66, 67, 68, 137, 138, 165, 166, 167, 168, 229, 230, 231, 232, 295, 296, 297, 298, 422, 423, 424, 425, 426, 427, 428], "validate_cardinality_constraint_parameter_bound": 66, "validate_cardinality_constraints_are_nonoverlap": 67, "validate_constraint": 68, "validate_custom_architecture_cl": 298, "validate_decorrel": 166, "validate_is_finit": 167, "validate_not_nan": 426, "validate_paramet": 232, "validate_parameter_input": 427, "validate_parameter_nam": 231, "validate_searchspace_from_config": 222, "validate_simplex_subspace_from_config": 228, "validate_target_input": 428, "validate_target_nam": 138, "validate_unique_valu": 168, "valu": [481, 487, 489, 490, 491], "variabl": 483, "varname_numpy_use_single_precis": 407, "varname_torch_use_single_precis": 421, "via": 485, "we": 491, "what": 491, "window": 474, "within": 489, "without": 474, "workflow": [476, 480], "wrap": 495, "write": 476}})
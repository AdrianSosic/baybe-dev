Search.setIndex({"alltitles": {"(De-)Serializability Unsupported": [[488, null]], "Absolute Transformation": [[500, "absolute-transformation"]], "AbsoluteTransformation": [[320, null]], "Accessing Desirability Values": [[463, "accessing-desirability-values"]], "Acquisition Function Values": [[487, "acquisition-function-values"]], "Acquisition function": [[441, "acquisition-function"]], "AcquisitionFunction": [[26, null]], "Active Learning": [[485, null]], "Added": [[481, "added"], [481, "id2"], [481, "id4"], [481, "id17"], [481, "id26"], [481, "id37"], [481, "id41"], [481, "id47"], [481, "id54"], [481, "id63"], [481, "id69"], [481, "id73"], [481, "id80"], [481, "id85"], [481, "id91"], [481, "id97"], [481, "id101"], [481, "id105"], [481, "id109"], [481, "id114"], [481, "id118"], [481, "id121"], [481, "id125"], [481, "id129"], [481, "id133"], [481, "id136"], [481, "id140"], [481, "id144"], [481, "id148"], [481, "id152"], [481, "id158"], [481, "id161"]], "Adding Fake Target Measurements and Parameter Noise": [[504, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[501, null]], "Adding Measurements": [[487, "adding-measurements"]], "Adding Partial Results": [[486, "adding-partial-results"]], "Addition": [[502, "addition"]], "AdditiveKernel": [[119, null]], "AdditiveTransformation": [[333, null]], "Advanced Example: Chemical Substances": [[479, "advanced-example-chemical-substances"]], "Advanced Transformations": [[502, "advanced-transformations"]], "AffinePosteriorTransform": [[308, null]], "AffineTransformation": [[321, null], [502, "affinetransformation"]], "An Imaginary Use Case": [[461, "an-imaginary-use-case"]], "Array-Based Callables": [[498, null]], "Asynchronous Workflows": [[486, null]], "Auto-Replication": [[499, "auto-replication"]], "AutoBool": [[364, null]], "Automatic Wrapping": [[502, null]], "Automatic field conversion": [[496, "automatic-field-conversion"]], "Available Models": [[499, "available-models"]], "Available Settings": [[497, "available-settings"]], "Available recommenders suitable for initial recommendation": [[441, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[441, "available-surrogate-models"]], "Backtesting": [[434, null]], "Backwards Compatibility and Deprecations": [[503, null]], "BaseSequentialMetaRecommender": [[186, null]], "Basic Creation": [[487, "basic-creation"]], "Basic Transformations": [[502, "basic-transformations"]], "Basic Usage": [[491, "basic-usage"]], "Basic example for using BayBE": [[440, null]], "Basic string assembly": [[496, "basic-string-assembly"]], "BasicKernel": [[106, null]], "Basics": [[439, null], [487, "basics"]], "Batch Optimization": [[487, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[479, null]], "Bayesian Recommenders": [[494, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[286, null]], "BayesianRecommender": [[197, null]], "Bell Transformation": [[500, "bell-transformation"]], "BellTransformation": [[322, null], [502, "belltransformation"]], "Bernoulli Multi Armed Bandit": [[461, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[259, null]], "BetaPrior": [[172, null]], "BinaryTarget": [[305, null]], "BotorchRecommender": [[199, null]], "Bound methods": [[451, "bound-methods"]], "Breaking Changes": [[481, "breaking-changes"], [481, "id46"], [481, "id53"]], "Building from the Product of Parameter Values": [[495, "building-from-the-product-of-parameter-values"], [495, "id2"]], "Building the Model": [[461, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[480, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[487, "caching-of-recommendations"]], "Campaign": [[34, null]], "Campaign Setup": [[464, "campaign-setup"]], "Campaign Stopping": [[452, null]], "Campaigns": [[487, null]], "Candidate Control in Discrete Spaces": [[487, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[490, null]], "CardinalityConstraint": [[37, null]], "CategoricalEncoding": [[149, null]], "CategoricalParameter": [[144, null], [493, "categoricalparameter"]], "Caution": [[490, null]], "ChainedMCObjective": [[127, null]], "ChainedTransformation": [[334, null]], "Chaining": [[502, "chaining"]], "Chaining Custom Transformations": [[502, null]], "Changed": [[481, "changed"], [481, "id5"], [481, "id10"], [481, "id13"], [481, "id18"], [481, "id22"], [481, "id24"], [481, "id27"], [481, "id32"], [481, "id38"], [481, "id42"], [481, "id48"], [481, "id55"], [481, "id60"], [481, "id64"], [481, "id70"], [481, "id74"], [481, "id77"], [481, "id81"], [481, "id86"], [481, "id92"], [481, "id98"], [481, "id102"], [481, "id106"], [481, "id110"], [481, "id115"], [481, "id119"], [481, "id122"], [481, "id126"], [481, "id130"], [481, "id134"], [481, "id137"], [481, "id141"], [481, "id145"], [481, "id149"], [481, "id153"]], "Changelog": [[481, null]], "Changing Settings": [[497, "changing-settings"]], "ClampingTransformation": [[323, null], [502, "clampingtransformation"]], "Clustering Recommenders": [[494, "clustering-recommenders"]], "Code Design": [[482, "code-design"]], "ColumnTransformer": [[423, null]], "Comparing recommendations in both objects": [[470, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[499, "composite-surrogates"]], "Composite Transformations": [[502, "composite-transformations"]], "CompositeKernel": [[107, null]], "CompositeSurrogate": [[266, null]], "Compression": [[502, "transformation-compression"]], "Computational Challenges": [[488, null]], "Condition": [[43, null]], "Conditions": [[488, "conditions"]], "Constraint": [[38, null]], "Constraint Setup": [[458, "constraint-setup"]], "Constraints": [[488, null]], "Constraints Continuous": [[442, null]], "Constraints Discrete": [[445, null]], "Constraints Setup": [[459, "constraints-setup"]], "Construct the campaign and run some iterations": [[443, "construct-the-campaign-and-run-some-iterations"], [444, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[495, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[436, "constructing-campaigns-for-the-simulation-loop"], [437, "constructing-campaigns-for-the-simulation-loop"], [438, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[495, "constructing-from-a-dataframe"], [495, "id1"], [495, "id3"]], "Constructing hybrid recommenders": [[468, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[467, "constructing-the-campaign-and-performing-a-recommendation"], [468, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[468, "constructing-the-hybrid-searchspace"]], "Context Activation": [[497, "context-activation"]], "Continuous Constraints": [[488, "continuous-constraints"]], "Continuous Parameters": [[493, "continuous-parameters"]], "Continuous Subspaces": [[495, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[47, null], [488, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[39, null]], "ContinuousLinearConstraint": [[48, null], [488, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[40, null]], "ContinuousParameter": [[140, null]], "Contributing to BayBE": [[482, null]], "Contributors": [[483, null], [483, "id1"]], "Convenience Construction": [[502, null], [502, null], [502, null]], "Convenience Construction and Implicit Conversion": [[492, null]], "Convenience Multi-Output Casting": [[492, null]], "Conventions for attrs classes": [[482, "conventions-for-attrs-classes"]], "Convert model to onnx": [[455, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[455, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[456, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[455, "create-campaign"]], "Creating Continuous Search Spaces": [[466, null]], "Creating a Campaign": [[487, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[495, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[471, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[446, "creating-and-printing-the-campaign"], [447, "creating-and-printing-the-campaign"], [449, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[435, "creating-the-campaigns"]], "Creating the Objective": [[437, "creating-the-objective"], [463, "creating-the-objective"]], "Creating the Optimization Objective": [[474, "creating-the-optimization-objective"]], "Creating the Searchspace": [[474, "creating-the-searchspace"]], "Creating the campaign": [[441, "creating-the-campaign"], [456, "creating-the-campaign"], [470, "creating-the-campaign"]], "Creating the constraint": [[446, "creating-the-constraint"], [448, "creating-the-constraint"]], "Creating the constraints": [[447, "creating-the-constraints"], [449, "creating-the-constraints"]], "Creating the recommender object": [[441, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[436, "creating-the-searchspace-and-the-objective"], [438, "creating-the-searchspace-and-the-objective"], [443, "creating-the-searchspace-and-the-objective"], [444, "creating-the-searchspace-and-the-objective"], [446, "creating-the-searchspace-and-the-objective"], [447, "creating-the-searchspace-and-the-objective"], [448, "creating-the-searchspace-and-the-objective"], [449, "creating-the-searchspace-and-the-objective"], [467, "creating-the-searchspace-and-the-objective"]], "Creation From Existing Targets": [[500, "creation-from-existing-targets"]], "Creation From a JSON Config": [[487, "creation-from-a-json-config"]], "Creation from Existing Transformations": [[502, null]], "Current Scope": [[502, null]], "Custom Hooks": [[450, null]], "Custom Surrogates": [[454, null]], "Custom Transformation": [[500, "custom-transformation"]], "Custom Transformations": [[502, "custom-transformations"]], "CustomDiscreteParameter": [[147, null], [493, "customdiscreteparameter"]], "CustomEncoding": [[150, null]], "CustomONNXSurrogate": [[268, null]], "CustomTransformation": [[324, null]], "Customization": [[463, null]], "Dataframe deserialization": [[496, "dataframe-deserialization"]], "Decorator Activation": [[497, "decorator-activation"]], "DefaultKernelFactory": [[282, null]], "Defining config dictionaries": [[472, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[452, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[453, "defining-the-hook"]], "Defining the Hooks": [[451, "defining-the-hooks"]], "Defining the Optimization Objective": [[479, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[435, "defining-the-optimization-problem"], [464, "defining-the-optimization-problem"]], "Defining the Search Space": [[463, "defining-the-search-space"], [479, "defining-the-search-space"]], "Defining the Targets": [[463, "defining-the-targets"]], "Defining the Tasks": [[474, "defining-the-tasks"]], "Defining the test function": [[443, "defining-the-test-function"], [444, "defining-the-test-function"], [467, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[468, "defining-the-test-function-and-the-hybrid-dimensions"]], "Delayed Activation": [[497, "delayed-activation"]], "Deprecations": [[481, "deprecations"], [481, "id8"], [481, "id30"], [481, "id44"], [481, "id51"], [481, "id58"], [481, "id67"], [481, "id83"], [481, "id89"], [481, "id95"], [481, "id112"]], "Deserialization from configuration strings": [[496, "deserialization-from-configuration-strings"]], "Desirability Optimization": [[463, null]], "DesirabilityObjective": [[129, null], [492, "desirabilityobjective"]], "Developer Tools": [[482, "developer-tools"]], "Direct Assignment": [[497, "direct-assignment"]], "Discrete Constraints": [[488, "discrete-constraints"]], "Discrete Parameters": [[493, "discrete-parameters"]], "Discrete Subspaces": [[495, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[458, null]], "DiscreteCardinalityConstraint": [[53, null], [488, "discretecardinalityconstraint"]], "DiscreteConstraint": [[41, null]], "DiscreteCustomConstraint": [[54, null], [488, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[55, null], [488, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[56, null], [488, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[57, null], [488, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[58, null], [488, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[141, null]], "DiscretePermutationInvarianceConstraint": [[59, null], [488, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[60, null]], "DiscreteSamplingMethod": [[419, null]], "DiscreteSumConstraint": [[61, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[488, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[461, "discussion"]], "Dummy": [[345, null]], "Duplicate Substances": [[458, "duplicate-substances"]], "Dynamic Exclusion": [[490, "dynamic-exclusion"]], "EDBOKernelFactory": [[284, null]], "Efficient Constraint Implementation via Polars": [[488, null]], "Efficient Search Space Creation": [[504, null]], "Environment Variables": [[489, null], [497, "environment-variables"]], "Equality": [[502, "equality"]], "Equivalent copies": [[496, null]], "Estimation with Constraints": [[504, null]], "Example 1 \u2013 Normalized Targets": [[492, "example-1-normalized-targets"]], "Example 2 \u2013 Non-Normalized Targets": [[492, "example-2-non-normalized-targets"]], "Example Searchspace and objective parameters": [[441, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[443, null]], "Example for creating campaigns from configs": [[471, null]], "Example for custom parameter passing in surrogate models": [[456, null]], "Example for full simulation loop using a table-based lookup mechanism": [[437, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[438, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[436, null]], "Example for linear constraints in a continuous searchspace": [[444, null]], "Example for surrogate model with a custom pretrained model": [[455, null]], "Example for the serialization of a campaign": [[470, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[467, null]], "Example for using custom constraints in discrete searchspaces": [[446, null]], "Example for using dependency constraints in discrete searchspaces": [[447, null]], "Example for using different strategies": [[441, null]], "Example for using exclusion constraints in discrete searchspaces": [[448, null]], "Example for using exclusion constraints incorporating sums and products": [[449, null]], "Example for using synthetic test functions in hybrid spaces": [[468, null]], "Example for validation of a config file": [[472, null]], "Examples": [[477, null]], "Examples On This Page": [[491, null]], "Excluding Configurations": [[490, "excluding-configurations"]], "Expectations": [[501, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[455, "experiment-setup"], [456, "experiment-setup"]], "Experiment setup": [[446, "experiment-setup"], [447, "experiment-setup"], [448, "experiment-setup"], [449, "experiment-setup"], [470, "experiment-setup"]], "Experimental Representation Limits": [[491, null]], "Experimental and Computational Representations": [[491, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.10.*)": [[481, "expired-deprecations-from-0-10"]], "Expired Deprecations (from 0.6.*)": [[481, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[481, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[481, "expired-deprecations-from-0-9"]], "Explainers": [[491, "explainers"]], "ExponentialTransformation": [[325, null]], "Extending BayBE\u2019s Functionality": [[482, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[499, "extracting-the-model-for-advanced-study"]], "FAQ": [[478, null]], "FPSInitialization": [[209, null]], "FPSRecommender": [[210, null]], "Fixed": [[481, "fixed"], [481, "id6"], [481, "id11"], [481, "id14"], [481, "id19"], [481, "id28"], [481, "id33"], [481, "id35"], [481, "id39"], [481, "id43"], [481, "id49"], [481, "id57"], [481, "id61"], [481, "id66"], [481, "id71"], [481, "id75"], [481, "id82"], [481, "id87"], [481, "id93"], [481, "id99"], [481, "id107"], [481, "id111"], [481, "id116"], [481, "id123"], [481, "id127"], [481, "id131"], [481, "id138"], [481, "id142"], [481, "id146"], [481, "id150"], [481, "id154"], [481, "id156"], [481, "id159"]], "For Label-Like Parameters: Values and Active Values": [[493, "label-like"]], "From GitHub": [[479, "from-github"]], "From Local Clone": [[479, "from-local-clone"]], "From Package Index": [[479, "from-package-index"]], "From the Default Constructor": [[495, "from-the-default-constructor"]], "Further Information": [[487, "further-information"]], "GammaPrior": [[173, null]], "GaussianMixtureClusteringRecommender": [[204, null]], "GaussianProcessPreset": [[279, null]], "GaussianProcessSurrogate": [[272, null]], "General Information": [[494, "general-information"]], "General Workflow": [[482, "general-workflow"]], "Generating Lookup Tables": [[474, "generating-lookup-tables"]], "Getting Recommendations": [[463, "getting-recommendations"], [487, "getting-recommendations"], [490, null]], "Getting a recommendation and adding measurements": [[440, "getting-a-recommendation-and-adding-measurements"]], "Global Settings Initialization": [[497, null]], "Global Uncertainty Reduction": [[485, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[174, null]], "HalfNormalPrior": [[175, null]], "Hook instance vs. target instance": [[451, null]], "Hybrid constraints": [[488, null]], "IdentityTransformation": [[326, null]], "Important": [[500, null]], "Imports": [[435, "imports"], [451, "imports"], [453, "imports"], [458, "imports"], [459, "imports"], [461, "imports"], [463, "imports"], [464, "imports"], [466, "imports"], [474, "imports"], [476, "imports"]], "Inclusion of initial data": [[436, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[261, null]], "Indices and Tables": [[479, "indices-and-tables"]], "Influence of Continuous Parameters": [[504, null]], "Influence on Surrogate Models": [[488, null]], "Initialization Precedence": [[497, "initialization-precedence"]], "Insights": [[491, null]], "Inspecting Settings": [[497, "inspecting-settings"]], "Installation Related Issues": [[480, "installation-related-issues"]], "Interval": [[402, null]], "Invoking alternative constructors": [[496, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[455, "iterate-with-recommendations-and-measurements"], [456, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[496, "json-de-serialization"]], "Joint Activation": [[497, "joint-activation"]], "KMeansClusteringRecommender": [[205, null]], "KMedoids": [[377, null]], "Kernel": [[108, null]], "KernelFactory": [[274, null]], "Known Issues": [[480, null]], "License": [[484, null]], "Limitations": [[486, null], [500, "limitations"]], "LinearKernel": [[110, null]], "Links for documentation": [[456, "links-for-documentation"]], "Local Uncertainty Reduction": [[485, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[176, null]], "LogarithmicTransformation": [[327, null]], "Lookup functionality and data creation": [[436, "lookup-functionality-and-data-creation"], [437, "lookup-functionality-and-data-creation"], [438, "lookup-functionality-and-data-creation"]], "Maintainers": [[483, "maintainers"]], "Manual Activation": [[497, "manual-activation"]], "Manual verification of the constraint": [[446, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[447, "manual-verification-of-the-constraints"], [448, "manual-verification-of-the-constraints"], [449, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[486, "marking-experiments-as-pending"]], "MaternKernel": [[111, null]], "MeanPredictionSurrogate": [[288, null]], "MeasurableMetadata": [[408, null]], "Memory During Optimization": [[504, null]], "MemorySize": [[221, null]], "Meta Recommenders": [[490, null], [494, "meta-recommenders"]], "MetaRecommender": [[184, null]], "Metadata": [[409, null]], "Method overrides": [[482, "method-overrides"]], "Minimization": [[500, "minimization"]], "Minimization = Negated Maximization": [[500, null]], "Mismatching": [[500, null]], "Missing Lookup Values": [[498, null]], "Mixtures": [[457, null]], "Model Interpretation in BO": [[491, null]], "Model Outputs": [[455, "model-outputs"], [456, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[458, null]], "Modeling a Mixture in Traditional Representation": [[459, null]], "Monitoring the Probability of Improvement": [[453, null]], "Monkeypatching": [[451, "monkeypatching"], [452, null], [453, "monkeypatching"]], "MonotonicTransformation": [[317, null]], "Multi Target": [[462, null]], "Multi-Armed Bandit": [[460, null]], "Multi-Output Modeling": [[499, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[491, "multi-output-surrogate-models"]], "Multiplication": [[502, "multiplication"]], "MultiplicativeTransformation": [[335, null]], "NGBoostSurrogate": [[290, null]], "NaiveHybridSpaceRecommender": [[191, null]], "Necessary imports": [[455, "necessary-imports"], [456, "necessary-imports"], [470, "necessary-imports"], [471, "necessary-imports"], [472, "necessary-imports"]], "Necessary imports for this example": [[436, "necessary-imports-for-this-example"], [437, "necessary-imports-for-this-example"], [438, "necessary-imports-for-this-example"], [440, "necessary-imports-for-this-example"], [441, "necessary-imports-for-this-example"], [443, "necessary-imports-for-this-example"], [444, "necessary-imports-for-this-example"], [446, "necessary-imports-for-this-example"], [447, "necessary-imports-for-this-example"], [448, "necessary-imports-for-this-example"], [449, "necessary-imports-for-this-example"], [467, "necessary-imports-for-this-example"], [468, "necessary-imports-for-this-example"]], "Nesting objects": [[496, "nesting-objects"]], "New Settings Control Mechanism": [[489, null]], "Non-Dominated Configurations": [[492, null]], "NonPredictiveRecommender": [[202, null]], "NormalPrior": [[177, null]], "Normalizing Existing Targets": [[500, "normalizing-existing-targets"]], "NumericalContinuousParameter": [[154, null], [493, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[155, null], [493, "numericaldiscreteparameter"]], "NumericalTarget": [[311, null], [500, "numericaltarget"]], "Objective": [[124, null], [492, null]], "Optimizing a Custom Black-Box Function": [[435, null]], "Optimizing a Laser\u2019s Wavelength": [[476, null]], "Optional Dependencies": [[479, "optional-dependencies"]], "Optional Dependency": [[493, null]], "Optional: Defining the Optimization Strategy": [[479, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[458, null]], "Order of Operations": [[502, null]], "PAMClusteringRecommender": [[206, null]], "Parameter": [[142, null]], "Parameter Encoding": [[493, null]], "Parameter Importance via SHAP": [[491, "parameter-importance-via-shap"]], "Parameter Names": [[493, null]], "Parameter Setup": [[458, "parameter-setup"], [459, "parameter-setup"]], "Parameter tolerances": [[487, null]], "ParameterEncoding": [[151, null]], "Parameters": [[493, null]], "Parameters for a full simulation loop": [[436, "parameters-for-a-full-simulation-loop"], [437, "parameters-for-a-full-simulation-loop"], [438, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[133, null], [492, "paretoobjective"]], "PartialAcquisitionFunction": [[28, null]], "Performing the simulation loop": [[436, "performing-the-simulation-loop"]], "PeriodicKernel": [[112, null]], "Permanent Exclusion": [[490, "permanent-exclusion"]], "Permutation Invariance": [[458, "permutation-invariance"]], "PiecewisePolynomialKernel": [[113, null]], "PlainKernelFactory": [[275, null]], "Plots": [[491, "plots"]], "Plotting the Results": [[435, "plotting-the-results"], [452, "plotting-the-results"], [453, "plotting-the-results"]], "PolynomialKernel": [[114, null]], "Posterior Statistics with Desirability Objectives": [[487, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Power Transformation": [[500, "power-transformation"]], "PowerTransformation": [[328, null]], "Practical Considerations": [[500, null], [500, null], [500, null], [500, null], [500, null], [500, null]], "Predictive Statistics": [[487, "predictive-statistics"]], "Prior": [[170, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[452, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[120, null]], "Pure Recommenders": [[494, "pure-recommenders"]], "PureRecommender": [[194, null]], "Purely Continuous Search Spaces": [[485, null]], "PyCharm vs. exceptiongroup": [[480, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[115, null]], "RFFKernel": [[116, null]], "RQKernel": [[117, null]], "Ramp Transformation": [[500, "ramp-transformation"]], "RandomForestSurrogate": [[292, null]], "RandomRecommender": [[211, null]], "RecommenderProtocol": [[181, null]], "Recommenders": [[494, null]], "Registering Custom Hooks": [[451, null]], "Removed": [[481, "removed"], [481, "id7"], [481, "id15"], [481, "id20"], [481, "id29"], [481, "id50"], [481, "id56"], [481, "id65"], [481, "id78"], [481, "id88"], [481, "id94"], [481, "id103"]], "Representation of Data within Discrete Subspaces": [[495, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[504, "reproducibility"]], "Restoring Previous Settings": [[497, null]], "Restricting Search Spaces Using Constraints": [[495, "restricting-search-spaces-using-constraints"]], "Results": [[476, "results"]], "Running the Simulation": [[461, "running-the-simulation"]], "Running the Simulation Loop": [[435, "running-the-simulation-loop"]], "SHAPInsight": [[99, null]], "SKLearnClusteringRecommender": [[207, null]], "Sampling Recommenders": [[494, "sampling-recommenders"]], "Scalarizer": [[131, null]], "ScaleKernel": [[121, null]], "Search Space Creation": [[458, "search-space-creation"], [459, "search-space-creation"]], "Search Space Memory Estimation": [[504, "search-space-memory-estimation"]], "Search Spaces": [[495, null]], "SearchSpace": [[216, null]], "SearchSpaceType": [[217, null]], "Searchspaces": [[465, null]], "Seeing Transfer Learning in Action": [[501, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[487, null]], "SequentialMetaRecommender": [[187, null]], "SerialMixin": [[240, null]], "Serialization": [[469, null], [487, "serialization"], [496, null], [502, null]], "Serialization and de-serialization": [[470, "serialization-and-de-serialization"]], "Set Point Matching": [[500, "set-point-matching"]], "Settings": [[245, null], [435, "settings"], [452, "settings"], [453, "settings"], [464, "settings"], [466, "settings"], [474, "settings"], [476, "settings"], [497, null]], "Setup": [[440, "setup"], [461, "setup"]], "Sigmoid Transformation": [[500, "sigmoid-transformation"]], "SigmoidTransformation": [[329, null], [502, "sigmoidtransformation"]], "Signature components": [[451, null]], "Simplex Construction": [[458, null]], "Simulating Multiple Scenarios": [[498, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[498, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[498, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[452, "simulating-the-interrupted-campaigns"]], "Simulating the Optimization Loop": [[476, "simulating-the-optimization-loop"]], "Simulating the Uninterrupted Campaigns": [[452, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[498, null]], "Simulation Loop": [[474, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[464, null]], "SingleTargetObjective": [[135, null], [492, "singletargetobjective"]], "Slot-based Representation": [[459, null]], "SmoothedBoxPrior": [[178, null]], "StreamingSequentialMetaRecommender": [[188, null]], "Sub-Sampling Method": [[485, null]], "SubSelectionCondition": [[44, null], [488, "subselectioncondition"]], "SubspaceContinuous": [[214, null]], "SubspaceDiscrete": [[222, null]], "Substance Amounts": [[458, "substance-amounts"]], "SubstanceEncoding": [[152, null]], "SubstanceParameter": [[158, null], [493, "substanceparameter"]], "Suggested Fix": [[480, null], [480, null], [480, null], [480, null]], "Supported Acquisition Functions": [[486, null]], "Supported Recommenders": [[486, null]], "Surrogate": [[263, null]], "Surrogate Model Limitations": [[488, null]], "Surrogate Replication": [[499, "surrogate-replication"]], "SurrogateProtocol": [[264, null]], "Surrogates": [[499, null]], "Synchronizing Pull Requests": [[482, "synchronizing-pull-requests"]], "Target": [[303, null]], "Target Normalization": [[463, null], [492, "target-normalization"], [500, "target-normalization"]], "Targets": [[500, null]], "Targets are Optimization Instructions": [[500, "targets-as-instruction"]], "TaskParameter": [[145, null], [493, "taskparameter"]], "Technology": [[501, null]], "Terminology": [[458, "terminology"], [496, null], [501, null]], "Terminology Continued": [[501, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[498, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[461, "the-black-box-model"]], "The Laser Model": [[476, "the-laser-model"]], "The Lookup Mechanism": [[498, "the-lookup-mechanism"]], "The Optimization Loop": [[479, "the-optimization-loop"]], "The Optimization Problem": [[476, "the-optimization-problem"]], "The Role of the TaskParameter": [[501, "the-role-of-the-taskparameter"]], "The Scenario": [[476, "the-scenario"]], "The configuration dictionary as a string": [[471, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[490, "the-recommend-call"]], "The type field": [[496, "the-type-field"]], "Theoretical Span": [[458, null]], "ThresholdCondition": [[45, null], [488, "thresholdcondition"]], "Trajectory-Based Control": [[490, null]], "Transfer Learning": [[473, null], [474, null], [501, null]], "Transformation": [[318, null]], "Transformations": [[475, null], [502, null]], "Triangular Transformation": [[500, "triangular-transformation"]], "TriangularTransformation": [[330, null], [502, "triangulartransformation"]], "Triggering the Hook": [[453, "triggering-the-hook"]], "Triggering the Hooks": [[451, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[189, null]], "TwoSidedAffineTransformation": [[331, null], [502, "twosidedaffinetransformation"]], "UncertainBool": [[365, null]], "Unlocking Data Treasures Through Transfer Learning": [[501, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[347, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[503, null]], "Using Custom Models": [[499, "using-custom-models"]], "Using Explicit Bounds": [[495, "using-explicit-bounds"]], "Using None": [[498, "using-none"]], "Using a Callable": [[498, "using-a-callable"]], "Using a Dataframe": [[498, "using-a-dataframe"]], "Using abbreviations": [[496, "using-abbreviations"]], "Using configuration instead": [[455, "using-configuration-instead"], [456, "using-configuration-instead"]], "Using default values": [[496, "using-default-values"]], "Utilities": [[504, null]], "Validation": [[497, null]], "Validation of model parameters": [[456, "validation-of-model-parameters"]], "Verification of Constraints": [[458, "verification-of-constraints"], [459, "verification-of-constraints"]], "Verification of Span": [[458, "verification-of-span"]], "Verification of the two dictionaries": [[472, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[444, "verify-the-constraints"]], "Visualization": [[464, "visualization"]], "Windows \u2013 Torch Problems": [[480, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[443, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [444, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [468, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[482, "writing-docstrings"]], "Writing classes": [[482, "writing-classes"]], "[0.1.0] - 2022-10-01": [[481, "id160"]], "[0.10.0] - 2024-08-02": [[481, "id52"]], "[0.11.0] - 2024-09-09": [[481, "id45"]], "[0.11.1] - 2024-10-01": [[481, "id40"]], "[0.11.2] - 2024-10-11": [[481, "id36"]], "[0.11.3] - 2024-11-06": [[481, "id34"]], "[0.11.4] - 2025-01-27": [[481, "id31"]], "[0.12.0] - 2025-01-28": [[481, "id25"]], "[0.12.1] - 2025-01-29": [[481, "id23"]], "[0.12.2] - 2025-01-31": [[481, "id21"]], "[0.13.0] - 2025-04-16": [[481, "id16"]], "[0.13.1] - 2025-06-06": [[481, "id12"]], "[0.13.2] - 2025-07-09": [[481, "id9"]], "[0.14.0] - 2025-09-10": [[481, "id3"]], "[0.14.1] - 2025-10-01": [[481, "id1"]], "[0.2.0] - 2022-11-10": [[481, "id157"]], "[0.2.1] - 2022-12-01": [[481, "id155"]], "[0.2.2] - 2023-01-13": [[481, "id151"]], "[0.2.3] - 2023-03-14": [[481, "id147"]], "[0.2.4] - 2023-03-24": [[481, "id143"]], "[0.3.0] - 2023-06-27": [[481, "id139"]], "[0.3.1] - 2023-07-17": [[481, "id135"]], "[0.3.2] - 2023-07-24": [[481, "id132"]], "[0.4.0] - 2023-08-16": [[481, "id128"]], "[0.4.1] - 2023-08-23": [[481, "id124"]], "[0.4.2] - 2023-08-29": [[481, "id120"]], "[0.5.0] - 2023-09-15": [[481, "id117"]], "[0.5.1] - 2023-10-19": [[481, "id113"]], "[0.6.0] - 2023-11-17": [[481, "id108"]], "[0.6.1] - 2023-11-27": [[481, "id104"]], "[0.7.0] - 2023-12-04": [[481, "id100"]], "[0.7.1] - 2023-12-07": [[481, "id96"]], "[0.7.2] - 2024-01-24": [[481, "id90"]], "[0.7.3] - 2024-02-09": [[481, "id84"]], "[0.7.4] - 2024-02-28": [[481, "id79"]], "[0.8.0] - 2024-02-29": [[481, "id76"]], "[0.8.1] - 2024-03-11": [[481, "id72"]], "[0.8.2] - 2024-03-27": [[481, "id68"]], "[0.9.0] - 2024-05-21": [[481, "id62"]], "[0.9.1] - 2024-06-04": [[481, "id59"]], "[Unreleased]": [[481, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[25, null]], "baybe.acquisition.partial": [[27, null]], "baybe.acquisition.utils": [[29, null]], "baybe.acquisition.utils.convert_acqf": [[30, null]], "baybe.acquisition.utils.make_partitioning": [[31, null]], "baybe.acquisition.utils.str_to_acqf": [[32, null]], "baybe.campaign": [[33, null]], "baybe.constraints": [[35, null]], "baybe.constraints.base": [[36, null]], "baybe.constraints.conditions": [[42, null]], "baybe.constraints.continuous": [[46, null]], "baybe.constraints.deprecation": [[49, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[50, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[51, null]], "baybe.constraints.discrete": [[52, null]], "baybe.constraints.utils": [[62, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[63, null]], "baybe.constraints.validation": [[64, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[65, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[66, null]], "baybe.constraints.validation.validate_constraints": [[67, null]], "baybe.exceptions": [[68, null]], "baybe.exceptions.DeprecationError": [[69, null]], "baybe.exceptions.EmptySearchSpaceError": [[70, null]], "baybe.exceptions.IncompatibilityError": [[71, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[72, null]], "baybe.exceptions.IncompatibleArgumentError": [[73, null]], "baybe.exceptions.IncompatibleExplainerError": [[74, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[75, null]], "baybe.exceptions.IncompatibleSurrogateError": [[76, null]], "baybe.exceptions.IncompleteMeasurementsError": [[77, null]], "baybe.exceptions.InfeasibilityError": [[78, null]], "baybe.exceptions.InputDataTypeWarning": [[79, null]], "baybe.exceptions.InvalidSurrogateModelError": [[80, null]], "baybe.exceptions.InvalidTargetValueError": [[81, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[82, null]], "baybe.exceptions.ModelNotTrainedError": [[83, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[84, null]], "baybe.exceptions.NoMeasurementsError": [[85, null]], "baybe.exceptions.NoRecommendersLeftError": [[86, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[87, null]], "baybe.exceptions.NothingToSimulateError": [[88, null]], "baybe.exceptions.NumericalUnderflowError": [[89, null]], "baybe.exceptions.OptionalImportError": [[90, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[91, null]], "baybe.exceptions.UnidentifiedSubclassError": [[92, null]], "baybe.exceptions.UnmatchedAttributeError": [[93, null]], "baybe.exceptions.UnusedObjectWarning": [[94, null]], "baybe.insights": [[95, null]], "baybe.insights.shap": [[96, null]], "baybe.insights.shap.EXPLAINERS": [[97, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[98, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[100, null]], "baybe.insights.shap.SHAP_PLOTS": [[101, null]], "baybe.insights.shap.is_shap_explainer": [[102, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[103, null]], "baybe.kernels": [[104, null]], "baybe.kernels.base": [[105, null]], "baybe.kernels.basic": [[109, null]], "baybe.kernels.composite": [[118, null]], "baybe.objectives": [[122, null]], "baybe.objectives.base": [[123, null]], "baybe.objectives.base.to_objective": [[125, null]], "baybe.objectives.botorch": [[126, null]], "baybe.objectives.desirability": [[128, null]], "baybe.objectives.enum": [[130, null]], "baybe.objectives.pareto": [[132, null]], "baybe.objectives.single": [[134, null]], "baybe.objectives.validation": [[136, null]], "baybe.objectives.validation.validate_target_names": [[137, null]], "baybe.parameters": [[138, null]], "baybe.parameters.base": [[139, null]], "baybe.parameters.categorical": [[143, null]], "baybe.parameters.custom": [[146, null]], "baybe.parameters.enum": [[148, null]], "baybe.parameters.numerical": [[153, null]], "baybe.parameters.substance": [[156, null]], "baybe.parameters.substance.Smiles": [[157, null]], "baybe.parameters.utils": [[159, null]], "baybe.parameters.utils.activate_parameter": [[160, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[161, null]], "baybe.parameters.utils.is_inactive": [[162, null]], "baybe.parameters.utils.sort_parameters": [[163, null]], "baybe.parameters.validation": [[164, null]], "baybe.parameters.validation.validate_decorrelation": [[165, null]], "baybe.parameters.validation.validate_is_finite": [[166, null]], "baybe.parameters.validation.validate_unique_values": [[167, null]], "baybe.priors": [[168, null]], "baybe.priors.base": [[169, null]], "baybe.priors.basic": [[171, null]], "baybe.recommenders": [[179, null]], "baybe.recommenders.base": [[180, null]], "baybe.recommenders.meta": [[182, null]], "baybe.recommenders.meta.base": [[183, null]], "baybe.recommenders.meta.sequential": [[185, null]], "baybe.recommenders.naive": [[190, null]], "baybe.recommenders.pure": [[192, null]], "baybe.recommenders.pure.base": [[193, null]], "baybe.recommenders.pure.bayesian": [[195, null]], "baybe.recommenders.pure.bayesian.base": [[196, null]], "baybe.recommenders.pure.bayesian.botorch": [[198, null]], "baybe.recommenders.pure.nonpredictive": [[200, null]], "baybe.recommenders.pure.nonpredictive.base": [[201, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, null]], "baybe.searchspace": [[212, null]], "baybe.searchspace.continuous": [[213, null]], "baybe.searchspace.core": [[215, null]], "baybe.searchspace.core.to_searchspace": [[218, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[219, null]], "baybe.searchspace.discrete": [[220, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[223, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[224, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[225, null]], "baybe.searchspace.validation": [[226, null]], "baybe.searchspace.validation.get_transform_parameters": [[227, null]], "baybe.searchspace.validation.validate_parameter_names": [[228, null]], "baybe.searchspace.validation.validate_parameters": [[229, null]], "baybe.serialization": [[230, null]], "baybe.serialization.core": [[231, null]], "baybe.serialization.core.add_type": [[232, null]], "baybe.serialization.core.block_deserialization_hook": [[233, null]], "baybe.serialization.core.block_serialization_hook": [[234, null]], "baybe.serialization.core.converter": [[235, null]], "baybe.serialization.core.make_base_structure_hook": [[236, null]], "baybe.serialization.core.select_constructor_hook": [[237, null]], "baybe.serialization.core.unstructure_with_type": [[238, null]], "baybe.serialization.mixin": [[239, null]], "baybe.serialization.utils": [[241, null]], "baybe.serialization.utils.deserialize_dataframe": [[242, null]], "baybe.serialization.utils.serialize_dataframe": [[243, null]], "baybe.settings": [[244, null]], "baybe.settings.active_settings": [[246, null]], "baybe.settings.adjust_defaults": [[247, null]], "baybe.simulation": [[248, null]], "baybe.simulation.core": [[249, null]], "baybe.simulation.core.simulate_experiment": [[250, null]], "baybe.simulation.lookup": [[251, null]], "baybe.simulation.lookup.look_up_targets": [[252, null]], "baybe.simulation.scenarios": [[253, null]], "baybe.simulation.scenarios.simulate_scenarios": [[254, null]], "baybe.simulation.transfer_learning": [[255, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[256, null]], "baybe.surrogates": [[257, null]], "baybe.surrogates.bandit": [[258, null]], "baybe.surrogates.base": [[260, null]], "baybe.surrogates.base.PosteriorStatistic": [[262, null]], "baybe.surrogates.composite": [[265, null]], "baybe.surrogates.custom": [[267, null]], "baybe.surrogates.custom.register_custom_architecture": [[269, null]], "baybe.surrogates.gaussian_process": [[270, null]], "baybe.surrogates.gaussian_process.core": [[271, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[273, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[276, null]], "baybe.surrogates.gaussian_process.presets": [[277, null]], "baybe.surrogates.gaussian_process.presets.core": [[278, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[280, null]], "baybe.surrogates.gaussian_process.presets.default": [[281, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[283, null]], "baybe.surrogates.linear": [[285, null]], "baybe.surrogates.naive": [[287, null]], "baybe.surrogates.ngboost": [[289, null]], "baybe.surrogates.random_forest": [[291, null]], "baybe.surrogates.utils": [[293, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[294, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[295, null]], "baybe.surrogates.utils.catch_constant_targets": [[296, null]], "baybe.surrogates.validation": [[297, null]], "baybe.surrogates.validation.make_dict_validator": [[298, null]], "baybe.surrogates.validation.type_validation_converter": [[299, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[300, null]], "baybe.targets": [[301, null]], "baybe.targets.base": [[302, null]], "baybe.targets.binary": [[304, null]], "baybe.targets.binary.ChoiceValue": [[306, null]], "baybe.targets.botorch": [[307, null]], "baybe.targets.enum": [[309, null]], "baybe.targets.numerical": [[310, null]], "baybe.targets.transforms": [[312, null]], "baybe.targets.utils": [[313, null]], "baybe.targets.utils.combine_numerical_targets": [[314, null]], "baybe.transformations": [[315, null]], "baybe.transformations.base": [[316, null]], "baybe.transformations.basic": [[319, null]], "baybe.transformations.composite": [[332, null]], "baybe.transformations.utils": [[336, null]], "baybe.transformations.utils.combine_affine_transformations": [[337, null]], "baybe.transformations.utils.compress_transformations": [[338, null]], "baybe.transformations.utils.convert_transformation": [[339, null]], "baybe.utils": [[340, null]], "baybe.utils.augmentation": [[341, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[342, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[343, null]], "baybe.utils.basic": [[344, null]], "baybe.utils.basic.UNSPECIFIED": [[346, null]], "baybe.utils.basic.cache_to_disk": [[348, null]], "baybe.utils.basic.compose": [[350, null]], "baybe.utils.basic.compose_two": [[351, null]], "baybe.utils.basic.convert_to_float": [[352, null]], "baybe.utils.basic.find_subclass": [[353, null]], "baybe.utils.basic.get_baseclasses": [[354, null]], "baybe.utils.basic.get_subclasses": [[355, null]], "baybe.utils.basic.group_duplicate_values": [[356, null]], "baybe.utils.basic.hilberts_factory": [[357, null]], "baybe.utils.basic.is_all_instance": [[358, null]], "baybe.utils.basic.match_attributes": [[359, null]], "baybe.utils.basic.refers_to": [[360, null]], "baybe.utils.basic.register_hooks": [[361, null]], "baybe.utils.basic.to_tuple": [[362, null]], "baybe.utils.boolean": [[363, null]], "baybe.utils.boolean.check_if_in": [[366, null]], "baybe.utils.boolean.is_abstract": [[367, null]], "baybe.utils.boolean.strtobool": [[368, null]], "baybe.utils.chemistry": [[369, null]], "baybe.utils.chemistry.get_canonical_smiles": [[370, null]], "baybe.utils.chemistry.get_fingerprint_class": [[371, null]], "baybe.utils.chemistry.name_to_smiles": [[372, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[373, null]], "baybe.utils.clustering_algorithms": [[374, null]], "baybe.utils.clustering_algorithms.third_party": [[375, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[376, null]], "baybe.utils.conversion": [[378, null]], "baybe.utils.conversion.fraction_to_float": [[379, null]], "baybe.utils.conversion.nonstring_to_tuple": [[380, null]], "baybe.utils.conversion.to_string": [[381, null]], "baybe.utils.dataframe": [[382, null]], "baybe.utils.dataframe.add_fake_measurements": [[383, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[384, null]], "baybe.utils.dataframe.add_parameter_noise": [[385, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[386, null]], "baybe.utils.dataframe.create_fake_input": [[387, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[388, null]], "baybe.utils.dataframe.df_drop_string_columns": [[389, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[390, null]], "baybe.utils.dataframe.filter_df": [[391, null]], "baybe.utils.dataframe.fuzzy_row_match": [[392, null]], "baybe.utils.dataframe.get_transform_objects": [[393, null]], "baybe.utils.dataframe.handle_missing_values": [[394, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[395, null]], "baybe.utils.dataframe.pretty_print_df": [[396, null]], "baybe.utils.dataframe.to_tensor": [[397, null]], "baybe.utils.dataframe.transform_target_columns": [[398, null]], "baybe.utils.interval": [[399, null]], "baybe.utils.interval.ConvertibleToInterval": [[400, null]], "baybe.utils.interval.InfiniteIntervalError": [[401, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[403, null]], "baybe.utils.memory": [[404, null]], "baybe.utils.memory.bytes_to_human_readable": [[405, null]], "baybe.utils.metadata": [[406, null]], "baybe.utils.metadata.ConvertibleToMeasurableMetadata": [[407, null]], "baybe.utils.metadata.to_metadata": [[410, null]], "baybe.utils.numerical": [[411, null]], "baybe.utils.numerical.DTypeFloatONNX": [[412, null]], "baybe.utils.numerical.closer_element": [[413, null]], "baybe.utils.numerical.closest_element": [[414, null]], "baybe.utils.random": [[415, null]], "baybe.utils.random.set_random_seed": [[416, null]], "baybe.utils.random.temporary_seed": [[417, null]], "baybe.utils.sampling_algorithms": [[418, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[420, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[421, null]], "baybe.utils.scaling": [[422, null]], "baybe.utils.validation": [[424, null]], "baybe.utils.validation.finite_float": [[425, null]], "baybe.utils.validation.non_inf_float": [[426, null]], "baybe.utils.validation.non_nan_float": [[427, null]], "baybe.utils.validation.preprocess_dataframe": [[428, null]], "baybe.utils.validation.validate_not_nan": [[429, null]], "baybe.utils.validation.validate_object_names": [[430, null]], "baybe.utils.validation.validate_objective_input": [[431, null]], "baybe.utils.validation.validate_parameter_input": [[432, null]], "baybe.utils.validation.validate_target_input": [[433, null]], "classproperty": [[349, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[480, "macos-arm64-leaked-semaphore"]], "qExpectedHypervolumeImprovement": [[9, null]], "qExpectedImprovement": [[10, null]], "qKnowledgeGradient": [[11, null]], "qLogExpectedHypervolumeImprovement": [[12, null]], "qLogExpectedImprovement": [[13, null]], "qLogNParEGO": [[14, null]], "qLogNoisyExpectedHypervolumeImprovement": [[15, null]], "qLogNoisyExpectedImprovement": [[16, null]], "qNegIntegratedPosteriorVariance": [[17, null]], "qNoisyExpectedHypervolumeImprovement": [[18, null]], "qNoisyExpectedImprovement": [[19, null]], "qPosteriorStandardDeviation": [[20, null]], "qProbabilityOfImprovement": [[21, null]], "qSimpleRegret": [[22, null]], "qThompsonSampling": [[23, null]], "qUpperConfidenceBound": [[24, null]], "\u201cPre-training\u201d stage": [[455, "pre-training-stage"]], "\u26a1 Quick Start": [[479, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[479, "maintainers"]], "\ud83d\udcbb Installation": [[479, "installation"]], "\ud83d\udcc4 License": [[479, "license"]], "\ud83d\udcd6 Citation": [[479, "citation"]], "\ud83d\udce1 Telemetry": [[479, "telemetry"]], "\ud83d\udd0b Batteries Included": [[479, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[479, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.make_partitioning", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.botorch", "_autosummary/baybe.objectives.botorch.ChainedMCObjective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.add_type", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.make_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_with_type", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.settings", "_autosummary/baybe.settings.Settings", "_autosummary/baybe.settings.active_settings", "_autosummary/baybe.settings.adjust_defaults", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.botorch", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.utils", "_autosummary/baybe.targets.utils.combine_numerical_targets", "_autosummary/baybe.transformations", "_autosummary/baybe.transformations.base", "_autosummary/baybe.transformations.base.MonotonicTransformation", "_autosummary/baybe.transformations.base.Transformation", "_autosummary/baybe.transformations.basic", "_autosummary/baybe.transformations.basic.AbsoluteTransformation", "_autosummary/baybe.transformations.basic.AffineTransformation", "_autosummary/baybe.transformations.basic.BellTransformation", "_autosummary/baybe.transformations.basic.ClampingTransformation", "_autosummary/baybe.transformations.basic.CustomTransformation", "_autosummary/baybe.transformations.basic.ExponentialTransformation", "_autosummary/baybe.transformations.basic.IdentityTransformation", "_autosummary/baybe.transformations.basic.LogarithmicTransformation", "_autosummary/baybe.transformations.basic.PowerTransformation", "_autosummary/baybe.transformations.basic.SigmoidTransformation", "_autosummary/baybe.transformations.basic.TriangularTransformation", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation", "_autosummary/baybe.transformations.composite", "_autosummary/baybe.transformations.composite.AdditiveTransformation", "_autosummary/baybe.transformations.composite.ChainedTransformation", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation", "_autosummary/baybe.transformations.utils", "_autosummary/baybe.transformations.utils.combine_affine_transformations", "_autosummary/baybe.transformations.utils.compress_transformations", "_autosummary/baybe.transformations.utils.convert_transformation", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.cache_to_disk", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.compose", "_autosummary/baybe.utils.basic.compose_two", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.AutoBool", "_autosummary/baybe.utils.boolean.UncertainBool", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.ConvertibleToInterval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.metadata", "_autosummary/baybe.utils.metadata.ConvertibleToMeasurableMetadata", "_autosummary/baybe.utils.metadata.MeasurableMetadata", "_autosummary/baybe.utils.metadata.Metadata", "_autosummary/baybe.utils.metadata.to_metadata", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.preprocess_dataframe", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_object_names", "_autosummary/baybe.utils.validation.validate_objective_input", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/basic_transfer_learning", "examples/Transformations/Transformations", "examples/Transformations/laser_tuning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/settings", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/transformations", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.make_partitioning.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.botorch.rst", "_autosummary/baybe.objectives.botorch.ChainedMCObjective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.add_type.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.make_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_with_type.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.settings.rst", "_autosummary/baybe.settings.Settings.rst", "_autosummary/baybe.settings.active_settings.rst", "_autosummary/baybe.settings.adjust_defaults.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.botorch.rst", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.utils.rst", "_autosummary/baybe.targets.utils.combine_numerical_targets.rst", "_autosummary/baybe.transformations.rst", "_autosummary/baybe.transformations.base.rst", "_autosummary/baybe.transformations.base.MonotonicTransformation.rst", "_autosummary/baybe.transformations.base.Transformation.rst", "_autosummary/baybe.transformations.basic.rst", "_autosummary/baybe.transformations.basic.AbsoluteTransformation.rst", "_autosummary/baybe.transformations.basic.AffineTransformation.rst", "_autosummary/baybe.transformations.basic.BellTransformation.rst", "_autosummary/baybe.transformations.basic.ClampingTransformation.rst", "_autosummary/baybe.transformations.basic.CustomTransformation.rst", "_autosummary/baybe.transformations.basic.ExponentialTransformation.rst", "_autosummary/baybe.transformations.basic.IdentityTransformation.rst", "_autosummary/baybe.transformations.basic.LogarithmicTransformation.rst", "_autosummary/baybe.transformations.basic.PowerTransformation.rst", "_autosummary/baybe.transformations.basic.SigmoidTransformation.rst", "_autosummary/baybe.transformations.basic.TriangularTransformation.rst", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation.rst", "_autosummary/baybe.transformations.composite.rst", "_autosummary/baybe.transformations.composite.AdditiveTransformation.rst", "_autosummary/baybe.transformations.composite.ChainedTransformation.rst", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation.rst", "_autosummary/baybe.transformations.utils.rst", "_autosummary/baybe.transformations.utils.combine_affine_transformations.rst", "_autosummary/baybe.transformations.utils.compress_transformations.rst", "_autosummary/baybe.transformations.utils.convert_transformation.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.cache_to_disk.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.compose.rst", "_autosummary/baybe.utils.basic.compose_two.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.AutoBool.rst", "_autosummary/baybe.utils.boolean.UncertainBool.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.ConvertibleToInterval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.metadata.rst", "_autosummary/baybe.utils.metadata.ConvertibleToMeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.MeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.Metadata.rst", "_autosummary/baybe.utils.metadata.to_metadata.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.preprocess_dataframe.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_object_names.rst", "_autosummary/baybe.utils.validation.validate_objective_input.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/Transformations/Transformations.md", "examples/Transformations/laser_tuning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/settings.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/transformations.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[69, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[70, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[71, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[72, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[73, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[74, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[75, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[76, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[77, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[78, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[79, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[80, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[81, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[82, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[83, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[84, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[85, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[86, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[87, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[88, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[89, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[90, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[91, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[92, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[93, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[94, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[181, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[194, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[221, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.settings.settings method)": [[245, "baybe.settings.Settings.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[264, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[274, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[282, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[284, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[303, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[305, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.__init__", false]], "__init__() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.__init__", false]], "__init__() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.__init__", false]], "__init__() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.__init__", false]], "__init__() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.__init__", false]], "__init__() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.__init__", false]], "__init__() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.__init__", false]], "__init__() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.__init__", false]], "__init__() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.__init__", false]], "__init__() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.__init__", false]], "__init__() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.__init__", false]], "__init__() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.__init__", false]], "__init__() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.__init__", false]], "__init__() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.__init__", false]], "__init__() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.__init__", false]], "__init__() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.__init__", false]], "__init__() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[349, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[345, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[401, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.metadata.measurablemetadata method)": [[408, "baybe.utils.metadata.MeasurableMetadata.__init__", false]], "__init__() (baybe.utils.metadata.metadata method)": [[409, "baybe.utils.metadata.Metadata.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[423, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[69, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[70, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[71, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[72, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[73, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[74, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[75, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[76, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[77, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[78, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[79, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[80, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[81, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[82, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[83, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[84, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[85, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[86, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[87, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[88, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[89, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[90, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[91, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[92, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[93, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[94, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[149, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[150, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[152, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[401, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[178, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "abs() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.abs", false]], "abs() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.abs", false]], "abs() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.abs", false]], "abs() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.abs", false]], "abs() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.abs", false]], "abs() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.abs", false]], "abs() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.abs", false]], "abs() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.abs", false]], "abs() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.abs", false]], "abs() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.abs", false]], "abs() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.abs", false]], "abs() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.abs", false]], "abs() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.abs", false]], "abs() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.abs", false]], "abs() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.abs", false]], "abs() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.abs", false]], "abs() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.abs", false]], "abs() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.abs", false]], "absolutetransformation (class in baybe.transformations.basic)": [[320, "baybe.transformations.basic.AbsoluteTransformation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[26, "baybe.acquisition.base.AcquisitionFunction", false]], "activate() (baybe.settings.settings method)": [[245, "baybe.settings.Settings.activate", false]], "activate_parameter() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.activate_parameter", false]], "active_settings (in module baybe.settings)": [[246, "baybe.settings.active_settings", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[383, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.add_measurements", false]], "add_module() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.add_module", false]], "add_module() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.add_module", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[384, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[385, "baybe.utils.dataframe.add_parameter_noise", false]], "add_type() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.add_type", false]], "additivekernel (class in baybe.kernels.composite)": [[119, "baybe.kernels.composite.AdditiveKernel", false]], "additivetransformation (class in baybe.transformations.composite)": [[333, "baybe.transformations.composite.AdditiveTransformation", false]], "adjust_defaults() (in module baybe.settings)": [[247, "baybe.settings.adjust_defaults", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "affineposteriortransform (class in baybe.targets.botorch)": [[308, "baybe.targets.botorch.AffinePosteriorTransform", false]], "affinetransformation (class in baybe.transformations.basic)": [[321, "baybe.transformations.basic.AffineTransformation", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[194, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[194, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[194, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[172, "baybe.priors.basic.BetaPrior.alpha", false]], "apply() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.apply", false]], "apply() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.apply", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[386, "baybe.utils.dataframe.arrays_to_dataframes", false]], "as_pre_transformation (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.as_pre_transformation", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "auto (baybe.utils.boolean.autobool attribute)": [[364, "baybe.utils.boolean.AutoBool.AUTO", false]], "autobool (class in baybe.utils.boolean)": [[364, "baybe.utils.boolean.AutoBool", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[178, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[99, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[121, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[119, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[120, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[106, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[294, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[295, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[279, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[25, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[27, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[29, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[33, "module-baybe.campaign", false]], "baybe.constraints": [[35, "module-baybe.constraints", false]], "baybe.constraints.base": [[36, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[42, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[46, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[49, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[52, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[62, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[64, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[68, "module-baybe.exceptions", false]], "baybe.insights": [[95, "module-baybe.insights", false]], "baybe.insights.shap": [[96, "module-baybe.insights.shap", false]], "baybe.kernels": [[104, "module-baybe.kernels", false]], "baybe.kernels.base": [[105, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[109, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[118, "module-baybe.kernels.composite", false]], "baybe.objectives": [[122, "module-baybe.objectives", false]], "baybe.objectives.base": [[123, "module-baybe.objectives.base", false]], "baybe.objectives.botorch": [[126, "module-baybe.objectives.botorch", false]], "baybe.objectives.desirability": [[128, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[130, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[132, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[134, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[136, "module-baybe.objectives.validation", false]], "baybe.parameters": [[138, "module-baybe.parameters", false]], "baybe.parameters.base": [[139, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[143, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[146, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[148, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[153, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[156, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[159, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[164, "module-baybe.parameters.validation", false]], "baybe.priors": [[168, "module-baybe.priors", false]], "baybe.priors.base": [[169, "module-baybe.priors.base", false]], "baybe.priors.basic": [[171, "module-baybe.priors.basic", false]], "baybe.recommenders": [[179, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[180, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[182, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[183, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[185, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[190, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[192, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[193, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[195, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[196, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[198, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.nonpredictive": [[200, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[201, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[212, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[213, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[215, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[220, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[226, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[230, "module-baybe.serialization", false]], "baybe.serialization.core": [[231, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[239, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[241, "module-baybe.serialization.utils", false]], "baybe.settings": [[244, "module-baybe.settings", false]], "baybe.simulation": [[248, "module-baybe.simulation", false]], "baybe.simulation.core": [[249, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[251, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[253, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[255, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[257, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[258, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[260, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[265, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[267, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[270, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[271, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[273, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[277, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[278, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[281, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[283, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[285, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[287, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[289, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[291, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[293, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[297, "module-baybe.surrogates.validation", false]], "baybe.targets": [[301, "module-baybe.targets", false]], "baybe.targets.base": [[302, "module-baybe.targets.base", false]], "baybe.targets.binary": [[304, "module-baybe.targets.binary", false]], "baybe.targets.botorch": [[307, "module-baybe.targets.botorch", false]], "baybe.targets.enum": [[309, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[310, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[312, "module-baybe.targets.transforms", false]], "baybe.targets.utils": [[313, "module-baybe.targets.utils", false]], "baybe.transformations": [[315, "module-baybe.transformations", false]], "baybe.transformations.base": [[316, "module-baybe.transformations.base", false]], "baybe.transformations.basic": [[319, "module-baybe.transformations.basic", false]], "baybe.transformations.composite": [[332, "module-baybe.transformations.composite", false]], "baybe.transformations.utils": [[336, "module-baybe.transformations.utils", false]], "baybe.utils": [[340, "module-baybe.utils", false]], "baybe.utils.augmentation": [[341, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[344, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[363, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[369, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[374, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[375, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[376, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[378, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[382, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[399, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[404, "module-baybe.utils.memory", false]], "baybe.utils.metadata": [[406, "module-baybe.utils.metadata", false]], "baybe.utils.numerical": [[411, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[415, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[418, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[422, "module-baybe.utils.scaling", false]], "baybe.utils.validation": [[424, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "belltransformation (class in baybe.transformations.basic)": [[322, "baybe.transformations.basic.BellTransformation", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[172, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.BetaPrior", false]], "bfloat16() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.bfloat16", false]], "bfloat16() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.bfloat16", false]], "binarytarget (class in baybe.targets.binary)": [[305, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.buffers", false]], "buffers() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.buffers", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[405, "baybe.utils.memory.bytes_to_human_readable", false]], "cache_campaign_recommendations (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.cache_campaign_recommendations", false]], "cache_directory (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.cache_directory", false]], "cache_to_disk() (in module baybe.utils.basic)": [[348, "baybe.utils.basic.cache_to_disk", false]], "campaign (class in baybe.campaign)": [[34, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[296, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[144, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.transformations.basic.belltransformation attribute)": [[322, "baybe.transformations.basic.BellTransformation.center", false]], "center (baybe.transformations.basic.sigmoidtransformation attribute)": [[329, "baybe.transformations.basic.SigmoidTransformation.center", false]], "center (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.center", false]], "chain() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.chain", false]], "chain() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.chain", false]], "chain() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.chain", false]], "chain() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.chain", false]], "chain() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.chain", false]], "chain() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.chain", false]], "chain() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.chain", false]], "chain() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.chain", false]], "chain() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.chain", false]], "chain() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.chain", false]], "chain() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.chain", false]], "chain() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.chain", false]], "chain() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.chain", false]], "chain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.chain", false]], "chain() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.chain", false]], "chain() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.chain", false]], "chain() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.chain", false]], "chainedmcobjective (class in baybe.objectives.botorch)": [[127, "baybe.objectives.botorch.ChainedMCObjective", false]], "chainedtransformation (class in baybe.transformations.composite)": [[334, "baybe.transformations.composite.ChainedTransformation", false]], "check_if_in() (in module baybe.utils.boolean)": [[366, "baybe.utils.boolean.check_if_in", false]], "children() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.children", false]], "children() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.children", false]], "choicevalue (in module baybe.targets.binary)": [[306, "baybe.targets.binary.ChoiceValue", false]], "clamp() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.clamp", false]], "clamp() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.clamp", false]], "clamp() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.clamp", false]], "clamp() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.clamp", false]], "clamp() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.clamp", false]], "clamp() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.clamp", false]], "clamp() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.clamp", false]], "clamp() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.clamp", false]], "clamp() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.clamp", false]], "clamp() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.clamp", false]], "clamp() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.clamp", false]], "clamp() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.clamp", false]], "clamp() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.clamp", false]], "clamp() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.clamp", false]], "clamp() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.clamp", false]], "clamp() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.clamp", false]], "clamp() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.clamp", false]], "clamp() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.clamp", false]], "clamp() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.clamp", false]], "clampingtransformation (class in baybe.transformations.basic)": [[323, "baybe.transformations.basic.ClampingTransformation", false]], "classproperty (class in baybe.utils.basic)": [[349, "baybe.utils.basic.classproperty", false]], "clear_cache() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.clear_cache", false]], "closer_element() (in module baybe.utils.numerical)": [[413, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[414, "baybe.utils.numerical.closest_element", false]], "cluster_centers_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.cluster_centers_", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[423, "baybe.utils.scaling.ColumnTransformer", false]], "combine_affine_transformations() (in module baybe.transformations.utils)": [[337, "baybe.transformations.utils.combine_affine_transformations", false]], "combine_numerical_targets() (in module baybe.targets.utils)": [[314, "baybe.targets.utils.combine_numerical_targets", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[194, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compile() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.compile", false]], "compile() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.compile", false]], "compose() (in module baybe.utils.basic)": [[350, "baybe.utils.basic.compose", false]], "compose_two() (in module baybe.utils.basic)": [[351, "baybe.utils.basic.compose_two", false]], "compositekernel (class in baybe.kernels.base)": [[107, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[266, "baybe.surrogates.composite.CompositeSurrogate", false]], "compress_transformations() (in module baybe.transformations.utils)": [[338, "baybe.transformations.utils.compress_transformations", false]], "compute_ref_point() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement static method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement static method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[173, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[43, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[216, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[39, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[50, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[51, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[140, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[30, "baybe.acquisition.utils.convert_acqf", false]], "convert_to_float() (in module baybe.utils.basic)": [[352, "baybe.utils.basic.convert_to_float", false]], "convert_transformation() (in module baybe.transformations.utils)": [[339, "baybe.transformations.utils.convert_transformation", false]], "converter (in module baybe.serialization.core)": [[235, "baybe.serialization.core.converter", false]], "convertibletointerval (in module baybe.utils.interval)": [[400, "baybe.utils.interval.ConvertibleToInterval", false]], "convertibletomeasurablemetadata (in module baybe.utils.metadata)": [[407, "baybe.utils.metadata.ConvertibleToMeasurableMetadata", false]], "cpu() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.cpu", false]], "cpu() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.cpu", false]], "create() (baybe.utils.interval.interval class method)": [[402, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[387, "baybe.utils.dataframe.create_fake_input", false]], "cuda() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.cuda", false]], "cuda() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.cuda", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[150, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[147, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "customtransformation (class in baybe.transformations.basic)": [[324, "baybe.transformations.basic.CustomTransformation", false]], "cutoffs (baybe.transformations.basic.clampingtransformation attribute)": [[323, "baybe.transformations.basic.ClampingTransformation.cutoffs", false]], "cutoffs (baybe.transformations.basic.triangulartransformation attribute)": [[330, "baybe.transformations.basic.TriangularTransformation.cutoffs", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[282, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[69, "baybe.exceptions.DeprecationError", false]], "description (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.description", false]], "description (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.description", false]], "description (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.description", false]], "description (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.description", false]], "description (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.description", false]], "description (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.description", false]], "description (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.description", false]], "description (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.description", false]], "description (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.description", false]], "description (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.description", false]], "description (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.description", false]], "description (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.description", false]], "description (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.description", false]], "description (baybe.targets.base.target property)": [[303, "baybe.targets.base.Target.description", false]], "description (baybe.targets.binary.binarytarget property)": [[305, "baybe.targets.binary.BinaryTarget.description", false]], "description (baybe.targets.numerical.numericaltarget property)": [[311, "baybe.targets.numerical.NumericalTarget.description", false]], "description (baybe.utils.metadata.measurablemetadata attribute)": [[408, "baybe.utils.metadata.MeasurableMetadata.description", false]], "description (baybe.utils.metadata.metadata attribute)": [[409, "baybe.utils.metadata.Metadata.description", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[242, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[129, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[342, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[343, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[388, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[389, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[390, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[216, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[41, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[141, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[419, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "double() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.double", false]], "double() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.double", false]], "dtypefloatnumpy (baybe.settings.settings property)": [[245, "baybe.settings.Settings.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[412, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (baybe.settings.settings property)": [[245, "baybe.settings.Settings.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[345, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[284, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[70, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[216, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.eval", false]], "eval() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.eval", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "evaluate() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.evaluate", false]], "evaluate() (baybe.utils.boolean.autobool method)": [[364, "baybe.utils.boolean.AutoBool.evaluate", false]], "exp() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.exp", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[221, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[99, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[97, "baybe.insights.shap.EXPLAINERS", false]], "exponent (baybe.transformations.basic.powertransformation attribute)": [[328, "baybe.transformations.basic.PowerTransformation.exponent", false]], "exponentialtransformation (class in baybe.transformations.basic)": [[325, "baybe.transformations.basic.ExponentialTransformation", false]], "extra_repr() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.extra_repr", false]], "extra_repr() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.extra_repr", false]], "factor (baybe.transformations.basic.affinetransformation attribute)": [[321, "baybe.transformations.basic.AffineTransformation.factor", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[305, "baybe.targets.binary.BinaryTarget.failure_value", false]], "false (baybe.utils.boolean.autobool attribute)": [[364, "baybe.utils.boolean.AutoBool.FALSE", false]], "false (baybe.utils.boolean.uncertainbool attribute)": [[365, "baybe.utils.boolean.UncertainBool.FALSE", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[420, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[391, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[353, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[425, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[264, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[423, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "float() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.float", false]], "float() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.float", false]], "float_precision_numpy (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.float_precision_numpy", false]], "float_precision_torch (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.float_precision_torch", false]], "forward() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.forward", false]], "forward() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.forward", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[419, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[379, "baybe.utils.conversion.fraction_to_float", false]], "from_anchors() (baybe.transformations.basic.sigmoidtransformation class method)": [[329, "baybe.transformations.basic.SigmoidTransformation.from_anchors", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[99, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[106, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[107, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[108, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[110, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[111, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[112, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[114, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[115, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[116, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[117, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[119, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[120, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[121, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[124, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[133, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[135, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[140, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[141, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[142, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[144, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[145, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[158, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[170, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[172, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[173, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[174, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[175, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[176, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[177, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[240, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[263, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[303, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[305, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.transformations.base.monotonictransformation class method)": [[317, "baybe.transformations.base.MonotonicTransformation.from_dict", false]], "from_dict() (baybe.transformations.base.transformation class method)": [[318, "baybe.transformations.base.Transformation.from_dict", false]], "from_dict() (baybe.transformations.basic.absolutetransformation class method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.affinetransformation class method)": [[321, "baybe.transformations.basic.AffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.belltransformation class method)": [[322, "baybe.transformations.basic.BellTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.clampingtransformation class method)": [[323, "baybe.transformations.basic.ClampingTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.customtransformation class method)": [[324, "baybe.transformations.basic.CustomTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.exponentialtransformation class method)": [[325, "baybe.transformations.basic.ExponentialTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.identitytransformation class method)": [[326, "baybe.transformations.basic.IdentityTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.logarithmictransformation class method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.powertransformation class method)": [[328, "baybe.transformations.basic.PowerTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.sigmoidtransformation class method)": [[329, "baybe.transformations.basic.SigmoidTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.triangulartransformation class method)": [[330, "baybe.transformations.basic.TriangularTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.additivetransformation class method)": [[333, "baybe.transformations.composite.AdditiveTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.chainedtransformation class method)": [[334, "baybe.transformations.composite.ChainedTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.multiplicativetransformation class method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[402, "baybe.utils.interval.Interval.from_dict", false]], "from_dict() (baybe.utils.metadata.measurablemetadata class method)": [[408, "baybe.utils.metadata.MeasurableMetadata.from_dict", false]], "from_dict() (baybe.utils.metadata.metadata class method)": [[409, "baybe.utils.metadata.Metadata.from_dict", false]], "from_erroneous_callable() (baybe.utils.boolean.uncertainbool class method)": [[365, "baybe.utils.boolean.UncertainBool.from_erroneous_callable", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[106, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[107, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[108, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[110, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[111, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[112, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[114, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[115, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[116, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[117, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[119, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[120, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[121, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[124, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[133, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[135, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[140, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[141, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[142, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[144, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[145, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[158, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[170, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[172, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[173, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[174, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[175, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[176, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[177, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[240, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[263, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[303, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[305, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.transformations.base.monotonictransformation class method)": [[317, "baybe.transformations.base.MonotonicTransformation.from_json", false]], "from_json() (baybe.transformations.base.transformation class method)": [[318, "baybe.transformations.base.Transformation.from_json", false]], "from_json() (baybe.transformations.basic.absolutetransformation class method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.from_json", false]], "from_json() (baybe.transformations.basic.affinetransformation class method)": [[321, "baybe.transformations.basic.AffineTransformation.from_json", false]], "from_json() (baybe.transformations.basic.belltransformation class method)": [[322, "baybe.transformations.basic.BellTransformation.from_json", false]], "from_json() (baybe.transformations.basic.clampingtransformation class method)": [[323, "baybe.transformations.basic.ClampingTransformation.from_json", false]], "from_json() (baybe.transformations.basic.customtransformation class method)": [[324, "baybe.transformations.basic.CustomTransformation.from_json", false]], "from_json() (baybe.transformations.basic.exponentialtransformation class method)": [[325, "baybe.transformations.basic.ExponentialTransformation.from_json", false]], "from_json() (baybe.transformations.basic.identitytransformation class method)": [[326, "baybe.transformations.basic.IdentityTransformation.from_json", false]], "from_json() (baybe.transformations.basic.logarithmictransformation class method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.from_json", false]], "from_json() (baybe.transformations.basic.powertransformation class method)": [[328, "baybe.transformations.basic.PowerTransformation.from_json", false]], "from_json() (baybe.transformations.basic.sigmoidtransformation class method)": [[329, "baybe.transformations.basic.SigmoidTransformation.from_json", false]], "from_json() (baybe.transformations.basic.triangulartransformation class method)": [[330, "baybe.transformations.basic.TriangularTransformation.from_json", false]], "from_json() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.from_json", false]], "from_json() (baybe.transformations.composite.additivetransformation class method)": [[333, "baybe.transformations.composite.AdditiveTransformation.from_json", false]], "from_json() (baybe.transformations.composite.chainedtransformation class method)": [[334, "baybe.transformations.composite.ChainedTransformation.from_json", false]], "from_json() (baybe.transformations.composite.multiplicativetransformation class method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[402, "baybe.utils.interval.Interval.from_json", false]], "from_json() (baybe.utils.metadata.measurablemetadata class method)": [[408, "baybe.utils.metadata.MeasurableMetadata.from_json", false]], "from_json() (baybe.utils.metadata.metadata class method)": [[409, "baybe.utils.metadata.Metadata.from_json", false]], "from_legacy_interface() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.from_legacy_interface", false]], "from_margins() (baybe.transformations.basic.triangulartransformation class method)": [[330, "baybe.transformations.basic.TriangularTransformation.from_margins", false]], "from_modern_interface() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.from_modern_interface", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[216, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[99, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[99, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "from_unstructured() (baybe.utils.boolean.autobool class method)": [[364, "baybe.utils.boolean.AutoBool.from_unstructured", false]], "from_values_mapped_to_unit_interval() (baybe.transformations.basic.affinetransformation class method)": [[321, "baybe.transformations.basic.AffineTransformation.from_values_mapped_to_unit_interval", false]], "from_width() (baybe.transformations.basic.triangulartransformation class method)": [[330, "baybe.transformations.basic.TriangularTransformation.from_width", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "function (baybe.transformations.basic.customtransformation attribute)": [[324, "baybe.transformations.basic.CustomTransformation.function", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[392, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[279, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[131, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_baseclasses() (in module baybe.utils.basic)": [[354, "baybe.utils.basic.get_baseclasses", false]], "get_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_buffer", false]], "get_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.get_buffer", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[370, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_codomain() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.get_codomain", false]], "get_codomain() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.get_codomain", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_extra_state", false]], "get_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.get_extra_state", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[371, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_image() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.get_image", false]], "get_image() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.get_image", false]], "get_image() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.get_image", false]], "get_image() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.get_image", false]], "get_image() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.get_image", false]], "get_image() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.get_image", false]], "get_image() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.get_image", false]], "get_image() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.get_image", false]], "get_image() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.get_image", false]], "get_image() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.get_image", false]], "get_image() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.get_image", false]], "get_image() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.get_image", false]], "get_image() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.get_image", false]], "get_image() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.get_image", false]], "get_image() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.get_image", false]], "get_image() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.get_image", false]], "get_image() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.get_image", false]], "get_image() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.get_image", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_parameter", false]], "get_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.get_parameter", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[355, "baybe.utils.basic.get_subclasses", false]], "get_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.get_submodule", false]], "get_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.get_submodule", false]], "get_surrogate() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[393, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.get_transform_parameters", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[356, "baybe.utils.basic.group_duplicate_values", false]], "half() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.half", false]], "half() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.half", false]], "halfcauchyprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[394, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[357, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[217, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "identitytransformation (class in baybe.transformations.basic)": [[326, "baybe.transformations.basic.IdentityTransformation", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[71, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[72, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[73, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[74, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[75, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[76, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[77, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "inertia_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.inertia_", false]], "infeasibilityerror": [[78, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[401, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[79, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[149, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[402, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[80, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[81, "baybe.exceptions.InvalidTargetValueError", false]], "ipu() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.ipu", false]], "ipu() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.ipu", false]], "is_abstract() (in module baybe.utils.boolean)": [[367, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[358, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[63, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_empty (baybe.utils.metadata.measurablemetadata property)": [[408, "baybe.utils.metadata.MeasurableMetadata.is_empty", false]], "is_empty (baybe.utils.metadata.metadata property)": [[409, "baybe.utils.metadata.Metadata.is_empty", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[162, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[124, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[133, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[135, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_normalized (baybe.targets.numerical.numericaltarget property)": [[311, "baybe.targets.numerical.NumericalTarget.is_normalized", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[140, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[142, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[402, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[102, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[184, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[108, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[274, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "labels_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.labels_", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[111, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[115, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[116, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[117, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[111, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[115, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[116, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[117, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linearkernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[176, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[177, "baybe.priors.basic.NormalPrior.loc", false]], "log() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.log", false]], "logarithmictransformation (class in baybe.transformations.basic)": [[327, "baybe.transformations.basic.LogarithmicTransformation", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[252, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[402, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_base_structure_hook() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.make_base_structure_hook", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[298, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[103, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[280, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "make_partitioning() (in module baybe.acquisition.utils)": [[31, "baybe.acquisition.utils.make_partitioning", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[423, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "margins (baybe.transformations.basic.triangulartransformation property)": [[330, "baybe.transformations.basic.TriangularTransformation.margins", false]], "match_absolute() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.match_absolute", false]], "match_attributes() (in module baybe.utils.basic)": [[359, "baybe.utils.basic.match_attributes", false]], "match_bell() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.match_bell", false]], "match_power() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.match_power", false]], "match_quadratic() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.match_quadratic", false]], "match_triangular() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.match_triangular", false]], "maternkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.MaternKernel", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[131, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurablemetadata (class in baybe.utils.metadata)": [[408, "baybe.utils.metadata.MeasurableMetadata", false]], "measurements (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.measurements", false]], "medoid_indices_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.medoid_indices_", false]], "memorysize (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.objectives.base.objective attribute)": [[124, "baybe.objectives.base.Objective.metadata", false]], "metadata (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.metadata", false]], "metadata (baybe.objectives.pareto.paretoobjective attribute)": [[133, "baybe.objectives.pareto.ParetoObjective.metadata", false]], "metadata (baybe.objectives.single.singletargetobjective attribute)": [[135, "baybe.objectives.single.SingleTargetObjective.metadata", false]], "metadata (baybe.parameters.base.continuousparameter attribute)": [[140, "baybe.parameters.base.ContinuousParameter.metadata", false]], "metadata (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.metadata", false]], "metadata (baybe.parameters.base.parameter attribute)": [[142, "baybe.parameters.base.Parameter.metadata", false]], "metadata (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.metadata", false]], "metadata (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.metadata", false]], "metadata (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.metadata", false]], "metadata (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.metadata", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metadata (baybe.targets.base.target attribute)": [[303, "baybe.targets.base.Target.metadata", false]], "metadata (baybe.targets.binary.binarytarget attribute)": [[305, "baybe.targets.binary.BinaryTarget.metadata", false]], "metadata (baybe.targets.numerical.numericaltarget attribute)": [[311, "baybe.targets.numerical.NumericalTarget.metadata", false]], "metadata (class in baybe.utils.metadata)": [[409, "baybe.utils.metadata.Metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[184, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "midpoint (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.midpoint", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimize (baybe.targets.numerical.numericaltarget attribute)": [[311, "baybe.targets.numerical.NumericalTarget.minimize", false]], "minimumcardinalityviolatedwarning": [[82, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "misc (baybe.utils.metadata.measurablemetadata attribute)": [[408, "baybe.utils.metadata.MeasurableMetadata.misc", false]], "misc (baybe.utils.metadata.metadata attribute)": [[409, "baybe.utils.metadata.Metadata.misc", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[83, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [25, "module-baybe.acquisition.base", false], [27, "module-baybe.acquisition.partial", false], [29, "module-baybe.acquisition.utils", false], [33, "module-baybe.campaign", false], [35, "module-baybe.constraints", false], [36, "module-baybe.constraints.base", false], [42, "module-baybe.constraints.conditions", false], [46, "module-baybe.constraints.continuous", false], [49, "module-baybe.constraints.deprecation", false], [52, "module-baybe.constraints.discrete", false], [62, "module-baybe.constraints.utils", false], [64, "module-baybe.constraints.validation", false], [68, "module-baybe.exceptions", false], [95, "module-baybe.insights", false], [96, "module-baybe.insights.shap", false], [104, "module-baybe.kernels", false], [105, "module-baybe.kernels.base", false], [109, "module-baybe.kernels.basic", false], [118, "module-baybe.kernels.composite", false], [122, "module-baybe.objectives", false], [123, "module-baybe.objectives.base", false], [126, "module-baybe.objectives.botorch", false], [128, "module-baybe.objectives.desirability", false], [130, "module-baybe.objectives.enum", false], [132, "module-baybe.objectives.pareto", false], [134, "module-baybe.objectives.single", false], [136, "module-baybe.objectives.validation", false], [138, "module-baybe.parameters", false], [139, "module-baybe.parameters.base", false], [143, "module-baybe.parameters.categorical", false], [146, "module-baybe.parameters.custom", false], [148, "module-baybe.parameters.enum", false], [153, "module-baybe.parameters.numerical", false], [156, "module-baybe.parameters.substance", false], [159, "module-baybe.parameters.utils", false], [164, "module-baybe.parameters.validation", false], [168, "module-baybe.priors", false], [169, "module-baybe.priors.base", false], [171, "module-baybe.priors.basic", false], [179, "module-baybe.recommenders", false], [180, "module-baybe.recommenders.base", false], [182, "module-baybe.recommenders.meta", false], [183, "module-baybe.recommenders.meta.base", false], [185, "module-baybe.recommenders.meta.sequential", false], [190, "module-baybe.recommenders.naive", false], [192, "module-baybe.recommenders.pure", false], [193, "module-baybe.recommenders.pure.base", false], [195, "module-baybe.recommenders.pure.bayesian", false], [196, "module-baybe.recommenders.pure.bayesian.base", false], [198, "module-baybe.recommenders.pure.bayesian.botorch", false], [200, "module-baybe.recommenders.pure.nonpredictive", false], [201, "module-baybe.recommenders.pure.nonpredictive.base", false], [203, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [208, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [212, "module-baybe.searchspace", false], [213, "module-baybe.searchspace.continuous", false], [215, "module-baybe.searchspace.core", false], [220, "module-baybe.searchspace.discrete", false], [226, "module-baybe.searchspace.validation", false], [230, "module-baybe.serialization", false], [231, "module-baybe.serialization.core", false], [239, "module-baybe.serialization.mixin", false], [241, "module-baybe.serialization.utils", false], [244, "module-baybe.settings", false], [248, "module-baybe.simulation", false], [249, "module-baybe.simulation.core", false], [251, "module-baybe.simulation.lookup", false], [253, "module-baybe.simulation.scenarios", false], [255, "module-baybe.simulation.transfer_learning", false], [257, "module-baybe.surrogates", false], [258, "module-baybe.surrogates.bandit", false], [260, "module-baybe.surrogates.base", false], [265, "module-baybe.surrogates.composite", false], [267, "module-baybe.surrogates.custom", false], [270, "module-baybe.surrogates.gaussian_process", false], [271, "module-baybe.surrogates.gaussian_process.core", false], [273, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [277, "module-baybe.surrogates.gaussian_process.presets", false], [278, "module-baybe.surrogates.gaussian_process.presets.core", false], [281, "module-baybe.surrogates.gaussian_process.presets.default", false], [283, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [285, "module-baybe.surrogates.linear", false], [287, "module-baybe.surrogates.naive", false], [289, "module-baybe.surrogates.ngboost", false], [291, "module-baybe.surrogates.random_forest", false], [293, "module-baybe.surrogates.utils", false], [297, "module-baybe.surrogates.validation", false], [301, "module-baybe.targets", false], [302, "module-baybe.targets.base", false], [304, "module-baybe.targets.binary", false], [307, "module-baybe.targets.botorch", false], [309, "module-baybe.targets.enum", false], [310, "module-baybe.targets.numerical", false], [312, "module-baybe.targets.transforms", false], [313, "module-baybe.targets.utils", false], [315, "module-baybe.transformations", false], [316, "module-baybe.transformations.base", false], [319, "module-baybe.transformations.basic", false], [332, "module-baybe.transformations.composite", false], [336, "module-baybe.transformations.utils", false], [340, "module-baybe.utils", false], [341, "module-baybe.utils.augmentation", false], [344, "module-baybe.utils.basic", false], [363, "module-baybe.utils.boolean", false], [369, "module-baybe.utils.chemistry", false], [374, "module-baybe.utils.clustering_algorithms", false], [375, "module-baybe.utils.clustering_algorithms.third_party", false], [376, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [378, "module-baybe.utils.conversion", false], [382, "module-baybe.utils.dataframe", false], [399, "module-baybe.utils.interval", false], [404, "module-baybe.utils.memory", false], [406, "module-baybe.utils.metadata", false], [411, "module-baybe.utils.numerical", false], [415, "module-baybe.utils.random", false], [418, "module-baybe.utils.sampling_algorithms", false], [422, "module-baybe.utils.scaling", false], [424, "module-baybe.utils.validation", false]], "modules() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.modules", false]], "modules() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.modules", false]], "monotonictransformation (class in baybe.transformations.base)": [[317, "baybe.transformations.base.MonotonicTransformation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "mtia() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.mtia", false]], "mtia() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.mtia", false]], "multiplicativetransformation (class in baybe.transformations.composite)": [[335, "baybe.transformations.composite.MultiplicativeTransformation", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[140, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[141, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[142, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[144, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[145, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[158, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[303, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[305, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[311, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[372, "baybe.utils.chemistry.name_to_smiles", false]], "named_buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_buffers", false]], "named_buffers() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.named_buffers", false]], "named_children() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_children", false]], "named_children() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.named_children", false]], "named_modules() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_modules", false]], "named_modules() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.named_modules", false]], "named_parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.named_parameters", false]], "named_parameters() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.named_parameters", false]], "negate() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.negate", false]], "negate() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.negate", false]], "negate() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.negate", false]], "negate() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.negate", false]], "negate() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.negate", false]], "negate() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.negate", false]], "negate() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.negate", false]], "negate() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.negate", false]], "negate() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.negate", false]], "negate() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.negate", false]], "negate() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.negate", false]], "negate() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.negate", false]], "negate() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.negate", false]], "negate() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.negate", false]], "negate() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.negate", false]], "negate() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.negate", false]], "negate() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.negate", false]], "negate() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.negate", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[84, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[85, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[426, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[427, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[380, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[86, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.normalize", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[395, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalized_ramp() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.normalized_ramp", false]], "normalized_sigmoid() (baybe.targets.numerical.numericaltarget class method)": [[311, "baybe.targets.numerical.NumericalTarget.normalized_sigmoid", false]], "normalprior (class in baybe.priors.basic)": [[177, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[87, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[88, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[111, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[116, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[311, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[89, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[124, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[114, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[114, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[149, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[90, "baybe.exceptions.OptionalImportError", false]], "output_names (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.output_names", false]], "output_names (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.output_names", false]], "output_names (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.output_names", false]], "output_names (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.output_names", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[121, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[121, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "overwrite() (baybe.settings.settings method)": [[245, "baybe.settings.Settings.overwrite", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parallelize_simulations (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.parallelize_simulations", false]], "parameter (class in baybe.parameters.base)": [[142, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[151, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.parameters", false]], "parameters() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[133, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "peak (baybe.transformations.basic.triangulartransformation attribute)": [[330, "baybe.transformations.basic.TriangularTransformation.peak", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[112, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[99, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[262, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[114, "baybe.kernels.basic.PolynomialKernel.power", false]], "power() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.power", false]], "powertransformation (class in baybe.transformations.basic)": [[328, "baybe.transformations.basic.PowerTransformation", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "preprocess_dataframe() (in module baybe.utils.validation)": [[428, "baybe.utils.validation.preprocess_dataframe", false]], "preprocess_dataframes (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.preprocess_dataframes", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[396, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[170, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[120, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[194, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[23, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[419, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_seed (baybe.settings.settings attribute)": [[245, "baybe.settings.Settings.random_seed", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[173, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[181, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[191, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[194, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[202, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[181, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[360, "baybe.utils.basic.refers_to", false]], "register_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_backward_hook", false]], "register_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_backward_hook", false]], "register_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_buffer", false]], "register_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_buffer", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[269, "baybe.surrogates.custom.register_custom_architecture", false]], "register_forward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook", false]], "register_forward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook", false]], "register_forward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook", false]], "register_forward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook", false]], "register_full_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook", false]], "register_full_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook", false]], "register_full_backward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook", false]], "register_full_backward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook", false]], "register_hooks() (in module baybe.utils.basic)": [[361, "baybe.utils.basic.register_hooks", false]], "register_load_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_post_hook", false]], "register_load_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_post_hook", false]], "register_load_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook", false]], "register_load_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook", false]], "register_module() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_module", false]], "register_module() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_module", false]], "register_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_parameter", false]], "register_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_parameter", false]], "register_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_post_hook", false]], "register_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_post_hook", false]], "register_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_pre_hook", false]], "register_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_pre_hook", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "require_normalization (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.require_normalization", false]], "requires_grad_() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.requires_grad_", false]], "requires_grad_() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_", false]], "restore_previous() (baybe.settings.settings method)": [[245, "baybe.settings.Settings.restore_previous", false]], "rffkernel (class in baybe.kernels.basic)": [[116, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[117, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[421, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[131, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[174, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[175, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[176, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[177, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[121, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[91, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[217, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[237, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[44, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[243, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[240, "baybe.serialization.mixin.SerialMixin", false]], "set_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.set_extra_state", false]], "set_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[416, "baybe.utils.random.set_random_seed", false]], "set_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.set_submodule", false]], "set_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.set_submodule", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "settings (class in baybe.settings)": [[245, "baybe.settings.Settings", false]], "shap_explainers (in module baybe.insights.shap)": [[100, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[101, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[99, "baybe.insights.shap.SHAPInsight", false]], "share_memory() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.share_memory", false]], "share_memory() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.share_memory", false]], "shift (baybe.transformations.basic.affinetransformation attribute)": [[321, "baybe.transformations.basic.AffineTransformation.shift", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[178, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "sigma (baybe.transformations.basic.belltransformation attribute)": [[322, "baybe.transformations.basic.BellTransformation.sigma", false]], "sigmoidtransformation (class in baybe.transformations.basic)": [[329, "baybe.transformations.basic.SigmoidTransformation", false]], "simulate_experiment() (in module baybe.simulation.core)": [[250, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[254, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[256, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[135, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "slope_left (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_left", false]], "slope_right (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_right", false]], "smiles (in module baybe.parameters.substance)": [[157, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[373, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[178, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[163, "baybe.parameters.utils.sort_parameters", false]], "state_dict() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.state_dict", false]], "state_dict() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.state_dict", false]], "steepness (baybe.transformations.basic.sigmoidtransformation attribute)": [[329, "baybe.transformations.basic.SigmoidTransformation.steepness", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[32, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[368, "baybe.utils.boolean.strtobool", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[44, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[214, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[152, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[158, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[305, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[303, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[305, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[263, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_partial_measurements (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.supports_partial_measurements", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[263, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[263, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[197, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[199, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[264, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[266, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[303, "baybe.targets.base.Target", false]], "targets (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[124, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[129, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[133, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[135, "baybe.objectives.single.SingleTargetObjective.targets", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[145, "baybe.parameters.categorical.TaskParameter", false]], "temporary_seed() (in module baybe.utils.random)": [[417, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[45, "baybe.constraints.conditions.ThresholdCondition", false]], "to() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.to", false]], "to() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.to", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.to_botorch", false]], "to_botorch() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.to_botorch", false]], "to_botorch() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.to_botorch", false]], "to_botorch() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[264, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_botorch_objective() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.to_botorch_objective", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.to_botorch_posterior_transform", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.to_botorch_posterior_transform", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[240, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[303, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[305, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.to_dict", false]], "to_dict() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.to_dict", false]], "to_dict() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.to_dict", false]], "to_dict() (baybe.utils.metadata.measurablemetadata method)": [[408, "baybe.utils.metadata.MeasurableMetadata.to_dict", false]], "to_dict() (baybe.utils.metadata.metadata method)": [[409, "baybe.utils.metadata.Metadata.to_dict", false]], "to_empty() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.to_empty", false]], "to_empty() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.to_empty", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[53, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[55, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[56, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[57, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[58, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[59, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[60, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[61, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[106, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[107, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[108, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[110, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[111, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[112, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[113, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[114, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[115, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[116, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[117, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[119, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[120, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[121, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[170, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[172, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[173, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[174, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[175, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[176, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[177, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[178, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[184, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[186, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[240, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[259, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[261, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[263, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[266, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[272, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[275, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[286, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[288, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[290, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[292, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[303, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[305, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.transformations.base.monotonictransformation method)": [[317, "baybe.transformations.base.MonotonicTransformation.to_json", false]], "to_json() (baybe.transformations.base.transformation method)": [[318, "baybe.transformations.base.Transformation.to_json", false]], "to_json() (baybe.transformations.basic.absolutetransformation method)": [[320, "baybe.transformations.basic.AbsoluteTransformation.to_json", false]], "to_json() (baybe.transformations.basic.affinetransformation method)": [[321, "baybe.transformations.basic.AffineTransformation.to_json", false]], "to_json() (baybe.transformations.basic.belltransformation method)": [[322, "baybe.transformations.basic.BellTransformation.to_json", false]], "to_json() (baybe.transformations.basic.clampingtransformation method)": [[323, "baybe.transformations.basic.ClampingTransformation.to_json", false]], "to_json() (baybe.transformations.basic.customtransformation method)": [[324, "baybe.transformations.basic.CustomTransformation.to_json", false]], "to_json() (baybe.transformations.basic.exponentialtransformation method)": [[325, "baybe.transformations.basic.ExponentialTransformation.to_json", false]], "to_json() (baybe.transformations.basic.identitytransformation method)": [[326, "baybe.transformations.basic.IdentityTransformation.to_json", false]], "to_json() (baybe.transformations.basic.logarithmictransformation method)": [[327, "baybe.transformations.basic.LogarithmicTransformation.to_json", false]], "to_json() (baybe.transformations.basic.powertransformation method)": [[328, "baybe.transformations.basic.PowerTransformation.to_json", false]], "to_json() (baybe.transformations.basic.sigmoidtransformation method)": [[329, "baybe.transformations.basic.SigmoidTransformation.to_json", false]], "to_json() (baybe.transformations.basic.triangulartransformation method)": [[330, "baybe.transformations.basic.TriangularTransformation.to_json", false]], "to_json() (baybe.transformations.basic.twosidedaffinetransformation method)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation.to_json", false]], "to_json() (baybe.transformations.composite.additivetransformation method)": [[333, "baybe.transformations.composite.AdditiveTransformation.to_json", false]], "to_json() (baybe.transformations.composite.chainedtransformation method)": [[334, "baybe.transformations.composite.ChainedTransformation.to_json", false]], "to_json() (baybe.transformations.composite.multiplicativetransformation method)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.to_json", false]], "to_json() (baybe.utils.metadata.measurablemetadata method)": [[408, "baybe.utils.metadata.MeasurableMetadata.to_json", false]], "to_json() (baybe.utils.metadata.metadata method)": [[409, "baybe.utils.metadata.Metadata.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[276, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_metadata() (in module baybe.utils.metadata)": [[410, "baybe.utils.metadata.to_metadata", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[303, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[305, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[125, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[142, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[381, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[140, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[397, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[402, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[362, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "train() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.train", false]], "train() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.train", false]], "transform() (baybe.objectives.base.objective method)": [[124, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[129, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[133, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[135, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[141, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[144, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[145, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[158, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[214, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[216, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[222, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[303, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[305, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[311, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[377, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[423, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[398, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[311, "baybe.targets.numerical.NumericalTarget.transformation", false]], "transformation (class in baybe.transformations.base)": [[318, "baybe.transformations.base.Transformation", false]], "transformations (baybe.transformations.composite.additivetransformation attribute)": [[333, "baybe.transformations.composite.AdditiveTransformation.transformations", false]], "transformations (baybe.transformations.composite.chainedtransformation attribute)": [[334, "baybe.transformations.composite.ChainedTransformation.transformations", false]], "transformations (baybe.transformations.composite.multiplicativetransformation attribute)": [[335, "baybe.transformations.composite.MultiplicativeTransformation.transformations", false]], "triangulartransformation (class in baybe.transformations.basic)": [[330, "baybe.transformations.basic.TriangularTransformation", false]], "true (baybe.utils.boolean.autobool attribute)": [[364, "baybe.utils.boolean.AutoBool.TRUE", false]], "true (baybe.utils.boolean.uncertainbool attribute)": [[365, "baybe.utils.boolean.UncertainBool.TRUE", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[189, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "twosidedaffinetransformation (class in baybe.transformations.basic)": [[331, "baybe.transformations.basic.TwoSidedAffineTransformation", false]], "type (baybe.searchspace.core.searchspace property)": [[216, "baybe.searchspace.core.SearchSpace.type", false]], "type() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.type", false]], "type() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[299, "baybe.surrogates.validation.type_validation_converter", false]], "uncertainbool (class in baybe.utils.boolean)": [[365, "baybe.utils.boolean.UncertainBool", false]], "unidentifiedsubclasserror": [[92, "baybe.exceptions.UnidentifiedSubclassError", false]], "unit (baybe.parameters.base.continuousparameter property)": [[140, "baybe.parameters.base.ContinuousParameter.unit", false]], "unit (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.unit", false]], "unit (baybe.parameters.base.parameter property)": [[142, "baybe.parameters.base.Parameter.unit", false]], "unit (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.unit", false]], "unit (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.unit", false]], "unit (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.unit", false]], "unit (baybe.parameters.numerical.numericalcontinuousparameter property)": [[154, "baybe.parameters.numerical.NumericalContinuousParameter.unit", false]], "unit (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.unit", false]], "unit (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.unit", false]], "unit (baybe.targets.base.target property)": [[303, "baybe.targets.base.Target.unit", false]], "unit (baybe.targets.binary.binarytarget property)": [[305, "baybe.targets.binary.BinaryTarget.unit", false]], "unit (baybe.targets.numerical.numericaltarget property)": [[311, "baybe.targets.numerical.NumericalTarget.unit", false]], "unit (baybe.utils.metadata.measurablemetadata attribute)": [[408, "baybe.utils.metadata.MeasurableMetadata.unit", false]], "unknown (baybe.utils.boolean.uncertainbool attribute)": [[365, "baybe.utils.boolean.UncertainBool.UNKNOWN", false]], "unmatchedattributeerror": [[93, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[346, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[347, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_with_type() (in module baybe.serialization.core)": [[238, "baybe.serialization.core.unstructure_with_type", false]], "unusedobjectwarning": [[94, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[402, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[403, "baybe.utils.interval.use_fallback_constructor_hook", false]], "use_fpsample (baybe.settings.settings property)": [[245, "baybe.settings.Settings.use_fpsample", false]], "use_polars_for_constraints (baybe.settings.settings property)": [[245, "baybe.settings.Settings.use_polars_for_constraints", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[66, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[268, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[67, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[300, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[165, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[166, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[429, "baybe.utils.validation.validate_not_nan", false]], "validate_object_names() (in module baybe.utils.validation)": [[430, "baybe.utils.validation.validate_object_names", false]], "validate_objective_input() (in module baybe.utils.validation)": [[431, "baybe.utils.validation.validate_objective_input", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[432, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[229, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[219, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[225, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[433, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[137, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[167, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[141, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[144, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[145, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[147, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[155, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[158, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[110, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[110, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[129, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[152, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]], "xpu() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.xpu", false]], "xpu() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.xpu", false]], "zero_grad() (baybe.objectives.botorch.chainedmcobjective method)": [[127, "baybe.objectives.botorch.ChainedMCObjective.zero_grad", false]], "zero_grad() (baybe.targets.botorch.affineposteriortransform method)": [[308, "baybe.targets.botorch.AffinePosteriorTransform.zero_grad", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [33, 0, 0, "-", "campaign"], [35, 0, 0, "-", "constraints"], [68, 0, 0, "-", "exceptions"], [95, 0, 0, "-", "insights"], [104, 0, 0, "-", "kernels"], [122, 0, 0, "-", "objectives"], [138, 0, 0, "-", "parameters"], [168, 0, 0, "-", "priors"], [179, 0, 0, "-", "recommenders"], [212, 0, 0, "-", "searchspace"], [230, 0, 0, "-", "serialization"], [244, 0, 0, "-", "settings"], [248, 0, 0, "-", "simulation"], [257, 0, 0, "-", "surrogates"], [301, 0, 0, "-", "targets"], [315, 0, 0, "-", "transformations"], [340, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [25, 0, 0, "-", "base"], [27, 0, 0, "-", "partial"], [29, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedHypervolumeImprovement"], [10, 1, 1, "", "qExpectedImprovement"], [11, 1, 1, "", "qKnowledgeGradient"], [12, 1, 1, "", "qLogExpectedHypervolumeImprovement"], [13, 1, 1, "", "qLogExpectedImprovement"], [14, 1, 1, "", "qLogNParEGO"], [15, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [16, 1, 1, "", "qLogNoisyExpectedImprovement"], [17, 1, 1, "", "qNegIntegratedPosteriorVariance"], [18, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [19, 1, 1, "", "qNoisyExpectedImprovement"], [20, 1, 1, "", "qPosteriorStandardDeviation"], [21, 1, 1, "", "qProbabilityOfImprovement"], [22, 1, 1, "", "qSimpleRegret"], [23, 1, 1, "", "qThompsonSampling"], [24, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "source"]], "baybe.acquisition.acqfs.ExpectedImprovement.to_json.params": [[3, 4, 1, "", "**kwargs"], [3, 4, 1, "", "overwrite"], [3, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "source"]], "baybe.acquisition.acqfs.LogExpectedImprovement.to_json.params": [[4, 4, 1, "", "**kwargs"], [4, 4, 1, "", "overwrite"], [4, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "source"]], "baybe.acquisition.acqfs.PosteriorMean.to_json.params": [[5, 4, 1, "", "**kwargs"], [5, 4, 1, "", "overwrite"], [5, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "source"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json.params": [[6, 4, 1, "", "**kwargs"], [6, 4, 1, "", "overwrite"], [6, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "source"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json.params": [[7, 4, 1, "", "**kwargs"], [7, 4, 1, "", "overwrite"], [7, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "source"]], "baybe.acquisition.acqfs.UpperConfidenceBound.to_json.params": [[8, 4, 1, "", "**kwargs"], [8, 4, 1, "", "overwrite"], [8, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 3, 1, "", "alpha"], [9, 2, 1, "", "compute_ref_point"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "reference_point"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point.params": [[9, 4, 1, "", "array"], [9, 4, 1, "", "factor"], [9, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json.params": [[9, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_json.params": [[9, 4, 1, "", "**kwargs"], [9, 4, 1, "", "overwrite"], [9, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[10, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qExpectedImprovement.to_json.params": [[10, 4, 1, "", "**kwargs"], [10, 4, 1, "", "overwrite"], [10, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "num_fantasies"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[11, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qKnowledgeGradient.to_json.params": [[11, 4, 1, "", "**kwargs"], [11, 4, 1, "", "overwrite"], [11, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 3, 1, "", "alpha"], [12, 2, 1, "", "compute_ref_point"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "reference_point"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point.params": [[12, 4, 1, "", "array"], [12, 4, 1, "", "factor"], [12, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json.params": [[12, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_json.params": [[12, 4, 1, "", "**kwargs"], [12, 4, 1, "", "overwrite"], [12, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[13, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json.params": [[13, 4, 1, "", "**kwargs"], [13, 4, 1, "", "overwrite"], [13, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogNParEGO": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[14, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogNParEGO.to_json.params": [[14, 4, 1, "", "**kwargs"], [14, 4, 1, "", "overwrite"], [14, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "compute_ref_point"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 3, 1, "", "prune_baseline"], [15, 3, 1, "", "reference_point"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[15, 4, 1, "", "array"], [15, 4, 1, "", "factor"], [15, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[15, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json.params": [[15, 4, 1, "", "**kwargs"], [15, 4, 1, "", "overwrite"], [15, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[16, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json.params": [[16, 4, 1, "", "**kwargs"], [16, 4, 1, "", "overwrite"], [16, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "get_integration_points"], [17, 3, 1, "", "sampling_fraction"], [17, 3, 1, "", "sampling_method"], [17, 3, 1, "", "sampling_n_points"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[17, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[17, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json.params": [[17, 4, 1, "", "**kwargs"], [17, 4, 1, "", "overwrite"], [17, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "compute_ref_point"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "prune_baseline"], [18, 3, 1, "", "reference_point"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[18, 4, 1, "", "array"], [18, 4, 1, "", "factor"], [18, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[18, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json.params": [[18, 4, 1, "", "**kwargs"], [18, 4, 1, "", "overwrite"], [18, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "prune_baseline"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[19, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json.params": [[19, 4, 1, "", "**kwargs"], [19, 4, 1, "", "overwrite"], [19, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[20, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json.params": [[20, 4, 1, "", "**kwargs"], [20, 4, 1, "", "overwrite"], [20, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[21, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json.params": [[21, 4, 1, "", "**kwargs"], [21, 4, 1, "", "overwrite"], [21, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qSimpleRegret": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[22, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qSimpleRegret.to_json.params": [[22, 4, 1, "", "**kwargs"], [22, 4, 1, "", "overwrite"], [22, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qThompsonSampling": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "abbreviation"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_json"], [23, 3, 1, "", "n_mc_samples"], [23, 3, 1, "", "supports_multi_output"], [23, 2, 1, "", "to_botorch"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[23, 4, 1, "", "candidates"], [23, 4, 1, "", "jointly"], [23, 4, 1, "", "measurements"], [23, 4, 1, "", "objective"], [23, 4, 1, "", "pending_experiments"], [23, 4, 1, "", "searchspace"], [23, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[23, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[23, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qThompsonSampling.to_json.params": [[23, 4, 1, "", "**kwargs"], [23, 4, 1, "", "overwrite"], [23, 4, 1, "", "sink"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 3, 1, "", "beta"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[24, 4, 1, "", "source"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json.params": [[24, 4, 1, "", "**kwargs"], [24, 4, 1, "", "overwrite"], [24, 4, 1, "", "sink"]], "baybe.acquisition.base": [[26, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "abbreviation"], [26, 2, 1, "", "evaluate"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_json"], [26, 3, 1, "", "supports_multi_output"], [26, 2, 1, "", "to_botorch"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[26, 4, 1, "", "candidates"], [26, 4, 1, "", "jointly"], [26, 4, 1, "", "measurements"], [26, 4, 1, "", "objective"], [26, 4, 1, "", "pending_experiments"], [26, 4, 1, "", "searchspace"], [26, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[26, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[26, 4, 1, "", "source"]], "baybe.acquisition.base.AcquisitionFunction.to_json.params": [[26, 4, 1, "", "**kwargs"], [26, 4, 1, "", "overwrite"], [26, 4, 1, "", "sink"]], "baybe.acquisition.partial": [[28, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "botorch_acqf"], [28, 3, 1, "", "pin_discrete"], [28, 3, 1, "", "pinned_part"], [28, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[28, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[30, 5, 1, "", "convert_acqf"], [31, 5, 1, "", "make_partitioning"], [32, 5, 1, "", "str_to_acqf"]], "baybe.acquisition.utils.make_partitioning.params": [[31, 4, 1, "", "alpha"], [31, 4, 1, "", "predictions"], [31, 4, 1, "", "ref_point"]], "baybe.campaign": [[34, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "acquisition_values"], [34, 2, 1, "", "add_measurements"], [34, 3, 1, "", "allow_recommending_already_measured"], [34, 3, 1, "", "allow_recommending_already_recommended"], [34, 3, 1, "", "allow_recommending_pending_experiments"], [34, 2, 1, "", "clear_cache"], [34, 2, 1, "", "from_config"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_acquisition_function"], [34, 2, 1, "", "get_surrogate"], [34, 2, 1, "", "joint_acquisition_value"], [34, 6, 1, "", "measurements"], [34, 3, 1, "", "n_batches_done"], [34, 3, 1, "", "n_fits_done"], [34, 3, 1, "", "objective"], [34, 6, 1, "", "parameters"], [34, 2, 1, "", "posterior"], [34, 2, 1, "", "posterior_stats"], [34, 2, 1, "", "recommend"], [34, 3, 1, "", "recommender"], [34, 3, 1, "", "searchspace"], [34, 6, 1, "", "targets"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"], [34, 2, 1, "", "toggle_discrete_candidates"], [34, 2, 1, "", "update_measurements"], [34, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[34, 4, 1, "", "acquisition_function"], [34, 4, 1, "", "batch_size"], [34, 4, 1, "", "candidates"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[34, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[34, 4, 1, "", "source"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[34, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[34, 4, 1, "", "candidates"], [34, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.to_json.params": [[34, 4, 1, "", "**kwargs"], [34, 4, 1, "", "overwrite"], [34, 4, 1, "", "sink"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[34, 4, 1, "", "complement"], [34, 4, 1, "", "constraints"], [34, 4, 1, "", "dry_run"], [34, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[34, 4, 1, "", "config_json"]], "baybe.constraints": [[36, 0, 0, "-", "base"], [42, 0, 0, "-", "conditions"], [46, 0, 0, "-", "continuous"], [49, 0, 0, "-", "deprecation"], [52, 0, 0, "-", "discrete"], [62, 0, 0, "-", "utils"], [64, 0, 0, "-", "validation"]], "baybe.constraints.base": [[37, 1, 1, "", "CardinalityConstraint"], [38, 1, 1, "", "Constraint"], [39, 1, 1, "", "ContinuousConstraint"], [40, 1, 1, "", "ContinuousNonlinearConstraint"], [41, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "max_cardinality"], [37, 3, 1, "", "min_cardinality"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[37, 4, 1, "", "source"]], "baybe.constraints.base.CardinalityConstraint.to_json.params": [[37, 4, 1, "", "**kwargs"], [37, 4, 1, "", "overwrite"], [37, 4, 1, "", "sink"]], "baybe.constraints.base.Constraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[38, 4, 1, "", "source"]], "baybe.constraints.base.Constraint.to_json.params": [[38, 4, 1, "", "**kwargs"], [38, 4, 1, "", "overwrite"], [38, 4, 1, "", "sink"]], "baybe.constraints.base.ContinuousConstraint": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "eval_during_augmentation"], [39, 3, 1, "", "eval_during_creation"], [39, 3, 1, "", "eval_during_modeling"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 6, 1, "", "is_continuous"], [39, 6, 1, "", "is_discrete"], [39, 3, 1, "", "numerical_only"], [39, 3, 1, "", "parameters"], [39, 2, 1, "", "summary"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[39, 4, 1, "", "source"]], "baybe.constraints.base.ContinuousConstraint.to_json.params": [[39, 4, 1, "", "**kwargs"], [39, 4, 1, "", "overwrite"], [39, 4, 1, "", "sink"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[40, 4, 1, "", "source"]], "baybe.constraints.base.ContinuousNonlinearConstraint.to_json.params": [[40, 4, 1, "", "**kwargs"], [40, 4, 1, "", "overwrite"], [40, 4, 1, "", "sink"]], "baybe.constraints.base.DiscreteConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 2, 1, "", "get_invalid"], [41, 2, 1, "", "get_invalid_polars"], [41, 2, 1, "", "get_valid"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[41, 4, 1, "", "source"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[41, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[41, 4, 1, "", "df"]], "baybe.constraints.base.DiscreteConstraint.to_json.params": [[41, 4, 1, "", "**kwargs"], [41, 4, 1, "", "overwrite"], [41, 4, 1, "", "sink"]], "baybe.constraints.conditions": [[43, 1, 1, "", "Condition"], [44, 1, 1, "", "SubSelectionCondition"], [45, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[43, 2, 1, "", "evaluate"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"], [43, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[43, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[43, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[43, 4, 1, "", "source"]], "baybe.constraints.conditions.Condition.to_json.params": [[43, 4, 1, "", "**kwargs"], [43, 4, 1, "", "overwrite"], [43, 4, 1, "", "sink"]], "baybe.constraints.conditions.Condition.to_polars.params": [[43, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "evaluate"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 6, 1, "", "selection"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"], [44, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[44, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[44, 4, 1, "", "source"]], "baybe.constraints.conditions.SubSelectionCondition.to_json.params": [[44, 4, 1, "", "**kwargs"], [44, 4, 1, "", "overwrite"], [44, 4, 1, "", "sink"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[44, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "evaluate"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "threshold"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"], [45, 2, 1, "", "to_polars"], [45, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[45, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[45, 4, 1, "", "source"]], "baybe.constraints.conditions.ThresholdCondition.to_json.params": [[45, 4, 1, "", "**kwargs"], [45, 4, 1, "", "overwrite"], [45, 4, 1, "", "sink"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[45, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[47, 1, 1, "", "ContinuousCardinalityConstraint"], [48, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_absolute_thresholds"], [47, 2, 1, "", "inactive_parameter_combinations"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 6, 1, "", "n_inactive_parameter_combinations"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "relative_threshold"], [47, 2, 1, "", "sample_inactive_parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[47, 4, 1, "", "source"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[47, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[47, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json.params": [[47, 4, 1, "", "**kwargs"], [47, 4, 1, "", "overwrite"], [47, 4, 1, "", "sink"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "coefficients"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 6, 1, "", "is_eq"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "operator"], [48, 3, 1, "", "parameters"], [48, 3, 1, "", "rhs"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_botorch"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[48, 4, 1, "", "source"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[48, 4, 1, "", "idx_offset"], [48, 4, 1, "", "parameters"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_json.params": [[48, 4, 1, "", "**kwargs"], [48, 4, 1, "", "overwrite"], [48, 4, 1, "", "sink"]], "baybe.constraints.deprecation": [[50, 5, 1, "", "ContinuousLinearEqualityConstraint"], [51, 5, 1, "", "ContinuousLinearInequalityConstraint"]], "baybe.constraints.discrete": [[53, 1, 1, "", "DiscreteCardinalityConstraint"], [54, 1, 1, "", "DiscreteCustomConstraint"], [55, 1, 1, "", "DiscreteDependenciesConstraint"], [56, 1, 1, "", "DiscreteExcludeConstraint"], [57, 1, 1, "", "DiscreteLinkedParametersConstraint"], [58, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [59, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [60, 1, 1, "", "DiscreteProductConstraint"], [61, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "max_cardinality"], [53, 3, 1, "", "min_cardinality"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[53, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json.params": [[53, 4, 1, "", "**kwargs"], [53, 4, 1, "", "overwrite"], [53, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"], [54, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[54, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint.to_json.params": [[54, 4, 1, "", "**kwargs"], [54, 4, 1, "", "overwrite"], [54, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "affected_parameters"], [55, 3, 1, "", "conditions"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 3, 1, "", "permutation_invariant"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[55, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json.params": [[55, 4, 1, "", "**kwargs"], [55, 4, 1, "", "overwrite"], [55, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "combiner"], [56, 3, 1, "", "conditions"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[56, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json.params": [[56, 4, 1, "", "**kwargs"], [56, 4, 1, "", "overwrite"], [56, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[57, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json.params": [[57, 4, 1, "", "**kwargs"], [57, 4, 1, "", "overwrite"], [57, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[58, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json.params": [[58, 4, 1, "", "**kwargs"], [58, 4, 1, "", "overwrite"], [58, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "dependencies"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[59, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json.params": [[59, 4, 1, "", "**kwargs"], [59, 4, 1, "", "overwrite"], [59, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "condition"], [60, 3, 1, "", "eval_during_augmentation"], [60, 3, 1, "", "eval_during_creation"], [60, 3, 1, "", "eval_during_modeling"], [60, 2, 1, "", "from_dict"], [60, 2, 1, "", "from_json"], [60, 2, 1, "", "get_invalid"], [60, 2, 1, "", "get_invalid_polars"], [60, 2, 1, "", "get_valid"], [60, 6, 1, "", "is_continuous"], [60, 6, 1, "", "is_discrete"], [60, 3, 1, "", "numerical_only"], [60, 3, 1, "", "parameters"], [60, 2, 1, "", "summary"], [60, 2, 1, "", "to_dict"], [60, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[60, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[60, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[60, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[60, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint.to_json.params": [[60, 4, 1, "", "**kwargs"], [60, 4, 1, "", "overwrite"], [60, 4, 1, "", "sink"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "condition"], [61, 3, 1, "", "eval_during_augmentation"], [61, 3, 1, "", "eval_during_creation"], [61, 3, 1, "", "eval_during_modeling"], [61, 2, 1, "", "from_dict"], [61, 2, 1, "", "from_json"], [61, 2, 1, "", "get_invalid"], [61, 2, 1, "", "get_invalid_polars"], [61, 2, 1, "", "get_valid"], [61, 6, 1, "", "is_continuous"], [61, 6, 1, "", "is_discrete"], [61, 3, 1, "", "numerical_only"], [61, 3, 1, "", "parameters"], [61, 2, 1, "", "summary"], [61, 2, 1, "", "to_dict"], [61, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[61, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[61, 4, 1, "", "source"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[61, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[61, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint.to_json.params": [[61, 4, 1, "", "**kwargs"], [61, 4, 1, "", "overwrite"], [61, 4, 1, "", "sink"]], "baybe.constraints.utils": [[63, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[63, 4, 1, "", "check_maximum"], [63, 4, 1, "", "check_minimum"], [63, 4, 1, "", "df"], [63, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[65, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [66, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [67, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[65, 4, 1, "", "constraint"], [65, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[66, 4, 1, "", "constraints"]], "baybe.exceptions": [[69, 7, 1, "", "DeprecationError"], [70, 7, 1, "", "EmptySearchSpaceError"], [71, 7, 1, "", "IncompatibilityError"], [72, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [73, 7, 1, "", "IncompatibleArgumentError"], [74, 7, 1, "", "IncompatibleExplainerError"], [75, 7, 1, "", "IncompatibleSearchSpaceError"], [76, 7, 1, "", "IncompatibleSurrogateError"], [77, 7, 1, "", "IncompleteMeasurementsError"], [78, 7, 1, "", "InfeasibilityError"], [79, 7, 1, "", "InputDataTypeWarning"], [80, 7, 1, "", "InvalidSurrogateModelError"], [81, 7, 1, "", "InvalidTargetValueError"], [82, 7, 1, "", "MinimumCardinalityViolatedWarning"], [83, 7, 1, "", "ModelNotTrainedError"], [84, 7, 1, "", "NoMCAcquisitionFunctionError"], [85, 7, 1, "", "NoMeasurementsError"], [86, 7, 1, "", "NoRecommendersLeftError"], [87, 7, 1, "", "NotEnoughPointsLeftError"], [88, 7, 1, "", "NothingToSimulateError"], [89, 7, 1, "", "NumericalUnderflowError"], [90, 7, 1, "", "OptionalImportError"], [91, 7, 1, "", "SearchSpaceMatchWarning"], [92, 7, 1, "", "UnidentifiedSubclassError"], [93, 7, 1, "", "UnmatchedAttributeError"], [94, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__new__"]], "baybe.insights": [[96, 0, 0, "-", "shap"]], "baybe.insights.shap": [[97, 8, 1, "", "EXPLAINERS"], [98, 8, 1, "", "NON_SHAP_EXPLAINERS"], [99, 1, 1, "", "SHAPInsight"], [100, 8, 1, "", "SHAP_EXPLAINERS"], [101, 8, 1, "", "SHAP_PLOTS"], [102, 5, 1, "", "is_shap_explainer"], [103, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "background_data"], [99, 2, 1, "", "explain"], [99, 2, 1, "", "explain_target"], [99, 3, 1, "", "explainers"], [99, 2, 1, "", "from_campaign"], [99, 2, 1, "", "from_recommender"], [99, 2, 1, "", "from_surrogate"], [99, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[99, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[99, 4, 1, "", "data"], [99, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[99, 4, 1, "", "campaign"], [99, 4, 1, "", "explainer_cls"], [99, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[99, 4, 1, "", "explainer_cls"], [99, 4, 1, "", "measurements"], [99, 4, 1, "", "objective"], [99, 4, 1, "", "recommender"], [99, 4, 1, "", "searchspace"], [99, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[99, 4, 1, "", "**kwargs"], [99, 4, 1, "", "data"], [99, 4, 1, "", "explanation_index"], [99, 4, 1, "", "plot_type"], [99, 4, 1, "", "show"], [99, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[103, 4, 1, "", "data"], [103, 4, 1, "", "explainer_cls"], [103, 4, 1, "", "surrogate"], [103, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[105, 0, 0, "-", "base"], [109, 0, 0, "-", "basic"], [118, 0, 0, "-", "composite"]], "baybe.kernels.base": [[106, 1, 1, "", "BasicKernel"], [107, 1, 1, "", "CompositeKernel"], [108, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[106, 4, 1, "", "source"]], "baybe.kernels.base.BasicKernel.to_json.params": [[106, 4, 1, "", "**kwargs"], [106, 4, 1, "", "overwrite"], [106, 4, 1, "", "sink"]], "baybe.kernels.base.CompositeKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[107, 4, 1, "", "source"]], "baybe.kernels.base.CompositeKernel.to_json.params": [[107, 4, 1, "", "**kwargs"], [107, 4, 1, "", "overwrite"], [107, 4, 1, "", "sink"]], "baybe.kernels.base.Kernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[108, 4, 1, "", "source"]], "baybe.kernels.base.Kernel.to_json.params": [[108, 4, 1, "", "**kwargs"], [108, 4, 1, "", "overwrite"], [108, 4, 1, "", "sink"]], "baybe.kernels.basic": [[110, 1, 1, "", "LinearKernel"], [111, 1, 1, "", "MaternKernel"], [112, 1, 1, "", "PeriodicKernel"], [113, 1, 1, "", "PiecewisePolynomialKernel"], [114, 1, 1, "", "PolynomialKernel"], [115, 1, 1, "", "RBFKernel"], [116, 1, 1, "", "RFFKernel"], [117, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"], [110, 3, 1, "", "variance_initial_value"], [110, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[110, 4, 1, "", "source"]], "baybe.kernels.basic.LinearKernel.to_json.params": [[110, 4, 1, "", "**kwargs"], [110, 4, 1, "", "overwrite"], [110, 4, 1, "", "sink"]], "baybe.kernels.basic.MaternKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "nu"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[111, 4, 1, "", "source"]], "baybe.kernels.basic.MaternKernel.to_json.params": [[111, 4, 1, "", "**kwargs"], [111, 4, 1, "", "overwrite"], [111, 4, 1, "", "sink"]], "baybe.kernels.basic.PeriodicKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 3, 1, "", "period_length_initial_value"], [112, 3, 1, "", "period_length_prior"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[112, 4, 1, "", "source"]], "baybe.kernels.basic.PeriodicKernel.to_json.params": [[112, 4, 1, "", "**kwargs"], [112, 4, 1, "", "overwrite"], [112, 4, 1, "", "sink"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 3, 1, "", "q"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[113, 4, 1, "", "source"]], "baybe.kernels.basic.PiecewisePolynomialKernel.to_json.params": [[113, 4, 1, "", "**kwargs"], [113, 4, 1, "", "overwrite"], [113, 4, 1, "", "sink"]], "baybe.kernels.basic.PolynomialKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "offset_initial_value"], [114, 3, 1, "", "offset_prior"], [114, 3, 1, "", "power"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[114, 4, 1, "", "source"]], "baybe.kernels.basic.PolynomialKernel.to_json.params": [[114, 4, 1, "", "**kwargs"], [114, 4, 1, "", "overwrite"], [114, 4, 1, "", "sink"]], "baybe.kernels.basic.RBFKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "lengthscale_initial_value"], [115, 3, 1, "", "lengthscale_prior"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[115, 4, 1, "", "source"]], "baybe.kernels.basic.RBFKernel.to_json.params": [[115, 4, 1, "", "**kwargs"], [115, 4, 1, "", "overwrite"], [115, 4, 1, "", "sink"]], "baybe.kernels.basic.RFFKernel": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "lengthscale_initial_value"], [116, 3, 1, "", "lengthscale_prior"], [116, 3, 1, "", "num_samples"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[116, 4, 1, "", "source"]], "baybe.kernels.basic.RFFKernel.to_json.params": [[116, 4, 1, "", "**kwargs"], [116, 4, 1, "", "overwrite"], [116, 4, 1, "", "sink"]], "baybe.kernels.basic.RQKernel": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "lengthscale_initial_value"], [117, 3, 1, "", "lengthscale_prior"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[117, 4, 1, "", "source"]], "baybe.kernels.basic.RQKernel.to_json.params": [[117, 4, 1, "", "**kwargs"], [117, 4, 1, "", "overwrite"], [117, 4, 1, "", "sink"]], "baybe.kernels.composite": [[119, 1, 1, "", "AdditiveKernel"], [120, 1, 1, "", "ProductKernel"], [121, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "base_kernels"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_factory"], [119, 2, 1, "", "to_gpytorch"], [119, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[119, 4, 1, "", "source"]], "baybe.kernels.composite.AdditiveKernel.to_json.params": [[119, 4, 1, "", "**kwargs"], [119, 4, 1, "", "overwrite"], [119, 4, 1, "", "sink"]], "baybe.kernels.composite.ProductKernel": [[120, 2, 1, "", "__init__"], [120, 3, 1, "", "base_kernels"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_factory"], [120, 2, 1, "", "to_gpytorch"], [120, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[120, 4, 1, "", "source"]], "baybe.kernels.composite.ProductKernel.to_json.params": [[120, 4, 1, "", "**kwargs"], [120, 4, 1, "", "overwrite"], [120, 4, 1, "", "sink"]], "baybe.kernels.composite.ScaleKernel": [[121, 2, 1, "", "__init__"], [121, 3, 1, "", "base_kernel"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 3, 1, "", "outputscale_initial_value"], [121, 3, 1, "", "outputscale_prior"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_factory"], [121, 2, 1, "", "to_gpytorch"], [121, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[121, 4, 1, "", "source"]], "baybe.kernels.composite.ScaleKernel.to_json.params": [[121, 4, 1, "", "**kwargs"], [121, 4, 1, "", "overwrite"], [121, 4, 1, "", "sink"]], "baybe.objectives": [[123, 0, 0, "-", "base"], [126, 0, 0, "-", "botorch"], [128, 0, 0, "-", "desirability"], [130, 0, 0, "-", "enum"], [132, 0, 0, "-", "pareto"], [134, 0, 0, "-", "single"], [136, 0, 0, "-", "validation"]], "baybe.objectives.base": [[124, 1, 1, "", "Objective"], [125, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "description"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 3, 1, "", "is_multi_output"], [124, 3, 1, "", "metadata"], [124, 6, 1, "", "n_outputs"], [124, 6, 1, "", "output_names"], [124, 6, 1, "", "supports_partial_measurements"], [124, 6, 1, "", "targets"], [124, 2, 1, "", "to_botorch"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[124, 4, 1, "", "source"]], "baybe.objectives.base.Objective.to_json.params": [[124, 4, 1, "", "**kwargs"], [124, 4, 1, "", "overwrite"], [124, 4, 1, "", "sink"]], "baybe.objectives.base.Objective.transform.params": [[124, 4, 1, "", "allow_extra"], [124, 4, 1, "", "allow_missing"], [124, 4, 1, "", "data"], [124, 4, 1, "", "df"]], "baybe.objectives.botorch": [[127, 1, 1, "", "ChainedMCObjective"]], "baybe.objectives.botorch.ChainedMCObjective": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "add_module"], [127, 2, 1, "", "apply"], [127, 2, 1, "", "bfloat16"], [127, 2, 1, "", "buffers"], [127, 2, 1, "", "children"], [127, 2, 1, "", "compile"], [127, 2, 1, "", "cpu"], [127, 2, 1, "", "cuda"], [127, 2, 1, "", "double"], [127, 2, 1, "", "eval"], [127, 2, 1, "", "extra_repr"], [127, 2, 1, "", "float"], [127, 2, 1, "", "forward"], [127, 2, 1, "", "get_buffer"], [127, 2, 1, "", "get_extra_state"], [127, 2, 1, "", "get_parameter"], [127, 2, 1, "", "get_submodule"], [127, 2, 1, "", "half"], [127, 2, 1, "", "ipu"], [127, 2, 1, "", "modules"], [127, 2, 1, "", "mtia"], [127, 2, 1, "", "named_buffers"], [127, 2, 1, "", "named_children"], [127, 2, 1, "", "named_modules"], [127, 2, 1, "", "named_parameters"], [127, 2, 1, "", "parameters"], [127, 2, 1, "", "register_backward_hook"], [127, 2, 1, "", "register_buffer"], [127, 2, 1, "", "register_forward_hook"], [127, 2, 1, "", "register_forward_pre_hook"], [127, 2, 1, "", "register_full_backward_hook"], [127, 2, 1, "", "register_full_backward_pre_hook"], [127, 2, 1, "", "register_load_state_dict_post_hook"], [127, 2, 1, "", "register_load_state_dict_pre_hook"], [127, 2, 1, "", "register_module"], [127, 2, 1, "", "register_parameter"], [127, 2, 1, "", "register_state_dict_post_hook"], [127, 2, 1, "", "register_state_dict_pre_hook"], [127, 2, 1, "", "requires_grad_"], [127, 2, 1, "", "set_extra_state"], [127, 2, 1, "", "set_submodule"], [127, 2, 1, "", "share_memory"], [127, 2, 1, "", "state_dict"], [127, 2, 1, "", "to"], [127, 2, 1, "", "to_empty"], [127, 2, 1, "", "train"], [127, 2, 1, "", "type"], [127, 2, 1, "", "xpu"], [127, 2, 1, "", "zero_grad"]], "baybe.objectives.botorch.ChainedMCObjective.add_module.params": [[127, 4, 1, "", "module"], [127, 4, 1, "", "name"]], "baybe.objectives.botorch.ChainedMCObjective.apply.params": [[127, 4, 1, "", "fn"]], "baybe.objectives.botorch.ChainedMCObjective.buffers.params": [[127, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.cuda.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.forward.params": [[127, 4, 1, "", "X"], [127, 4, 1, "", "samples"]], "baybe.objectives.botorch.ChainedMCObjective.get_buffer.params": [[127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_parameter.params": [[127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_submodule.params": [[127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.ipu.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.mtia.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.named_buffers.params": [[127, 4, 1, "", "prefix"], [127, 4, 1, "", "recurse"], [127, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_modules.params": [[127, 4, 1, "", "memo"], [127, 4, 1, "", "prefix"], [127, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_parameters.params": [[127, 4, 1, "", "prefix"], [127, 4, 1, "", "recurse"], [127, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.parameters.params": [[127, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.register_buffer.params": [[127, 4, 1, "", "name"], [127, 4, 1, "", "persistent"], [127, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook.params": [[127, 4, 1, "", "always_call"], [127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"], [127, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook.params": [[127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"], [127, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook.params": [[127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook.params": [[127, 4, 1, "", "hook"], [127, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook.params": [[127, 4, 1, "", "hook"]], "baybe.objectives.botorch.ChainedMCObjective.register_parameter.params": [[127, 4, 1, "", "name"], [127, 4, 1, "", "param"]], "baybe.objectives.botorch.ChainedMCObjective.requires_grad_.params": [[127, 4, 1, "", "requires_grad"]], "baybe.objectives.botorch.ChainedMCObjective.set_extra_state.params": [[127, 4, 1, "", "state"]], "baybe.objectives.botorch.ChainedMCObjective.set_submodule.params": [[127, 4, 1, "", "module"], [127, 4, 1, "", "strict"], [127, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.state_dict.params": [[127, 4, 1, "", "destination"], [127, 4, 1, "", "keep_vars"], [127, 4, 1, "", "prefix"]], "baybe.objectives.botorch.ChainedMCObjective.to.params": [[127, 4, 1, "", "device"], [127, 4, 1, "", "dtype"], [127, 4, 1, "", "memory_format"], [127, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.to_empty.params": [[127, 4, 1, "", "device"], [127, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.train.params": [[127, 4, 1, "", "mode"]], "baybe.objectives.botorch.ChainedMCObjective.type.params": [[127, 4, 1, "", "dst_type"]], "baybe.objectives.botorch.ChainedMCObjective.xpu.params": [[127, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.zero_grad.params": [[127, 4, 1, "", "set_to_none"]], "baybe.objectives.desirability": [[129, 1, 1, "", "DesirabilityObjective"]], "baybe.objectives.desirability.DesirabilityObjective": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "as_pre_transformation"], [129, 6, 1, "", "description"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 3, 1, "", "is_multi_output"], [129, 3, 1, "", "metadata"], [129, 6, 1, "", "n_outputs"], [129, 6, 1, "", "output_names"], [129, 3, 1, "", "require_normalization"], [129, 3, 1, "", "scalarizer"], [129, 6, 1, "", "supports_partial_measurements"], [129, 6, 1, "", "targets"], [129, 2, 1, "", "to_botorch"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "transform"], [129, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[129, 4, 1, "", "source"]], "baybe.objectives.desirability.DesirabilityObjective.to_json.params": [[129, 4, 1, "", "**kwargs"], [129, 4, 1, "", "overwrite"], [129, 4, 1, "", "sink"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[129, 4, 1, "", "allow_extra"], [129, 4, 1, "", "allow_missing"], [129, 4, 1, "", "data"], [129, 4, 1, "", "df"]], "baybe.objectives.enum": [[131, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[131, 3, 1, "", "GEOM_MEAN"], [131, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[133, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[133, 2, 1, "", "__init__"], [133, 6, 1, "", "description"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 3, 1, "", "is_multi_output"], [133, 3, 1, "", "metadata"], [133, 6, 1, "", "n_outputs"], [133, 6, 1, "", "output_names"], [133, 6, 1, "", "supports_partial_measurements"], [133, 6, 1, "", "targets"], [133, 2, 1, "", "to_botorch"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[133, 4, 1, "", "source"]], "baybe.objectives.pareto.ParetoObjective.to_json.params": [[133, 4, 1, "", "**kwargs"], [133, 4, 1, "", "overwrite"], [133, 4, 1, "", "sink"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[133, 4, 1, "", "allow_extra"], [133, 4, 1, "", "allow_missing"], [133, 4, 1, "", "data"], [133, 4, 1, "", "df"]], "baybe.objectives.single": [[135, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[135, 2, 1, "", "__init__"], [135, 6, 1, "", "description"], [135, 2, 1, "", "from_dict"], [135, 2, 1, "", "from_json"], [135, 3, 1, "", "is_multi_output"], [135, 3, 1, "", "metadata"], [135, 6, 1, "", "n_outputs"], [135, 6, 1, "", "output_names"], [135, 6, 1, "", "supports_partial_measurements"], [135, 6, 1, "", "targets"], [135, 2, 1, "", "to_botorch"], [135, 2, 1, "", "to_dict"], [135, 2, 1, "", "to_json"], [135, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[135, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[135, 4, 1, "", "source"]], "baybe.objectives.single.SingleTargetObjective.to_json.params": [[135, 4, 1, "", "**kwargs"], [135, 4, 1, "", "overwrite"], [135, 4, 1, "", "sink"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[135, 4, 1, "", "allow_extra"], [135, 4, 1, "", "allow_missing"], [135, 4, 1, "", "data"], [135, 4, 1, "", "df"]], "baybe.objectives.validation": [[137, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[139, 0, 0, "-", "base"], [143, 0, 0, "-", "categorical"], [146, 0, 0, "-", "custom"], [148, 0, 0, "-", "enum"], [153, 0, 0, "-", "numerical"], [156, 0, 0, "-", "substance"], [159, 0, 0, "-", "utils"], [164, 0, 0, "-", "validation"]], "baybe.parameters.base": [[140, 1, 1, "", "ContinuousParameter"], [141, 1, 1, "", "DiscreteParameter"], [142, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[140, 2, 1, "", "__init__"], [140, 6, 1, "", "comp_rep_columns"], [140, 6, 1, "", "description"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 6, 1, "", "is_continuous"], [140, 6, 1, "", "is_discrete"], [140, 2, 1, "", "is_in_range"], [140, 3, 1, "", "is_numerical"], [140, 3, 1, "", "metadata"], [140, 3, 1, "", "name"], [140, 2, 1, "", "summary"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_json"], [140, 2, 1, "", "to_searchspace"], [140, 2, 1, "", "to_subspace"], [140, 6, 1, "", "unit"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[140, 4, 1, "", "source"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[140, 4, 1, "", "item"]], "baybe.parameters.base.ContinuousParameter.to_json.params": [[140, 4, 1, "", "**kwargs"], [140, 4, 1, "", "overwrite"], [140, 4, 1, "", "sink"]], "baybe.parameters.base.DiscreteParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 6, 1, "", "description"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "metadata"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "unit"], [141, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[141, 4, 1, "", "source"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.to_json.params": [[141, 4, 1, "", "**kwargs"], [141, 4, 1, "", "overwrite"], [141, 4, 1, "", "sink"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "comp_rep_columns"], [142, 6, 1, "", "description"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "metadata"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 6, 1, "", "unit"]], "baybe.parameters.base.Parameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[142, 4, 1, "", "source"]], "baybe.parameters.base.Parameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.base.Parameter.to_json.params": [[142, 4, 1, "", "**kwargs"], [142, 4, 1, "", "overwrite"], [142, 4, 1, "", "sink"]], "baybe.parameters.categorical": [[144, 1, 1, "", "CategoricalParameter"], [145, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 6, 1, "", "description"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "metadata"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "unit"], [144, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[144, 4, 1, "", "source"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.to_json.params": [[144, 4, 1, "", "**kwargs"], [144, 4, 1, "", "overwrite"], [144, 4, 1, "", "sink"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "active_values"], [145, 6, 1, "", "comp_df"], [145, 6, 1, "", "comp_rep_columns"], [145, 6, 1, "", "description"], [145, 3, 1, "", "encoding"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "metadata"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"], [145, 2, 1, "", "transform"], [145, 6, 1, "", "unit"], [145, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[145, 4, 1, "", "source"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.to_json.params": [[145, 4, 1, "", "**kwargs"], [145, 4, 1, "", "overwrite"], [145, 4, 1, "", "sink"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[145, 4, 1, "", "series"]], "baybe.parameters.custom": [[147, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[147, 2, 1, "", "__init__"], [147, 6, 1, "", "active_values"], [147, 6, 1, "", "comp_df"], [147, 6, 1, "", "comp_rep_columns"], [147, 3, 1, "", "data"], [147, 3, 1, "", "decorrelate"], [147, 6, 1, "", "description"], [147, 3, 1, "", "encoding"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_json"], [147, 6, 1, "", "is_continuous"], [147, 6, 1, "", "is_discrete"], [147, 2, 1, "", "is_in_range"], [147, 3, 1, "", "is_numerical"], [147, 3, 1, "", "metadata"], [147, 3, 1, "", "name"], [147, 2, 1, "", "summary"], [147, 2, 1, "", "to_dict"], [147, 2, 1, "", "to_json"], [147, 2, 1, "", "to_searchspace"], [147, 2, 1, "", "to_subspace"], [147, 2, 1, "", "transform"], [147, 6, 1, "", "unit"], [147, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[147, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[147, 4, 1, "", "source"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[147, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.to_json.params": [[147, 4, 1, "", "**kwargs"], [147, 4, 1, "", "overwrite"], [147, 4, 1, "", "sink"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[147, 4, 1, "", "series"]], "baybe.parameters.enum": [[149, 1, 1, "", "CategoricalEncoding"], [150, 1, 1, "", "CustomEncoding"], [151, 1, 1, "", "ParameterEncoding"], [152, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[149, 3, 1, "", "INT"], [149, 3, 1, "", "OHE"], [149, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[150, 3, 1, "", "CUSTOM"], [150, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[152, 3, 1, "", "ATOMPAIR"], [152, 3, 1, "", "AUTOCORR"], [152, 3, 1, "", "AVALON"], [152, 3, 1, "", "BCUT2D"], [152, 3, 1, "", "E3FP"], [152, 3, 1, "", "ECFP"], [152, 3, 1, "", "ELECTROSHAPE"], [152, 3, 1, "", "ERG"], [152, 3, 1, "", "ESTATE"], [152, 3, 1, "", "FUNCTIONALGROUPS"], [152, 3, 1, "", "GETAWAY"], [152, 3, 1, "", "GHOSECRIPPEN"], [152, 3, 1, "", "KLEKOTAROTH"], [152, 3, 1, "", "LAGGNER"], [152, 3, 1, "", "LAYERED"], [152, 3, 1, "", "LINGO"], [152, 3, 1, "", "MACCS"], [152, 3, 1, "", "MAP"], [152, 3, 1, "", "MHFP"], [152, 3, 1, "", "MORDRED"], [152, 3, 1, "", "MORGAN_FP"], [152, 3, 1, "", "MORSE"], [152, 3, 1, "", "MQNS"], [152, 3, 1, "", "PATTERN"], [152, 3, 1, "", "PHARMACOPHORE"], [152, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [152, 3, 1, "", "PUBCHEM"], [152, 3, 1, "", "RDF"], [152, 3, 1, "", "RDKIT"], [152, 3, 1, "", "RDKIT2DDESCRIPTORS"], [152, 3, 1, "", "RDKITFINGERPRINT"], [152, 3, 1, "", "SECFP"], [152, 3, 1, "", "TOPOLOGICALTORSION"], [152, 3, 1, "", "USR"], [152, 3, 1, "", "USRCAT"], [152, 3, 1, "", "VSA"], [152, 3, 1, "", "WHIM"], [152, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[154, 1, 1, "", "NumericalContinuousParameter"], [155, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "bounds"], [154, 6, 1, "", "comp_rep_columns"], [154, 6, 1, "", "description"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 6, 1, "", "is_continuous"], [154, 6, 1, "", "is_discrete"], [154, 2, 1, "", "is_in_range"], [154, 3, 1, "", "is_numerical"], [154, 3, 1, "", "metadata"], [154, 3, 1, "", "name"], [154, 2, 1, "", "summary"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"], [154, 2, 1, "", "to_searchspace"], [154, 2, 1, "", "to_subspace"], [154, 6, 1, "", "unit"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[154, 4, 1, "", "source"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[154, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalContinuousParameter.to_json.params": [[154, 4, 1, "", "**kwargs"], [154, 4, 1, "", "overwrite"], [154, 4, 1, "", "sink"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[155, 2, 1, "", "__init__"], [155, 6, 1, "", "active_values"], [155, 6, 1, "", "comp_df"], [155, 6, 1, "", "comp_rep_columns"], [155, 6, 1, "", "description"], [155, 3, 1, "", "encoding"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "metadata"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 3, 1, "", "tolerance"], [155, 2, 1, "", "transform"], [155, 6, 1, "", "unit"], [155, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[155, 4, 1, "", "source"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.to_json.params": [[155, 4, 1, "", "**kwargs"], [155, 4, 1, "", "overwrite"], [155, 4, 1, "", "sink"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[155, 4, 1, "", "series"]], "baybe.parameters.substance": [[157, 3, 1, "", "Smiles"], [158, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[158, 2, 1, "", "__init__"], [158, 6, 1, "", "active_values"], [158, 6, 1, "", "comp_df"], [158, 6, 1, "", "comp_rep_columns"], [158, 3, 1, "", "data"], [158, 3, 1, "", "decorrelate"], [158, 6, 1, "", "description"], [158, 3, 1, "", "encoding"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 6, 1, "", "is_continuous"], [158, 6, 1, "", "is_discrete"], [158, 2, 1, "", "is_in_range"], [158, 3, 1, "", "is_numerical"], [158, 3, 1, "", "kwargs_conformer"], [158, 3, 1, "", "kwargs_fingerprint"], [158, 3, 1, "", "metadata"], [158, 3, 1, "", "name"], [158, 2, 1, "", "summary"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_json"], [158, 2, 1, "", "to_searchspace"], [158, 2, 1, "", "to_subspace"], [158, 2, 1, "", "transform"], [158, 6, 1, "", "unit"], [158, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[158, 4, 1, "", "source"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[158, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.to_json.params": [[158, 4, 1, "", "**kwargs"], [158, 4, 1, "", "overwrite"], [158, 4, 1, "", "sink"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[158, 4, 1, "", "series"]], "baybe.parameters.utils": [[160, 5, 1, "", "activate_parameter"], [161, 5, 1, "", "get_parameters_from_dataframe"], [162, 5, 1, "", "is_inactive"], [163, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[160, 4, 1, "", "parameter"], [160, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[161, 4, 1, "", "df"], [161, 4, 1, "", "factory"], [161, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[162, 4, 1, "", "lower_threshold"], [162, 4, 1, "", "upper_threshold"], [162, 4, 1, "", "x"]], "baybe.parameters.validation": [[165, 5, 1, "", "validate_decorrelation"], [166, 5, 1, "", "validate_is_finite"], [167, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[169, 0, 0, "-", "base"], [171, 0, 0, "-", "basic"]], "baybe.priors.base": [[170, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[170, 4, 1, "", "source"]], "baybe.priors.base.Prior.to_json.params": [[170, 4, 1, "", "**kwargs"], [170, 4, 1, "", "overwrite"], [170, 4, 1, "", "sink"]], "baybe.priors.basic": [[172, 1, 1, "", "BetaPrior"], [173, 1, 1, "", "GammaPrior"], [174, 1, 1, "", "HalfCauchyPrior"], [175, 1, 1, "", "HalfNormalPrior"], [176, 1, 1, "", "LogNormalPrior"], [177, 1, 1, "", "NormalPrior"], [178, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[172, 2, 1, "", "__init__"], [172, 3, 1, "", "alpha"], [172, 3, 1, "", "beta"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[172, 4, 1, "", "source"]], "baybe.priors.basic.BetaPrior.to_json.params": [[172, 4, 1, "", "**kwargs"], [172, 4, 1, "", "overwrite"], [172, 4, 1, "", "sink"]], "baybe.priors.basic.GammaPrior": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "concentration"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "rate"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[173, 4, 1, "", "source"]], "baybe.priors.basic.GammaPrior.to_json.params": [[173, 4, 1, "", "**kwargs"], [173, 4, 1, "", "overwrite"], [173, 4, 1, "", "sink"]], "baybe.priors.basic.HalfCauchyPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[174, 4, 1, "", "source"]], "baybe.priors.basic.HalfCauchyPrior.to_json.params": [[174, 4, 1, "", "**kwargs"], [174, 4, 1, "", "overwrite"], [174, 4, 1, "", "sink"]], "baybe.priors.basic.HalfNormalPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[175, 4, 1, "", "source"]], "baybe.priors.basic.HalfNormalPrior.to_json.params": [[175, 4, 1, "", "**kwargs"], [175, 4, 1, "", "overwrite"], [175, 4, 1, "", "sink"]], "baybe.priors.basic.LogNormalPrior": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "loc"], [176, 3, 1, "", "scale"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[176, 4, 1, "", "source"]], "baybe.priors.basic.LogNormalPrior.to_json.params": [[176, 4, 1, "", "**kwargs"], [176, 4, 1, "", "overwrite"], [176, 4, 1, "", "sink"]], "baybe.priors.basic.NormalPrior": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 3, 1, "", "loc"], [177, 3, 1, "", "scale"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_gpytorch"], [177, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[177, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[177, 4, 1, "", "source"]], "baybe.priors.basic.NormalPrior.to_json.params": [[177, 4, 1, "", "**kwargs"], [177, 4, 1, "", "overwrite"], [177, 4, 1, "", "sink"]], "baybe.priors.basic.SmoothedBoxPrior": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "a"], [178, 3, 1, "", "b"], [178, 2, 1, "", "from_dict"], [178, 2, 1, "", "from_json"], [178, 3, 1, "", "sigma"], [178, 2, 1, "", "to_dict"], [178, 2, 1, "", "to_gpytorch"], [178, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[178, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[178, 4, 1, "", "source"]], "baybe.priors.basic.SmoothedBoxPrior.to_json.params": [[178, 4, 1, "", "**kwargs"], [178, 4, 1, "", "overwrite"], [178, 4, 1, "", "sink"]], "baybe.recommenders": [[180, 0, 0, "-", "base"], [182, 0, 0, "-", "meta"], [190, 0, 0, "-", "naive"], [192, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[181, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[181, 4, 1, "", "batch_size"], [181, 4, 1, "", "measurements"], [181, 4, 1, "", "objective"], [181, 4, 1, "", "pending_experiments"], [181, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[183, 0, 0, "-", "base"], [185, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[184, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 2, 1, "", "recommend"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[184, 4, 1, "", "source"]], "baybe.recommenders.meta.base.MetaRecommender.to_json.params": [[184, 4, 1, "", "**kwargs"], [184, 4, 1, "", "overwrite"], [184, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential": [[186, 1, 1, "", "BaseSequentialMetaRecommender"], [187, 1, 1, "", "SequentialMetaRecommender"], [188, 1, 1, "", "StreamingSequentialMetaRecommender"], [189, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 2, 1, "", "select_recommender"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[186, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json.params": [[186, 4, 1, "", "**kwargs"], [186, 4, 1, "", "overwrite"], [186, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 6, 1, "", "is_stateful"], [187, 3, 1, "", "mode"], [187, 2, 1, "", "recommend"], [187, 3, 1, "", "recommenders"], [187, 2, 1, "", "select_recommender"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[187, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json.params": [[187, 4, 1, "", "**kwargs"], [187, 4, 1, "", "overwrite"], [187, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_json"], [188, 2, 1, "", "get_current_recommender"], [188, 2, 1, "", "get_next_recommender"], [188, 2, 1, "", "get_non_meta_recommender"], [188, 6, 1, "", "is_stateful"], [188, 2, 1, "", "recommend"], [188, 3, 1, "", "recommenders"], [188, 2, 1, "", "select_recommender"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[188, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[188, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json.params": [[188, 4, 1, "", "**kwargs"], [188, 4, 1, "", "overwrite"], [188, 4, 1, "", "sink"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_json"], [189, 2, 1, "", "get_current_recommender"], [189, 2, 1, "", "get_next_recommender"], [189, 2, 1, "", "get_non_meta_recommender"], [189, 3, 1, "", "initial_recommender"], [189, 6, 1, "", "is_stateful"], [189, 2, 1, "", "recommend"], [189, 3, 1, "", "recommender"], [189, 3, 1, "", "remain_switched"], [189, 2, 1, "", "select_recommender"], [189, 3, 1, "", "switch_after"], [189, 2, 1, "", "to_dict"], [189, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[189, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[189, 4, 1, "", "source"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json.params": [[189, 4, 1, "", "**kwargs"], [189, 4, 1, "", "overwrite"], [189, 4, 1, "", "sink"]], "baybe.recommenders.naive": [[191, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 3, 1, "", "cont_recommender"], [191, 3, 1, "", "disc_recommender"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[193, 0, 0, "-", "base"], [195, 0, 0, "-", "bayesian"], [200, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[194, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[194, 2, 1, "", "__init__"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[196, 0, 0, "-", "base"], [198, 0, 0, "-", "botorch"]], "baybe.recommenders.pure.bayesian.base": [[197, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[197, 2, 1, "", "__init__"], [197, 3, 1, "", "acquisition_function"], [197, 2, 1, "", "acquisition_values"], [197, 6, 1, "", "allow_recommending_already_measured"], [197, 6, 1, "", "allow_recommending_pending_experiments"], [197, 6, 1, "", "allow_repeated_recommendations"], [197, 3, 1, "", "compatibility"], [197, 2, 1, "", "get_acquisition_function"], [197, 2, 1, "", "get_surrogate"], [197, 2, 1, "", "joint_acquisition_value"], [197, 2, 1, "", "recommend"], [197, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[197, 4, 1, "", "acquisition_function"], [197, 4, 1, "", "candidates"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[197, 4, 1, "", "batch_size"], [197, 4, 1, "", "measurements"], [197, 4, 1, "", "objective"], [197, 4, 1, "", "pending_experiments"], [197, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[199, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[199, 2, 1, "", "__init__"], [199, 3, 1, "", "acquisition_function"], [199, 2, 1, "", "acquisition_values"], [199, 6, 1, "", "allow_recommending_already_measured"], [199, 6, 1, "", "allow_recommending_pending_experiments"], [199, 6, 1, "", "allow_repeated_recommendations"], [199, 3, 1, "", "compatibility"], [199, 2, 1, "", "get_acquisition_function"], [199, 2, 1, "", "get_surrogate"], [199, 3, 1, "", "hybrid_sampler"], [199, 2, 1, "", "joint_acquisition_value"], [199, 3, 1, "", "max_n_subspaces"], [199, 3, 1, "", "n_raw_samples"], [199, 3, 1, "", "n_restarts"], [199, 2, 1, "", "recommend"], [199, 3, 1, "", "sampling_percentage"], [199, 3, 1, "", "sequential_continuous"], [199, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[199, 4, 1, "", "acquisition_function"], [199, 4, 1, "", "candidates"], [199, 4, 1, "", "measurements"], [199, 4, 1, "", "objective"], [199, 4, 1, "", "pending_experiments"], [199, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[199, 4, 1, "", "batch_size"], [199, 4, 1, "", "measurements"], [199, 4, 1, "", "objective"], [199, 4, 1, "", "pending_experiments"], [199, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive": [[201, 0, 0, "-", "base"], [203, 0, 0, "-", "clustering"], [208, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[202, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[202, 2, 1, "", "__init__"], [202, 6, 1, "", "allow_recommending_already_measured"], [202, 6, 1, "", "allow_recommending_pending_experiments"], [202, 6, 1, "", "allow_repeated_recommendations"], [202, 3, 1, "", "compatibility"], [202, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[202, 4, 1, "", "batch_size"], [202, 4, 1, "", "measurements"], [202, 4, 1, "", "objective"], [202, 4, 1, "", "pending_experiments"], [202, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, 1, 1, "", "GaussianMixtureClusteringRecommender"], [205, 1, 1, "", "KMeansClusteringRecommender"], [206, 1, 1, "", "PAMClusteringRecommender"], [207, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, 1, 1, "", "FPSInitialization"], [210, 1, 1, "", "FPSRecommender"], [211, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[209, 3, 1, "", "FARTHEST"], [209, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 3, 1, "", "initialization"], [210, 3, 1, "", "random_tie_break"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[211, 2, 1, "", "__init__"], [211, 6, 1, "", "allow_recommending_already_measured"], [211, 6, 1, "", "allow_recommending_pending_experiments"], [211, 6, 1, "", "allow_repeated_recommendations"], [211, 3, 1, "", "compatibility"], [211, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[211, 4, 1, "", "batch_size"], [211, 4, 1, "", "measurements"], [211, 4, 1, "", "objective"], [211, 4, 1, "", "pending_experiments"], [211, 4, 1, "", "searchspace"]], "baybe.searchspace": [[213, 0, 0, "-", "continuous"], [215, 0, 0, "-", "core"], [220, 0, 0, "-", "discrete"], [226, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[214, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[214, 2, 1, "", "__init__"], [214, 6, 1, "", "comp_rep_bounds"], [214, 6, 1, "", "comp_rep_columns"], [214, 6, 1, "", "constraints_cardinality"], [214, 3, 1, "", "constraints_lin_eq"], [214, 3, 1, "", "constraints_lin_ineq"], [214, 3, 1, "", "constraints_nonlin"], [214, 2, 1, "", "empty"], [214, 2, 1, "", "from_bounds"], [214, 2, 1, "", "from_dataframe"], [214, 2, 1, "", "from_dict"], [214, 2, 1, "", "from_json"], [214, 2, 1, "", "from_parameter"], [214, 2, 1, "", "from_product"], [214, 6, 1, "", "full_factorial"], [214, 2, 1, "", "get_parameters_by_name"], [214, 2, 1, "", "inactive_parameter_combinations"], [214, 6, 1, "", "is_empty"], [214, 6, 1, "", "n_inactive_parameter_combinations"], [214, 6, 1, "", "parameter_names"], [214, 6, 1, "", "parameter_names_in_cardinality_constraints"], [214, 3, 1, "", "parameters"], [214, 2, 1, "", "sample_from_full_factorial"], [214, 2, 1, "", "sample_uniform"], [214, 6, 1, "", "scaling_bounds"], [214, 2, 1, "", "to_dict"], [214, 2, 1, "", "to_json"], [214, 2, 1, "", "to_searchspace"], [214, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[214, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[214, 4, 1, "", "df"], [214, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[214, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[214, 4, 1, "", "source"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[214, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[214, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[214, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[214, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.to_json.params": [[214, 4, 1, "", "**kwargs"], [214, 4, 1, "", "overwrite"], [214, 4, 1, "", "sink"]], "baybe.searchspace.core": [[216, 1, 1, "", "SearchSpace"], [217, 1, 1, "", "SearchSpaceType"], [218, 5, 1, "", "to_searchspace"], [219, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[216, 2, 1, "", "__init__"], [216, 6, 1, "", "comp_rep_bounds"], [216, 6, 1, "", "comp_rep_columns"], [216, 6, 1, "", "constraints"], [216, 6, 1, "", "constraints_augmentable"], [216, 3, 1, "", "continuous"], [216, 3, 1, "", "discrete"], [216, 2, 1, "", "estimate_product_space_size"], [216, 2, 1, "", "from_dataframe"], [216, 2, 1, "", "from_dict"], [216, 2, 1, "", "from_json"], [216, 2, 1, "", "from_parameter"], [216, 2, 1, "", "from_product"], [216, 2, 1, "", "get_comp_rep_parameter_indices"], [216, 2, 1, "", "get_parameters_by_name"], [216, 6, 1, "", "n_tasks"], [216, 6, 1, "", "parameter_names"], [216, 6, 1, "", "parameters"], [216, 6, 1, "", "scaling_bounds"], [216, 6, 1, "", "task_idx"], [216, 2, 1, "", "to_dict"], [216, 2, 1, "", "to_json"], [216, 2, 1, "", "transform"], [216, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[216, 4, 1, "", "df"], [216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[216, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[216, 4, 1, "", "source"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[216, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[216, 4, 1, "", "constraints"], [216, 4, 1, "", "empty_encoding"], [216, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[216, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[216, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.to_json.params": [[216, 4, 1, "", "**kwargs"], [216, 4, 1, "", "overwrite"], [216, 4, 1, "", "sink"]], "baybe.searchspace.core.SearchSpace.transform.params": [[216, 4, 1, "", "allow_extra"], [216, 4, 1, "", "allow_missing"], [216, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[217, 3, 1, "", "CONTINUOUS"], [217, 3, 1, "", "DISCRETE"], [217, 3, 1, "", "EITHER"], [217, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[221, 1, 1, "", "MemorySize"], [222, 1, 1, "", "SubspaceDiscrete"], [223, 5, 1, "", "parameter_cartesian_prod_pandas"], [224, 5, 1, "", "parameter_cartesian_prod_polars"], [225, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep_bytes"], [221, 6, 1, "", "comp_rep_human_readable"], [221, 3, 1, "", "comp_rep_shape"], [221, 3, 1, "", "exp_rep_bytes"], [221, 6, 1, "", "exp_rep_human_readable"], [221, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "comp_rep"], [222, 6, 1, "", "comp_rep_bounds"], [222, 6, 1, "", "comp_rep_columns"], [222, 3, 1, "", "constraints"], [222, 2, 1, "", "empty"], [222, 3, 1, "", "empty_encoding"], [222, 2, 1, "", "estimate_product_space_size"], [222, 3, 1, "", "exp_rep"], [222, 2, 1, "", "from_dataframe"], [222, 2, 1, "", "from_dict"], [222, 2, 1, "", "from_json"], [222, 2, 1, "", "from_parameter"], [222, 2, 1, "", "from_product"], [222, 2, 1, "", "from_simplex"], [222, 2, 1, "", "get_candidates"], [222, 2, 1, "", "get_parameters_by_name"], [222, 6, 1, "", "is_empty"], [222, 6, 1, "", "metadata"], [222, 6, 1, "", "parameter_names"], [222, 3, 1, "", "parameters"], [222, 6, 1, "", "scaling_bounds"], [222, 2, 1, "", "to_dict"], [222, 2, 1, "", "to_json"], [222, 2, 1, "", "to_searchspace"], [222, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[222, 4, 1, "", "df"], [222, 4, 1, "", "empty_encoding"], [222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[222, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[222, 4, 1, "", "source"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[222, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[222, 4, 1, "", "boundary_only"], [222, 4, 1, "", "constraints"], [222, 4, 1, "", "max_nonzero"], [222, 4, 1, "", "max_sum"], [222, 4, 1, "", "min_nonzero"], [222, 4, 1, "", "product_parameters"], [222, 4, 1, "", "simplex_parameters"], [222, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[222, 4, 1, "", "names"]], "baybe.searchspace.discrete.SubspaceDiscrete.to_json.params": [[222, 4, 1, "", "**kwargs"], [222, 4, 1, "", "overwrite"], [222, 4, 1, "", "sink"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[224, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[227, 5, 1, "", "get_transform_parameters"], [228, 5, 1, "", "validate_parameter_names"], [229, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[231, 0, 0, "-", "core"], [239, 0, 0, "-", "mixin"], [241, 0, 0, "-", "utils"]], "baybe.serialization.core": [[232, 5, 1, "", "add_type"], [233, 5, 1, "", "block_deserialization_hook"], [234, 5, 1, "", "block_serialization_hook"], [235, 8, 1, "", "converter"], [236, 5, 1, "", "make_base_structure_hook"], [237, 5, 1, "", "select_constructor_hook"], [238, 5, 1, "", "unstructure_with_type"]], "baybe.serialization.mixin": [[240, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[240, 4, 1, "", "source"]], "baybe.serialization.mixin.SerialMixin.to_json.params": [[240, 4, 1, "", "**kwargs"], [240, 4, 1, "", "overwrite"], [240, 4, 1, "", "sink"]], "baybe.serialization.utils": [[242, 5, 1, "", "deserialize_dataframe"], [243, 5, 1, "", "serialize_dataframe"]], "baybe.settings": [[245, 1, 1, "", "Settings"], [246, 8, 1, "", "active_settings"], [247, 5, 1, "", "adjust_defaults"]], "baybe.settings.Settings": [[245, 6, 1, "", "DTypeFloatNumpy"], [245, 6, 1, "", "DTypeFloatTorch"], [245, 2, 1, "", "__init__"], [245, 2, 1, "", "activate"], [245, 3, 1, "", "cache_campaign_recommendations"], [245, 3, 1, "", "cache_directory"], [245, 3, 1, "", "float_precision_numpy"], [245, 3, 1, "", "float_precision_torch"], [245, 2, 1, "", "overwrite"], [245, 3, 1, "", "parallelize_simulations"], [245, 3, 1, "", "preprocess_dataframes"], [245, 3, 1, "", "random_seed"], [245, 2, 1, "", "restore_previous"], [245, 6, 1, "", "use_fpsample"], [245, 6, 1, "", "use_polars_for_constraints"]], "baybe.simulation": [[249, 0, 0, "-", "core"], [251, 0, 0, "-", "lookup"], [253, 0, 0, "-", "scenarios"], [255, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[250, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "campaign"], [250, 4, 1, "", "impute_mode"], [250, 4, 1, "", "initial_data"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "noise_percent"], [250, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[252, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[252, 4, 1, "", "impute_mode"], [252, 4, 1, "", "lookup"], [252, 4, 1, "", "queries"], [252, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[254, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[254, 4, 1, "", "batch_size"], [254, 4, 1, "", "groupby"], [254, 4, 1, "", "impute_mode"], [254, 4, 1, "", "initial_data"], [254, 4, 1, "", "lookup"], [254, 4, 1, "", "n_doe_iterations"], [254, 4, 1, "", "n_mc_iterations"], [254, 4, 1, "", "noise_percent"], [254, 4, 1, "", "random_seed"], [254, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[256, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[256, 4, 1, "", "batch_size"], [256, 4, 1, "", "campaign"], [256, 4, 1, "", "groupby"], [256, 4, 1, "", "lookup"], [256, 4, 1, "", "n_doe_iterations"], [256, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[258, 0, 0, "-", "bandit"], [260, 0, 0, "-", "base"], [265, 0, 0, "-", "composite"], [267, 0, 0, "-", "custom"], [270, 0, 0, "-", "gaussian_process"], [285, 0, 0, "-", "linear"], [287, 0, 0, "-", "naive"], [289, 0, 0, "-", "ngboost"], [291, 0, 0, "-", "random_forest"], [293, 0, 0, "-", "utils"], [297, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[259, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 2, 1, "", "posterior"], [259, 2, 1, "", "posterior_means"], [259, 2, 1, "", "posterior_modes"], [259, 2, 1, "", "posterior_stats"], [259, 3, 1, "", "prior"], [259, 2, 1, "", "replicate"], [259, 3, 1, "", "supports_multi_output"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[259, 4, 1, "", "source"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[259, 4, 1, "", "candidates"], [259, 4, 1, "", "stats"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json.params": [[259, 4, 1, "", "**kwargs"], [259, 4, 1, "", "overwrite"], [259, 4, 1, "", "sink"]], "baybe.surrogates.base": [[261, 1, 1, "", "IndependentGaussianSurrogate"], [262, 8, 1, "", "PosteriorStatistic"], [263, 1, 1, "", "Surrogate"], [264, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 2, 1, "", "posterior"], [261, 2, 1, "", "posterior_stats"], [261, 2, 1, "", "replicate"], [261, 3, 1, "", "supports_multi_output"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[261, 4, 1, "", "source"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[261, 4, 1, "", "candidates"], [261, 4, 1, "", "stats"]], "baybe.surrogates.base.IndependentGaussianSurrogate.to_json.params": [[261, 4, 1, "", "**kwargs"], [261, 4, 1, "", "overwrite"], [261, 4, 1, "", "sink"]], "baybe.surrogates.base.Surrogate": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "fit"], [263, 2, 1, "", "from_dict"], [263, 2, 1, "", "from_json"], [263, 2, 1, "", "posterior"], [263, 2, 1, "", "posterior_stats"], [263, 2, 1, "", "replicate"], [263, 3, 1, "", "supports_multi_output"], [263, 3, 1, "", "supports_transfer_learning"], [263, 2, 1, "", "to_botorch"], [263, 2, 1, "", "to_dict"], [263, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[263, 4, 1, "", "measurements"], [263, 4, 1, "", "objective"], [263, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[263, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[263, 4, 1, "", "source"]], "baybe.surrogates.base.Surrogate.posterior.params": [[263, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[263, 4, 1, "", "candidates"], [263, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate.to_json.params": [[263, 4, 1, "", "**kwargs"], [263, 4, 1, "", "overwrite"], [263, 4, 1, "", "sink"]], "baybe.surrogates.base.SurrogateProtocol": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[266, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 2, 1, "", "from_replication"], [266, 2, 1, "", "posterior"], [266, 2, 1, "", "posterior_stats"], [266, 3, 1, "", "surrogates"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[266, 4, 1, "", "source"]], "baybe.surrogates.composite.CompositeSurrogate.to_json.params": [[266, 4, 1, "", "**kwargs"], [266, 4, 1, "", "overwrite"], [266, 4, 1, "", "sink"]], "baybe.surrogates.custom": [[268, 1, 1, "", "CustomONNXSurrogate"], [269, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "fit"], [268, 2, 1, "", "from_dict"], [268, 2, 1, "", "from_json"], [268, 3, 1, "", "onnx_input_name"], [268, 3, 1, "", "onnx_str"], [268, 2, 1, "", "posterior"], [268, 2, 1, "", "posterior_stats"], [268, 2, 1, "", "replicate"], [268, 3, 1, "", "supports_multi_output"], [268, 3, 1, "", "supports_transfer_learning"], [268, 2, 1, "", "to_botorch"], [268, 2, 1, "", "to_dict"], [268, 2, 1, "", "to_json"], [268, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[268, 4, 1, "", "measurements"], [268, 4, 1, "", "objective"], [268, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[268, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[268, 4, 1, "", "source"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[268, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[268, 4, 1, "", "candidates"], [268, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.to_json.params": [[268, 4, 1, "", "**kwargs"], [268, 4, 1, "", "overwrite"], [268, 4, 1, "", "sink"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[268, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[271, 0, 0, "-", "core"], [273, 0, 0, "-", "kernel_factory"], [277, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[272, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[272, 2, 1, "", "__init__"], [272, 2, 1, "", "fit"], [272, 2, 1, "", "from_dict"], [272, 2, 1, "", "from_json"], [272, 2, 1, "", "from_preset"], [272, 3, 1, "", "kernel_factory"], [272, 2, 1, "", "posterior"], [272, 2, 1, "", "posterior_stats"], [272, 2, 1, "", "replicate"], [272, 3, 1, "", "supports_multi_output"], [272, 3, 1, "", "supports_transfer_learning"], [272, 2, 1, "", "to_botorch"], [272, 2, 1, "", "to_dict"], [272, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[272, 4, 1, "", "measurements"], [272, 4, 1, "", "objective"], [272, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[272, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[272, 4, 1, "", "source"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[272, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[272, 4, 1, "", "candidates"], [272, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json.params": [[272, 4, 1, "", "**kwargs"], [272, 4, 1, "", "overwrite"], [272, 4, 1, "", "sink"]], "baybe.surrogates.gaussian_process.kernel_factory": [[274, 1, 1, "", "KernelFactory"], [275, 1, 1, "", "PlainKernelFactory"], [276, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[274, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[275, 2, 1, "", "__init__"], [275, 2, 1, "", "from_dict"], [275, 2, 1, "", "from_json"], [275, 3, 1, "", "kernel"], [275, 2, 1, "", "to_dict"], [275, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[275, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[275, 4, 1, "", "source"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json.params": [[275, 4, 1, "", "**kwargs"], [275, 4, 1, "", "overwrite"], [275, 4, 1, "", "sink"]], "baybe.surrogates.gaussian_process.presets": [[278, 0, 0, "-", "core"], [281, 0, 0, "-", "default"], [283, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[279, 1, 1, "", "GaussianProcessPreset"], [280, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[279, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[282, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[282, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[284, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[284, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[286, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[286, 4, 1, "", "source"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.linear.BayesianLinearSurrogate.to_json.params": [[286, 4, 1, "", "**kwargs"], [286, 4, 1, "", "overwrite"], [286, 4, 1, "", "sink"]], "baybe.surrogates.naive": [[288, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[288, 2, 1, "", "__init__"], [288, 2, 1, "", "fit"], [288, 2, 1, "", "from_dict"], [288, 2, 1, "", "from_json"], [288, 2, 1, "", "posterior"], [288, 2, 1, "", "posterior_stats"], [288, 2, 1, "", "replicate"], [288, 3, 1, "", "supports_multi_output"], [288, 3, 1, "", "supports_transfer_learning"], [288, 2, 1, "", "to_botorch"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[288, 4, 1, "", "measurements"], [288, 4, 1, "", "objective"], [288, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[288, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[288, 4, 1, "", "source"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[288, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[288, 4, 1, "", "candidates"], [288, 4, 1, "", "stats"]], "baybe.surrogates.naive.MeanPredictionSurrogate.to_json.params": [[288, 4, 1, "", "**kwargs"], [288, 4, 1, "", "overwrite"], [288, 4, 1, "", "sink"]], "baybe.surrogates.ngboost": [[290, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[290, 2, 1, "", "__init__"], [290, 2, 1, "", "fit"], [290, 2, 1, "", "from_dict"], [290, 2, 1, "", "from_json"], [290, 3, 1, "", "model_params"], [290, 2, 1, "", "posterior"], [290, 2, 1, "", "posterior_stats"], [290, 2, 1, "", "replicate"], [290, 3, 1, "", "supports_multi_output"], [290, 3, 1, "", "supports_transfer_learning"], [290, 2, 1, "", "to_botorch"], [290, 2, 1, "", "to_dict"], [290, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[290, 4, 1, "", "measurements"], [290, 4, 1, "", "objective"], [290, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[290, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[290, 4, 1, "", "source"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[290, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[290, 4, 1, "", "candidates"], [290, 4, 1, "", "stats"]], "baybe.surrogates.ngboost.NGBoostSurrogate.to_json.params": [[290, 4, 1, "", "**kwargs"], [290, 4, 1, "", "overwrite"], [290, 4, 1, "", "sink"]], "baybe.surrogates.random_forest": [[292, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[292, 2, 1, "", "__init__"], [292, 2, 1, "", "fit"], [292, 2, 1, "", "from_dict"], [292, 2, 1, "", "from_json"], [292, 3, 1, "", "model_params"], [292, 2, 1, "", "posterior"], [292, 2, 1, "", "posterior_stats"], [292, 2, 1, "", "replicate"], [292, 3, 1, "", "supports_multi_output"], [292, 3, 1, "", "supports_transfer_learning"], [292, 2, 1, "", "to_botorch"], [292, 2, 1, "", "to_dict"], [292, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[292, 4, 1, "", "measurements"], [292, 4, 1, "", "objective"], [292, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[292, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[292, 4, 1, "", "source"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[292, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[292, 4, 1, "", "candidates"], [292, 4, 1, "", "stats"]], "baybe.surrogates.random_forest.RandomForestSurrogate.to_json.params": [[292, 4, 1, "", "**kwargs"], [292, 4, 1, "", "overwrite"], [292, 4, 1, "", "sink"]], "baybe.surrogates.utils": [[294, 5, 1, "", "batchify_ensemble_predictor"], [295, 5, 1, "", "batchify_mean_var_prediction"], [296, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[294, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[296, 4, 1, "", "cls"], [296, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[298, 5, 1, "", "make_dict_validator"], [299, 8, 1, "", "type_validation_converter"], [300, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[298, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[300, 4, 1, "", "model_cls"]], "baybe.targets": [[302, 0, 0, "-", "base"], [304, 0, 0, "-", "binary"], [307, 0, 0, "-", "botorch"], [309, 0, 0, "-", "enum"], [310, 0, 0, "-", "numerical"], [312, 0, 0, "-", "transforms"], [313, 0, 0, "-", "utils"]], "baybe.targets.base": [[303, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[303, 2, 1, "", "__init__"], [303, 6, 1, "", "description"], [303, 2, 1, "", "from_dict"], [303, 2, 1, "", "from_json"], [303, 3, 1, "", "metadata"], [303, 3, 1, "", "name"], [303, 2, 1, "", "summary"], [303, 2, 1, "", "to_dict"], [303, 2, 1, "", "to_json"], [303, 2, 1, "", "to_objective"], [303, 2, 1, "", "transform"], [303, 6, 1, "", "unit"]], "baybe.targets.base.Target.from_dict.params": [[303, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[303, 4, 1, "", "source"]], "baybe.targets.base.Target.to_json.params": [[303, 4, 1, "", "**kwargs"], [303, 4, 1, "", "overwrite"], [303, 4, 1, "", "sink"]], "baybe.targets.base.Target.transform.params": [[303, 4, 1, "", "series"]], "baybe.targets.binary": [[305, 1, 1, "", "BinaryTarget"], [306, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[305, 2, 1, "", "__init__"], [305, 6, 1, "", "description"], [305, 3, 1, "", "failure_value"], [305, 2, 1, "", "from_dict"], [305, 2, 1, "", "from_json"], [305, 3, 1, "", "metadata"], [305, 3, 1, "", "name"], [305, 3, 1, "", "success_value"], [305, 2, 1, "", "summary"], [305, 2, 1, "", "to_dict"], [305, 2, 1, "", "to_json"], [305, 2, 1, "", "to_objective"], [305, 2, 1, "", "transform"], [305, 6, 1, "", "unit"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[305, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[305, 4, 1, "", "source"]], "baybe.targets.binary.BinaryTarget.to_json.params": [[305, 4, 1, "", "**kwargs"], [305, 4, 1, "", "overwrite"], [305, 4, 1, "", "sink"]], "baybe.targets.binary.BinaryTarget.transform.params": [[305, 4, 1, "", "series"]], "baybe.targets.botorch": [[308, 1, 1, "", "AffinePosteriorTransform"]], "baybe.targets.botorch.AffinePosteriorTransform": [[308, 2, 1, "", "__init__"], [308, 2, 1, "", "add_module"], [308, 2, 1, "", "apply"], [308, 2, 1, "", "bfloat16"], [308, 2, 1, "", "buffers"], [308, 2, 1, "", "children"], [308, 2, 1, "", "compile"], [308, 2, 1, "", "cpu"], [308, 2, 1, "", "cuda"], [308, 2, 1, "", "double"], [308, 2, 1, "", "eval"], [308, 2, 1, "", "evaluate"], [308, 2, 1, "", "extra_repr"], [308, 2, 1, "", "float"], [308, 2, 1, "", "forward"], [308, 2, 1, "", "get_buffer"], [308, 2, 1, "", "get_extra_state"], [308, 2, 1, "", "get_parameter"], [308, 2, 1, "", "get_submodule"], [308, 2, 1, "", "half"], [308, 2, 1, "", "ipu"], [308, 2, 1, "", "modules"], [308, 2, 1, "", "mtia"], [308, 2, 1, "", "named_buffers"], [308, 2, 1, "", "named_children"], [308, 2, 1, "", "named_modules"], [308, 2, 1, "", "named_parameters"], [308, 2, 1, "", "parameters"], [308, 2, 1, "", "register_backward_hook"], [308, 2, 1, "", "register_buffer"], [308, 2, 1, "", "register_forward_hook"], [308, 2, 1, "", "register_forward_pre_hook"], [308, 2, 1, "", "register_full_backward_hook"], [308, 2, 1, "", "register_full_backward_pre_hook"], [308, 2, 1, "", "register_load_state_dict_post_hook"], [308, 2, 1, "", "register_load_state_dict_pre_hook"], [308, 2, 1, "", "register_module"], [308, 2, 1, "", "register_parameter"], [308, 2, 1, "", "register_state_dict_post_hook"], [308, 2, 1, "", "register_state_dict_pre_hook"], [308, 2, 1, "", "requires_grad_"], [308, 2, 1, "", "set_extra_state"], [308, 2, 1, "", "set_submodule"], [308, 2, 1, "", "share_memory"], [308, 2, 1, "", "state_dict"], [308, 2, 1, "", "to"], [308, 2, 1, "", "to_empty"], [308, 2, 1, "", "train"], [308, 2, 1, "", "type"], [308, 2, 1, "", "xpu"], [308, 2, 1, "", "zero_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.add_module.params": [[308, 4, 1, "", "module"], [308, 4, 1, "", "name"]], "baybe.targets.botorch.AffinePosteriorTransform.apply.params": [[308, 4, 1, "", "fn"]], "baybe.targets.botorch.AffinePosteriorTransform.buffers.params": [[308, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.cuda.params": [[308, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.evaluate.params": [[308, 4, 1, "", "Y"]], "baybe.targets.botorch.AffinePosteriorTransform.forward.params": [[308, 4, 1, "", "posterior"]], "baybe.targets.botorch.AffinePosteriorTransform.get_buffer.params": [[308, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_parameter.params": [[308, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_submodule.params": [[308, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.ipu.params": [[308, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.mtia.params": [[308, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.named_buffers.params": [[308, 4, 1, "", "prefix"], [308, 4, 1, "", "recurse"], [308, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_modules.params": [[308, 4, 1, "", "memo"], [308, 4, 1, "", "prefix"], [308, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_parameters.params": [[308, 4, 1, "", "prefix"], [308, 4, 1, "", "recurse"], [308, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.parameters.params": [[308, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.register_buffer.params": [[308, 4, 1, "", "name"], [308, 4, 1, "", "persistent"], [308, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook.params": [[308, 4, 1, "", "always_call"], [308, 4, 1, "", "hook"], [308, 4, 1, "", "prepend"], [308, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook.params": [[308, 4, 1, "", "hook"], [308, 4, 1, "", "prepend"], [308, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook.params": [[308, 4, 1, "", "hook"], [308, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook.params": [[308, 4, 1, "", "hook"], [308, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook.params": [[308, 4, 1, "", "hook"]], "baybe.targets.botorch.AffinePosteriorTransform.register_parameter.params": [[308, 4, 1, "", "name"], [308, 4, 1, "", "param"]], "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_.params": [[308, 4, 1, "", "requires_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state.params": [[308, 4, 1, "", "state"]], "baybe.targets.botorch.AffinePosteriorTransform.set_submodule.params": [[308, 4, 1, "", "module"], [308, 4, 1, "", "strict"], [308, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.state_dict.params": [[308, 4, 1, "", "destination"], [308, 4, 1, "", "keep_vars"], [308, 4, 1, "", "prefix"]], "baybe.targets.botorch.AffinePosteriorTransform.to.params": [[308, 4, 1, "", "device"], [308, 4, 1, "", "dtype"], [308, 4, 1, "", "memory_format"], [308, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.to_empty.params": [[308, 4, 1, "", "device"], [308, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.train.params": [[308, 4, 1, "", "mode"]], "baybe.targets.botorch.AffinePosteriorTransform.type.params": [[308, 4, 1, "", "dst_type"]], "baybe.targets.botorch.AffinePosteriorTransform.xpu.params": [[308, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.zero_grad.params": [[308, 4, 1, "", "set_to_none"]], "baybe.targets.numerical": [[311, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[311, 2, 1, "", "__init__"], [311, 2, 1, "", "abs"], [311, 2, 1, "", "clamp"], [311, 6, 1, "", "description"], [311, 2, 1, "", "exp"], [311, 2, 1, "", "from_dict"], [311, 2, 1, "", "from_json"], [311, 2, 1, "", "from_legacy_interface"], [311, 2, 1, "", "from_modern_interface"], [311, 2, 1, "", "get_codomain"], [311, 2, 1, "", "get_image"], [311, 6, 1, "", "is_normalized"], [311, 2, 1, "", "log"], [311, 2, 1, "", "match_absolute"], [311, 2, 1, "", "match_bell"], [311, 2, 1, "", "match_power"], [311, 2, 1, "", "match_quadratic"], [311, 2, 1, "", "match_triangular"], [311, 3, 1, "", "metadata"], [311, 3, 1, "", "minimize"], [311, 3, 1, "", "name"], [311, 2, 1, "", "negate"], [311, 2, 1, "", "normalize"], [311, 2, 1, "", "normalized_ramp"], [311, 2, 1, "", "normalized_sigmoid"], [311, 2, 1, "", "power"], [311, 2, 1, "", "summary"], [311, 2, 1, "", "to_dict"], [311, 2, 1, "", "to_json"], [311, 2, 1, "", "to_objective"], [311, 2, 1, "", "transform"], [311, 3, 1, "", "transformation"], [311, 6, 1, "", "unit"]], "baybe.targets.numerical.NumericalTarget.clamp.params": [[311, 4, 1, "", "max"], [311, 4, 1, "", "min"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[311, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[311, 4, 1, "", "source"]], "baybe.targets.numerical.NumericalTarget.from_legacy_interface.params": [[311, 4, 1, "", "bounds"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "mode"], [311, 4, 1, "", "name"], [311, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_modern_interface.params": [[311, 4, 1, "", "metadata"], [311, 4, 1, "", "minimize"], [311, 4, 1, "", "name"], [311, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.match_absolute.params": [[311, 4, 1, "", "match_value"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "mismatch_instead"], [311, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_bell.params": [[311, 4, 1, "", "match_value"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "mismatch_instead"], [311, 4, 1, "", "name"], [311, 4, 1, "", "sigma"]], "baybe.targets.numerical.NumericalTarget.match_power.params": [[311, 4, 1, "", "exponent"], [311, 4, 1, "", "match_value"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "mismatch_instead"], [311, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_quadratic.params": [[311, 4, 1, "", "match_value"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "mismatch_instead"], [311, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_triangular.params": [[311, 4, 1, "", "cutoffs"], [311, 4, 1, "", "margins"], [311, 4, 1, "", "match_value"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "mismatch_instead"], [311, 4, 1, "", "name"], [311, 4, 1, "", "width"]], "baybe.targets.numerical.NumericalTarget.normalized_ramp.params": [[311, 4, 1, "", "cutoffs"], [311, 4, 1, "", "descending"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.normalized_sigmoid.params": [[311, 4, 1, "", "anchors"], [311, 4, 1, "", "metadata"], [311, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.power.params": [[311, 4, 1, "", "exponent"]], "baybe.targets.numerical.NumericalTarget.to_json.params": [[311, 4, 1, "", "**kwargs"], [311, 4, 1, "", "overwrite"], [311, 4, 1, "", "sink"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[311, 4, 1, "", "series"]], "baybe.targets.utils": [[314, 5, 1, "", "combine_numerical_targets"]], "baybe.transformations": [[316, 0, 0, "-", "base"], [319, 0, 0, "-", "basic"], [332, 0, 0, "-", "composite"], [336, 0, 0, "-", "utils"]], "baybe.transformations.base": [[317, 1, 1, "", "MonotonicTransformation"], [318, 1, 1, "", "Transformation"]], "baybe.transformations.base.MonotonicTransformation": [[317, 2, 1, "", "__init__"], [317, 2, 1, "", "abs"], [317, 2, 1, "", "chain"], [317, 2, 1, "", "clamp"], [317, 2, 1, "", "from_dict"], [317, 2, 1, "", "from_json"], [317, 2, 1, "", "get_codomain"], [317, 2, 1, "", "get_image"], [317, 2, 1, "", "negate"], [317, 2, 1, "", "to_botorch_objective"], [317, 2, 1, "", "to_dict"], [317, 2, 1, "", "to_json"]], "baybe.transformations.base.MonotonicTransformation.from_dict.params": [[317, 4, 1, "", "dictionary"]], "baybe.transformations.base.MonotonicTransformation.from_json.params": [[317, 4, 1, "", "source"]], "baybe.transformations.base.MonotonicTransformation.to_json.params": [[317, 4, 1, "", "**kwargs"], [317, 4, 1, "", "overwrite"], [317, 4, 1, "", "sink"]], "baybe.transformations.base.Transformation": [[318, 2, 1, "", "__init__"], [318, 2, 1, "", "abs"], [318, 2, 1, "", "chain"], [318, 2, 1, "", "clamp"], [318, 2, 1, "", "from_dict"], [318, 2, 1, "", "from_json"], [318, 2, 1, "", "get_codomain"], [318, 2, 1, "", "get_image"], [318, 2, 1, "", "negate"], [318, 2, 1, "", "to_botorch_objective"], [318, 2, 1, "", "to_dict"], [318, 2, 1, "", "to_json"]], "baybe.transformations.base.Transformation.from_dict.params": [[318, 4, 1, "", "dictionary"]], "baybe.transformations.base.Transformation.from_json.params": [[318, 4, 1, "", "source"]], "baybe.transformations.base.Transformation.to_json.params": [[318, 4, 1, "", "**kwargs"], [318, 4, 1, "", "overwrite"], [318, 4, 1, "", "sink"]], "baybe.transformations.basic": [[320, 1, 1, "", "AbsoluteTransformation"], [321, 1, 1, "", "AffineTransformation"], [322, 1, 1, "", "BellTransformation"], [323, 1, 1, "", "ClampingTransformation"], [324, 1, 1, "", "CustomTransformation"], [325, 1, 1, "", "ExponentialTransformation"], [326, 1, 1, "", "IdentityTransformation"], [327, 1, 1, "", "LogarithmicTransformation"], [328, 1, 1, "", "PowerTransformation"], [329, 1, 1, "", "SigmoidTransformation"], [330, 1, 1, "", "TriangularTransformation"], [331, 1, 1, "", "TwoSidedAffineTransformation"]], "baybe.transformations.basic.AbsoluteTransformation": [[320, 2, 1, "", "__init__"], [320, 2, 1, "", "abs"], [320, 2, 1, "", "chain"], [320, 2, 1, "", "clamp"], [320, 2, 1, "", "from_dict"], [320, 2, 1, "", "from_json"], [320, 2, 1, "", "get_codomain"], [320, 2, 1, "", "get_image"], [320, 2, 1, "", "negate"], [320, 2, 1, "", "to_botorch_objective"], [320, 2, 1, "", "to_dict"], [320, 2, 1, "", "to_json"]], "baybe.transformations.basic.AbsoluteTransformation.from_dict.params": [[320, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AbsoluteTransformation.from_json.params": [[320, 4, 1, "", "source"]], "baybe.transformations.basic.AbsoluteTransformation.to_json.params": [[320, 4, 1, "", "**kwargs"], [320, 4, 1, "", "overwrite"], [320, 4, 1, "", "sink"]], "baybe.transformations.basic.AffineTransformation": [[321, 2, 1, "", "__init__"], [321, 2, 1, "", "abs"], [321, 2, 1, "", "chain"], [321, 2, 1, "", "clamp"], [321, 3, 1, "", "factor"], [321, 2, 1, "", "from_dict"], [321, 2, 1, "", "from_json"], [321, 2, 1, "", "from_values_mapped_to_unit_interval"], [321, 2, 1, "", "get_codomain"], [321, 2, 1, "", "get_image"], [321, 2, 1, "", "negate"], [321, 3, 1, "", "shift"], [321, 2, 1, "", "to_botorch_objective"], [321, 2, 1, "", "to_botorch_posterior_transform"], [321, 2, 1, "", "to_dict"], [321, 2, 1, "", "to_json"]], "baybe.transformations.basic.AffineTransformation.from_dict.params": [[321, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AffineTransformation.from_json.params": [[321, 4, 1, "", "source"]], "baybe.transformations.basic.AffineTransformation.from_values_mapped_to_unit_interval.params": [[321, 4, 1, "", "mapped_to_one"], [321, 4, 1, "", "mapped_to_zero"]], "baybe.transformations.basic.AffineTransformation.to_json.params": [[321, 4, 1, "", "**kwargs"], [321, 4, 1, "", "overwrite"], [321, 4, 1, "", "sink"]], "baybe.transformations.basic.BellTransformation": [[322, 2, 1, "", "__init__"], [322, 2, 1, "", "abs"], [322, 3, 1, "", "center"], [322, 2, 1, "", "chain"], [322, 2, 1, "", "clamp"], [322, 2, 1, "", "from_dict"], [322, 2, 1, "", "from_json"], [322, 2, 1, "", "get_codomain"], [322, 2, 1, "", "get_image"], [322, 2, 1, "", "negate"], [322, 3, 1, "", "sigma"], [322, 2, 1, "", "to_botorch_objective"], [322, 2, 1, "", "to_dict"], [322, 2, 1, "", "to_json"]], "baybe.transformations.basic.BellTransformation.from_dict.params": [[322, 4, 1, "", "dictionary"]], "baybe.transformations.basic.BellTransformation.from_json.params": [[322, 4, 1, "", "source"]], "baybe.transformations.basic.BellTransformation.to_json.params": [[322, 4, 1, "", "**kwargs"], [322, 4, 1, "", "overwrite"], [322, 4, 1, "", "sink"]], "baybe.transformations.basic.ClampingTransformation": [[323, 2, 1, "", "__init__"], [323, 2, 1, "", "abs"], [323, 2, 1, "", "chain"], [323, 2, 1, "", "clamp"], [323, 3, 1, "", "cutoffs"], [323, 2, 1, "", "from_dict"], [323, 2, 1, "", "from_json"], [323, 2, 1, "", "get_codomain"], [323, 2, 1, "", "get_image"], [323, 2, 1, "", "negate"], [323, 2, 1, "", "to_botorch_objective"], [323, 2, 1, "", "to_dict"], [323, 2, 1, "", "to_json"]], "baybe.transformations.basic.ClampingTransformation.from_dict.params": [[323, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ClampingTransformation.from_json.params": [[323, 4, 1, "", "source"]], "baybe.transformations.basic.ClampingTransformation.to_json.params": [[323, 4, 1, "", "**kwargs"], [323, 4, 1, "", "overwrite"], [323, 4, 1, "", "sink"]], "baybe.transformations.basic.CustomTransformation": [[324, 2, 1, "", "__init__"], [324, 2, 1, "", "abs"], [324, 2, 1, "", "chain"], [324, 2, 1, "", "clamp"], [324, 2, 1, "", "from_dict"], [324, 2, 1, "", "from_json"], [324, 3, 1, "", "function"], [324, 2, 1, "", "get_codomain"], [324, 2, 1, "", "get_image"], [324, 2, 1, "", "negate"], [324, 2, 1, "", "to_botorch_objective"], [324, 2, 1, "", "to_dict"], [324, 2, 1, "", "to_json"]], "baybe.transformations.basic.CustomTransformation.from_dict.params": [[324, 4, 1, "", "dictionary"]], "baybe.transformations.basic.CustomTransformation.from_json.params": [[324, 4, 1, "", "source"]], "baybe.transformations.basic.CustomTransformation.to_json.params": [[324, 4, 1, "", "**kwargs"], [324, 4, 1, "", "overwrite"], [324, 4, 1, "", "sink"]], "baybe.transformations.basic.ExponentialTransformation": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "abs"], [325, 2, 1, "", "chain"], [325, 2, 1, "", "clamp"], [325, 2, 1, "", "from_dict"], [325, 2, 1, "", "from_json"], [325, 2, 1, "", "get_codomain"], [325, 2, 1, "", "get_image"], [325, 2, 1, "", "negate"], [325, 2, 1, "", "to_botorch_objective"], [325, 2, 1, "", "to_dict"], [325, 2, 1, "", "to_json"]], "baybe.transformations.basic.ExponentialTransformation.from_dict.params": [[325, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ExponentialTransformation.from_json.params": [[325, 4, 1, "", "source"]], "baybe.transformations.basic.ExponentialTransformation.to_json.params": [[325, 4, 1, "", "**kwargs"], [325, 4, 1, "", "overwrite"], [325, 4, 1, "", "sink"]], "baybe.transformations.basic.IdentityTransformation": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "abs"], [326, 2, 1, "", "chain"], [326, 2, 1, "", "clamp"], [326, 2, 1, "", "from_dict"], [326, 2, 1, "", "from_json"], [326, 2, 1, "", "get_codomain"], [326, 2, 1, "", "get_image"], [326, 2, 1, "", "negate"], [326, 2, 1, "", "to_botorch_objective"], [326, 2, 1, "", "to_botorch_posterior_transform"], [326, 2, 1, "", "to_dict"], [326, 2, 1, "", "to_json"]], "baybe.transformations.basic.IdentityTransformation.from_dict.params": [[326, 4, 1, "", "dictionary"]], "baybe.transformations.basic.IdentityTransformation.from_json.params": [[326, 4, 1, "", "source"]], "baybe.transformations.basic.IdentityTransformation.to_json.params": [[326, 4, 1, "", "**kwargs"], [326, 4, 1, "", "overwrite"], [326, 4, 1, "", "sink"]], "baybe.transformations.basic.LogarithmicTransformation": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "abs"], [327, 2, 1, "", "chain"], [327, 2, 1, "", "clamp"], [327, 2, 1, "", "from_dict"], [327, 2, 1, "", "from_json"], [327, 2, 1, "", "get_codomain"], [327, 2, 1, "", "get_image"], [327, 2, 1, "", "negate"], [327, 2, 1, "", "to_botorch_objective"], [327, 2, 1, "", "to_dict"], [327, 2, 1, "", "to_json"]], "baybe.transformations.basic.LogarithmicTransformation.from_dict.params": [[327, 4, 1, "", "dictionary"]], "baybe.transformations.basic.LogarithmicTransformation.from_json.params": [[327, 4, 1, "", "source"]], "baybe.transformations.basic.LogarithmicTransformation.to_json.params": [[327, 4, 1, "", "**kwargs"], [327, 4, 1, "", "overwrite"], [327, 4, 1, "", "sink"]], "baybe.transformations.basic.PowerTransformation": [[328, 2, 1, "", "__init__"], [328, 2, 1, "", "abs"], [328, 2, 1, "", "chain"], [328, 2, 1, "", "clamp"], [328, 3, 1, "", "exponent"], [328, 2, 1, "", "from_dict"], [328, 2, 1, "", "from_json"], [328, 2, 1, "", "get_codomain"], [328, 2, 1, "", "get_image"], [328, 2, 1, "", "negate"], [328, 2, 1, "", "to_botorch_objective"], [328, 2, 1, "", "to_dict"], [328, 2, 1, "", "to_json"]], "baybe.transformations.basic.PowerTransformation.from_dict.params": [[328, 4, 1, "", "dictionary"]], "baybe.transformations.basic.PowerTransformation.from_json.params": [[328, 4, 1, "", "source"]], "baybe.transformations.basic.PowerTransformation.to_json.params": [[328, 4, 1, "", "**kwargs"], [328, 4, 1, "", "overwrite"], [328, 4, 1, "", "sink"]], "baybe.transformations.basic.SigmoidTransformation": [[329, 2, 1, "", "__init__"], [329, 2, 1, "", "abs"], [329, 3, 1, "", "center"], [329, 2, 1, "", "chain"], [329, 2, 1, "", "clamp"], [329, 2, 1, "", "from_anchors"], [329, 2, 1, "", "from_dict"], [329, 2, 1, "", "from_json"], [329, 2, 1, "", "get_codomain"], [329, 2, 1, "", "get_image"], [329, 2, 1, "", "negate"], [329, 3, 1, "", "steepness"], [329, 2, 1, "", "to_botorch_objective"], [329, 2, 1, "", "to_dict"], [329, 2, 1, "", "to_json"]], "baybe.transformations.basic.SigmoidTransformation.from_anchors.params": [[329, 4, 1, "", "anchors"]], "baybe.transformations.basic.SigmoidTransformation.from_dict.params": [[329, 4, 1, "", "dictionary"]], "baybe.transformations.basic.SigmoidTransformation.from_json.params": [[329, 4, 1, "", "source"]], "baybe.transformations.basic.SigmoidTransformation.to_json.params": [[329, 4, 1, "", "**kwargs"], [329, 4, 1, "", "overwrite"], [329, 4, 1, "", "sink"]], "baybe.transformations.basic.TriangularTransformation": [[330, 2, 1, "", "__init__"], [330, 2, 1, "", "abs"], [330, 2, 1, "", "chain"], [330, 2, 1, "", "clamp"], [330, 3, 1, "", "cutoffs"], [330, 2, 1, "", "from_dict"], [330, 2, 1, "", "from_json"], [330, 2, 1, "", "from_margins"], [330, 2, 1, "", "from_width"], [330, 2, 1, "", "get_codomain"], [330, 2, 1, "", "get_image"], [330, 6, 1, "", "margins"], [330, 2, 1, "", "negate"], [330, 3, 1, "", "peak"], [330, 2, 1, "", "to_botorch_objective"], [330, 2, 1, "", "to_dict"], [330, 2, 1, "", "to_json"]], "baybe.transformations.basic.TriangularTransformation.from_dict.params": [[330, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TriangularTransformation.from_json.params": [[330, 4, 1, "", "source"]], "baybe.transformations.basic.TriangularTransformation.to_json.params": [[330, 4, 1, "", "**kwargs"], [330, 4, 1, "", "overwrite"], [330, 4, 1, "", "sink"]], "baybe.transformations.basic.TwoSidedAffineTransformation": [[331, 2, 1, "", "__init__"], [331, 2, 1, "", "abs"], [331, 2, 1, "", "chain"], [331, 2, 1, "", "clamp"], [331, 2, 1, "", "from_dict"], [331, 2, 1, "", "from_json"], [331, 2, 1, "", "get_codomain"], [331, 2, 1, "", "get_image"], [331, 3, 1, "", "midpoint"], [331, 2, 1, "", "negate"], [331, 3, 1, "", "slope_left"], [331, 3, 1, "", "slope_right"], [331, 2, 1, "", "to_botorch_objective"], [331, 2, 1, "", "to_dict"], [331, 2, 1, "", "to_json"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict.params": [[331, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_json.params": [[331, 4, 1, "", "source"]], "baybe.transformations.basic.TwoSidedAffineTransformation.to_json.params": [[331, 4, 1, "", "**kwargs"], [331, 4, 1, "", "overwrite"], [331, 4, 1, "", "sink"]], "baybe.transformations.composite": [[333, 1, 1, "", "AdditiveTransformation"], [334, 1, 1, "", "ChainedTransformation"], [335, 1, 1, "", "MultiplicativeTransformation"]], "baybe.transformations.composite.AdditiveTransformation": [[333, 2, 1, "", "__init__"], [333, 2, 1, "", "abs"], [333, 2, 1, "", "chain"], [333, 2, 1, "", "clamp"], [333, 2, 1, "", "from_dict"], [333, 2, 1, "", "from_json"], [333, 2, 1, "", "get_codomain"], [333, 2, 1, "", "get_image"], [333, 2, 1, "", "negate"], [333, 2, 1, "", "to_botorch_objective"], [333, 2, 1, "", "to_dict"], [333, 2, 1, "", "to_json"], [333, 3, 1, "", "transformations"]], "baybe.transformations.composite.AdditiveTransformation.from_dict.params": [[333, 4, 1, "", "dictionary"]], "baybe.transformations.composite.AdditiveTransformation.from_json.params": [[333, 4, 1, "", "source"]], "baybe.transformations.composite.AdditiveTransformation.to_json.params": [[333, 4, 1, "", "**kwargs"], [333, 4, 1, "", "overwrite"], [333, 4, 1, "", "sink"]], "baybe.transformations.composite.ChainedTransformation": [[334, 2, 1, "", "__init__"], [334, 2, 1, "", "abs"], [334, 2, 1, "", "chain"], [334, 2, 1, "", "clamp"], [334, 2, 1, "", "from_dict"], [334, 2, 1, "", "from_json"], [334, 2, 1, "", "get_codomain"], [334, 2, 1, "", "get_image"], [334, 2, 1, "", "negate"], [334, 2, 1, "", "to_botorch_objective"], [334, 2, 1, "", "to_dict"], [334, 2, 1, "", "to_json"], [334, 3, 1, "", "transformations"]], "baybe.transformations.composite.ChainedTransformation.from_dict.params": [[334, 4, 1, "", "dictionary"]], "baybe.transformations.composite.ChainedTransformation.from_json.params": [[334, 4, 1, "", "source"]], "baybe.transformations.composite.ChainedTransformation.to_json.params": [[334, 4, 1, "", "**kwargs"], [334, 4, 1, "", "overwrite"], [334, 4, 1, "", "sink"]], "baybe.transformations.composite.MultiplicativeTransformation": [[335, 2, 1, "", "__init__"], [335, 2, 1, "", "abs"], [335, 2, 1, "", "chain"], [335, 2, 1, "", "clamp"], [335, 2, 1, "", "from_dict"], [335, 2, 1, "", "from_json"], [335, 2, 1, "", "get_codomain"], [335, 2, 1, "", "get_image"], [335, 2, 1, "", "negate"], [335, 2, 1, "", "to_botorch_objective"], [335, 2, 1, "", "to_dict"], [335, 2, 1, "", "to_json"], [335, 3, 1, "", "transformations"]], "baybe.transformations.composite.MultiplicativeTransformation.from_dict.params": [[335, 4, 1, "", "dictionary"]], "baybe.transformations.composite.MultiplicativeTransformation.from_json.params": [[335, 4, 1, "", "source"]], "baybe.transformations.composite.MultiplicativeTransformation.to_json.params": [[335, 4, 1, "", "**kwargs"], [335, 4, 1, "", "overwrite"], [335, 4, 1, "", "sink"]], "baybe.transformations.utils": [[337, 5, 1, "", "combine_affine_transformations"], [338, 5, 1, "", "compress_transformations"], [339, 5, 1, "", "convert_transformation"]], "baybe.transformations.utils.compress_transformations.params": [[338, 4, 1, "", "transformations"]], "baybe.utils": [[341, 0, 0, "-", "augmentation"], [344, 0, 0, "-", "basic"], [363, 0, 0, "-", "boolean"], [369, 0, 0, "-", "chemistry"], [374, 0, 0, "-", "clustering_algorithms"], [378, 0, 0, "-", "conversion"], [382, 0, 0, "-", "dataframe"], [399, 0, 0, "-", "interval"], [404, 0, 0, "-", "memory"], [406, 0, 0, "-", "metadata"], [411, 0, 0, "-", "numerical"], [415, 0, 0, "-", "random"], [418, 0, 0, "-", "sampling_algorithms"], [422, 0, 0, "-", "scaling"], [424, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[342, 5, 1, "", "df_apply_dependency_augmentation"], [343, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[342, 4, 1, "", "affected"], [342, 4, 1, "", "causing"], [342, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[343, 4, 1, "", "column_groups"], [343, 4, 1, "", "df"]], "baybe.utils.basic": [[345, 1, 1, "", "Dummy"], [346, 8, 1, "", "UNSPECIFIED"], [347, 1, 1, "", "UnspecifiedType"], [348, 5, 1, "", "cache_to_disk"], [349, 1, 1, "", "classproperty"], [350, 5, 1, "", "compose"], [351, 5, 1, "", "compose_two"], [352, 5, 1, "", "convert_to_float"], [353, 5, 1, "", "find_subclass"], [354, 5, 1, "", "get_baseclasses"], [355, 5, 1, "", "get_subclasses"], [356, 5, 1, "", "group_duplicate_values"], [357, 5, 1, "", "hilberts_factory"], [358, 5, 1, "", "is_all_instance"], [359, 5, 1, "", "match_attributes"], [360, 5, 1, "", "refers_to"], [361, 5, 1, "", "register_hooks"], [362, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[345, 2, 1, "", "__init__"]], "baybe.utils.basic.cache_to_disk.params": [[348, 4, 1, "", "func"]], "baybe.utils.basic.classproperty": [[349, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[354, 4, 1, "", "abstract"], [354, 4, 1, "", "cls"], [354, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[355, 4, 1, "", "abstract"], [355, 4, 1, "", "cls"], [355, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[356, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[359, 4, 1, "", "callable_"], [359, 4, 1, "", "ignore"], [359, 4, 1, "", "object"], [359, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[361, 4, 1, "", "post_hooks"], [361, 4, 1, "", "pre_hooks"], [361, 4, 1, "", "target"]], "baybe.utils.boolean": [[364, 1, 1, "", "AutoBool"], [365, 1, 1, "", "UncertainBool"], [366, 5, 1, "", "check_if_in"], [367, 5, 1, "", "is_abstract"], [368, 5, 1, "", "strtobool"]], "baybe.utils.boolean.AutoBool": [[364, 3, 1, "", "AUTO"], [364, 3, 1, "", "FALSE"], [364, 3, 1, "", "TRUE"], [364, 2, 1, "", "evaluate"], [364, 2, 1, "", "from_unstructured"]], "baybe.utils.boolean.AutoBool.from_unstructured.params": [[364, 4, 1, "", "value"]], "baybe.utils.boolean.UncertainBool": [[365, 3, 1, "", "FALSE"], [365, 3, 1, "", "TRUE"], [365, 3, 1, "", "UNKNOWN"], [365, 2, 1, "", "from_erroneous_callable"]], "baybe.utils.boolean.check_if_in.params": [[366, 4, 1, "", "allowed"], [366, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[367, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[368, 4, 1, "", "val"]], "baybe.utils.chemistry": [[370, 5, 1, "", "get_canonical_smiles"], [371, 5, 1, "", "get_fingerprint_class"], [372, 5, 1, "", "name_to_smiles"], [373, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[371, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[372, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[373, 4, 1, "", "encoding"], [373, 4, 1, "", "kwargs_conformer"], [373, 4, 1, "", "kwargs_fingerprint"], [373, 4, 1, "", "prefix"], [373, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[375, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[376, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[377, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[377, 2, 1, "", "__init__"], [377, 3, 1, "", "cluster_centers_"], [377, 2, 1, "", "fit"], [377, 2, 1, "", "fit_predict"], [377, 2, 1, "", "fit_transform"], [377, 2, 1, "", "get_metadata_routing"], [377, 2, 1, "", "get_params"], [377, 3, 1, "", "inertia_"], [377, 3, 1, "", "labels_"], [377, 3, 1, "", "medoid_indices_"], [377, 2, 1, "", "predict"], [377, 2, 1, "", "set_output"], [377, 2, 1, "", "set_params"], [377, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[377, 4, 1, "", "X"], [377, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[377, 4, 1, "", "**kwargs"], [377, 4, 1, "", "X"], [377, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[377, 4, 1, "", "**fit_params"], [377, 4, 1, "", "X"], [377, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[377, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[377, 4, 1, "", "init"], [377, 4, 1, "", "max_iter"], [377, 4, 1, "", "method"], [377, 4, 1, "", "metric"], [377, 4, 1, "", "n_clusters"], [377, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[377, 4, 1, "", "X"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[377, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[377, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[377, 4, 1, "", "-------"], [377, 4, 1, "", "Returns"], [377, 4, 1, "", "X"], [377, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[379, 5, 1, "", "fraction_to_float"], [380, 5, 1, "", "nonstring_to_tuple"], [381, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[379, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[381, 4, 1, "", "*fields"], [381, 4, 1, "", "header"], [381, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[383, 5, 1, "", "add_fake_measurements"], [384, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [385, 5, 1, "", "add_parameter_noise"], [386, 5, 1, "", "arrays_to_dataframes"], [387, 5, 1, "", "create_fake_input"], [388, 5, 1, "", "df_drop_single_value_columns"], [389, 5, 1, "", "df_drop_string_columns"], [390, 5, 1, "", "df_uncorrelated_features"], [391, 5, 1, "", "filter_df"], [392, 5, 1, "", "fuzzy_row_match"], [393, 5, 1, "", "get_transform_objects"], [394, 5, 1, "", "handle_missing_values"], [395, 5, 1, "", "normalize_input_dtypes"], [396, 5, 1, "", "pretty_print_df"], [397, 5, 1, "", "to_tensor"], [398, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[383, 4, 1, "", "data"], [383, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[384, 4, 1, "", "df"], [384, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[385, 4, 1, "", "data"], [385, 4, 1, "", "noise_level"], [385, 4, 1, "", "noise_type"], [385, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[386, 4, 1, "", "input_labels"], [386, 4, 1, "", "output_labels"], [386, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[387, 4, 1, "", "**kwargs"], [387, 4, 1, "", "n_rows"], [387, 4, 1, "", "parameters"], [387, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[388, 4, 1, "", "df"], [388, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[389, 4, 1, "", "df"], [389, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[390, 4, 1, "", "df"], [390, 4, 1, "", "exclude_list"], [390, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[391, 4, 1, "", "complement"], [391, 4, 1, "", "df"], [391, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[392, 4, 1, "", "left_df"], [392, 4, 1, "", "parameters"], [392, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[393, 4, 1, "", "allow_extra"], [393, 4, 1, "", "allow_missing"], [393, 4, 1, "", "df"], [393, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[394, 4, 1, "", "columns"], [394, 4, 1, "", "data"], [394, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[395, 4, 1, "", "df"], [395, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[396, 4, 1, "", "df"], [396, 4, 1, "", "max_columns"], [396, 4, 1, "", "max_colwidth"], [396, 4, 1, "", "max_rows"], [396, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[397, 4, 1, "", "*x"]], "baybe.utils.interval": [[400, 8, 1, "", "ConvertibleToInterval"], [401, 7, 1, "", "InfiniteIntervalError"], [402, 1, 1, "", "Interval"], [403, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[401, 2, 1, "", "__init__"], [401, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[402, 2, 1, "", "__init__"], [402, 6, 1, "", "center"], [402, 2, 1, "", "clamp"], [402, 2, 1, "", "contains"], [402, 2, 1, "", "create"], [402, 2, 1, "", "from_dict"], [402, 2, 1, "", "from_json"], [402, 6, 1, "", "is_bounded"], [402, 6, 1, "", "is_degenerate"], [402, 6, 1, "", "is_fully_unbounded"], [402, 6, 1, "", "is_half_bounded"], [402, 6, 1, "", "is_left_bounded"], [402, 6, 1, "", "is_right_bounded"], [402, 3, 1, "", "lower"], [402, 2, 1, "", "to_dict"], [402, 2, 1, "", "to_json"], [402, 2, 1, "", "to_ndarray"], [402, 2, 1, "", "to_tensor"], [402, 2, 1, "", "to_tuple"], [402, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[402, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[402, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[402, 4, 1, "", "source"]], "baybe.utils.interval.Interval.to_json.params": [[402, 4, 1, "", "**kwargs"], [402, 4, 1, "", "overwrite"], [402, 4, 1, "", "sink"]], "baybe.utils.memory": [[405, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[405, 4, 1, "", "num"]], "baybe.utils.metadata": [[407, 8, 1, "", "ConvertibleToMeasurableMetadata"], [408, 1, 1, "", "MeasurableMetadata"], [409, 1, 1, "", "Metadata"], [410, 5, 1, "", "to_metadata"]], "baybe.utils.metadata.MeasurableMetadata": [[408, 2, 1, "", "__init__"], [408, 3, 1, "", "description"], [408, 2, 1, "", "from_dict"], [408, 2, 1, "", "from_json"], [408, 6, 1, "", "is_empty"], [408, 3, 1, "", "misc"], [408, 2, 1, "", "to_dict"], [408, 2, 1, "", "to_json"], [408, 3, 1, "", "unit"]], "baybe.utils.metadata.MeasurableMetadata.from_dict.params": [[408, 4, 1, "", "dictionary"]], "baybe.utils.metadata.MeasurableMetadata.from_json.params": [[408, 4, 1, "", "source"]], "baybe.utils.metadata.MeasurableMetadata.to_json.params": [[408, 4, 1, "", "**kwargs"], [408, 4, 1, "", "overwrite"], [408, 4, 1, "", "sink"]], "baybe.utils.metadata.Metadata": [[409, 2, 1, "", "__init__"], [409, 3, 1, "", "description"], [409, 2, 1, "", "from_dict"], [409, 2, 1, "", "from_json"], [409, 6, 1, "", "is_empty"], [409, 3, 1, "", "misc"], [409, 2, 1, "", "to_dict"], [409, 2, 1, "", "to_json"]], "baybe.utils.metadata.Metadata.from_dict.params": [[409, 4, 1, "", "dictionary"]], "baybe.utils.metadata.Metadata.from_json.params": [[409, 4, 1, "", "source"]], "baybe.utils.metadata.Metadata.to_json.params": [[409, 4, 1, "", "**kwargs"], [409, 4, 1, "", "overwrite"], [409, 4, 1, "", "sink"]], "baybe.utils.metadata.to_metadata.params": [[410, 4, 1, "", "cls"], [410, 4, 1, "", "value"]], "baybe.utils.numerical": [[412, 3, 1, "", "DTypeFloatONNX"], [413, 5, 1, "", "closer_element"], [414, 5, 1, "", "closest_element"]], "baybe.utils.numerical.closer_element.params": [[413, 4, 1, "", "target"], [413, 4, 1, "", "x"], [413, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[414, 4, 1, "", "array"], [414, 4, 1, "", "target"]], "baybe.utils.random": [[416, 5, 1, "", "set_random_seed"], [417, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[416, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[417, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[419, 1, 1, "", "DiscreteSamplingMethod"], [420, 5, 1, "", "farthest_point_sampling"], [421, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[419, 3, 1, "", "FPS"], [419, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[420, 4, 1, "", "initialization"], [420, 4, 1, "", "n_samples"], [420, 4, 1, "", "points"], [420, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[421, 4, 1, "", "df"], [421, 4, 1, "", "method"], [421, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[423, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[423, 2, 1, "", "__init__"], [423, 2, 1, "", "fit"], [423, 3, 1, "", "mapping"], [423, 2, 1, "", "transform"]], "baybe.utils.validation": [[425, 5, 1, "", "finite_float"], [426, 5, 1, "", "non_inf_float"], [427, 5, 1, "", "non_nan_float"], [428, 5, 1, "", "preprocess_dataframe"], [429, 5, 1, "", "validate_not_nan"], [430, 5, 1, "", "validate_object_names"], [431, 5, 1, "", "validate_objective_input"], [432, 5, 1, "", "validate_parameter_input"], [433, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.preprocess_dataframe.params": [[428, 4, 1, "", "df"], [428, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [428, 4, 1, "", "objective"], [428, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_object_names.params": [[430, 4, 1, "", "objects"]], "baybe.utils.validation.validate_objective_input.params": [[431, 4, 1, "", "data"], [431, 4, 1, "", "objective"]], "baybe.utils.validation.validate_parameter_input.params": [[432, 4, 1, "", "data"], [432, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [432, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[433, 4, 1, "", "data"], [433, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 199, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 357, 377, 397, 402, 408, 409, 434, 437, 444, 448, 451, 452, 455, 456, 458, 459, 460, 461, 462, 464, 469, 473, 474, 475, 479, 480, 481, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502], "0": [8, 9, 12, 15, 18, 24, 34, 37, 47, 48, 53, 111, 127, 147, 155, 158, 178, 186, 187, 188, 199, 222, 250, 252, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 311, 321, 322, 329, 330, 331, 342, 343, 368, 377, 384, 385, 390, 391, 412, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 484, 485, 486, 487, 488, 492, 493, 495, 496, 497, 498, 500, 502, 504], "00": [468, 476, 495], "000": [448, 470], "000000": 470, "0006605439999702867": 451, "001": [47, 384, 455, 488], "005": [436, 437, 438, 440, 441], "01": [178, 443, 444, 449, 452, 467, 468, 474], "017256": 441, "019242": 459, "019958": 468, "02": 474, "021": [284, 390], "03213": [284, 390], "032850": 466, "035379": 468, "035451": 466, "040533": 459, "043234": 466, "05": 474, "053246": 467, "057": [436, 437, 438, 440, 441, 451], "06": [222, 296, 455], "062419": 459, "065431": 468, "071294": 466, "08": 474, "080204": 468, "094946": 466, "095877": 468, "098517": 459, "0f": 452, "0min": [437, 438, 446, 447, 452, 456, 458, 471], "1": [9, 12, 15, 18, 28, 34, 47, 111, 127, 147, 158, 189, 199, 214, 250, 252, 254, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 311, 321, 322, 329, 330, 342, 343, 356, 368, 377, 385, 387, 391, 412, 420, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 480, 484, 486, 487, 488, 493, 495, 496, 498, 500, 502, 503, 504], "10": [9, 12, 15, 18, 199, 252, 284, 390, 435, 437, 446, 447, 448, 452, 455, 456, 458, 459, 461, 463, 464, 466, 470, 471, 472, 474, 476, 479, 486, 487, 492, 493, 498, 500, 502, 504], "100": [127, 308, 440, 441, 446, 447, 448, 449, 452, 455, 456, 458, 459, 463, 464, 470, 474, 491, 492, 493, 498, 502, 504], "1000": [464, 476, 498], "102": 467, "1024": [152, 481, 493], "103442": 466, "1038": [284, 390], "1039": 479, "105": [436, 437, 438, 440, 441, 451, 495], "107180": 468, "109": [446, 448, 449], "11": [349, 458, 480, 486], "111": [467, 470], "111195": 459, "1147": 448, "1148": 448, "1149": 448, "1150": [127, 308, 448], "117": 468, "12": [458, 459, 467, 468, 486, 487, 495], "120": [436, 437, 438, 440, 441, 446, 448, 451, 493], "120000": 467, "122": [456, 470], "126": 480, "1268824": [436, 437, 438], "128": 11, "128686": 466, "129": 377, "13": [458, 459, 482, 495], "130002": 463, "130680": 466, "131047": 459, "1337": [452, 453, 476, 497, 504], "135": 377, "14": [458, 459, 479, 495, 500], "140649": 459, "140897": 459, "1454": 481, "146": 468, "15": [252, 448, 458, 459, 474, 479, 487, 495], "150": [446, 449, 488], "1500": 493, "151": 448, "153": [436, 437, 438, 440, 441, 451], "1550": 476, "1551": 476, "16": [127, 308, 396, 412, 458, 468, 470], "166": 470, "166231": 466, "17": [458, 459], "172328": 459, "174396": 459, "177": 470, "178": 467, "179733": 466, "18": [458, 459, 487], "180": 446, "188": 470, "19": [458, 459], "190483": 459, "1913": [127, 308], "1914": [127, 308], "192": 448, "192100": 468, "1963": 377, "1991": 479, "1e": [222, 296, 455], "1l": [127, 308], "2": [8, 9, 12, 15, 18, 24, 111, 113, 127, 252, 308, 329, 342, 343, 356, 377, 391, 420, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 484, 486, 487, 488, 491, 493, 495, 496, 498, 500, 502, 503], "20": [9, 12, 15, 18, 158, 252, 435, 436, 437, 438, 452, 453, 458, 459, 463, 471, 476, 481, 493, 501, 502, 504], "200": [127, 308, 437, 446, 448, 455, 456, 461, 470], "2000": [455, 479], "2004": 484, "2007": 501, "2009": 377, "2021": 437, "2022": 479, "2025": 479, "205518": 466, "20l": [127, 308], "21": [458, 459], "22": [9, 12, 15, 18, 458, 470, 487], "221": 481, "222": 470, "222222": [456, 470], "23": [458, 459, 487, 498], "230": 441, "230553": 466, "2324": [127, 308], "2325": [127, 308], "233782": 459, "234325": 459, "2382": [127, 308], "239": 467, "24": [447, 458, 459, 495], "241": 493, "248260": 459, "25": [452, 458, 459, 463, 471, 495], "250": 485, "252268": 459, "255": 441, "259": 440, "26": [458, 459, 468, 495], "262979": 459, "27": [458, 459, 495], "275443": 468, "278727": 459, "28": 458, "283602": 459, "29": [458, 479], "3": [127, 252, 308, 321, 342, 343, 349, 356, 391, 396, 436, 437, 438, 441, 444, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 474, 479, 480, 482, 484, 486, 487, 488, 491, 493, 495, 496, 498, 500, 501, 502], "30": [435, 449, 453, 458, 459, 493], "300": [377, 455], "3013444576157469": 461, "302674": 466, "304": 441, "3078f3": 481, "31": [458, 459], "32": [447, 458, 459, 487, 493], "323": 440, "33": [127, 308, 447, 458], "3305119639990869": 461, "331": 456, "3336": 377, "3341": 377, "336665": 468, "34": [440, 447, 487], "3420": [127, 308], "349272": 466, "35": [447, 458, 463], "352237": 466, "353371": 459, "36": 377, "37": 500, "370063": 466, "3741": [127, 308], "374679": 459, "374739": 459, "376050": 467, "38": 487, "39": 493, "399415": 466, "3d": 453, "4": [9, 12, 15, 18, 152, 342, 343, 377, 396, 437, 438, 443, 444, 446, 447, 448, 449, 453, 458, 459, 461, 466, 467, 468, 479, 484, 486, 487, 488, 493, 495, 502], "40": [458, 493], "40x": 481, "41": 459, "42": [461, 464, 487, 497, 500], "431005": 459, "443451": 459, "4443": [127, 308], "447": 446, "448": 446, "449": 446, "45": [458, 459], "450": 446, "459818": 440, "46": 459, "462438": 459, "468": 481, "47": 500, "472628": 466, "477481": 459, "48": [459, 463], "483985": 459, "49": 440, "496171": 459, "4ccccc4": [437, 438], "4d": [127, 308], "4x": 481, "5": [111, 158, 329, 342, 343, 436, 438, 443, 446, 447, 448, 449, 452, 455, 456, 458, 459, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 484, 485, 486, 487, 488, 493, 495, 496, 498, 500, 501, 502, 504], "50": [449, 456, 458, 461, 463, 474, 484, 485, 492, 493, 495], "500": [453, 493], "503841": 459, "506007": 466, "510043": 459, "510278": 441, "5112": [127, 308], "5113": [127, 308], "512878": 459, "513415": 466, "515296": 459, "522812": 459, "5313": 362, "534024": 466, "54": [459, 479, 487], "544601": 459, "548887": 459, "55": [459, 463], "552876": 463, "555586": 459, "555608": 459, "5593": [127, 308], "56": [487, 498], "562261": 466, "564030": 459, "568504": 463, "578126": 459, "582160": 459, "584037": 441, "584136": 466, "59": [479, 487], "590": 437, "591145": 459, "595117": 459, "599539": 466, "5l": [127, 308], "6": [329, 342, 343, 396, 436, 437, 438, 447, 449, 458, 459, 461, 466, 468, 484, 488, 495], "60": [463, 476], "601695": 466, "606403": 459, "608451": 466, "6122": [127, 308], "615049": 466, "62": [459, 487], "635123": 466, "637295": 468, "638851": 459, "64": [199, 246], "646783": 466, "65": [461, 463], "653773": 466, "653918": 463, "666667": 470, "669412": 459, "67": 459, "68": 459, "687040": 459, "69": [436, 437, 438, 470], "699899": 459, "7": [158, 321, 342, 343, 390, 447, 449, 453, 458, 459, 464, 466, 471, 484, 486, 487, 493, 495], "70": 458, "706667": 467, "709048": 459, "71": 493, "711404": 459, "713002": 459, "717252": 459, "718997": 459, "72": 487, "722834": 459, "727299": 466, "73": 441, "734389": 459, "738774": 459, "745": 504, "75": [458, 495], "753765": 466, "762971": 459, "768990": 459, "774099": 466, "778": 470, "783106": 459, "79": 479, "793644": 459, "794871": 468, "7gz": 493, "7hf": 493, "8": [343, 377, 436, 438, 446, 448, 449, 458, 459, 461, 463, 466, 468, 476, 479, 484, 486, 488], "80": [459, 470, 488], "804415": 463, "804807": 466, "806002": 459, "82": 468, "821351": 459, "826127": 459, "826561": 466, "827870": 463, "83": 487, "833806": 466, "834309": 440, "8389": 362, "8417": 362, "849342": 466, "852054": 459, "857": 448, "857350": 459, "857876": 459, "861": 449, "862": 449, "863": 449, "864": 449, "865397": 459, "87": [463, 470, 487], "873378": 459, "877529": 459, "88": 470, "884077": 466, "885130": 459, "8859": 455, "888722": 459, "889": 470, "89": [437, 467, 470], "8jq": 493, "9": [9, 12, 15, 18, 449, 453, 455, 458, 459, 466, 484, 486, 487, 492, 495, 500, 502], "90": [436, 437, 438, 440, 441, 451, 470, 495], "900679": 459, "904170": 459, "91": 487, "911418": 468, "918398": 459, "921733": 459, "927176": 459, "934146": 459, "934194": 466, "943845": 459, "944060": 466, "953180": 459, "96": 437, "98": [441, 461], "983517": 459, "990066": 459, "997296": 459, "999": 488, "A": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 75, 77, 81, 83, 84, 85, 86, 89, 92, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 223, 224, 240, 241, 250, 252, 254, 256, 259, 261, 263, 266, 268, 272, 274, 275, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 348, 349, 354, 355, 356, 359, 371, 377, 390, 391, 393, 394, 402, 405, 407, 408, 409, 418, 420, 423, 435, 447, 456, 458, 459, 461, 471, 472, 476, 478, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502], "AND": [56, 448, 484, 488], "AS": [479, 484], "And": [127, 308, 455], "As": [436, 437, 438, 453, 461, 474, 479, 480, 481, 486, 487, 488, 491, 494, 495, 498, 503], "At": 497, "By": [99, 129, 161, 222, 330, 367, 391, 459, 481, 482, 486, 487, 490, 491, 492, 494, 495], "FOR": 484, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 250, 256, 259, 261, 263, 264, 266, 268, 272, 275, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 361, 364, 392, 398, 402, 408, 409, 420, 423, 436, 437, 438, 440, 441, 447, 451, 452, 453, 458, 459, 461, 463, 468, 474, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 197, 199, 210, 214, 216, 222, 228, 229, 240, 250, 252, 254, 256, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 343, 354, 355, 359, 361, 364, 366, 368, 371, 377, 379, 381, 384, 385, 387, 390, 391, 392, 393, 394, 402, 408, 409, 410, 420, 421, 430, 431, 432, 433, 441, 443, 452, 458, 463, 467, 468, 471, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 497, 498, 500, 501, 502, 504], "In": [34, 48, 59, 127, 160, 199, 216, 248, 250, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 359, 396, 436, 437, 438, 440, 452, 453, 455, 458, 459, 461, 464, 467, 468, 471, 476, 478, 479, 480, 482, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504], "It": [28, 127, 181, 188, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 248, 267, 288, 308, 377, 436, 440, 441, 447, 456, 458, 461, 468, 470, 471, 472, 476, 481, 486, 487, 488, 493, 494, 495, 498, 500, 502, 504], "Its": [127, 252, 308, 455], "No": [392, 436, 437, 452, 466, 478, 481], "Not": [377, 484, 488], "OF": [479, 484], "OR": [479, 484], "Of": [441, 450, 477, 496], "On": [377, 455, 461], "One": [149, 436, 438, 464, 479, 500], "Such": [441, 488, 491, 498], "That": [47, 216, 252, 259, 261, 263, 268, 272, 286, 288, 290, 292, 441, 446, 458, 482, 495, 498, 501], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 70, 99, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 168, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 235, 240, 245, 246, 248, 250, 252, 254, 259, 261, 263, 264, 266, 268, 272, 275, 286, 288, 290, 292, 294, 296, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 342, 343, 348, 349, 354, 355, 356, 359, 361, 364, 366, 367, 368, 371, 377, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 405, 408, 409, 410, 413, 414, 416, 417, 420, 421, 428, 431, 432, 433, 436, 437, 438, 441, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 463, 467, 468, 472, 474, 478, 480, 481, 482, 484, 486, 487, 488, 491, 492, 493, 494, 495, 497, 499, 500, 502, 503, 504], "Then": [453, 502], "There": [88, 296, 412, 458, 466, 479, 480, 482, 486, 490, 495, 499], "These": [434, 437, 438, 439, 442, 445, 450, 454, 457, 460, 462, 465, 469, 473, 475, 479, 482, 486, 488, 493, 495, 497], "To": [127, 308, 436, 441, 452, 453, 459, 461, 463, 464, 470, 474, 476, 479, 480, 482, 486, 487, 488, 490, 492, 493, 497, 498, 499, 502], "Will": 485, "With": [452, 453, 458, 461, 464, 474, 479, 486, 488, 492, 493, 496], "_": [137, 166, 167, 219, 225, 233, 443, 452, 453, 474], "__": [137, 377], "________________________________________________________________________________": [437, 438, 446, 447, 452, 456, 458, 471], "_________________________________molecule_to_fingerprint_featur": [437, 438, 446, 447, 452, 456, 458, 471], "__call__": [127, 308], "__class__": [451, 461], "__excepthook__": 480, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 259, 261, 263, 264, 266, 268, 272, 274, 275, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 349, 377, 401, 402, 408, 409, 423, 495, 496], "__name__": [451, 461], "__new__": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 149, 150, 152, 401], "__str__": 481, "__version__": 481, "_amount": 458, "_ardregressionparam": 286, "_arraylik": 386, "_buffer": [9, 12, 15, 18, 162, 414], "_c": 355, "_cumbest": 250, "_default_my_attribut": 482, "_discretelabellikeparamet": [144, 147, 158], "_enforce_modern_interfac": 311, "_expectedhypervolumeimprov": [9, 12, 15, 18], "_fit": 300, "_iterbest": 250, "_label": 458, "_measur": 250, "_molecule_to_fingerprint_featur": [437, 438, 446, 447, 452, 456, 458, 471], "_n_last_measur": [186, 187, 188], "_nbase": 373, "_nestedsequ": [9, 12, 15, 18, 162, 414], "_ngbregressorparam": 290, "_option": 481, "_posterior": 300, "_posterior_comp": 481, "_previous_random_st": 246, "_previous_set": 246, "_randomforestregressorparam": 292, "_restore_default": 246, "_restore_environ": 246, "_slottedcontextdecor": 245, "_supportsarrai": [9, 12, 15, 18, 162, 414], "_surrogategett": 266, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 227, 236, 237, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 356, 357, 358, 380, 393, 402, 408, 409], "_target": 481, "_tmetadata": 410, "_tparamet": 161, "_tsurrog": [295, 296], "_u": 356, "_use_fpsampl": 246, "_use_polars_for_constraint": 246, "_validate_my_attribut": 482, "a1": 343, "a2": 343, "ab": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 449, 458, 481, 500, 502], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 353, 360, 481, 503], "abc": [26, 37, 38, 39, 40, 41, 43, 106, 107, 108, 124, 141, 142, 170, 184, 194, 197, 202, 207, 261, 263, 303, 317, 318, 367], "abil": [476, 485, 486, 490, 501], "abl": [453, 480, 486, 488, 491, 493, 496, 504], "about": [8, 28, 34, 142, 158, 303, 436, 437, 438, 458, 467, 468, 479, 481, 482, 487, 491, 493, 495, 499, 500], "abov": [127, 296, 308, 367, 390, 435, 441, 448, 449, 451, 452, 459, 466, 479, 482, 484, 485, 486, 487, 488, 490, 493, 496, 497, 498, 499, 500, 501, 502], "absenc": 492, "absolut": [47, 155, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 385, 502, 503], "absolutetransform": 502, "abstract": [26, 37, 38, 39, 40, 41, 43, 106, 107, 108, 124, 140, 141, 142, 170, 184, 194, 197, 202, 263, 303, 317, 318, 354, 355, 367, 481, 488, 501], "abstractli": 461, "acceler": [479, 481, 483, 501], "accept": [34, 124, 127, 129, 133, 135, 187, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 386, 452, 453, 476, 481, 484, 492, 493, 498, 500, 502], "access": [127, 214, 222, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 436, 437, 438, 446, 451, 474, 481, 486, 488, 492, 493, 496], "accord": [47, 182, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 459, 476, 485, 488, 494, 504], "accordingli": [199, 428, 487, 490, 492, 496], "account": [481, 486], "accumul": [172, 461, 501], "accur": [377, 487], "acet": [436, 437, 438, 440, 441], "aceton": 458, "achiev": [23, 127, 222, 308, 453, 458, 461, 463, 464, 476, 479, 482, 485, 487, 488, 490, 492, 499, 500, 502], "ack": 479, "acq_funct": 441, "acq_valu": 487, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 452, 453, 461], "acqf1": 496, "acqf2": 496, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 72, 84, 197, 199, 446, 447, 448, 449, 452, 453, 461, 470, 479, 481, 485, 492, 494, 496, 499, 503], "acquisition_funct": [34, 197, 199, 441, 452, 453, 461, 471, 472, 481], "acquisition_function_cl": 481, "acquisition_valu": [34, 197, 199, 452, 453, 481, 487], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 32, 34, 197, 199, 461, 481, 496], "across": [348, 458, 461, 486, 494, 501], "act": [458, 481, 484, 488, 498], "action": [23, 451, 461, 478, 481, 503], "activ": [17, 37, 160, 189, 199, 210, 245, 452, 453, 461, 479, 480, 481, 482, 488, 490, 491, 494, 500, 501, 503, 504], "activate_paramet": 481, "active_dim": [106, 107, 108, 111, 113, 115, 116, 117], "active_set": [453, 461, 464, 476, 497], "active_valu": [141, 144, 145, 147, 155, 158, 474, 481, 490, 493, 501], "actual": [187, 216, 248, 467, 481, 491, 495, 498, 501, 504], "ad": [34, 127, 222, 308, 333, 342, 377, 383, 420, 458, 459, 478, 482, 485, 490, 499, 500, 503], "adapt": [188, 284, 368, 390, 497], "add": [34, 127, 232, 238, 252, 308, 383, 384, 441, 455, 456, 458, 476, 479, 484, 486, 487, 488, 491, 495, 501, 502, 504], "add_collection3d": 453, "add_fake_measur": [387, 440, 441, 446, 447, 448, 449, 455, 456, 481, 486, 498, 504], "add_fake_result": 481, "add_measur": [34, 387, 440, 441, 443, 444, 446, 447, 448, 449, 453, 455, 456, 461, 463, 464, 467, 468, 479, 481, 486, 487, 490], "add_modul": [127, 308], "add_noise_to_perturb_degenerate_row": 481, "add_parameter_nois": [387, 481, 504], "add_subplot": 453, "addendum": 484, "addit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 199, 214, 216, 222, 240, 250, 252, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 377, 385, 387, 402, 408, 409, 436, 437, 438, 459, 467, 474, 479, 481, 483, 484, 487, 488, 491, 492, 493, 495, 496, 497, 498, 500, 501, 503, 504], "addition": [451, 459, 479, 491], "additiveexplain": [97, 100], "additivekernel": 481, "additivetransform": 502, "address": 498, "adher": [481, 482], "adjust": [160, 188, 428, 437, 441, 467, 481, 490, 492, 497], "administ": 503, "adopt": 441, "adrian": [479, 483], "advanc": [188, 461, 463, 480, 481, 492, 496, 501, 503], "advantag": [458, 482], "advic": 482, "advis": [484, 498], "affect": [34, 55, 65, 67, 127, 199, 214, 308, 322, 342, 451, 470, 476, 478, 480, 488, 497, 502], "affected_paramet": [55, 446, 447, 448, 449, 458, 488], "affili": 479, "affin": [308, 311, 321, 331, 337, 338, 463, 502], "affineposteriortransform": [321, 326], "affinet": 321, "affinetransform": [500, 503], "afford": 487, "aforement": 216, "after": [127, 189, 308, 361, 440, 441, 446, 447, 448, 449, 453, 470, 476, 479, 481, 487, 491, 492, 493, 496, 503], "afterward": 496, "again": [452, 486, 487, 488, 501], "against": [93, 127, 308, 359, 428, 431, 458, 484, 490, 501], "agent": 459, "aggreg": 492, "agraw": 483, "agre": [479, 484, 491], "agreement": 484, "ai": [104, 168, 412], "aim": [486, 487, 491], "akin": 486, "al": [437, 479, 493], "aldrich": 483, "alex": 483, "alexand": [479, 483], "algebra": 476, "algorithm": [192, 199, 377, 418, 420, 435, 458, 476, 479, 481, 486, 491, 494], "alia": [127, 157, 262, 308, 400, 407, 493], "alias": 481, "align": [160, 214, 361, 452, 476, 492, 495, 500, 501], "all": [25, 26, 36, 38, 43, 47, 55, 57, 63, 65, 99, 105, 106, 107, 108, 123, 124, 127, 129, 139, 142, 147, 151, 158, 169, 170, 180, 183, 184, 187, 193, 194, 196, 199, 201, 202, 214, 216, 223, 224, 252, 259, 260, 263, 302, 303, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 358, 359, 377, 395, 428, 436, 437, 438, 441, 443, 444, 446, 447, 451, 452, 453, 458, 459, 461, 463, 466, 467, 474, 479, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 504], "allclos": [443, 444, 459], "alleg": 484, "alli": 476, "allow": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 298, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 348, 366, 392, 393, 402, 408, 409, 432, 433, 436, 437, 438, 441, 458, 459, 474, 479, 481, 485, 487, 488, 490, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504], "allow_": [481, 490], "allow_extra": [124, 129, 133, 135, 214, 216, 222, 227, 393, 398, 463, 481], "allow_miss": [124, 129, 133, 135, 214, 216, 222, 227, 393, 398, 481], "allow_recommending_already_measur": [34, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 461, 471, 472, 478, 481, 487], "allow_recommending_already_recommend": [34, 453, 461, 471, 472, 478, 481, 487], "allow_recommending_pending_experi": [34, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 481, 487], "allow_repeated_recommend": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 481], "almost": 437, "alon": [481, 484], "along": [127, 308, 484, 493, 501], "alongsid": [127, 308, 484], "alpha": [9, 12, 31, 172, 453, 464, 476], "alpha_1": 455, "alpha_2": 455, "alpha_init": 455, "alphabet": [163, 481], "alreadi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 458, 468, 479, 481, 485, 486, 487, 490, 495, 498, 499, 500, 501, 504], "also": [34, 47, 59, 99, 127, 161, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 359, 361, 384, 385, 436, 443, 444, 452, 453, 455, 456, 458, 463, 464, 467, 468, 470, 474, 476, 479, 481, 482, 485, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504], "alter": [458, 481, 487, 490], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 296, 377, 451, 458, 459, 466, 476, 479, 481, 490, 492, 499, 502, 503, 504], "although": [458, 468, 471, 495, 498, 500], "alwai": [17, 34, 43, 127, 233, 234, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 420, 455, 458, 459, 481, 482, 485, 487, 488, 497, 498, 500, 501, 502, 504], "always_cal": [127, 308], "ambigu": [155, 346, 347, 495], "amend": 488, "among": [37, 458, 479, 492, 501], "amount": [343, 421, 459, 474, 486, 488, 491, 493, 504], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 72, 73, 74, 76, 78, 79, 80, 84, 90, 93, 94, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 238, 240, 248, 250, 252, 254, 259, 261, 263, 266, 268, 269, 272, 275, 286, 288, 290, 292, 294, 295, 298, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 342, 346, 347, 350, 357, 359, 361, 364, 365, 366, 372, 377, 380, 381, 390, 391, 392, 394, 396, 400, 401, 402, 408, 409, 414, 421, 428, 430, 436, 438, 439, 441, 448, 449, 451, 452, 455, 456, 459, 463, 466, 470, 471, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502], "analog": [216, 488, 495, 496, 502], "analogi": [182, 494], "analys": 503, "analysi": [479, 491], "analyt": [3, 4, 7, 8, 84, 476, 486, 498, 501], "analyz": [479, 482, 491], "anchor": [311, 329, 486, 492, 500, 502], "angl": 453, "ani": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 90, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 162, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 232, 233, 234, 238, 240, 242, 243, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 342, 358, 359, 361, 362, 366, 367, 381, 387, 392, 394, 402, 403, 407, 408, 409, 410, 414, 425, 426, 427, 429, 433, 451, 458, 463, 474, 478, 479, 480, 481, 482, 484, 486, 487, 490, 493, 496, 497, 498, 500, 501, 502], "annot": [236, 361, 451, 484], "anoth": [55, 245, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 437, 447, 448, 455, 456, 458, 468, 482, 488, 501, 502], "ansatz": 481, "answer": 487, "anti": 391, "anymor": [481, 501], "anyth": 368, "anywai": 499, "anywher": 443, "apach": [479, 484], "apart": [482, 487], "api": [377, 479, 480, 481, 483, 496, 503], "aplei": 491, "appar": 496, "appdata": 480, "appear": [359, 480, 481, 484, 496], "append": [453, 474], "appendix": 484, "appli": [34, 43, 44, 45, 59, 127, 129, 199, 216, 248, 250, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 350, 351, 359, 372, 385, 387, 423, 441, 442, 445, 446, 448, 449, 451, 452, 458, 463, 476, 480, 481, 484, 488, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502], "applic": [377, 381, 479, 482, 484, 493, 494, 497, 498], "approach": [222, 452, 461, 463, 476, 479, 482, 485, 487, 490, 492, 494, 496, 497, 499, 501], "appropri": [50, 51, 222, 247, 461, 463, 482, 484, 490, 492, 495, 500], "approxim": [11, 23, 31, 488, 491], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 41, 43, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 71, 82, 86, 87, 88, 99, 124, 127, 129, 133, 135, 141, 144, 145, 147, 155, 158, 160, 161, 162, 167, 181, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 245, 250, 252, 254, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 311, 323, 329, 330, 342, 343, 354, 355, 356, 358, 359, 361, 367, 368, 377, 384, 386, 387, 388, 392, 393, 395, 420, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 456, 458, 459, 461, 463, 466, 467, 470, 471, 474, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504], "arang": [443, 453, 493], "arbitrari": [188, 216, 324, 350, 403, 481, 488, 493, 494, 498, 501, 502, 504], "arbitrarili": [492, 496], "architectur": [259, 261, 263, 268, 272, 286, 288, 290, 292, 300, 481, 499, 501], "ard_num_dim": [106, 107, 108, 111, 113, 115, 116, 117], "ardregress": 286, "area": 453, "arg": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 110, 112, 114, 119, 120, 121, 127, 170, 172, 173, 174, 175, 176, 177, 178, 181, 264, 269, 274, 308, 311, 401, 482], "argu": 458, "argument": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 94, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 197, 199, 214, 216, 222, 240, 259, 261, 263, 264, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 361, 377, 387, 391, 402, 408, 409, 441, 456, 481, 488, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502], "aris": [58, 458, 476, 481, 482, 484, 488, 496, 504], "arithmet": [131, 492], "arizona": 483, "arm": [258, 259, 477, 483], "arm_index": 461, "around": [9, 12, 15, 18, 47, 206, 254, 256, 463, 476, 481, 494, 496, 497, 500, 504], "arr": 464, "arrai": [9, 12, 15, 18, 162, 245, 345, 377, 386, 397, 414, 420, 453, 481, 494, 499], "arrays_to_datafram": [443, 444, 453, 464, 467, 468, 474, 481, 498], "arriv": [479, 490], "articl": 479, "artifici": 504, "aryl": [436, 437, 438, 440, 479, 493], "as_pre_transform": [129, 481, 486, 491, 492], "asarrai": 377, "ascend": 311, "ask": [458, 479, 481, 482, 487, 490], "aspect": [439, 443, 444, 468, 486, 500, 502], "aspir": 503, "assembl": [458, 496, 499], "assembli": [499, 503], "assert": [67, 137, 329, 392, 446, 447, 448, 449, 455, 456, 458, 459, 466, 470, 481, 484, 486, 487, 488, 496, 497, 499, 500, 502], "assert_frame_equ": 500, "assess": [481, 491, 498], "assign": [452, 459, 466, 492, 493, 500, 503], "associ": [127, 216, 308, 461, 481, 484, 487, 492, 501], "assum": [28, 48, 127, 267, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 361, 392, 393, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 455, 456, 458, 461, 467, 468, 470, 476, 479, 484, 486, 488, 490, 493, 496, 499, 500, 504], "assumpt": 498, "assur": 488, "asymmetr": [47, 502], "asynchron": [127, 308, 479, 487, 503], "atol": [443, 444], "atompair": 152, "atompairfingerprint": 152, "attach": [28, 361, 451, 452, 453, 484], "attempt": [83, 90, 127, 267, 308, 461, 480, 481, 486, 488, 491, 492, 494], "attent": 189, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 259, 261, 263, 266, 268, 272, 275, 282, 284, 286, 288, 290, 292, 298, 303, 305, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 359, 362, 402, 408, 409, 423, 429, 481], "attract": 476, "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 93, 96, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 156, 158, 161, 165, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 231, 244, 245, 247, 259, 260, 261, 263, 266, 268, 272, 275, 279, 282, 284, 286, 288, 290, 292, 297, 300, 303, 304, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 344, 347, 359, 364, 365, 380, 393, 399, 402, 406, 408, 409, 411, 419, 423, 424, 425, 426, 427, 429, 466, 481, 482, 484, 488, 494, 496, 497, 499], "attributeerror": [127, 308, 497], "audit": [481, 482], "augment": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 216, 294, 295, 296, 383, 481, 487], "author": [479, 484], "authorship": 484, "auto": [14, 15, 16, 18, 19, 246, 364, 481, 483, 502], "auto_tutori": 412, "autobool": [245, 246], "autocomplet": 500, "autocorr": 152, "autocorrfingerprint": 152, "autodoc": 481, "autograd": [127, 308], "automat": [34, 199, 272, 364, 435, 453, 467, 480, 481, 482, 488, 491, 492, 494, 495, 497, 499, 501, 503], "autowrap": 339, "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 77, 85, 131, 147, 149, 150, 152, 158, 187, 188, 210, 250, 252, 279, 419, 420, 421, 438, 440, 443, 444, 458, 463, 467, 468, 479, 480, 481, 482, 484, 486, 487, 491, 493, 494, 495, 496, 498, 500, 501, 502, 503], "available_acq_funct": 441, "avalon": 152, "avalonfingerprint": 152, "averag": [127, 288, 308, 452, 453, 463, 474, 493, 498], "avoid": [127, 216, 308, 362, 481, 482, 486, 487, 493, 495, 497, 500], "awai": [9, 12, 15, 18, 160], "awar": [458, 474, 481, 482, 485, 490, 496], "ax": [99, 435, 437, 452, 453, 464, 474, 476, 502], "ax2": 476, "axes3d": 453, "axhlin": 476, "axi": [214, 250, 435, 443, 444, 449, 452, 453, 458, 459, 461, 463, 464, 467, 468, 474, 476, 495], "ayesian": 479, "azim": 453, "azur": 481, "b": [47, 58, 178, 284, 342, 356, 390, 391, 437, 447, 456, 461, 471, 472, 478, 479, 482, 484, 487, 490, 493, 496, 502], "b1": 343, "b2": 343, "b950": [127, 308], "back": [0, 470, 478, 481, 482, 490, 497], "background": [99, 103, 481, 486, 491], "background_data": 99, "backport": 480, "backtest": [248, 249, 255, 438, 477, 479, 481, 494, 498], "backtick": 482, "backward": [124, 127, 129, 133, 135, 308, 481, 500], "backward_pr": [127, 308], "bad": [487, 500], "badg": 481, "bai": 479, "baird": 483, "balanc": [129, 461, 479], "banana": 482, "bandit": [259, 441, 477, 479, 481, 483], "banner": 481, "bar": [99, 101, 455, 456, 458, 470, 471, 472, 479, 481, 491, 499], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 185, 186, 187, 188, 189, 191, 194, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 221, 222, 236, 240, 245, 259, 261, 263, 264, 266, 267, 268, 272, 274, 275, 279, 282, 284, 286, 288, 290, 292, 296, 298, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 347, 349, 353, 354, 355, 364, 365, 377, 386, 391, 402, 408, 409, 419, 420, 423, 435, 440, 441, 452, 453, 455, 457, 461, 477, 479, 481, 484, 485, 487, 488, 491, 493, 494, 495, 496, 499, 500], "base1": 459, "base2": 459, "base_data": 452, "base_kernel": [119, 120, 121], "base_nam": [435, 437, 452, 453, 474], "base_predictor": 294, "base_smil": 452, "baseestim": 377, "basefingerprinttransform": 371, "baselin": [435, 437, 479, 493], "basesequentialmetarecommend": [187, 188], "basi": [115, 479, 484, 491], "basic": [106, 110, 111, 112, 113, 114, 115, 116, 117, 172, 173, 174, 175, 176, 177, 178, 250, 311, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 345, 347, 349, 409, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 467, 468, 469, 470, 473, 476, 477, 481, 482, 490, 492, 493, 498, 500, 503], "basic_transfer_learn": 474, "basickernel": [110, 111, 112, 113, 114, 115, 116, 117, 481], "basin": 476, "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 253, 294, 295, 441, 446, 447, 448, 449, 453, 467, 468, 470, 474, 481, 486, 490, 494, 498], "batch_quant": 481, "batch_shap": [106, 107, 108, 111, 113, 115, 116, 117, 127, 308], "batch_siz": [34, 47, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 250, 254, 256, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 459, 461, 463, 464, 467, 468, 470, 471, 474, 479, 481, 486, 487, 490, 498], "batchnorm": [127, 308], "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 240, 245, 259, 261, 263, 264, 266, 268, 272, 274, 275, 279, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 347, 349, 364, 365, 377, 402, 408, 409, 419, 423, 434, 435, 436, 437, 438, 439, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "baybe_": 497, "baybe_2025": 479, "baybe_cach": 246, "baybe_cache_dir": 481, "baybe_deactivate_polar": 481, "baybe_debug_fake_hosthash": 481, "baybe_debug_fake_userhash": 481, "baybe_float_precision_numpi": 481, "baybe_float_precision_torch": 481, "baybe_numpy_use_single_precis": 481, "baybe_parallel_simulation_run": 481, "baybe_parallelize_simul": 481, "baybe_preprocess_datafram": 497, "baybe_telemetry_endpoint": 481, "baybe_telemetry_host": 481, "baybe_telemetry_hostnam": 481, "baybe_telemetry_usernam": 481, "baybe_telemetry_vpn_check": 481, "baybe_telemetry_vpn_check_timeout": 481, "baybe_torch_use_single_precis": 481, "baybe_use_fpsampl": 481, "baybe_use_polar": 481, "bayesian": [0, 191, 197, 199, 248, 250, 254, 256, 267, 286, 461, 481, 485, 487, 491, 499, 503], "bayesian_recommend": 453, "bayesianlinearmodel": 456, "bayesianlinearsurrog": [441, 481, 499], "bayesianrecommend": [191, 199, 267, 481, 494], "bayesianridg": 455, "bcut2d": [152, 481], "bcut2dfingerprint": 152, "bcw07": 501, "becaus": [47, 88, 127, 155, 160, 216, 222, 256, 308, 367, 451, 452, 458, 463, 474, 476, 482, 485, 487, 488, 490, 491, 492, 493, 496, 498, 499, 500, 501, 502], "becom": [216, 458, 481, 485, 487, 488, 496, 497, 504], "been": [28, 34, 83, 84, 187, 259, 261, 263, 268, 272, 286, 288, 290, 292, 392, 436, 437, 479, 480, 481, 484, 486, 487, 489, 492, 494, 500, 501], "beeswarm": [99, 101, 491], "befor": [83, 127, 189, 245, 250, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 361, 435, 438, 441, 447, 452, 479, 481, 482, 490, 492, 493, 495, 497, 500], "begin": [187, 330, 446, 448, 466, 470, 476, 492, 494, 499, 502], "behalf": 484, "behav": [453, 470, 496], "behavior": [127, 160, 199, 246, 308, 479, 481, 492, 494, 495, 497, 500, 501, 502], "behind": [492, 496, 498, 499, 500, 502], "being": [9, 12, 15, 18, 121, 127, 308, 461, 480, 481, 488, 493, 495, 500, 502], "bell": [311, 322, 463, 502, 503], "bell_transform": 481, "belltransform": [311, 503], "belong": [250, 377, 451, 496], "below": [127, 189, 296, 308, 448, 451, 452, 458, 482, 484, 485, 487, 488, 496, 497, 499, 501, 502, 503], "benchmark": [436, 437, 452, 476, 479, 481, 483], "benefici": [484, 485, 500], "benefit": [488, 497, 501], "benzo": 501, "bernoulli": [259, 460, 477, 483], "besid": [479, 492], "best": [9, 12, 14, 15, 16, 18, 19, 250, 252, 254, 438, 461, 479, 481, 494], "bet": 487, "beta": [8, 24, 172, 259, 441, 481, 485], "betabernoullimultiarmedbanditsurrog": [441, 461, 481], "betaprior": [259, 481], "better": [11, 437, 476, 481, 487, 488, 490, 492, 493], "between": [9, 12, 15, 18, 37, 55, 127, 155, 188, 214, 222, 282, 308, 323, 330, 391, 451, 453, 458, 461, 464, 468, 474, 476, 479, 481, 482, 486, 487, 488, 492, 493, 494, 495, 496, 500, 501], "beyond": [160, 479, 491], "bfloat16": [127, 308], "bia": [127, 308], "bias": 493, "bimod": 476, "bin": 458, "binar": 481, "binari": [305, 314, 433, 470, 479, 480, 481, 496], "binarytarget": [306, 461, 481], "bind": [451, 453, 484], "bit": [481, 493], "black": [248, 476, 498, 501], "blackbox": [434, 435, 477], "blank": 482, "blob": 284, "block": [452, 458, 480, 481, 496, 502], "blue": [464, 476], "boacquisitionfunct": [197, 199], "bodi": 451, "bonilla": 501, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 227, 240, 245, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 306, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 354, 355, 359, 360, 364, 367, 368, 377, 381, 386, 391, 393, 394, 398, 402, 408, 409, 414, 420, 428, 432, 461], "boolean": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 364, 365, 393, 402, 408, 409, 481, 487, 492], "boost": [290, 474], "both": [9, 11, 12, 15, 18, 124, 127, 129, 133, 135, 160, 161, 222, 256, 308, 311, 330, 361, 435, 447, 452, 455, 458, 459, 461, 464, 474, 476, 479, 481, 482, 485, 487, 488, 491, 493, 495, 496, 499, 500, 503, 504], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 124, 127, 129, 133, 135, 191, 199, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 443, 444, 453, 468, 474, 481, 494], "botorch_acqf": 28, "botorch_function_wrapp": 481, "botorchrecommend": [191, 441, 446, 447, 448, 449, 452, 453, 455, 456, 461, 468, 470, 471, 472, 479, 481, 486, 487, 488, 490, 494], "bottom": 487, "bound": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 227, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 295, 296, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 355, 361, 393, 402, 408, 409, 410, 420, 435, 441, 443, 444, 453, 459, 464, 466, 467, 468, 474, 476, 481, 493, 496, 500, 502, 503, 504], "boundari": [47, 222], "boundary_onli": [222, 458], "bounded": 481, "bounds_transform_func": 481, "box": [178, 248, 476, 498, 501], "boxdecomposit": 31, "brain": [498, 501], "branch": [479, 482], "brandenburg": 479, "break": [127, 267, 308, 496, 503], "brettpho": [436, 437, 438, 440, 441], "breviti": 500, "briefli": [498, 501], "bring": [479, 481, 502], "bro": 284, "broad": 496, "broadcast": 162, "brute": [199, 494], "bu": [436, 437, 438, 440, 441], "bucket": 458, "budget": 487, "buf": [127, 308], "buffer": [127, 308], "bug": [481, 482, 497], "build": [127, 214, 222, 267, 308, 377, 452, 458, 476, 480, 481, 482, 488, 491, 496, 499, 501, 502, 503, 504], "built": [222, 455, 463, 479, 482, 487, 494, 499, 500, 502], "builtin": 349, "bump": 481, "busi": 476, "button": 481, "butyl": [436, 437, 438, 440, 441], "butylphenylphosphin": [436, 437, 438, 440, 441], "butyornitril": [436, 437, 438, 440, 441], "bypass": [161, 452, 492, 499], "byte": [9, 12, 15, 18, 162, 221, 268, 405, 414, 481, 504], "c": [58, 342, 356, 377, 436, 437, 438, 440, 441, 446, 447, 448, 449, 452, 456, 458, 471, 472, 479, 480, 484, 487, 490, 493, 495, 496, 502], "c1": [436, 437, 438, 440, 441, 446, 447, 448, 449, 452, 493], "c1c2": [436, 437, 438, 440, 441], "c1ccccc1": [436, 437, 438, 446, 448], "c1ccoc1": 488, "c2": [436, 437, 438, 440, 441, 446, 448, 449], "c2ccccc2": [436, 437, 438], "c2oc": [436, 437, 438, 440, 441], "c2p": [436, 437, 438, 440, 441], "c3": [436, 437, 438, 440, 441, 446, 448], "c3c": [436, 437, 438], "c3ccccc3": [436, 437, 438, 440, 441], "c4": [436, 437, 438, 446, 448, 452], "c4ccccc4": [436, 437, 438, 440, 441], "c5": [446, 448], "c6": [446, 448], "c_": [464, 502], "c_1": 330, "c_2": 330, "c_g2_min": 459, "c_g3_max": 459, "c_i": 488, "c_total_sum": 459, "cach": [34, 245, 348, 481, 496, 503], "cache_campaign_recommend": [245, 246], "cache_directori": [245, 246], "calcul": [34, 250, 377, 443, 453, 481, 487, 491, 493, 495], "calibr": [321, 501], "call": [48, 94, 127, 184, 186, 187, 188, 189, 236, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 308, 361, 365, 386, 436, 437, 438, 446, 447, 451, 452, 456, 458, 459, 471, 472, 479, 480, 481, 485, 487, 488, 493, 496, 497, 498, 499, 500, 501, 502, 503], "callabl": [54, 73, 93, 127, 161, 232, 248, 250, 252, 254, 256, 294, 295, 298, 300, 308, 324, 339, 348, 349, 350, 351, 357, 359, 361, 364, 365, 377, 386, 435, 451, 464, 476, 481, 497, 502, 503], "callable_": [359, 365], "caller": [127, 308], "campaign": [99, 245, 250, 253, 254, 256, 385, 387, 439, 440, 448, 450, 453, 461, 463, 472, 474, 476, 477, 478, 479, 481, 485, 486, 488, 490, 491, 492, 493, 495, 496, 498, 499, 501, 503, 504], "campaign1": 498, "campaign2": 498, "campaign_json": 487, "campaign_oh": 437, "campaign_par": 464, "campaign_rand": [436, 437, 438], "campaign_recr": 470, "campaign_stop": 452, "campaign_with_hook": 452, "campaign_y0": 464, "campaign_y1": 464, "campaignstoppedexcept": 452, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 192, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 240, 248, 250, 252, 259, 261, 263, 264, 266, 267, 268, 272, 275, 286, 288, 290, 292, 296, 303, 305, 306, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 359, 361, 364, 367, 377, 385, 386, 400, 402, 407, 408, 409, 412, 435, 436, 437, 438, 441, 442, 445, 446, 447, 448, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 471, 474, 476, 479, 480, 481, 482, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "canada": 483, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 197, 199, 207, 210, 214, 222, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 420, 452, 453, 474, 481, 485, 488, 494, 495, 503], "cannot": [17, 92, 93, 160, 267, 268, 296, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 364, 365, 368, 461, 481, 484, 486, 488, 493, 494, 496, 499, 500, 501], "canon": [370, 496], "capabl": [434, 460, 462, 469, 473, 474, 476, 481, 483, 487, 492, 499, 501], "captur": [476, 493], "cardin": [37, 47, 53, 63, 65, 66, 67, 82, 199, 214, 479, 481, 483, 488], "cardinalityconstraint": [47, 53, 481], "care": [458, 463, 482, 488, 491, 499], "carlo": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 84, 127, 254, 435, 437, 438, 452, 461, 474, 476, 481, 486, 498], "carri": [361, 451, 484, 492], "cartesian": [216, 222, 223, 224, 479, 481, 490, 495], "case": [160, 188, 256, 296, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 361, 377, 396, 452, 457, 458, 463, 467, 468, 471, 479, 480, 481, 482, 485, 486, 487, 488, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 504], "cast": [48, 127, 308, 481], "cat": 391, "catch": 455, "catch_constant_target": 481, "categor": [34, 144, 145, 149, 222, 229, 392, 479, 481, 493, 495, 500], "categori": [437, 452, 479, 481, 496, 500], "categorical_1": 487, "categorical_2": 487, "categorical_paramet": 496, "categorical_parameter_json": 496, "categorical_parameter_reconstruct": 496, "categoricalencod": [144, 145, 446, 447, 448, 449, 470], "categoricalparamet": [145, 222, 437, 446, 447, 448, 449, 456, 461, 470, 471, 472, 479, 481, 490, 491, 495, 496, 503], "cattr": [235, 299, 472, 480, 481, 482], "cauchi": 174, "caus": [155, 342, 349, 481, 484], "caution": 501, "caviti": 476, "cc": [436, 437, 438, 440, 441, 446, 448, 449, 452, 458, 493, 496], "cc1": [436, 437, 438, 440, 441, 493], "ccc": [446, 448, 456, 479], "cccc": [436, 437, 438, 440, 441, 446, 448], "ccccc": [446, 448, 471, 472], "cccccc": [446, 448], "cccccccco": [488, 493], "ccccoc": [436, 437, 438, 440, 441], "cco": 458, "ccoccoccn": [471, 472], "cdot": [488, 492, 502], "cdoubl": [127, 308], "ceil": 452, "cell": [455, 493, 498, 501], "cell_lin": 501, "center": [322, 329, 330, 377, 402, 463, 464, 487, 502], "center_y0": 464, "center_y1": 464, "central": [481, 487, 503], "certain": [34, 55, 93, 127, 189, 248, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 358, 447, 452, 461, 463, 479, 481, 482, 488, 490, 491, 494, 496, 500, 501, 504], "cesium": [436, 437, 438, 440, 441], "chai": 501, "chain": [41, 127, 184, 186, 187, 188, 189, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 349, 488, 500, 503], "chain1": 502, "chain2": 502, "chain3": 502, "chain4": 502, "chainedtransform": 502, "challeng": [482, 496], "chanc": 480, "chang": [55, 127, 187, 308, 384, 385, 441, 458, 463, 467, 479, 480, 482, 484, 487, 491, 492, 493, 495, 500, 501, 503], "changelog": 503, "channel": 476, "channels_last": [127, 308], "charact": 484, "character": 476, "characterist": [349, 476], "charg": 484, "chebyshev": 14, "check": [34, 63, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 308, 358, 360, 363, 366, 367, 368, 377, 392, 394, 395, 402, 408, 409, 413, 428, 463, 467, 468, 470, 479, 481, 482, 491, 495, 496, 500], "check_maximum": 63, "check_minimum": 63, "checker": 481, "checkout": 482, "chem": [479, 481, 493], "chemic": [372, 437, 440, 458, 481, 483, 488, 491, 493, 501], "cheminformat": [158, 479, 481], "chemistri": [147, 437, 438, 446, 447, 448, 449, 452, 456, 458, 471], "child": [127, 204, 205, 206, 207, 308, 482], "children": [127, 308], "chocol": 482, "choic": [250, 252, 420, 451, 458, 461, 463, 468, 481, 488, 490, 492, 493, 494, 495, 496], "choos": [182, 458, 459, 461, 466, 467, 468, 478, 479, 484, 485, 487, 494, 499], "chose": [467, 496], "chosen": [80, 191, 250, 252, 256, 416, 417, 420, 441, 461, 481, 485, 488, 492, 493, 495, 500], "christoph": 501, "chung": 483, "ci": [444, 474, 481, 482], "circ": 502, "circular": 493, "circumv": [480, 496], "cite": 479, "cl": [233, 237, 247, 296, 354, 355, 360, 367, 403, 410], "claim": 484, "clamp": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 463, 481, 492, 500, 502], "clampingtransform": 503, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 92, 96, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 236, 239, 240, 244, 245, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 300, 302, 303, 304, 305, 307, 308, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 344, 345, 347, 349, 353, 354, 355, 360, 363, 364, 365, 367, 371, 376, 377, 381, 399, 402, 406, 408, 409, 418, 419, 422, 423, 441, 451, 452, 455, 461, 471, 481, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502], "classic": [461, 492], "classifi": 493, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 349, 364, 365, 402, 408, 409, 481], "classvalidationerror": [472, 480], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 259, 261, 263, 268, 272, 286, 288, 290, 292], "clean": [388, 389, 390, 480, 481, 482], "clear": [34, 127, 308, 412, 501], "clear_cach": 34, "click": [461, 493], "clipboard": 455, "clone": 482, "close": [250, 256, 435, 452, 474, 476, 498], "closer": [9, 12, 15, 18, 413, 493], "closest": [377, 414, 455], "closest_el": 481, "closur": [248, 498], "cluster": [204, 205, 206, 207, 374, 375, 376, 377, 441, 476, 481, 483, 503], "cluster_centers_": 377, "clustering_algorithm": 377, "clustering_x": 481, "clustermixin": 377, "cmap": 453, "cn": [436, 437, 438, 440, 441], "co": 458, "co1": [436, 437, 438], "co2": [436, 437, 438], "co3": [436, 437, 438], "coars": [456, 470, 471, 472, 479], "coc": [456, 471, 472, 479], "cococ": [471, 472], "code": [267, 437, 456, 461, 467, 471, 472, 476, 479, 480, 481, 484, 488, 493, 497, 498, 500, 501, 503, 504], "codomain": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "coeffici": [48, 50, 51, 443, 444, 459, 488], "coerc": 481, "collect": [34, 65, 66, 67, 109, 119, 120, 137, 161, 163, 171, 187, 189, 214, 222, 228, 229, 241, 252, 266, 340, 342, 344, 358, 359, 374, 375, 393, 394, 418, 420, 435, 441, 453, 458, 461, 463, 464, 474, 481, 487], "color": [453, 455, 464, 476], "column": [43, 44, 45, 99, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 250, 252, 254, 256, 342, 343, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 423, 428, 432, 433, 437, 440, 446, 447, 448, 449, 452, 458, 464, 470, 474, 476, 481, 487, 495, 496, 498], "column_group": 343, "com": [284, 362, 390, 479, 481], "comb": 458, "combin": [47, 56, 161, 199, 214, 216, 222, 223, 224, 314, 337, 338, 349, 372, 430, 436, 437, 438, 446, 448, 451, 452, 458, 479, 480, 484, 488, 490, 491, 492, 493, 494, 495, 498, 500, 501, 502, 504], "combinatori": [199, 504], "come": [9, 12, 15, 18, 461, 479, 487, 488, 491, 496, 500, 501, 502, 504], "command": 480, "comment": 481, "commerci": 484, "commit": [479, 481, 482], "common": [171, 455, 459, 481, 482, 484, 486, 487, 488, 493, 496, 500, 502], "commonli": [492, 503], "commun": [484, 492, 501], "comp_df": [141, 144, 145, 147, 155, 158, 481], "comp_rep": [222, 455, 481, 495], "comp_rep_bound": [214, 216, 222, 481], "comp_rep_byt": [221, 504], "comp_rep_column": [140, 141, 142, 144, 145, 147, 154, 155, 158, 214, 216, 222, 481], "comp_rep_human_read": [221, 504], "comp_rep_shap": [221, 504], "compar": [161, 187, 435, 458, 459, 461, 464, 479, 481, 482, 488, 490, 493], "comparison": [127, 308, 452, 464, 474, 494, 496, 500, 502], "compat": [124, 127, 129, 133, 135, 137, 161, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 217, 252, 259, 261, 263, 268, 272, 286, 288, 290, 292, 298, 308, 361, 393, 429, 441, 446, 447, 448, 449, 451, 453, 470, 481, 494, 497, 499, 500], "compens": 481, "compil": [127, 308, 480, 484], "complain": 482, "complaint": 482, "complement": [34, 391, 490], "complementari": 47, "complet": [77, 431, 453, 458, 486, 488, 490, 496], "complex": [9, 12, 15, 18, 127, 162, 308, 377, 414, 458, 470, 474, 476, 482, 485, 486, 488, 490, 498, 500, 501, 502], "complex128": [127, 308], "compli": [484, 488], "complianc": 479, "complic": [458, 500, 501], "compon": [71, 377, 458, 459, 482, 485, 487, 488, 490, 496, 499, 501, 503], "compos": [118, 127, 266, 308, 334, 351, 476, 481, 496, 502], "composit": [107, 119, 120, 121, 266, 333, 334, 335, 481, 503], "composite_a": 499, "composite_b": 499, "compositekernel": [119, 120, 121, 481], "compositesurrog": [259, 261, 263, 268, 272, 286, 288, 290, 292, 481, 491, 492, 499], "compound": 372, "comprehens": [479, 499], "compress": [338, 496], "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 89, 99, 103, 127, 129, 140, 141, 142, 144, 145, 147, 154, 155, 158, 197, 199, 214, 216, 221, 222, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 296, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 373, 377, 446, 447, 448, 449, 451, 458, 459, 463, 464, 470, 481, 484, 485, 487, 492, 493, 495, 496, 498, 500, 502, 503, 504], "computation": 199, "compute_ref_point": [9, 12, 15, 18], "compute_scor": 455, "computedstyl": 455, "concat": [443, 444, 452, 453, 463, 464, 467, 468, 474], "concentr": [172, 173, 436, 437, 438, 440, 441, 446, 451, 452, 476, 488], "concentrati": 446, "concentration_valu": 452, "concept": [342, 458, 492, 493, 496, 502], "concern": 322, "concis": [481, 500, 502], "concret": [481, 496], "conda": 481, "condit": [37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 391, 437, 443, 447, 448, 449, 458, 464, 479, 481, 484, 501, 503], "conduct": [34, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 254, 259, 261, 263, 268, 272, 286, 288, 290, 292, 436, 437, 438, 479, 482, 487, 501], "confid": [8, 24, 441], "config": [455, 456, 469, 477, 481, 503], "config_json": 34, "configur": [9, 12, 15, 18, 34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 87, 88, 181, 188, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 248, 250, 256, 259, 261, 263, 264, 266, 268, 272, 278, 286, 288, 290, 292, 348, 377, 420, 439, 440, 458, 463, 465, 468, 472, 479, 480, 481, 484, 485, 486, 487, 488, 493, 494, 495, 497, 498, 500, 501, 503, 504], "confirm": 453, "conflict": [479, 482, 492], "conform": [158, 373, 493], "confront": [461, 479, 490], "confus": [127, 308, 482], "conjunct": 499, "connect": [59, 481, 493, 500], "consequ": [438, 463, 476, 480, 488, 494, 495, 498, 499], "consequenti": 484, "consid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 127, 129, 141, 144, 145, 147, 155, 158, 160, 162, 187, 199, 216, 254, 308, 392, 393, 435, 458, 461, 463, 474, 479, 481, 482, 486, 488, 490, 491, 492, 493, 496, 500, 504], "consider": [216, 486], "consist": [127, 182, 221, 308, 377, 453, 482, 484, 491], "consol": [455, 480], "consolid": [481, 494], "consortium": 483, "conspicu": 484, "const": 455, "constant": [288, 296, 321, 476, 481, 482, 493, 495, 500, 502, 503], "constitut": 484, "constrain": [481, 488, 501], "constraint": [34, 37, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 82, 142, 199, 214, 216, 222, 345, 455, 456, 470, 471, 472, 477, 479, 481, 483, 493, 503], "constraint_1": 448, "constraint_2": 448, "constraint_3": 448, "constraints_augment": 216, "constraints_cardin": 214, "constraints_lin_eq": 214, "constraints_lin_ineq": 214, "constraints_nonlin": 214, "constru": 484, "construct": [34, 127, 214, 216, 222, 268, 298, 308, 435, 464, 466, 474, 476, 479, 481, 485, 488, 491, 496, 499, 503], "constructor": [204, 205, 206, 207, 216, 237, 286, 290, 292, 458, 463, 466, 471, 472, 476, 481, 485, 487, 490, 492, 493, 497, 499, 500, 502, 503, 504], "consum": [187, 451, 481], "cont_ind": 468, "cont_indic": [467, 468], "cont_paramet": 468, "cont_recommend": [191, 468], "contact": [479, 483], "contain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 75, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 166, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 223, 224, 228, 240, 248, 250, 252, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 343, 361, 373, 377, 381, 385, 391, 392, 394, 402, 408, 409, 420, 428, 430, 431, 432, 433, 437, 438, 452, 453, 459, 461, 468, 474, 480, 481, 482, 484, 487, 488, 490, 491, 494, 495, 496, 498, 504], "content": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 245, 252, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 384, 402, 408, 409, 421, 428, 455, 481, 484, 496], "context": [77, 85, 127, 160, 184, 186, 187, 188, 189, 197, 199, 248, 264, 266, 308, 417, 451, 461, 466, 474, 481, 487, 490, 491, 493, 496, 498, 499, 500, 501, 502, 503, 504], "contextu": 501, "continu": [11, 17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 75, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 191, 199, 214, 216, 217, 222, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 441, 443, 446, 447, 448, 449, 459, 464, 465, 468, 470, 477, 479, 481, 487, 490, 494, 496, 498, 503], "continuous_subspac": 495, "continuouscardinalityconstraint": [65, 66, 214, 481, 503], "continuousconstraint": [40, 48, 214, 481, 488, 490], "continuouslinearconstraint": [214, 443, 444, 459, 481, 503], "continuouslinearequalityconstraint": 481, "continuouslinearinequalityconstraint": 481, "continuousnonlinearconstraint": [47, 214, 481], "continuousparamet": [154, 214, 481], "contour": 464, "contract": 484, "contractor": 483, "contraint": 488, "contrast": [222, 367, 459, 461, 486, 490, 492], "contribut": [479, 481, 484, 504], "contributor": [479, 484], "contributori": 484, "control": [9, 12, 15, 17, 18, 23, 31, 129, 161, 172, 199, 214, 222, 245, 246, 247, 311, 393, 467, 476, 479, 481, 484, 485, 488, 492, 493, 494, 497, 500, 502, 503], "conv": [127, 308], "conv2d": [127, 308], "conv4": [127, 308], "conv5": [127, 308], "convei": 496, "conveni": [476, 481, 495, 496, 497, 499, 500], "convent": [216, 377], "converg": [476, 491], "convers": [34, 188, 455, 466, 481, 484, 491, 499, 503], "convert": [30, 124, 125, 127, 129, 133, 135, 218, 231, 299, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 352, 362, 364, 368, 372, 379, 380, 395, 396, 397, 400, 405, 407, 410, 412, 456, 471, 472, 481, 487, 496, 498], "convert_bound": 481, "convert_sklearn": 455, "convert_sklearn_bayesian_ridg": 455, "convertibletofloat": [9, 12, 15, 18, 352], "cooki": 482, "coordin": [9, 12, 15, 18, 420], "copi": [127, 160, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 375, 395, 452, 455, 479, 481, 484, 504], "copy_x": 455, "copyright": [479, 484], "copytoclipboard": 455, "core": [34, 214, 216, 217, 222, 254, 256, 259, 261, 263, 264, 266, 268, 272, 279, 286, 288, 290, 292, 441, 479, 481, 490, 500], "coregion": 501, "coretest": [481, 482], "corpu": 493, "correct": [34, 236, 300, 453, 479, 481, 482, 496], "correctli": [127, 308, 458, 468, 481], "correl": [147, 158, 390, 493, 501], "correspond": [28, 34, 47, 124, 127, 129, 133, 135, 160, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 248, 250, 252, 259, 261, 262, 263, 268, 272, 286, 288, 290, 292, 298, 308, 361, 364, 366, 368, 371, 372, 386, 387, 393, 394, 395, 396, 398, 420, 432, 433, 435, 440, 441, 458, 461, 463, 464, 468, 474, 476, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "correspondingli": 34, "corrupt": 385, "cost": [377, 437, 461, 500], "costli": [216, 219, 225, 487], "could": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 155, 308, 379, 441, 451, 452, 458, 459, 474, 481, 486, 488, 493, 498, 500, 501], "count": [452, 458, 488], "counterclaim": 484, "counterpart": [361, 495, 500], "coupl": 453, "cours": [474, 482, 496, 501], "cousin": 488, "cov": [481, 482], "cover": [367, 488, 490], "coverag": [481, 482], "cp": [436, 437, 438], "cpu": [127, 308], "craft": 498, "crash": [480, 481], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 70, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 223, 224, 236, 240, 252, 259, 261, 263, 264, 266, 268, 272, 275, 280, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 364, 365, 381, 386, 387, 402, 408, 409, 410, 420, 440, 451, 452, 453, 458, 459, 464, 468, 469, 476, 477, 478, 479, 480, 481, 482, 486, 488, 490, 491, 493, 496, 498, 499, 500, 502, 503, 504], "create_example_plot": [435, 437, 452, 453, 474, 481], "create_from_config": [455, 456], "create_pi_plot": 453, "creation": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 161, 219, 222, 225, 447, 449, 455, 456, 463, 481, 495, 496, 503], "criteria": 453, "criterion": [377, 452, 485], "critic": [476, 481], "cross": [329, 484, 502], "crucial": [479, 497, 500], "csv": [436, 437, 452], "cube": [488, 500], "cuda": [127, 308, 480], "cultur": [493, 501], "cumul": 481, "curran": 501, "current": [11, 34, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 254, 256, 267, 308, 412, 452, 453, 458, 476, 485, 487, 488, 490, 493, 497, 498, 499, 500, 501, 503, 504], "curv": [311, 322, 329, 453, 463, 488, 502], "custom": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 127, 140, 141, 142, 144, 145, 147, 150, 154, 155, 158, 161, 210, 268, 300, 303, 305, 308, 311, 324, 361, 396, 434, 441, 445, 452, 461, 468, 477, 479, 481, 487, 488, 493, 494, 498, 501, 503, 504], "custom_blackbox": 435, "custom_conversion_funct": 455, "custom_filt": 488, "custom_funct": 446, "customari": 484, "customconstraint": 446, "customdiscreteparamet": [481, 491, 503], "customencod": 147, "customonnxsurrog": [441, 455, 481], "customtransform": [500, 502], "cut": 502, "cutoff": [311, 323, 330, 463, 486, 492, 500, 502], "cycl": [187, 479, 481, 490], "cyclic": 187, "d": [9, 12, 15, 18, 28, 58, 127, 342, 356, 420, 453, 456, 471, 472, 474, 479, 484, 495, 501], "d401": 446, "d5dd00050e": 479, "damag": 484, "daniel": 483, "darmstadt": [479, 483], "dashboard": 481, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74, 79, 91, 99, 103, 124, 129, 133, 135, 147, 155, 158, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 245, 250, 254, 256, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 305, 311, 341, 345, 377, 383, 385, 392, 394, 412, 421, 431, 432, 433, 434, 435, 440, 441, 443, 444, 446, 447, 448, 449, 452, 456, 458, 464, 467, 470, 471, 472, 474, 476, 477, 478, 479, 481, 485, 486, 487, 488, 491, 493, 494, 496, 498, 499, 503, 504], "data_typ": 455, "databas": [34, 479, 496], "dataclass": [451, 461], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 91, 99, 103, 124, 129, 133, 135, 141, 144, 145, 147, 155, 158, 161, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 223, 224, 227, 242, 243, 245, 250, 252, 254, 256, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 305, 311, 342, 343, 372, 373, 377, 421, 428, 431, 432, 433, 435, 436, 440, 441, 446, 447, 448, 449, 452, 453, 455, 456, 458, 459, 464, 467, 470, 474, 476, 481, 486, 487, 488, 490, 493, 503, 504], "datapoint": 481, "dataset": [187, 248, 377, 455, 498], "datatyp": [127, 308, 481], "date": 484, "dditiv": 491, "de": [235, 469, 479, 480, 481, 482, 487, 494, 502, 503], "deactiv": 481, "deal": [438, 486, 493, 498], "debug": 481, "decid": [155, 458, 461, 468, 485], "declar": [55, 59, 67, 207, 447, 482, 488, 500], "decod": 455, "decor": [121, 296, 349, 386, 451, 481, 482, 498, 503], "decorrel": [147, 158, 165, 471, 472, 493], "decreas": [187, 496, 501], "deduc": [443, 444, 467], "dedupl": 481, "deep": [377, 452], "deepcopi": 481, "deeper": 491, "deepli": 499, "def": [127, 308, 435, 446, 451, 452, 453, 458, 461, 464, 476, 482, 488, 497, 498], "default": [9, 12, 15, 18, 45, 99, 124, 127, 129, 133, 135, 147, 158, 161, 191, 197, 199, 204, 205, 206, 207, 214, 222, 235, 247, 259, 279, 282, 308, 311, 330, 377, 391, 435, 436, 438, 441, 455, 456, 468, 479, 481, 482, 487, 488, 491, 492, 493, 497, 500, 502, 503], "default_campaign": 435, "defaultkernelfactori": [441, 446, 447, 448, 449, 470], "defaultscal": 481, "defend": 484, "defer": 481, "defin": [28, 34, 44, 47, 48, 54, 127, 150, 160, 181, 187, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 222, 248, 272, 274, 275, 300, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 385, 390, 391, 408, 409, 423, 436, 437, 438, 440, 446, 447, 448, 449, 455, 456, 461, 466, 476, 481, 482, 484, 487, 488, 490, 493, 496, 497, 498, 500, 502], "definit": [214, 222, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 367, 459, 464, 479, 481, 484, 492, 495], "degener": [384, 402, 481], "degr": 470, "degre": [127, 308, 496], "degree_c": [455, 456, 470], "delai": 503, "deliber": 484, "delici": 482, "delimit": 330, "deliveri": 493, "demand": [34, 474], "demo": 481, "demonstr": [434, 435, 436, 439, 442, 445, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 469, 470, 473, 474, 475, 476, 481, 492, 495, 496, 500, 501, 502], "denot": [28, 330], "densiti": 453, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 55, 59, 90, 127, 216, 222, 248, 342, 437, 441, 445, 458, 459, 466, 476, 477, 478, 480, 481, 482, 488, 490, 491, 495, 497, 498, 499, 500, 501, 504], "dependenciesconstraint": 481, "deploi": 497, "deprec": [69, 127, 152, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 222, 227, 269, 308, 311, 312, 349, 446, 448, 449, 500], "deprecationwarn": [446, 448, 449, 452], "depth": 495, "deriv": [204, 205, 206, 207, 222, 367, 484, 488, 495, 500], "descend": [311, 463, 492, 500], "describ": [204, 205, 206, 207, 259, 261, 263, 268, 272, 286, 288, 290, 292, 298, 441, 446, 451, 452, 459, 461, 464, 482, 484, 486, 487, 488, 492, 493, 496, 498, 500], "descript": [124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 303, 305, 311, 408, 409, 481, 482], "descriptor": [158, 373, 481, 491, 493, 501], "deseri": [233, 237, 242, 470, 480, 481, 487, 503], "deserialize_datafram": 496, "design": [0, 23, 28, 127, 250, 308, 377, 386, 451, 455, 458, 461, 484, 485, 488, 490, 491, 492, 494, 496], "desir": [127, 129, 131, 308, 387, 462, 476, 477, 479, 481, 485, 491, 492, 494, 496, 500, 502, 504], "desirabilityobject": [34, 463, 479, 481, 486, 487, 491, 496, 500, 503], "desktop": 481, "despit": 481, "destin": [127, 308], "detach": [127, 308], "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 250, 254, 259, 261, 263, 264, 266, 268, 272, 275, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 391, 398, 402, 408, 409, 423, 436, 438, 443, 444, 455, 463, 468, 478, 479, 480, 481, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503], "detect": [345, 392, 480, 482], "detector": 476, "determin": [9, 12, 15, 18, 34, 47, 99, 189, 222, 364, 365, 367, 391, 405, 413, 420, 436, 458, 461, 476, 481, 484, 494, 497], "determinist": [127, 308, 420, 481], "detriment": 493, "dev": [446, 448, 449, 479, 481, 482], "develop": [479, 481, 493, 498, 503], "deviat": [6, 20, 296, 322, 392, 455, 481, 487, 500, 502], "devic": [127, 308], "df": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 124, 129, 133, 135, 161, 214, 216, 222, 227, 243, 252, 342, 343, 372, 384, 388, 389, 390, 391, 393, 395, 396, 398, 421, 428, 435, 446, 461, 476, 479, 488, 495, 496, 498, 500], "df_y": 464, "dfa": [342, 343], "di": [436, 437, 438, 440, 441, 483], "diagram": [127, 308, 481, 483, 503], "dicret": 488, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 204, 205, 206, 207, 214, 216, 219, 222, 225, 237, 238, 240, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 356, 359, 373, 377, 402, 407, 408, 409, 410, 423, 452, 455, 474, 481], "dict_bas": [436, 437, 438, 440, 441], "dict_ligand": [436, 437, 438, 440, 441], "dict_solv": [436, 437, 438, 440, 441, 446, 447, 448, 449, 458, 488], "dictat": [124, 129, 133, 135, 199, 216, 474], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 296, 298, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 356, 359, 402, 408, 409, 410, 436, 437, 438, 440, 456, 493, 498], "diff": 482, "differ": [9, 12, 15, 18, 57, 127, 129, 199, 214, 216, 217, 222, 248, 256, 308, 343, 348, 385, 423, 437, 446, 451, 458, 461, 463, 464, 467, 468, 474, 476, 479, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "differenti": [498, 501], "difficult": 501, "digit": [396, 479], "dilemma": 461, "dim": [28, 127, 308, 443, 444, 453, 455, 467, 468, 474], "dimens": [28, 420, 435, 443, 444, 453, 455, 466, 467, 474, 481, 493, 495, 499, 501], "dimension": [9, 12, 15, 18, 140, 141, 142, 144, 145, 147, 154, 155, 158, 282, 386, 420, 435, 474, 481], "dimethylisoxazol": 501, "direct": [9, 12, 15, 18, 127, 308, 311, 436, 437, 438, 440, 479, 481, 484, 490, 493, 500, 503, 504], "direct_aryl": [436, 437, 452], "directli": [9, 12, 15, 18, 127, 367, 474, 479, 481, 488, 492, 496, 497, 499, 500, 502], "directori": [245, 348, 436, 437, 452, 468, 481], "disabl": [127, 245, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 446, 448, 449, 463, 481, 487, 490, 492], "disadvantag": 496, "disappear": 481, "disc_ind": 468, "disc_indic": [467, 468], "disc_paramet": 468, "disc_recommend": [191, 468], "discard": [8, 458], "disclaim": 484, "discourag": 487, "discoveri": 479, "discret": [17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 75, 140, 141, 142, 144, 145, 147, 154, 155, 158, 191, 199, 204, 205, 206, 207, 210, 214, 216, 217, 221, 222, 256, 419, 440, 443, 449, 452, 453, 455, 465, 468, 470, 474, 477, 479, 481, 485, 490, 491, 494, 496, 498, 503, 504], "discrete_param": [453, 474], "discrete_spac": [443, 444, 468], "discrete_subspac": 495, "discretecardinalityconstraint": [481, 503], "discreteconstraint": [34, 53, 54, 55, 56, 57, 58, 59, 60, 61, 222, 481, 488, 490], "discretecust": 446, "discretecustomconstraint": [446, 481, 503], "discretedep": 447, "discretedependenciesconstraint": [59, 67, 447, 458, 503], "discreteexcl": 448, "discreteexcludeconstraint": [448, 481, 490, 503], "discretelinkedparametersconstraint": [481, 503], "discretenolabelduplicatesconstraint": [59, 458, 481, 503], "discreteparamet": [155, 222, 223, 224, 481], "discretepermutationinvarianceconstraint": [458, 503], "discreteprod": 449, "discreteproductconstraint": [449, 481, 503], "discretesamplingmethod": [17, 199, 421, 481, 485], "discretesumc": 449, "discretesumconstraint": [443, 449, 458, 481, 503], "discuss": [484, 488, 495, 498], "disguis": 500, "disjoint": 222, "disk": 481, "displai": [396, 452, 484, 491], "distanc": [155, 209, 311, 377, 420, 463, 500], "distict": 492, "distinct": [451, 476, 487, 494], "distinguish": [384, 458, 481, 488, 493, 501], "distribut": [34, 168, 171, 259, 261, 263, 268, 272, 286, 288, 290, 292, 322, 458, 468, 479, 481, 484, 485, 486, 499, 502], "distutil": 368, "div": 455, "divers": 499, "divid": [459, 500], "divis": 476, "dll": 480, "dmac": [436, 437, 438, 440, 441], "dmf": 488, "do": [31, 65, 216, 222, 250, 267, 451, 455, 456, 458, 461, 463, 468, 470, 471, 472, 476, 478, 479, 480, 484, 486, 488, 490, 491, 492, 493, 494, 496, 500, 501, 502, 503, 504], "doc": [104, 168, 349, 479, 481], "doc101": 482, "doc103": 482, "docstr": [127, 308, 481], "doctest": 481, "document": [34, 127, 308, 412, 455, 479, 481, 482, 483, 484, 487, 491, 497, 498], "doe": [33, 34, 41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 99, 127, 160, 199, 248, 250, 252, 254, 259, 261, 263, 267, 268, 272, 286, 288, 290, 292, 300, 308, 329, 361, 372, 392, 412, 438, 441, 452, 455, 456, 458, 471, 472, 474, 481, 482, 484, 488, 492, 494, 498, 499, 500, 501, 502, 504], "doesn": [127, 308], "doi": [284, 390, 479], "domain": [259, 261, 263, 268, 272, 286, 288, 290, 292, 435, 479, 481, 495, 498, 500, 502], "don": [478, 490], "done": [34, 250, 391, 392, 438, 440, 446, 447, 448, 449, 455, 456, 470, 481, 485, 487, 488, 490], "doubl": [127, 308, 412, 482], "down": [496, 504], "downsid": 188, "draft": 481, "dramat": 501, "drastic": 493, "draw": [11, 116, 214, 459, 461, 466], "draw_arm": 461, "drawback": 492, "drawn": [23, 199], "drift": 476, "drive": [453, 501], "driven": [476, 485], "driver": 480, "drop": [31, 338, 388, 389, 390, 394, 452, 481, 486, 488, 502], "dropout": [127, 308], "drug": 486, "dry_run": 34, "dst_type": [127, 308], "dtype": [9, 12, 15, 18, 127, 162, 245, 308, 377, 395, 414, 428, 481], "dtypefloatnumpi": 245, "dtypefloattorch": 245, "due": [160, 474, 481, 482, 485, 488, 492, 493, 494, 495, 496, 500, 502], "dump": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 481], "dunder": 481, "duplic": [34, 59, 127, 167, 308, 345, 356, 481, 488], "durat": [377, 486, 497, 500], "dure": [34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 216, 222, 248, 359, 420, 458, 461, 474, 479, 480, 481, 482, 483, 487, 488, 490, 491, 495, 496, 498, 499], "dx": 479, "dynam": [461, 476, 481, 496, 503], "d\u00fcbendorf": 483, "e": [8, 23, 28, 34, 37, 47, 55, 57, 58, 75, 102, 127, 147, 161, 162, 189, 216, 222, 245, 248, 308, 345, 354, 355, 373, 377, 391, 392, 402, 425, 436, 437, 438, 452, 456, 458, 459, 461, 463, 479, 480, 481, 482, 485, 486, 488, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 504], "e3fp": 152, "e3fpfingerprint": 152, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 127, 129, 133, 135, 161, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 250, 252, 254, 256, 259, 261, 263, 267, 268, 272, 286, 288, 290, 292, 308, 329, 343, 373, 377, 384, 392, 435, 437, 438, 441, 453, 458, 459, 461, 464, 468, 474, 476, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 504], "eagerli": 481, "earli": [452, 476, 481], "earlier": [34, 478, 480], "earn": 461, "earned_reward": 461, "easi": [372, 481, 482, 496, 500], "easier": [482, 486, 504], "easiest": [479, 482], "easili": [452, 463, 476, 479, 482, 487, 490, 493, 495, 496, 497, 500, 501, 502], "ecfp": [152, 437, 481, 493], "ecfpfingerprint": [152, 437], "ecosystem": 496, "edbo": [282, 284, 390, 481], "edbokernelfactori": [282, 481], "edg": 160, "edit": [479, 482], "editor": 501, "editori": 484, "edwin": 501, "effect": [57, 127, 184, 186, 187, 188, 189, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 451, 452, 461, 474, 476, 481, 485, 488, 493, 494, 497, 498, 501, 502, 504], "effici": [210, 222, 377, 458, 479, 481, 495], "effortlessli": 498, "ei": [3, 441], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 127, 217, 250, 256, 272, 296, 308, 331, 392, 437, 448, 468, 476, 479, 484, 492, 493, 494, 495, 497, 498, 499, 500], "elabor": 484, "elaps": 451, "elapsedtimeprint": 451, "electron": [483, 484], "electroshap": 152, "electroshapefingerprint": 152, "eleg": 496, "element": [43, 44, 45, 54, 162, 256, 334, 345, 358, 366, 377, 381, 413, 414, 455, 458, 474, 476, 481, 488, 498], "elev": 453, "elif": [467, 468], "elimin": [482, 485, 500], "els": [367, 368, 435, 436, 437, 438, 443, 444, 446, 447, 449, 452, 453, 461, 464, 467, 468, 474, 476], "elsewher": 455, "embed": 502, "emd": 483, "emdgroup": 479, "emelin": 483, "emerg": 487, "emit": 476, "empir": 461, "emploi": [34, 461, 494], "empow": 499, "empti": [103, 127, 214, 216, 222, 229, 308, 343, 361, 372, 391, 396, 432, 433, 458, 468, 470, 481, 495], "empty_encod": [216, 222], "emptysearchspaceerror": 229, "emul": [23, 480, 481], "en": [104, 168], "enabl": [188, 245, 348, 436, 437, 438, 458, 463, 479, 480, 481, 482, 487, 488, 490, 491, 492, 494, 496, 498, 500, 501, 502], "encapsul": [377, 476], "encod": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 216, 222, 259, 261, 263, 268, 272, 286, 288, 290, 292, 371, 373, 436, 437, 438, 440, 441, 446, 447, 448, 449, 452, 456, 458, 461, 470, 471, 472, 474, 479, 481, 488, 495, 496, 501], "encompass": 487, "encount": [160, 184, 186, 187, 188, 189, 420, 480, 481, 482, 492], "end": [0, 127, 308, 330, 402, 452, 456, 461, 470, 476, 484, 488, 492, 496, 502], "endeavor": 485, "endpoint": 481, "enforc": [127, 308, 481, 482, 493], "engin": [480, 494, 496, 498, 500, 504], "enhanc": [28, 479], "enlarg": 493, "enough": [214, 496], "ensembl": 294, "ensur": [127, 160, 161, 308, 395, 436, 437, 438, 458, 459, 479, 481, 488, 496, 498], "enter": [81, 222, 492, 495, 502], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 402, 421, 481, 482, 485, 487, 488, 500, 504], "entiti": 484, "entri": [34, 41, 44, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 127, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 343, 392, 421, 438, 446, 447, 448, 449, 458, 478, 481, 488, 490, 491, 504], "enum": [131, 149, 150, 151, 152, 209, 217, 279, 347, 364, 365, 419, 481, 496], "enumer": [127, 130, 148, 308, 309, 453, 474], "env": [127, 308, 481, 482], "environ": [435, 436, 437, 438, 444, 446, 447, 449, 452, 453, 455, 461, 464, 474, 476, 479, 480, 481, 482, 488, 503], "eq": [446, 458], "equal": [48, 129, 189, 214, 329, 461, 470, 476, 481, 488, 492, 495, 496, 500, 503], "equat": [48, 476, 488, 498], "equidist": [420, 481, 493], "equip": 488, "equival": [23, 37, 59, 127, 308, 338, 444, 466, 476, 481, 485, 488, 498, 500, 502], "erg": 152, "ergfingerprint": 152, "err": 455, "errno": [436, 437, 452], "erron": [365, 481], "error": [127, 187, 250, 252, 254, 269, 308, 359, 394, 438, 455, 456, 461, 480, 481, 486, 488, 494, 497], "error_msg": [127, 308], "escap": 476, "esian": 479, "especi": [482, 486, 500], "essenti": [487, 494], "establish": [452, 474, 501], "estat": 152, "estatefingerprint": 152, "ester": [436, 437, 438, 440, 441], "estim": [216, 221, 222, 259, 377, 461, 481, 499, 503], "estimate_product_space_s": [216, 222, 504], "estimated_win_r": 461, "estimation_bia": 461, "estimation_vari": 461, "et": [437, 479, 493], "etc": [43, 44, 45, 127, 142, 216, 303, 308, 501], "ethan": 496, "ethanol": [458, 488], "euclidean": [377, 420], "eval": [127, 308], "eval_during_augment": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "eval_during_cr": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "eval_during_model": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 127, 129, 133, 135, 197, 199, 294, 295, 308, 364, 368, 467, 468, 481, 487, 494, 498, 501], "even": [189, 296, 389, 474, 476, 484, 486, 487, 492, 493, 498, 499, 501, 502, 504], "event": [34, 452, 484], "everi": [127, 308, 486, 504], "everyth": [482, 488], "evolv": [453, 482], "ex": 491, "exabyt": 504, "exact": [34, 392, 451, 480, 481, 488, 492, 493, 499], "exactexplain": [97, 100, 491], "exactli": [9, 12, 15, 18, 47, 124, 129, 133, 135, 216, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 458, 481, 486, 487, 495, 496, 500], "examin": 487, "exampl": [9, 12, 15, 18, 127, 160, 161, 252, 308, 321, 329, 342, 343, 356, 364, 367, 377, 391, 434, 435, 439, 442, 445, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487, 488, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "example_input_nam": 455, "exceed": 452, "exceedingli": 498, "except": [34, 127, 308, 361, 372, 380, 399, 401, 436, 437, 438, 452, 456, 471, 472, 479, 480, 481, 484, 490, 499, 502], "excepthook": 480, "exceptiongroup": [65, 481], "excess": 504, "exclud": [34, 58, 388, 446, 447, 448, 449, 470, 481, 484, 488, 503], "exclude_list": 390, "exclus": [56, 445, 477, 481, 484, 488, 498, 503], "execut": [34, 69, 127, 245, 246, 250, 308, 361, 435, 437, 463, 480, 481, 482, 484, 496, 497, 498, 501], "exemplari": 487, "exemplifi": 502, "exercis": 484, "exhaust": [187, 199, 491, 494], "exist": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 236, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 349, 361, 402, 408, 409, 458, 476, 480, 481, 482, 485, 487, 488, 490, 496, 497, 499, 501, 503], "exot": 481, "exp": [311, 476, 481, 492], "exp_rep": [222, 446, 447, 448, 449, 458, 495], "exp_rep_byt": [221, 504], "exp_rep_human_read": [221, 504], "exp_rep_shap": [221, 504], "expect": [3, 4, 9, 10, 12, 13, 15, 16, 18, 19, 31, 54, 77, 85, 127, 264, 266, 274, 308, 361, 386, 395, 441, 447, 453, 455, 458, 459, 461, 472, 481, 482, 487, 488, 491, 492, 493, 496, 498, 500, 504], "expens": [11, 199, 443, 498], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 248, 250, 259, 261, 263, 268, 272, 286, 288, 290, 292, 436, 437, 438, 440, 441, 467, 468, 476, 481, 485, 487, 488, 490, 492, 493, 494, 500, 501, 503], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 103, 141, 144, 145, 147, 155, 158, 181, 184, 185, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 221, 222, 248, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 303, 305, 311, 385, 428, 446, 447, 448, 449, 453, 470, 479, 481, 485, 486, 488, 490, 492, 493, 495, 496, 498, 500, 501, 503, 504], "experimentalist": 478, "expert": 377, "expir": 503, "explain": [74, 98, 99, 100, 102, 103, 453, 481, 483, 499, 503], "explain_target": [99, 481], "explainer_cl": [99, 103, 491], "explan": [99, 103, 127, 308, 481, 487, 491, 499], "explanation_index": [99, 491], "explicit": [161, 188, 451, 452, 456, 458, 466, 471, 472, 481, 482, 492, 496, 499, 501, 502, 503], "explicitli": [127, 214, 222, 451, 468, 474, 481, 484, 490, 492, 495, 497, 500, 501, 502], "exploit": [8, 23, 461, 476, 481], "explor": [8, 34, 461, 476, 485, 494, 495, 501], "exploratori": 485, "expon": [311, 328, 500, 502], "exponenti": [222, 311, 325], "exponentialtransform": 502, "expos": [34, 451, 481], "exposur": 481, "expr": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61], "express": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 476, 479, 481, 484, 488, 500, 502], "extend": [160, 311, 490, 493, 501], "extens": [481, 494], "extern": [482, 483], "extra": [127, 308, 377, 437, 479, 481], "extra_repr": [127, 308], "extract": [34, 184, 186, 187, 188, 189, 393, 453, 491, 503], "extract_pi": 453, "f": [330, 350, 351, 364, 368, 377, 435, 436, 437, 438, 443, 444, 446, 447, 448, 449, 451, 452, 453, 458, 459, 466, 467, 468, 474, 476, 502, 504], "f1": 498, "f2": 498, "fa": 455, "fabian": [479, 483], "face": [259, 261, 263, 268, 272, 286, 288, 290, 292, 459, 461], "facilit": 494, "fact": [23, 453, 458, 478, 488, 492, 500], "factor": [9, 12, 15, 18, 308, 321, 479, 487, 488, 500, 502, 504], "factori": [161, 214, 272, 273, 274, 275, 276, 282, 284, 357, 441, 446, 447, 448, 449, 470, 481], "fail": [455, 468, 472, 480, 481, 499], "failur": [305, 481, 484], "failure_valu": 305, "fairli": 492, "fake": [252, 383, 387, 440, 441, 455, 456, 481, 486, 498, 503], "fall": [160, 189, 452, 487, 497], "fallback": [210, 222, 403, 455, 481, 495, 500], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 210, 214, 216, 222, 227, 240, 245, 246, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 354, 355, 359, 364, 365, 367, 368, 381, 386, 391, 393, 394, 398, 402, 408, 409, 432, 441, 446, 447, 448, 449, 455, 470, 471, 472, 476, 481, 492, 496, 497, 500], "famili": 488, "familiar": [436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 455, 456, 467, 468, 470], "fang": 483, "fantasi": 11, "far": [311, 487], "farthest": [209, 210, 419, 420, 441, 479, 481, 483, 485, 494], "farthest_point_sampl": [210, 481], "fast": [377, 446, 448, 449, 486, 495], "fast_and_furi": 497, "faster": [31, 222, 377, 486], "fault": 94, "faulti": 480, "favicon": 481, "favor": [127, 308, 481], "fc": [436, 437, 438], "feasibl": [78, 487, 491], "featur": [99, 116, 158, 390, 479, 480, 481, 482, 488, 491, 499, 501, 502], "fed": [479, 491], "feder": 483, "fee": 484, "feed": [377, 464, 478, 479, 490, 501], "feedback": [476, 483], "feel": 452, "fetch": 482, "few": [435, 461, 481, 482, 485, 493, 496, 499, 501, 504], "field": [237, 247, 380, 381, 481, 501, 503], "fifti": 484, "fig": [453, 464, 476], "figsiz": [464, 476], "figur": 453, "file": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 436, 437, 438, 452, 455, 456, 468, 479, 481, 484, 496], "fileexistserror": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409], "filenotfounderror": [436, 437, 438, 452], "filesystem": 348, "fill": [34, 252, 453], "fill_": [127, 308], "filler": 488, "filter": [34, 41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 216, 222, 388, 391, 446, 458, 481, 488, 490, 495, 501, 504], "filter_attribut": 481, "filter_df": [34, 481], "filterwarn": 452, "final": [435, 437, 440, 452, 458, 474, 476, 497], "find": [216, 250, 359, 414, 476, 479, 485, 487, 488, 492, 501], "fine": [456, 470, 471, 472, 479, 500], "finer": [161, 479], "finetun": [127, 308], "fingerprint": [152, 158, 371, 373, 479, 481, 483, 493], "finish": 486, "finit": [187, 248, 256, 362, 401, 425, 461, 493, 498], "fire": [127, 308], "first": [209, 216, 254, 334, 350, 351, 413, 420, 435, 437, 440, 441, 446, 451, 452, 455, 456, 458, 463, 464, 468, 472, 474, 476, 479, 480, 481, 487, 488, 492, 493, 494, 495, 497, 500, 501, 502, 504], "fit": [34, 207, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 377, 421, 423, 436, 437, 438, 446, 447, 448, 449, 455, 470, 481, 484, 486, 488, 492, 493, 499, 500, 502], "fit_gpytorch_ml": 481, "fit_gpytorch_mll_torch": 481, "fit_intercept": 455, "fit_param": 377, "fit_predict": 377, "fit_transform": 377, "fitnr": 34, "fitzner": [479, 483], "fix": [248, 275, 452, 453, 458, 461, 464, 467, 468, 482, 487, 493, 498, 501, 504], "flag": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 199, 214, 216, 217, 222, 240, 247, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 386, 393, 402, 408, 409, 463, 478, 481, 486, 487, 490, 491, 492, 494, 497, 500], "flake8": 481, "flexibl": [451, 466, 481, 492, 496, 497, 498], "flexibli": 494, "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 45, 47, 48, 50, 51, 110, 111, 112, 113, 114, 115, 116, 117, 121, 127, 129, 147, 154, 155, 158, 162, 165, 166, 172, 173, 174, 175, 176, 177, 178, 197, 199, 221, 222, 245, 250, 254, 259, 261, 262, 263, 266, 268, 272, 286, 288, 290, 292, 296, 305, 306, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 352, 377, 379, 384, 385, 390, 397, 400, 402, 405, 412, 413, 414, 425, 426, 427, 451, 453, 455, 461, 481, 482, 486, 487], "float16": [127, 308], "float64": [127, 308, 464], "float_precision_numpi": [245, 246, 481], "float_precision_torch": [245, 246, 481], "floattensortyp": 455, "flow": 497, "fly": [188, 348, 364, 496, 499], "fn": [127, 308, 349], "focu": [463, 487], "focus": [135, 464, 468, 479], "folder": [437, 479, 482, 499], "follow": [127, 162, 184, 186, 187, 188, 189, 216, 250, 252, 254, 308, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 451, 452, 456, 461, 468, 471, 472, 474, 476, 479, 480, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "footprint": [11, 216], "forbid": 429, "forc": [99, 101, 160, 199, 481, 482, 491, 494], "foreach": 455, "forest": [291, 292], "fork": 482, "form": [127, 222, 248, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 308, 377, 476, 478, 479, 482, 484, 485, 487, 492, 493, 494, 495, 496, 498, 500, 504], "formal": [459, 478], "format": [48, 127, 308, 377, 396, 405, 455, 456, 470, 471, 479, 480, 481, 482, 487, 496, 498], "format_except": 480, "former": [458, 481], "formul": [486, 501], "formula": 458, "forrest": 481, "forward": [127, 308], "forward_pr": [127, 308], "found": [92, 127, 161, 214, 222, 250, 308, 359, 371, 412, 414, 452, 458, 479, 480, 482, 487, 488, 494, 500, 501, 503], "foundat": 494, "four": [458, 492], "fourier": 116, "fourth": 488, "fp": [419, 481, 485], "fp_size": [152, 493], "fpsampl": [210, 245, 481, 483], "fpsiniti": 210, "fpsrecommend": [441, 455, 456, 470, 471, 472, 479, 481, 483, 486, 494], "frac": [330, 474, 476, 492, 502], "frac1": 447, "fraction": [17, 31, 111, 379, 452, 485, 488], "fraction1": 447, "fraction_1": 488, "fraction_2": 488, "fraction_3": 488, "fractur": 488, "frame": [385, 491, 504], "frame1": 447, "frame2": 447, "frame_1": 488, "frame_2": 488, "framea": 447, "framea_a": 447, "frameb": 447, "framework": [476, 487, 493], "free": [482, 484], "freedom": 496, "freeli": 458, "freez": [127, 308], "frequenc": 116, "frequent": 461, "fresh": 452, "frictionless": 496, "friendli": 481, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 152, 154, 155, 158, 160, 161, 168, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 236, 240, 252, 254, 256, 259, 261, 263, 266, 268, 272, 275, 280, 284, 286, 288, 290, 292, 296, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 348, 361, 364, 365, 367, 368, 372, 375, 377, 385, 386, 388, 390, 402, 408, 409, 420, 421, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 469, 470, 472, 474, 476, 477, 478, 480, 482, 484, 485, 486, 488, 490, 491, 492, 493, 494, 497, 498, 499, 501, 503, 504], "from_anchor": [329, 502], "from_bound": [214, 481, 495], "from_campaign": [99, 491], "from_config": [34, 471, 472, 487], "from_datafram": [214, 216, 222, 481, 490, 495, 496, 504], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 455, 496], "from_erroneous_cal": 365, "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 455, 456, 470, 481, 487, 496], "from_legacy_interfac": [311, 500], "from_margin": [330, 502], "from_modern_interfac": [311, 500], "from_paramet": [214, 216, 222, 481], "from_preset": 272, "from_product": [214, 216, 222, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 464, 466, 467, 468, 470, 471, 472, 474, 479, 481, 488, 490, 495, 496, 498], "from_recommend": [99, 491], "from_record": [496, 498], "from_repl": [266, 499], "from_simplex": [222, 458, 481, 490, 495, 504], "from_surrog": [99, 491], "from_unstructur": 364, "from_values_mapped_to_unit_interv": 321, "from_width": [330, 502], "front": 492, "frontier": 464, "frozenset": [47, 214, 458], "fsspec": 481, "fulfil": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 452, 458, 459], "full": [28, 214, 412, 434, 463, 477, 481, 487, 488, 490, 491, 493, 500, 501, 503], "full_factori": 214, "full_lik": 453, "full_lookup": [436, 437, 438], "fulli": [127, 308, 458, 479, 481, 490, 498], "fullparamnam": 455, "fulltest": 482, "func": [246, 348, 377, 482], "funci": 481, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 42, 48, 49, 54, 62, 64, 72, 84, 94, 96, 99, 115, 123, 127, 128, 132, 134, 136, 159, 160, 164, 197, 199, 215, 220, 226, 230, 231, 240, 241, 244, 248, 249, 251, 253, 254, 255, 260, 267, 273, 278, 293, 297, 302, 308, 313, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 341, 344, 348, 350, 351, 363, 364, 369, 378, 382, 385, 387, 392, 393, 396, 399, 404, 406, 411, 415, 418, 424, 440, 446, 447, 448, 449, 451, 453, 455, 458, 461, 464, 470, 474, 475, 476, 479, 480, 481, 485, 488, 490, 492, 494, 495, 498, 499, 500, 501, 502, 503, 504], "function_nam": 474, "functionalgroup": 152, "functionalgroupsfingerprint": 152, "fundament": [476, 493, 496], "furo": 481, "further": [9, 12, 15, 18, 392, 458, 459, 470, 479, 486, 490, 494, 495, 497, 499, 500, 501, 503], "furthermor": 486, "furyl": [436, 437, 438], "futur": [59, 124, 127, 129, 133, 135, 267, 308, 446, 448, 449, 452, 491, 500], "fuzzy_row_match": 481, "g": [55, 57, 58, 75, 102, 127, 147, 161, 216, 222, 308, 345, 351, 373, 392, 461, 463, 479, 480, 481, 482, 485, 486, 488, 491, 492, 493, 494, 495, 498, 500, 502, 504], "g1": 459, "g2": 459, "g3": 459, "gain": [222, 487, 491], "gamma": 173, "gammaprior": 481, "gan": [127, 308], "garbag": 481, "gather": [189, 474, 485, 501], "gaussian": [104, 204, 261, 270, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 322, 441, 476, 481, 488, 494, 501, 502], "gaussian_kd": 453, "gaussian_process": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 272, 274, 275, 279, 282, 284, 441, 481], "gaussianmixtureclusteringrecommend": 494, "gaussianprocesspreset": [272, 280], "gaussianprocesssurrog": [280, 441, 446, 447, 448, 449, 453, 470, 471, 472, 481, 499], "gcf": [436, 438], "ge": 444, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 151, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 250, 259, 261, 263, 266, 268, 272, 275, 282, 284, 286, 288, 290, 292, 303, 305, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 367, 373, 377, 384, 402, 406, 408, 409, 415, 423, 435, 441, 451, 458, 463, 464, 476, 478, 479, 481, 483, 484, 485, 486, 487, 488, 490, 491, 493, 496, 498, 499, 500, 501, 503, 504], "geom_mean": [129, 131, 481, 492], "geometr": 131, "gerit": 479, "germani": [479, 483], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 197, 199, 214, 272, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 377, 441, 452, 455, 458, 467, 468, 478, 479, 481, 486, 500, 502, 503, 504], "get_absolute_threshold": [47, 481], "get_acquisition_funct": [34, 197, 199, 481], "get_base_structure_hook": 481, "get_buff": [127, 308], "get_candid": [222, 452, 453], "get_cmap": 453, "get_codomain": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "get_comp_rep_parameter_indic": [216, 481], "get_current_recommend": [184, 186, 187, 188, 189, 481], "get_extra_st": [127, 308], "get_imag": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 481], "get_integration_point": 17, "get_invalid": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_invalid_polar": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_lin": 452, "get_metadata_rout": 377, "get_next_recommend": [184, 186, 187, 188, 189, 481], "get_non_meta_recommend": [184, 186, 187, 188, 189, 481], "get_param": 377, "get_paramet": [127, 308], "get_parameters_by_nam": [214, 216, 222], "get_parameters_from_datafram": [214, 222], "get_subclass": 441, "get_submodul": [127, 308], "get_surrog": [34, 99, 197, 199, 481, 491, 499], "get_transform_object": [398, 481], "get_transform_paramet": 481, "get_valid": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 481], "getawai": 152, "getawayfingerprint": 152, "getcomputedstyl": 455, "ghosecrippen": 152, "ghosecrippenfingerprint": 152, "git": [479, 482], "github": [284, 362, 390, 455, 481, 482, 483], "give": [455, 456, 458, 474, 484, 487, 488, 492, 496, 497, 502], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 43, 44, 45, 47, 67, 92, 99, 102, 103, 124, 127, 129, 133, 135, 137, 158, 160, 161, 162, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 228, 232, 236, 248, 252, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 296, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 343, 351, 354, 355, 359, 360, 361, 364, 366, 367, 370, 371, 379, 381, 383, 386, 393, 402, 413, 420, 423, 428, 431, 446, 447, 448, 449, 452, 458, 461, 468, 474, 481, 486, 487, 488, 492, 495, 498, 499, 502], "glass_transition_tempc": 493, "global": [17, 127, 245, 246, 308, 348, 416, 476, 481, 503, 504], "gmm": 204, "go": [342, 458, 479], "goal": [435, 461, 463, 476, 492, 501], "goe": 499, "good": [452, 487, 500], "goodwil": 484, "googl": [481, 482], "got": [481, 497], "govern": 479, "gp": [259, 261, 263, 268, 272, 286, 288, 290, 292, 481], "gpu": [127, 308], "gpu1": [127, 308], "gpytorch": [104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 168, 170, 172, 173, 174, 175, 176, 177, 178, 481], "gpytorchposterior": 308, "grab": 478, "grad": [127, 308], "grad_input": [127, 308], "grad_output": [127, 308], "gradient": [11, 127, 199, 290, 308, 481, 494, 500], "grain": 500, "grant": [481, 484], "granular": [456, 470, 471, 472, 479], "granularity_coar": 470, "granularity_fin": 470, "great": [461, 496], "greater": [189, 199], "greatli": 482, "greedi": [199, 481, 494], "green": 455, "grid": [464, 474], "grid_d": 474, "grossli": 484, "ground": [481, 500], "group": [90, 199, 343, 356, 423, 459, 479, 481, 487, 488, 491], "groupbi": [254, 256], "grow": 504, "gt": [449, 458], "gu16": 493, "guarante": [127, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 481, 488, 494], "guid": [377, 440, 476, 479, 480, 481, 482, 485, 487, 489, 490, 495, 498, 501, 502], "guidelin": [481, 482, 485], "h": [377, 502], "ha": [34, 55, 78, 79, 83, 84, 99, 127, 187, 214, 216, 222, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 322, 342, 359, 361, 367, 384, 395, 420, 421, 437, 441, 446, 447, 448, 449, 458, 468, 470, 479, 481, 482, 484, 486, 487, 488, 489, 491, 493, 495, 496, 497, 498, 500, 501, 502], "had": [248, 488, 493, 498], "half": [127, 155, 174, 175, 308, 402, 468, 486], "halfcauchyprior": 481, "halfnormalprior": 481, "halter": 479, "hamster": 501, "hand": [48, 158, 459, 461, 464, 474, 479, 487, 496, 499], "handi": 488, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 99, 127, 133, 142, 250, 252, 259, 261, 263, 268, 272, 286, 288, 290, 292, 296, 308, 394, 399, 446, 447, 461, 476, 481, 486, 487, 492, 504], "happen": [91, 187, 468, 474, 480, 481, 482, 495, 496, 501, 502], "happili": 492, "hard": [481, 500, 501, 504], "hardcod": 481, "harmless": 484, "hartmann": [453, 474], "hasattr": [443, 444, 467, 468], "hash": 493, "hashabledict": 481, "have": [28, 31, 34, 41, 43, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 124, 127, 129, 133, 135, 158, 160, 207, 216, 248, 267, 300, 308, 343, 356, 359, 377, 392, 393, 412, 430, 436, 437, 440, 441, 446, 447, 451, 453, 458, 459, 461, 467, 468, 474, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 504], "head": 481, "header": 381, "heart": 501, "heatmap": [99, 101], "help": [127, 308, 461, 463, 496, 498, 501], "helper": [311, 451, 453, 455, 458, 496], "henc": [372, 458, 461, 470, 488, 493, 504], "here": [58, 412, 436, 438, 440, 443, 444, 451, 452, 456, 458, 459, 467, 468, 470, 474, 476, 478, 479, 480, 486, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502], "herebi": 484, "herein": [484, 487], "heurist": [199, 377], "hidden": 500, "hierarch": 496, "hierarchi": [92, 481, 482, 487, 496], "high": [282, 435, 461, 476, 481, 482, 485, 487, 488, 493, 496], "higher": [158, 461, 480, 488, 491, 492, 494, 500, 502], "highest": [330, 485, 496, 497], "highlight": 501, "hing": 502, "hint": [482, 500], "histor": 493, "histori": 482, "hoc": 492, "hold": [47, 356, 484, 496, 500], "home": [446, 448, 449], "homepag": [479, 481], "hood": 493, "hook": [127, 222, 231, 232, 236, 308, 361, 477, 480, 481, 482], "hope": 476, "hopp": [479, 483], "host": [127, 308, 481], "hot": [149, 437, 461, 479, 481, 493], "how": [56, 127, 250, 252, 308, 311, 377, 392, 420, 435, 436, 438, 439, 440, 441, 442, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 468, 470, 471, 472, 474, 476, 479, 487, 488, 492, 497, 498, 499, 500, 501, 502, 503], "howev": [127, 161, 222, 250, 267, 308, 361, 451, 458, 461, 467, 468, 476, 478, 480, 482, 484, 485, 486, 487, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 504], "hrovatin": [479, 483], "hsuan": 483, "html": [104, 168, 349, 412, 455, 481], "http": [104, 168, 284, 349, 362, 390, 412, 479, 481, 484], "hue": [435, 436, 437, 438, 452, 474, 476], "human": [221, 405, 470, 481, 483, 496], "hybrid": [27, 28, 75, 190, 191, 199, 211, 216, 217, 441, 442, 446, 447, 448, 449, 465, 470, 477, 479, 481, 494, 495], "hybrid_recommend": 468, "hybrid_sampl": [199, 494], "hypercel": 31, "hyperrectangl": [214, 495], "hypervolum": [9, 12, 15, 18, 31], "hypothesi": [479, 481, 482], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 74, 75, 81, 83, 84, 86, 88, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 229, 240, 245, 248, 250, 252, 254, 256, 259, 261, 263, 264, 266, 267, 268, 272, 275, 282, 286, 288, 290, 292, 296, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 343, 346, 347, 348, 349, 350, 351, 354, 355, 359, 361, 362, 366, 367, 368, 371, 372, 377, 381, 384, 385, 386, 387, 391, 392, 393, 396, 401, 402, 408, 409, 410, 412, 413, 414, 420, 421, 425, 432, 433, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 467, 468, 470, 471, 472, 474, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "ibm": 377, "icon": 455, "ideal": [486, 488, 498], "ident": [161, 326, 338, 342, 343, 476, 481, 490, 493, 496, 500, 501, 502], "identif": 461, "identifi": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 254, 356, 372, 392, 393, 452, 481, 488, 491, 492, 493, 495, 496, 498, 501], "identitytran": [446, 447, 448, 449, 470], "identitytransform": 502, "idx": [127, 308], "idx_offset": 48, "ignor": [124, 127, 129, 133, 135, 187, 199, 216, 250, 252, 254, 308, 359, 377, 390, 438, 452, 468, 481, 488, 496, 502, 504], "ignore_exampl": 481, "ignore_list": 389, "ignore_w": [127, 308], "ii": 484, "iii": 484, "illustr": [464, 466, 490], "iloc": 486, "imag": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 461, 481], "imagin": [458, 461, 476], "immedi": [127, 308, 451, 487], "immut": 481, "impact": [437, 474], "imperfect": 385, "implement": [23, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 181, 192, 210, 256, 264, 308, 333, 335, 363, 446, 452, 458, 476, 481, 482, 483, 485, 491, 494, 495, 498, 500, 501], "impli": [458, 479, 484, 488, 493], "implicitli": 496, "import": [9, 12, 15, 18, 90, 99, 129, 250, 252, 321, 329, 377, 452, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504], "impos": [458, 459, 481, 488], "imposs": [490, 496], "imprint": [476, 502], "improv": [3, 4, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 441, 444, 450, 452, 477, 479, 481, 484], "imput": [250, 252, 434, 438, 477, 479], "impute_mod": [250, 252, 254, 438, 498], "in_featur": [127, 308], "inabl": 484, "inaccuraci": [479, 481], "inact": [47, 160, 162, 199, 214, 481], "inactive_parameter_combin": [47, 214, 481], "inc": 501, "incident": 484, "includ": [65, 67, 124, 127, 129, 133, 135, 160, 189, 250, 308, 354, 355, 389, 436, 447, 456, 458, 471, 472, 474, 481, 482, 484, 485, 486, 488, 490, 504], "inclus": 484, "incom": [496, 502], "incompat": [71, 72, 73, 74, 75, 76, 103, 268, 448, 488], "incompatibilityerror": [34, 311], "incompatible_kei": [127, 308], "incompatibleacquisitionfunctionerror": 486, "incompatibleexplainererror": 491, "incomplet": [481, 486], "incompletemeasurementserror": 431, "inconsist": 481, "incorpor": [484, 486, 499, 504], "incorrect": 481, "incorrectli": 481, "increas": [11, 187, 254, 330, 474, 481, 485, 493, 501], "increment": 222, "incur": 484, "inde": 487, "indefinit": [187, 250], "indemn": 484, "indemnifi": 484, "indent": [381, 481], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 191, 250, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 455, 476, 481, 492, 494, 498, 499], "independentgaussiansurrog": [268, 286, 288, 290, 481], "index": [34, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 216, 254, 266, 342, 343, 377, 391, 392, 455, 456, 468, 470, 481, 486, 491, 493, 495, 498], "indexkernel": 481, "indic": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 94, 102, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 245, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 343, 346, 347, 364, 365, 377, 386, 402, 408, 409, 420, 458, 468, 481, 484, 486, 490, 494, 498, 499], "indirect": [354, 355, 484], "indistinguish": 458, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 55, 56, 119, 120, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 250, 266, 308, 334, 396, 452, 459, 464, 481, 484, 487, 490, 491, 492, 494, 497, 501, 502, 503], "induc": [47, 461], "induced_target": 476, "induced_wavelength": 476, "industri": 501, "ineffici": [222, 488], "inequ": [48, 214, 495], "inertia_": 377, "inf": [8, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 502], "infeas": [488, 490], "infer": [161, 474, 481, 495], "infin": 166, "infinit": [187, 188, 357, 401, 425, 426, 481, 493], "influenti": 501, "info": 481, "inform": [28, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 232, 236, 238, 303, 305, 308, 311, 377, 393, 408, 409, 436, 437, 438, 453, 458, 467, 468, 474, 476, 479, 481, 482, 484, 486, 489, 490, 492, 493, 495, 497, 500, 501, 503], "infrastructur": [481, 483], "infring": 484, "ingest": [222, 250, 481, 493, 494], "ingredi": [458, 459, 488, 500], "inher": [23, 160, 259, 261, 263, 268, 272, 286, 288, 290, 292, 458, 499], "inherit": 482, "init": [127, 308, 377], "init_weight": [127, 308], "initi": [110, 111, 112, 113, 114, 115, 116, 117, 121, 127, 189, 191, 199, 204, 205, 206, 207, 209, 210, 222, 250, 254, 308, 377, 420, 434, 446, 447, 448, 449, 452, 453, 470, 474, 476, 477, 481, 483, 486, 487, 493, 494, 496, 498, 501, 503], "initial_data": [250, 254, 436, 474, 498], "initial_recommend": [189, 441, 452, 453, 455, 456, 461, 470, 471, 472, 479, 494], "initial_recommender_cl": 481, "initial_strategi": 481, "initial_typ": 455, "initialis": 377, "inject": [496, 500], "inner": [182, 391, 491, 494, 496], "innerhtml": 455, "inplac": [127, 308, 437, 474, 504], "input": [43, 44, 45, 79, 124, 127, 129, 133, 135, 141, 144, 145, 147, 155, 158, 214, 216, 222, 236, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 356, 364, 377, 379, 380, 385, 386, 387, 391, 394, 395, 397, 402, 403, 410, 413, 420, 431, 432, 433, 435, 455, 464, 474, 481, 492, 496, 498, 501, 502], "input_dim": 455, "input_label": 386, "inputtransform": 423, "insid": [330, 452, 455, 456, 480, 496, 500], "insight": [99, 452, 479, 481, 483, 503], "inspect": [367, 451, 458, 503], "inspir": 502, "instabl": [481, 488], "instal": [210, 245, 481, 482, 488, 491, 493, 504], "instanc": [43, 44, 45, 55, 58, 99, 127, 189, 216, 246, 308, 377, 410, 447, 452, 458, 459, 479, 480, 482, 486, 487, 488, 491, 493, 495, 496, 498, 504], "instanti": [452, 487, 497], "instead": [127, 184, 186, 187, 188, 189, 308, 311, 372, 386, 394, 446, 448, 449, 479, 480, 481, 487, 488, 492, 493, 496, 497, 498, 500, 501, 502, 504], "institut": [483, 484], "instruct": [479, 481], "int": [9, 11, 12, 15, 17, 18, 23, 34, 37, 47, 48, 53, 99, 106, 107, 108, 111, 113, 114, 115, 116, 117, 124, 127, 129, 133, 135, 149, 162, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 250, 254, 256, 305, 306, 308, 311, 328, 377, 387, 396, 397, 414, 416, 417, 420, 421, 423, 446, 448, 449, 458, 461, 474, 481, 482, 493], "int64": 377, "integ": [37, 149, 216, 254, 468, 481, 482, 493], "integr": [17, 127, 308, 481, 482, 485, 487], "intend": [440, 451, 482, 494], "intens": 493, "intention": 484, "interact": [33, 34, 440, 479, 480, 487, 490, 496, 497], "interchang": [458, 502], "interconnect": 487, "interest": [487, 491, 492, 493, 504], "interfac": [181, 264, 274, 311, 451, 453, 481, 484, 487, 490, 491, 500, 503], "intermedi": [207, 420], "intern": [34, 48, 59, 127, 187, 308, 435, 452, 481, 486, 488, 493, 494, 495, 496, 502], "internship": 483, "interplai": 481, "interpol": [111, 282, 481, 500], "interpret": [9, 12, 15, 18, 216, 248, 322, 379, 456, 458, 471, 472, 474, 495, 498, 500, 502], "interrupt": 69, "intersect": 468, "interv": [34, 47, 154, 160, 162, 259, 261, 263, 268, 272, 286, 288, 290, 292, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 463, 481, 487, 493, 496, 500, 502], "intrins": 501, "introduc": [377, 480, 481, 488, 493, 494, 498], "intuit": [487, 491, 500], "invalid": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 80, 127, 222, 308, 372, 421, 456, 471, 480, 481, 487, 488, 495], "invalid_config": 472, "invalid_surrogate_model": 456, "invalid_typ": 472, "invari": [55, 58, 59, 342, 343, 488], "invers": 496, "invert": [34, 391], "investig": [248, 476, 498, 499], "invok": [127, 308, 498, 503, 504], "involv": [34, 222, 266, 451, 458, 476, 479, 491, 492, 493, 496, 501, 502], "ipu": [127, 308], "irrelev": [458, 481, 488], "irrevoc": 484, "is_bound": [402, 481], "is_cardinality_fulfil": 481, "is_continu": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158], "is_degener": 402, "is_discret": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158], "is_empti": [214, 222, 408, 409, 481], "is_eq": 48, "is_finit": 481, "is_fully_unbound": 402, "is_half_bound": 402, "is_in_rang": [140, 141, 142, 144, 145, 147, 154, 155, 158], "is_inact": 481, "is_left_bound": 402, "is_mc": 481, "is_multi_output": [124, 129, 133, 135, 481], "is_norm": [311, 481], "is_numer": [140, 141, 142, 144, 145, 147, 154, 155, 158, 481], "is_right_bound": 402, "is_stat": [184, 186, 187, 188, 189, 481, 490], "isinst": 502, "iso": 455, "isol": 487, "isoxazol": 501, "issu": [267, 349, 362, 395, 481, 484, 498, 504], "item": [44, 140, 141, 142, 144, 145, 147, 154, 155, 158, 458, 461, 474, 493], "iter": [9, 12, 15, 18, 34, 44, 47, 119, 120, 127, 129, 133, 144, 145, 147, 158, 187, 188, 214, 216, 222, 250, 267, 308, 311, 333, 334, 335, 338, 352, 357, 362, 377, 383, 385, 387, 395, 400, 402, 430, 432, 433, 436, 446, 447, 448, 449, 452, 453, 461, 474, 476, 479, 481, 485, 487, 493, 494, 498, 499, 504], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 214, 216, 222, 238, 240, 256, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 353, 361, 367, 402, 405, 408, 409, 428, 435, 441, 451, 453, 458, 459, 461, 474, 476, 479, 480, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504], "itself": [127, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 451, 480, 481, 500, 501], "j": [127, 308, 437, 479, 493, 501], "jackiepho": [436, 437, 438], "jan": 479, "januari": 484, "javadi": 483, "jin": 483, "joblib": 348, "join": [391, 480], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 197, 199, 266, 487, 499, 503], "joint_acq_valu": 487, "joint_acquisition_valu": [34, 197, 199, 481, 487], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 464, 487], "jonathan": 483, "journal": [377, 479], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 455, 456, 470, 471, 481, 503], "json_str": 496, "juli": 483, "julian": 483, "jump": [481, 501], "jun": 377, "jupyt": 455, "just": [461, 478, 481, 482, 496, 500, 502], "k": [155, 205, 377, 420, 435, 436, 437, 438, 440, 441, 443, 444, 452, 458, 464, 466, 467, 468, 481, 490, 494, 504], "karin": [479, 483], "kathrin": 483, "kde": 453, "keep": [54, 158, 214, 222, 452, 463, 481, 482], "keep_var": [127, 308], "kei": [127, 286, 292, 298, 308, 356, 437, 482, 491], "kept": [391, 493], "kernel": [106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 272, 273, 274, 275, 276, 282, 284, 377, 441, 446, 447, 448, 449, 470, 481, 488, 501], "kernel_factori": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 272, 274, 275], "kernel_or_factori": 272, "kernel_s": [127, 308], "kernelexplain": [97, 99, 100, 103, 491], "kernelfactori": [272, 275, 276, 282, 284, 481], "keyword": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 438, 441, 468, 474, 481, 486, 488, 495, 498], "kgaa": [479, 483], "kian": 501, "kickstart": 496, "kind": [199, 479, 481, 484, 488, 493, 494], "kiter": [446, 447, 448, 449], "klekotaroth": 152, "klekotarothfingerprint": 152, "kmean": [377, 441], "kmeansclusteringrecommend": [441, 494], "knob": 479, "know": [461, 463, 471, 479, 480, 492, 496, 501], "knowledg": [8, 11, 479, 481, 501, 502], "known": [476, 488, 490, 499, 501], "koller": 501, "kwarg": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 264, 266, 268, 269, 272, 274, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 373, 377, 387, 401, 402, 408, 409, 481], "kwargs_conform": [158, 373, 493], "kwargs_fingerprint": [158, 373, 493], "l": [127, 308], "l0": 37, "l1": 493, "l664": 284, "lab": 476, "label": [58, 59, 147, 158, 377, 386, 458, 459, 464, 479, 481, 488, 490, 495, 498], "labelcolor": 476, "labelpad": 453, "labels_": 377, "laboratori": 464, "lack": 476, "laggner": 152, "laggnerfingerprint": 152, "lambda": [446, 448, 449, 452, 458, 476, 499], "lambda_1": [455, 476], "lambda_2": [455, 476], "lambda_init": 455, "lanat": 491, "land": 481, "languag": [349, 459, 479], "larg": [158, 222, 377, 443, 444, 459, 481, 488, 493, 498, 504], "larger": [111, 155, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 421, 441, 448, 476, 487, 488, 496, 501], "largest": [209, 420, 461, 485], "laser": [475, 477], "last": [187, 461, 482, 487, 494, 503], "last_call_tim": 451, "lastli": 453, "latent": 493, "later": [155, 480, 486, 487, 496, 497], "latest": [188, 245, 479, 482, 487], "latter": [23, 34, 127, 308, 342, 367, 377, 452, 458, 487, 492, 497, 500, 501, 502], "law": [479, 484], "lawsuit": 484, "layer": [152, 502], "layeredfingerprint": 152, "layout": 481, "lazi": [224, 481], "lazili": 481, "lazyfram": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 224], "le": 444, "le_method": 482, "lead": [31, 89, 476, 481, 496, 502], "lean": 482, "learn": [17, 255, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 377, 441, 446, 447, 448, 449, 461, 470, 477, 479, 481, 483, 488, 491, 493, 499, 500, 502, 503], "least": [162, 187, 459, 479, 484, 486, 487], "leav": 496, "lee": 483, "left": [86, 87, 178, 250, 330, 331, 384, 392, 402, 447, 464, 476, 481, 492, 502], "left_df": 392, "leftov": 481, "legaci": [311, 481, 500], "legal": 484, "legend": [436, 438, 464, 476], "len": [447, 452, 453, 458, 459, 461], "length": [112, 187, 188, 259, 362], "lengthi": 487, "lengthscal": [111, 112, 113, 115, 116, 117], "lengthscale_initial_valu": [111, 112, 113, 115, 116, 117], "lengthscale_prior": [111, 112, 113, 115, 116, 117], "leq": [37, 330, 502], "less": [8, 31, 343, 387, 420, 452, 453, 461, 487, 488, 500, 504], "let": [127, 308, 435, 437, 451, 452, 453, 455, 456, 458, 459, 464, 466, 474, 476, 479, 486, 488, 492, 496, 500, 502], "letter": 497, "level": [385, 481, 482, 486, 487, 488, 494, 496, 502], "leverag": [452, 486, 487, 494], "li": [162, 463, 493], "liabil": 484, "liabl": 484, "lib": 480, "librari": [480, 481], "licensor": 484, "lie": [34, 259, 261, 263, 268, 272, 286, 288, 290, 292], "liebig": [479, 483], "life": [479, 482, 483, 504], "lifecycl": 487, "ligand": [436, 437, 438, 440, 441, 452, 479, 491, 493], "ligand_data": 452, "ligand_smil": 452, "like": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 207, 214, 216, 222, 240, 254, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 377, 402, 408, 409, 453, 458, 461, 463, 479, 480, 481, 482, 486, 487, 488, 490, 496, 498, 501, 502, 504], "likelihood": 259, "lime": [99, 102, 491], "limetabular": [97, 98, 491], "limit": [8, 282, 453, 479, 483, 484, 492, 495, 502, 503], "line": [127, 308, 381, 402, 436, 438, 452, 461, 481, 482, 485, 487, 493, 498, 500, 501], "linear": [48, 110, 127, 214, 286, 308, 441, 442, 476, 477, 481, 482, 491, 495, 500], "linear_model": 455, "linear_regressor": 455, "linear_transform": 481, "linearkernel": 481, "linearli": [282, 330, 481, 500], "lineplot": [435, 436, 437, 438, 452, 474, 476], "lingo": 152, "lingofingerprint": 152, "link": [57, 480, 481, 484, 493, 497], "linspac": [446, 447, 448, 449, 453, 455, 456, 458, 464, 467, 468, 470, 474, 476, 500, 502, 504], "lint": [479, 481, 482], "linter": [481, 482], "list": [37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 161, 167, 187, 188, 214, 216, 222, 223, 224, 227, 228, 229, 247, 250, 254, 256, 308, 354, 355, 356, 366, 373, 388, 389, 390, 393, 420, 436, 441, 446, 447, 448, 449, 453, 458, 459, 461, 467, 468, 474, 479, 481, 482, 484, 488, 492, 493, 494, 495, 498], "liter": [34, 99, 187, 250, 252, 254, 259, 261, 262, 263, 266, 268, 272, 286, 288, 290, 292, 385, 420, 482], "literatur": 481, "litig": 484, "littl": 480, "live": [127, 308, 499], "liver": [498, 501], "ll": 490, "ller": 479, "ln": 502, "load": [127, 308, 452, 455, 471, 472, 480, 481], "load_state_dict": [127, 308], "loc": [176, 177, 436, 438, 464, 486], "local": [127, 308, 480, 481, 482, 491, 503], "local_metadata": [127, 308], "locat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 377, 402, 408, 409, 486, 501, 502], "lock": 481, "lockfil": 481, "log": [176, 311, 441, 481], "logarithm": [4, 12, 13, 15, 16, 311, 327], "logarithmictransform": [500, 502], "logei": [4, 481], "logic": [182, 266, 386, 435, 463, 481, 488, 494, 498, 500, 502, 504], "lognormalprior": 481, "logo": 481, "long": [487, 496, 498], "longer": [160, 481], "look": [127, 250, 252, 308, 441, 458, 461, 480, 485, 487, 488, 489, 490, 491, 496, 497, 498, 500], "look_up_target": 250, "lookup": [248, 250, 254, 256, 386, 392, 434, 435, 453, 464, 467, 476, 477, 481, 491, 503], "lookup_df": 252, "lookup_test_task": 474, "lookup_training_task": 474, "lookup_valu": [443, 444, 453, 467, 468], "lookup_withmiss": 438, "loop": [248, 250, 256, 446, 447, 448, 449, 452, 481, 486, 491, 498, 503, 504], "loss": [463, 484, 502], "lost": 496, "lot": 466, "low": [282, 461, 479, 480, 481, 491, 493, 496], "lower": [162, 178, 402, 436, 438, 453, 474, 488, 493, 500], "lower_bound": 495, "lower_threshold": 162, "lst_exclud": 388, "lt": 480, "luxuri": 487, "m": [127, 308, 458, 479], "m1": 480, "mac": 480, "macc": 152, "maccsfingerprint": 152, "machin": [461, 480, 481, 482, 485, 493, 500, 501], "machineri": [23, 199, 480, 481, 482, 490, 501, 504], "made": [34, 90, 127, 250, 308, 420, 438, 479, 480, 484, 488, 498], "magic": 501, "magnitud": [322, 384, 385, 488, 502, 504], "mai": [34, 47, 124, 127, 129, 133, 135, 216, 308, 361, 377, 478, 479, 484, 487, 490, 496, 498, 499, 500], "mail": 484, "main": [33, 34, 479, 481, 488], "maintain": [296, 482, 490, 492], "major": [481, 498], "make": [59, 127, 199, 259, 261, 263, 268, 272, 286, 288, 290, 292, 294, 295, 296, 308, 349, 384, 386, 436, 438, 441, 443, 458, 459, 476, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 493, 496, 499, 501, 504], "make_base_structure_hook": 481, "make_explainer_for_surrog": 99, "malfunct": 484, "manag": [33, 214, 215, 216, 222, 417, 481, 484, 497, 498], "mandatori": [478, 481], "mani": [199, 421, 458, 467, 468, 479, 487, 488, 493, 496, 500, 501, 502], "manipul": 481, "manual": [468, 480, 481, 496, 499, 500, 503], "map": [147, 152, 158, 252, 254, 266, 321, 359, 377, 386, 423, 436, 437, 438, 498, 500, 502], "mapfingerprint": 152, "mapl": [97, 98, 99, 102, 491], "mapped_to_on": 321, "mapped_to_zero": 321, "maranzana": 377, "marcel": 479, "margin": [311, 330, 481, 500, 502], "mark": [484, 487, 501, 503], "markdown": [456, 471, 472, 481], "marker": [435, 436, 437, 438, 452, 474, 476, 481], "markers": [435, 437, 452, 464, 474], "market": 461, "marketplac": 481, "martin": [479, 483], "mask_bad1": 446, "mask_bad2": 446, "mask_bad3": 446, "mask_good": [446, 488], "mass": 172, "master": 284, "match": [34, 91, 93, 141, 144, 145, 147, 155, 158, 161, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 303, 305, 311, 359, 361, 392, 393, 432, 451, 453, 463, 468, 479, 481, 486, 487, 490, 496, 498, 503], "match_": [481, 500], "match_absolut": [311, 481, 492, 496, 500], "match_attribut": 481, "match_bel": [311, 463, 476, 481, 492, 500], "match_pow": [311, 481, 500], "match_quadrat": [311, 481, 500], "match_triangular": [311, 481, 500], "match_valu": [311, 463, 481, 492, 496, 500], "materi": [461, 483, 501], "matern": 111, "maternkernel": 481, "math": [452, 458], "mathemat": [317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 476, 481, 502], "mathia": 479, "matmin": 480, "matplotlib": [436, 438, 453, 464, 476, 481], "matrix": 377, "matter": [458, 463, 466, 482, 492, 500, 502], "max": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 384, 402, 436, 438, 453, 461, 476, 479, 481, 492, 500, 502], "max_cardin": [37, 47, 53, 488], "max_column": [396, 458], "max_colwidth": 396, "max_it": [377, 455], "max_n_subspac": [199, 481, 488], "max_nonzero": 222, "max_row": [396, 458], "max_sum": [222, 458, 495], "max_yield": [436, 438], "maxim": [6, 9, 12, 15, 18, 127, 311, 440, 453, 461, 463, 479, 481, 491], "maximum": [6, 37, 47, 53, 63, 158, 199, 214, 216, 222, 311, 322, 377, 396, 458, 459, 481, 488, 493, 495], "mc": [461, 486], "mc_obj": 127, "mcacquisitionobject": [124, 127, 129, 133, 135, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "md": 481, "me2pph": [436, 437, 438], "mean": [5, 8, 23, 34, 59, 131, 205, 248, 250, 252, 254, 259, 261, 262, 263, 266, 268, 272, 286, 288, 290, 292, 296, 438, 441, 455, 461, 463, 464, 481, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 496, 499, 500, 503], "meaning": [408, 409, 492], "meaningless": [458, 485], "meanpredictionsurrog": [296, 441, 499], "meantim": [482, 488, 497], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 77, 85, 99, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 248, 250, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 303, 305, 311, 387, 392, 408, 431, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 463, 467, 468, 470, 476, 478, 479, 481, 482, 485, 486, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 503], "measurablemetadata": [140, 141, 142, 144, 145, 147, 154, 155, 158, 303, 305, 311, 407, 481], "mechan": [34, 69, 127, 129, 131, 248, 251, 252, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 361, 377, 391, 403, 420, 435, 451, 452, 453, 474, 481, 484, 486, 490, 491, 493, 495, 496, 499, 501, 503], "mechanist": 479, "media": [484, 493, 501], "medic": 486, "mediocr": 500, "medium": [456, 470, 479, 484, 493], "medoid": [206, 377, 481, 494], "medoid_indices_": 377, "meet": [331, 484, 502], "mem_estim": 504, "member": [127, 308, 364, 367, 488, 493], "memo": [127, 308], "memori": [11, 127, 216, 221, 222, 308, 348, 377, 437, 438, 446, 447, 452, 456, 458, 471, 481, 488, 503], "memory_format": [127, 308], "memorys": [216, 222, 504], "mention": 485, "merchant": 484, "merck": [479, 483], "mere": [484, 492], "merg": 482, "meshgrid": [464, 474], "messag": [91, 452], "meta": [34, 86, 184, 186, 187, 188, 189, 192, 446, 447, 448, 449, 470, 479, 481, 503], "metadata": [34, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 214, 222, 303, 305, 311, 377, 408, 476, 481, 483], "metadatarequest": 377, "metarecommend": [186, 187, 188, 189, 481, 490], "meth": 497, "methan": 496, "methanol": 458, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 94, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 221, 222, 240, 245, 259, 261, 263, 264, 266, 268, 272, 274, 275, 282, 284, 286, 288, 290, 292, 295, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 349, 361, 364, 365, 367, 377, 402, 408, 409, 419, 420, 421, 423, 453, 456, 463, 471, 472, 478, 481, 483, 487, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502], "methodtyp": [451, 452, 453], "methyldiphenylphosphin": [436, 437, 438], "methylisoxazol": 501, "metric": [377, 461, 493], "mhfp": 152, "mhfpfingerprint": 152, "mi": 500, "micromamba": 481, "mid": 502, "middl": 490, "midpoint": [311, 331, 502], "might": [55, 59, 158, 216, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 437, 441, 443, 447, 468, 474, 480, 482, 486, 487, 488, 491, 495, 497, 498, 500, 501, 503, 504], "migrat": 481, "mimic": [104, 168, 488], "min": [311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 384, 402, 476, 479, 481, 502], "min_cardin": [37, 47, 53, 488], "min_nonzero": 222, "mind": 461, "miniconda": 481, "minim": [6, 311, 377, 435, 443, 444, 446, 447, 448, 449, 453, 463, 464, 467, 468, 470, 474, 481, 488, 492, 495, 496, 503], "minimum": [37, 47, 53, 63, 82, 155, 214, 216, 222, 311, 338, 420, 481, 488], "minimumcardinalityviolatedwarn": [481, 488], "minor": [481, 503], "mirror": [9, 12, 15, 18, 487, 496], "misc": [408, 409], "mismatch_instead": [311, 481, 500], "miss": [127, 250, 252, 308, 394, 431, 432, 433, 438, 481, 482, 486], "missing_kei": [127, 308], "mistak": [34, 482], "mix": [256, 458, 459, 479, 488, 493, 496, 501], "mixin": 240, "mixtur": [204, 477, 481, 488, 493, 494, 501, 504], "mobil": 481, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 127, 147, 158, 187, 250, 259, 261, 262, 263, 266, 268, 272, 286, 288, 290, 292, 308, 311, 359, 434, 476, 477, 479, 480, 481, 487, 494], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 80, 83, 99, 103, 104, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 259, 261, 263, 264, 265, 266, 267, 268, 272, 286, 288, 290, 292, 296, 300, 308, 412, 443, 444, 454, 464, 474, 479, 481, 483, 485, 486, 487, 492, 493, 494, 496, 498, 500, 501, 503], "model_cl": 300, "model_cluster_num_parameter_nam": [204, 205, 206, 207], "model_from_config": 455, "model_from_python": 455, "model_json": 455, "model_param": [204, 205, 206, 207, 286, 290, 292, 456, 481], "modellist": 266, "modelnottrainederror": [259, 261, 263, 268, 272, 286, 288, 290, 292], "modern": 311, "modif": [127, 308, 480, 484], "modifi": [127, 188, 252, 296, 308, 383, 384, 385, 481, 484, 497, 504], "modul": [0, 1, 35, 95, 96, 104, 122, 127, 138, 156, 168, 179, 182, 192, 195, 200, 212, 230, 231, 244, 248, 257, 260, 270, 277, 297, 301, 304, 308, 315, 340, 344, 374, 375, 399, 406, 411, 424, 479, 480, 481, 482, 502], "modular": 482, "molecul": [57, 158, 372, 458, 493], "molecular": [373, 493], "moment": [256, 282, 482, 503], "monitor": 481, "monkeypatch": 480, "monoton": 317, "monotonictransform": [321, 323, 325, 326, 327, 329], "mont": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 84, 127, 254, 435, 437, 438, 452, 461, 474, 476, 481, 486, 498], "monte_carlo_run": [254, 452, 476], "mordr": [152, 158, 436, 437, 438, 440, 441, 447, 452, 456, 458, 471, 472, 479, 481, 488, 493], "mordredcommun": 481, "mordredfingerprint": [152, 438, 447, 452, 456, 458, 471, 493], "more": [8, 11, 31, 59, 67, 87, 127, 158, 187, 188, 210, 214, 216, 222, 229, 250, 296, 308, 311, 367, 377, 381, 398, 420, 430, 438, 441, 453, 458, 459, 463, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 493, 495, 496, 497, 498, 499, 500, 502, 504], "morgan": 493, "morgan_fp": [152, 481], "mors": [152, 496], "morsefingerprint": 152, "most": [222, 250, 439, 461, 479, 482, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "motiv": 481, "mous": 486, "move": [9, 12, 15, 18, 127, 160, 308, 481, 496], "mpl_toolkit": 453, "mplot3d": 453, "mqn": 152, "mqnsfingerprint": 152, "mse": 461, "mtia": [127, 308], "mu": [176, 177], "much": [437, 488, 492, 493], "multi": [99, 127, 132, 250, 258, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 308, 463, 464, 477, 479, 481, 483, 501, 503], "multiarmedbandit": 461, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 43, 124, 129, 133, 135, 253, 254, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 321, 385, 436, 437, 438, 447, 458, 461, 479, 481, 486, 488, 491, 492, 497, 499, 500, 501, 503], "multiplex": 476, "multipli": [120, 335, 502], "multiplicativetransform": 502, "multitask": 481, "must": [55, 124, 129, 133, 135, 216, 222, 252, 256, 329, 361, 377, 385, 432, 441, 451, 452, 458, 461, 476, 481, 482, 484, 485, 488, 490, 491, 492, 493, 498], "mutual": 498, "my_attribut": 482, "mypi": [349, 362, 479, 481, 482], "mystr": 482, "n": [28, 127, 259, 308, 343, 368, 420, 436, 437, 438, 440, 441, 446, 447, 448, 449, 456, 458, 461, 467, 468, 470], "n_arm": 461, "n_batches_don": 34, "n_cluster": [205, 206, 377], "n_combin": 458, "n_combinations_actu": 458, "n_combinations_expect": 458, "n_compon": 204, "n_doe_iter": [250, 254, 256, 435, 436, 437, 438, 452, 453, 474, 476, 498], "n_duplic": 458, "n_estim": 456, "n_featur": 377, "n_features_new": 377, "n_fits_don": 34, "n_grid_point": 464, "n_inactive_parameter_combin": [47, 214, 481], "n_index": 377, "n_interrupted_campaign": 452, "n_iter": [443, 444, 446, 447, 448, 449, 461], "n_mc_iter": [254, 256, 435, 437, 438, 452, 474, 476, 498], "n_mc_run": 461, "n_mc_sampl": 23, "n_output": [31, 124, 129, 133, 135, 377, 481], "n_permut": 458, "n_pis_ov": 452, "n_pis_over_requir": 452, "n_point": 421, "n_queri": 377, "n_raw_sampl": [199, 481, 494], "n_restart": [199, 481, 494], "n_row": 387, "n_sampl": [31, 377, 420], "n_task": 216, "n_task_param": 481, "n_training_data": 464, "n_wrong_sum": 458, "na": 486, "nactivevalu": [446, 447, 448, 449, 470], "naiv": [191, 288, 296, 441, 481, 495], "naivehybridrecommend": 481, "naivehybridspacerecommend": [468, 481, 494], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 47, 67, 90, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 163, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 228, 254, 266, 268, 303, 305, 308, 311, 342, 353, 359, 360, 361, 372, 373, 377, 381, 388, 392, 393, 394, 430, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 481, 482, 484, 486, 487, 488, 492, 495, 496, 498, 499, 500, 501, 502, 504], "name_or_abbr": [353, 360], "named_buff": [127, 308], "named_children": [127, 308], "named_modul": [127, 308], "named_paramet": [127, 308], "namedtupl": [127, 308, 461], "namespac": [481, 482], "nan": [166, 259, 394, 402, 425, 427, 429, 432, 433, 446, 447, 448, 449, 470, 481, 486], "nativ": [455, 481, 499], "natur": [290, 437, 482, 488, 494, 496, 500], "navig": [455, 479, 487], "nbase": 373, "nbsp": 455, "nbviewer": 455, "nd": 479, "ndarrai": [9, 12, 15, 18, 162, 377, 386, 397, 402, 420, 453, 461, 464, 481, 498], "ne": 458, "necessari": [393, 451, 463, 481, 482, 487, 488, 492, 493, 495, 498, 499, 500], "necessarili": [250, 484, 487, 488, 495, 501, 502], "need": [28, 34, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 256, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 308, 361, 392, 393, 436, 437, 438, 441, 446, 449, 451, 453, 455, 458, 461, 474, 476, 478, 479, 480, 481, 482, 486, 487, 488, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 504], "neg": [17, 464, 481, 488, 500], "negat": [6, 48, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 474, 476, 481, 501, 502], "neglig": 484, "neither": [8, 256, 385], "neq": 37, "nest": [127, 308, 377, 381, 487, 503], "net": [127, 308], "net_b": [127, 308], "net_c": [127, 308], "network": [127, 308], "neural": 501, "neutral": 8, "never": [448, 486], "nevertheless": [367, 480], "new": [34, 50, 51, 127, 187, 189, 214, 252, 267, 308, 342, 377, 390, 391, 394, 440, 452, 453, 470, 479, 481, 482, 487, 488, 497, 499, 500, 501, 502, 503], "new_measur": 491, "new_rec": 487, "newli": [479, 482, 490, 501], "next": [34, 435, 451, 453, 458, 459, 463, 464, 470, 474, 479, 485, 486, 487, 494, 496, 502], "nextelements": 455, "ngboost": [290, 441, 481], "ngboostmodel": 456, "ngboostsurrog": [441, 456, 481, 499], "nice": [453, 480], "nicknam": 372, "nm": 476, "nn": [127, 308], "no_duplicates_constraint": 458, "no_grad": [127, 308], "nois": [250, 384, 385, 474, 481, 503], "noise_level": 385, "noise_perc": [250, 254, 498], "noise_ratio": 384, "noise_std": 474, "noise_typ": 385, "noisi": [15, 16, 18, 19, 387, 479, 481, 501], "non": [66, 67, 98, 124, 127, 129, 133, 135, 184, 186, 187, 188, 189, 191, 216, 250, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 359, 361, 367, 384, 420, 421, 425, 426, 427, 432, 433, 458, 479, 481, 484, 486, 488, 490, 491, 495, 496, 500, 503], "non_block": [127, 308], "non_existent_set": 497, "nondominatedpartit": 31, "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 77, 85, 90, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 219, 222, 225, 228, 229, 240, 245, 246, 250, 252, 254, 256, 259, 261, 263, 264, 266, 268, 272, 275, 286, 288, 290, 292, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 346, 347, 361, 364, 373, 377, 388, 389, 390, 396, 400, 402, 407, 408, 409, 410, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 441, 446, 447, 448, 449, 451, 452, 453, 455, 456, 470, 486, 495, 497, 500, 502, 503], "nonetheless": 501, "nonlinear": [40, 214, 476, 500], "nonpredict": [202, 204, 205, 206, 207, 209, 210, 211], "nonpredictiverecommend": [207, 210, 211, 481], "nonzero": [37, 47, 222, 481], "noqa": [127, 308, 446, 482], "nor": [8, 385, 478], "norecommenderslefterror": [187, 188], "noreturn": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 233, 234, 269], "normal": [129, 175, 176, 177, 245, 311, 428, 446, 448, 449, 480, 481, 484, 495, 502, 503], "normalize_input_dtyp": 481, "normalized_": 500, "normalized_ramp": [311, 463, 481, 486, 492, 500], "normalized_sigmoid": [311, 481, 486, 492, 500], "normalprior": 481, "not_a_param": 456, "not_representing_a_boolean": 497, "notabl": [481, 490, 499], "notat": 502, "note": [37, 47, 59, 127, 216, 250, 254, 256, 267, 268, 308, 377, 384, 385, 436, 437, 438, 441, 447, 451, 455, 456, 458, 463, 467, 468, 470, 471, 472, 478, 479, 487, 488, 490, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503], "notebook": 455, "noteworthi": 487, "noth": [17, 34, 37, 45, 47, 48, 53, 88, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 189, 191, 197, 199, 204, 205, 206, 207, 210, 214, 216, 222, 245, 259, 272, 286, 290, 292, 303, 305, 330, 408, 409, 484, 493], "notic": [451, 476, 482, 484, 496, 499, 500, 502], "notimplementederror": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 160, 229, 233, 234, 256, 259, 261, 263, 267, 268, 272, 286, 288, 290, 292], "notwithstand": 484, "now": [435, 436, 437, 438, 440, 441, 446, 448, 451, 452, 453, 458, 459, 461, 463, 464, 466, 470, 471, 474, 476, 478, 479, 481, 489, 501, 504], "np": [377, 443, 444, 446, 447, 448, 449, 453, 455, 456, 458, 459, 461, 464, 466, 467, 468, 470, 474, 476, 486, 488, 493, 498, 500, 504], "nrecommend": [440, 441, 467, 468], "nu": 111, "num": [391, 405], "num_disc_1": 487, "num_experi": [250, 435, 436, 437, 438, 452, 474, 476], "num_fantasi": 11, "num_featur": [127, 308], "num_parameter_1": 449, "num_parameter_2": 449, "num_parameter_3": 449, "num_parameter_4": 449, "num_parameter_5": 449, "num_parameter_6": 449, "num_sampl": 116, "num_valu": 495, "number": [11, 17, 23, 34, 47, 116, 124, 127, 129, 133, 135, 158, 181, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 250, 254, 256, 259, 308, 350, 377, 387, 396, 402, 405, 415, 420, 421, 436, 437, 438, 443, 444, 446, 447, 448, 449, 453, 458, 461, 467, 474, 479, 480, 481, 485, 487, 488, 492, 493, 495, 496, 498, 502, 504], "numer": [9, 12, 15, 18, 34, 37, 38, 39, 40, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 89, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 214, 222, 252, 311, 314, 384, 385, 392, 421, 432, 433, 435, 440, 443, 458, 459, 463, 479, 481, 488, 491, 492, 493, 495, 498, 500, 502], "numerical_measurements_must_be_within_toler": [34, 428, 432, 481, 487], "numerical_onli": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61], "numericalcontinuousparamet": [48, 65, 160, 214, 435, 443, 444, 459, 463, 464, 466, 468, 474, 476, 495, 496, 498, 503], "numericaldiscreteparamet": [222, 436, 437, 438, 440, 441, 443, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 467, 468, 470, 471, 472, 474, 479, 495, 496, 498, 503, 504], "numericaltarget": [129, 133, 252, 314, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 452, 453, 455, 456, 463, 464, 467, 468, 470, 471, 472, 474, 476, 479, 481, 486, 492, 496, 498, 502, 503], "numericcontinu": 468, "numparam1": 449, "numparam2": 449, "numparam3": 449, "numparam4": 449, "numparam5": 449, "numparam6": 449, "numpi": [162, 245, 377, 386, 397, 402, 443, 444, 446, 447, 448, 449, 453, 455, 456, 458, 459, 461, 464, 466, 467, 468, 470, 474, 476, 481, 486, 488, 498, 500, 504], "nuniqu": 458, "nyou": [467, 468], "o": [127, 308, 377, 435, 436, 437, 438, 440, 441, 444, 446, 447, 448, 449, 452, 453, 456, 458, 461, 464, 474, 476, 479, 488, 493], "o2": [436, 437, 438, 452], "obj": [165, 166, 167, 234, 486], "obj_pr": 486, "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 223, 224, 232, 234, 235, 238, 240, 245, 259, 261, 263, 264, 266, 268, 272, 275, 286, 288, 290, 292, 299, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 349, 359, 361, 377, 385, 392, 393, 395, 398, 402, 406, 407, 408, 409, 423, 428, 430, 431, 435, 440, 451, 452, 453, 455, 456, 461, 464, 466, 468, 471, 472, 476, 480, 481, 482, 484, 486, 488, 490, 491, 494, 495, 497, 498, 499, 500, 502, 503, 504], "objective_json": 496, "oblig": 484, "observ": [248, 259, 261, 263, 268, 272, 286, 288, 290, 292, 461, 476, 498, 500], "obsolet": 481, "obtain": [250, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 437, 453, 461, 464, 474, 479, 481, 487, 491, 492, 496, 500, 501], "oc": [436, 437, 438, 440, 441], "oc1": [436, 437, 438], "occur": [58, 476, 482], "occurr": [486, 488], "octanol": [488, 493], "off": [8, 256, 368, 447, 481, 486, 488, 492], "offer": [361, 453, 458, 461, 463, 467, 478, 479, 480, 484, 485, 488, 489, 490, 493, 494, 496, 497, 498, 499, 500, 501, 504], "offset": [48, 114], "offset_initial_valu": 114, "offset_prior": 114, "often": [317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 459, 461, 480, 485, 488, 490, 491, 493, 496, 502, 504], "oftentim": [496, 498], "oh": [144, 149, 437, 447, 456, 461, 470, 471, 472, 479, 495, 496], "old": [501, 503], "omit": [9, 12, 15, 18, 197, 199, 254, 311, 361, 451, 479, 495, 496], "onc": [127, 254, 308, 452, 463, 493, 497, 498], "onclick": 455, "one": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 229, 240, 250, 252, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 296, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 342, 343, 381, 387, 402, 408, 409, 436, 437, 438, 441, 443, 458, 461, 472, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502], "onehot": 437, "ones": [127, 216, 308, 392, 437, 468, 481, 486, 500, 501, 502], "ongo": [452, 482, 501], "onli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 210, 214, 216, 222, 240, 252, 256, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 296, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 361, 362, 367, 377, 381, 392, 394, 402, 408, 409, 420, 421, 436, 441, 446, 447, 452, 453, 455, 456, 458, 463, 467, 468, 474, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 504], "onlin": 461, "onnx": [267, 268, 412, 454, 479, 481, 499], "onnx_input_nam": [268, 455], "onnx_str": [268, 455, 481], "onto": [9, 12, 15, 18, 476, 482], "open": [34, 47, 160, 162, 259, 261, 263, 268, 272, 286, 288, 290, 292, 482], "opentelemetri": 481, "oper": [45, 48, 56, 127, 259, 261, 263, 268, 272, 286, 288, 290, 292, 296, 308, 314, 386, 411, 443, 444, 448, 449, 458, 459, 476, 480, 481, 486, 488, 490, 491, 494, 496, 503], "operator_convert": 455, "opposit": 488, "optic": 476, "optim": [14, 23, 34, 47, 48, 78, 127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 248, 250, 254, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 437, 439, 440, 443, 444, 452, 453, 458, 461, 468, 481, 483, 485, 488, 491, 492, 493, 494, 495, 498, 499, 501, 502, 503], "optimize_acqf": [48, 199], "optimize_acqf_": 48, "optimize_acqf_discret": 199, "optimize_acqf_mix": 199, "optimum": 476, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 90, 95, 99, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 250, 254, 256, 286, 290, 292, 303, 305, 308, 311, 361, 373, 377, 388, 389, 390, 428, 438, 441, 455, 456, 461, 463, 480, 481, 482, 485, 487, 488, 490, 491, 492, 495, 496, 498, 499, 500, 502, 504], "oracl": 498, "orang": 476, "orchestr": [482, 487], "order": [127, 216, 222, 308, 452, 461, 478, 479, 481, 482, 487, 488, 493, 496, 497, 500, 501], "ordereddict": [127, 308], "ordin": [329, 500], "org": [284, 349, 390, 455, 479, 484], "organ": [482, 497], "origin": [28, 34, 160, 342, 343, 356, 377, 386, 395, 470, 478, 481, 482, 484, 492, 494, 496], "originalhtml": 455, "originalstyl": 455, "originalwidth": 455, "orthogon": 482, "oserror": 480, "other": [55, 118, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 214, 303, 305, 308, 311, 343, 436, 438, 440, 441, 443, 444, 452, 459, 461, 463, 468, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504], "otherwis": [48, 63, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 210, 308, 395, 420, 484, 485, 490, 501], "our": [435, 446, 448, 451, 452, 453, 456, 458, 459, 461, 463, 464, 466, 467, 468, 471, 472, 474, 476, 479, 482, 485, 487, 488, 490, 496, 497, 498], "out": [127, 222, 308, 329, 420, 474, 479, 484, 492, 498, 501], "out_featur": [127, 308], "out_par": 464, "out_y0": 464, "out_y1": 464, "outcom": [127, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 437, 479, 486, 493, 500], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 99, 121, 124, 127, 129, 133, 135, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 377, 385, 386, 387, 435, 463, 464, 474, 476, 480, 481, 483, 498, 500, 502, 503], "output_label": 386, "output_nam": [124, 129, 133, 135], "outputscal": 121, "outputscale_initial_valu": 121, "outputscale_prior": 121, "outsid": [34, 160, 188, 259, 261, 263, 268, 272, 286, 288, 290, 292, 296, 311, 330, 481, 496, 497, 500], "outstand": 484, "over": [34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 214, 308, 458, 476, 478, 481, 485, 487, 490, 497, 500, 501], "overal": [216, 455, 456, 458, 459, 461, 481, 482, 487, 491, 492, 501], "overlai": 476, "overlap": [66, 67, 160, 443, 444, 488], "overload": 502, "overrid": [127, 308, 451, 481], "overridden": [451, 482], "overview": [479, 483, 496], "overwrit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 245, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409], "overwritten": 468, "own": [127, 191, 308, 435, 459, 479, 480, 481, 482, 484, 488, 493, 500], "owner": 484, "ownership": 484, "p": [330, 435, 436, 437, 438, 440, 441, 443, 444, 451, 453, 467, 474, 476, 482, 490, 491, 496, 499, 502, 504], "p1": [329, 495, 496, 498, 502], "p1_json": 496, "p1_via_json": 496, "p2": [329, 495, 496, 498, 502], "p2_json": 496, "p2_via_json": 496, "p3": 496, "p3c4": [436, 437, 438, 452], "p_cont": 495, "p_disc": 495, "p_g1_amount": 459, "p_g2_amount": 459, "p_g3_amount": 459, "p_i": 37, "pack": 496, "packag": [99, 152, 210, 480, 481, 482, 493, 497, 498, 499, 504], "page": [455, 479, 481, 482, 489, 490], "pair": [329, 342, 464, 479, 493], "pairwis": 377, "pairwise_dist": 377, "pam": [206, 377], "pamclusteringrecommend": 494, "panda": [54, 223, 242, 243, 252, 372, 377, 397, 435, 436, 437, 438, 443, 444, 446, 452, 453, 458, 459, 463, 464, 467, 468, 474, 476, 481, 486, 488, 493, 495, 496, 498, 500], "panic": 478, "paper": 479, "parallel": [245, 481, 482], "parallel_run": 481, "parallelize_simul": [245, 246, 481, 497], "param": [127, 308, 377, 454, 455, 477], "param1": [495, 498], "param2": [495, 498], "param_1": 486, "param_2": 486, "param_bounds_comp": 481, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 70, 87, 91, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 218, 221, 222, 223, 224, 227, 228, 229, 240, 245, 248, 250, 252, 254, 256, 259, 261, 263, 266, 268, 272, 275, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 342, 343, 348, 354, 355, 356, 359, 361, 364, 366, 367, 368, 371, 372, 373, 377, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 405, 408, 409, 410, 413, 414, 416, 417, 420, 421, 423, 428, 430, 431, 432, 433, 435, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 481, 482, 488, 490, 496, 498, 499, 500, 501, 502, 503], "parameter": [172, 173, 174, 175, 176, 177, 178, 502], "parameter_json": 496, "parameter_nam": [214, 216, 222, 468], "parameter_names_in_cardinality_constraint": 214, "parameterencod": [141, 149, 150, 152, 155], "parametr": 488, "paramnam": 455, "paramprefix": 455, "parent": [127, 308, 482], "parentel": 455, "pareto": [14, 31, 133, 462, 477, 479, 481, 492], "paretoobject": [464, 479, 481, 491, 503], "park": 377, "pars": [403, 481], "parser": 481, "part": [17, 28, 34, 43, 75, 127, 192, 214, 216, 222, 308, 433, 456, 468, 471, 472, 474, 476, 481, 482, 484, 485, 486, 487, 488, 493, 494, 495, 496, 503, 504], "parti": [375, 484, 498], "partial": [28, 124, 129, 133, 135, 452, 479, 481, 503], "particl": 501, "particular": [34, 127, 222, 248, 308, 451, 464, 468, 478, 479, 480, 482, 484, 487, 492, 493, 495, 496, 497, 498], "particularli": [361, 487, 497], "partit": [9, 12, 31, 206, 254, 256, 481, 494, 498], "partitionexplain": [97, 100], "pass": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 204, 205, 206, 207, 214, 216, 222, 234, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 377, 387, 393, 402, 408, 409, 458, 470, 474, 481, 482, 486, 490, 491, 493, 496, 497, 500, 502], "passthrough": [30, 125, 218, 276, 339, 410], "past": 455, "patch": [452, 481], "patent": 484, "path": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 90, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 245, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 437, 458, 481, 482, 502, 504], "pattern": [152, 482, 501], "patternfingerprint": 152, "pd": [34, 197, 199, 222, 252, 266, 342, 343, 391, 435, 436, 437, 438, 443, 444, 446, 452, 453, 458, 459, 463, 464, 467, 468, 474, 476, 481, 486, 488, 490, 493, 495, 496, 498, 500], "peak": [330, 476, 502], "peek": 496, "penal": [463, 500], "penalti": [500, 502], "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 479, 481, 503], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 481, 486, 487], "per": [250, 266, 436, 437, 438, 441, 458, 467, 474, 481, 492, 493, 495, 498], "percent": [250, 484], "percentag": [199, 385, 441, 446, 447, 448, 449, 458, 470, 474, 494], "perf_count": 451, "perfectli": 496, "perform": [127, 199, 250, 308, 377, 392, 437, 446, 447, 448, 449, 453, 458, 471, 474, 476, 478, 479, 481, 482, 484, 485, 486, 487, 491, 493, 494, 498, 499, 501, 503], "period": [112, 500], "period_length_initial_valu": 112, "period_length_prior": 112, "periodickernel": 481, "perm_inv_constraint": 458, "perman": [479, 503], "permiss": [479, 484], "permut": [55, 58, 59, 343, 481, 488], "permutation_invari": 55, "permutationexplain": [97, 100], "perpetu": 484, "persist": [127, 308, 348, 481, 483, 487, 496, 499], "perspect": [496, 502], "pertain": 484, "pharmacophor": 152, "pharmacophorefingerprint": 152, "phase": [189, 459, 476], "phaseagent1": 459, "phaseagent2": 459, "phcpho": [436, 437, 438, 440, 441], "phenomenon": 487, "philosophi": 496, "physic": [476, 491, 498], "physiochemicalproperti": 152, "physiochemicalpropertiesfingerprint": 152, "pi": [7, 441, 452, 453, 476], "pi_max": 453, "pi_per_iter": 453, "pi_required_fract": 452, "pi_threshold": 452, "pickl": [127, 308, 481], "picklabl": [127, 308], "pictur": 479, "piec": [461, 479, 487, 488], "piecewis": [113, 502], "piecewisepolynomialkernel": 481, "pin": [28, 127, 308, 481], "pin_discret": 28, "pinned_part": 28, "pip": [479, 481, 482, 488, 491, 504], "pipe": 502, "pipelin": [377, 474, 481, 482], "pival": [436, 437, 438, 440, 441], "pl": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61], "place": [9, 12, 15, 18, 37, 127, 252, 308, 383, 384, 385, 455, 456, 458, 461, 480, 481, 482, 484, 487, 490, 493, 496, 497, 501], "placehold": 345, "plai": [487, 491, 500], "plain": 276, "plainkernelfactori": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 272], "plan": [267, 479, 490, 493, 502], "platt": 501, "pleas": [127, 308, 377, 455, 456, 479, 482, 485, 491, 494], "plenti": 491, "plot": [99, 101, 250, 436, 438, 464, 474, 476, 481, 499, 501, 503], "plot_abegin_convert_pipelin": 412, "plot_ebegin_float_doubl": 412, "plot_kmedoids_digit": 377, "plot_typ": 99, "plt": [436, 438, 453, 464, 476], "plu": [252, 479, 482], "plugin": 481, "pl\u00f6tz": 483, "pm": [5, 441], "png": [436, 438], "po16": 493, "poetri": 481, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 222, 240, 245, 250, 259, 261, 263, 264, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 377, 392, 402, 408, 409, 412, 418, 419, 420, 421, 436, 440, 441, 452, 459, 464, 467, 468, 474, 478, 479, 481, 483, 485, 486, 487, 490, 491, 492, 494, 495, 497, 502, 503, 504], "points_per_dim": [453, 467, 468, 474], "polar": [41, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 224, 245, 377, 479, 481, 483, 504], "poli": 453, "polici": 461, "polycollect": 453, "polym": 493, "polynomi": [113, 114], "polynomialkernel": 481, "polytop": 481, "popul": [458, 497], "popular": [491, 493, 499], "posit": [9, 12, 15, 18, 99, 127, 308, 361, 420, 481, 488, 491, 492, 502], "posixpath": 246, "possibl": [34, 47, 127, 161, 214, 222, 223, 224, 248, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 361, 377, 438, 452, 453, 458, 479, 481, 484, 486, 487, 488, 490, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504], "possibli": [127, 308, 364, 481, 486, 487], "post": [127, 308, 492, 493, 503], "post_hook": [361, 451, 452, 453], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 127, 197, 199, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 295, 308, 321, 326, 441, 481, 485, 492, 499], "posterior_mean": [259, 461], "posterior_mod": 259, "posterior_stat": [34, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 481, 487, 492], "posteriorlist": 266, "posteriorstandarddevi": [461, 481, 485], "posteriortransform": 308, "postprocess": 372, "potassium": [436, 437, 438, 440, 441], "potenti": [216, 365, 479, 480, 481, 482, 487, 488, 491, 492, 495, 497, 500, 504], "power": [114, 311, 328, 476, 481, 484, 488, 494, 502, 503], "powertransform": 502, "pp": 377, "pph3": [436, 437, 438], "pr": [481, 482], "practic": [250, 476, 485, 491, 494], "pre": [127, 129, 161, 187, 275, 308, 420, 454, 480, 481, 482, 500, 502], "pre_hook": [361, 451], "preced": 503, "precis": [59, 187, 214, 245, 396, 412, 476, 481, 500, 502], "precomput": [147, 377], "predefin": [487, 494], "predic": 364, "predicate_funct": 364, "predict": [31, 34, 83, 207, 259, 261, 263, 268, 272, 286, 288, 290, 292, 377, 479, 481, 485, 486, 492, 498, 499, 501, 503], "predictor": 294, "prefer": [34, 476, 484, 490, 492, 496], "prefix": [127, 308, 373, 455, 497, 500], "preliminari": 501, "prepar": [453, 476, 482, 484, 504], "prepend": [127, 308], "preprocess": [428, 481], "preprocess_datafram": [245, 246, 497], "presenc": [199, 480, 481], "present": [34, 74, 99, 124, 129, 133, 135, 216, 342, 343, 361, 377, 440, 461, 481, 488, 497, 498, 500, 504], "preset": [272, 279, 282, 284, 481], "pressur": [448, 455, 456, 470, 471, 472, 479, 488], "pretrain": [268, 454, 477], "pretti": 396, "pretty_print_df": [458, 481], "prevent": [160, 233, 234, 361, 480, 481, 482], "previou": [187, 245, 452, 453, 481, 487, 500, 501], "previous": [34, 436, 437, 438, 440, 448, 486, 487, 497], "price": 493, "primari": 487, "primarili": 485, "principl": [458, 461, 499], "print": [127, 252, 308, 381, 396, 436, 437, 438, 440, 441, 443, 444, 448, 451, 452, 455, 456, 458, 459, 461, 463, 466, 467, 468, 470, 471, 472, 479, 481, 495, 497, 504], "print_parameter_names_hook": 451, "printer_inst": 451, "prior": [110, 111, 112, 113, 114, 115, 116, 117, 121, 172, 173, 174, 175, 176, 177, 178, 259, 282, 449, 479, 480, 481], "priori": [488, 496, 501], "privat": [481, 483], "probabilist": 485, "probability_of_improv": 453, "probabilityofimprov": [452, 453], "probabl": [7, 21, 23, 441, 450, 452, 477, 481], "problem": [78, 458, 459, 461, 463, 474, 481, 482, 487, 492, 496, 500], "problemat": [367, 480, 493], "proce": [250, 440, 486], "procedur": [485, 501], "process": [34, 104, 127, 270, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 308, 391, 420, 441, 451, 458, 461, 463, 474, 476, 481, 482, 485, 486, 487, 488, 490, 492, 493, 496, 501, 502], "prod": 449, "prod_constraint": 449, "prod_i": 492, "produc": [124, 129, 133, 135, 252, 479, 481, 482, 498, 502], "product": [60, 120, 216, 222, 223, 224, 335, 357, 445, 477, 479, 481, 484, 488, 490, 502, 503, 504], "product_paramet": [222, 458, 495], "productkernel": 481, "programmat": 458, "progress": [34, 185, 453, 481, 490], "prohibit": 485, "project": [453, 481], "promin": [482, 484], "promis": [452, 486], "proper": 481, "properli": [28, 463, 480, 481, 492, 495], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 245, 259, 261, 263, 266, 268, 272, 275, 279, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 347, 349, 364, 365, 402, 408, 409, 419, 423, 481, 482, 486, 488, 490, 493], "proport": 474, "propos": 487, "protobuf": 481, "protocol": [180, 181, 264, 274, 367, 481], "prototyp": 483, "provid": [9, 12, 15, 17, 18, 34, 48, 99, 103, 127, 147, 158, 161, 181, 187, 188, 191, 192, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 240, 248, 250, 252, 254, 256, 259, 261, 263, 268, 272, 282, 284, 286, 288, 290, 292, 308, 311, 342, 357, 361, 377, 379, 384, 385, 390, 393, 397, 408, 409, 420, 421, 430, 435, 436, 437, 438, 451, 456, 458, 464, 466, 467, 468, 471, 474, 476, 479, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503], "proxim": 500, "prune": [14, 15, 16, 18, 19], "prune_baselin": [14, 15, 16, 18, 19], "pstd": [6, 481, 485], "pubchem": 152, "pubchemfingerprint": 152, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 131, 133, 135, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 221, 222, 240, 245, 259, 261, 263, 264, 266, 268, 272, 274, 275, 279, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 345, 347, 349, 364, 365, 377, 402, 408, 409, 419, 423, 481, 482], "publicli": 484, "publish": [479, 481], "pull": [461, 481], "punish": 8, "pure": [8, 11, 17, 182, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 216, 256, 267, 421, 467, 481, 503], "purerecommend": [184, 186, 187, 188, 189, 191, 197, 202, 481], "purpl": 464, "purpos": [17, 451, 452, 455, 461, 476, 479, 480, 482, 484, 487, 490, 492, 496, 500, 504], "pursu": 500, "push": [47, 482], "put": [458, 461, 493], "puzzl": 479, "py": [284, 377, 446, 448, 449, 481], "py313": 482, "pyarrow": 481, "pydant": 481, "pydoclint": [481, 482], "pydocstyl": 482, "pylint": 481, "pymatgen": 480, "pypi": [479, 481], "pyplot": [436, 438, 453, 464, 476], "pyproject": 481, "pytest": [481, 482, 497], "python": [33, 348, 349, 362, 437, 456, 471, 472, 479, 480, 481, 482, 487, 488, 496], "python310": 480, "pytorch": 481, "pyupgrad": 481, "q": [113, 127, 294, 295, 308, 441, 486], "qehvi": [9, 481], "qei": [10, 441, 471, 472, 481], "qkg": [11, 481], "qlogehvi": [12, 481], "qlogei": [13, 441, 481], "qlogexpectedimprov": 441, "qlognehvi": [9, 12, 15, 18], "qlognei": [16, 481], "qlognoisyexpectedhypervolumeimprov": [481, 492], "qlognparego": 481, "qnegintegratedposteriorvari": 485, "qnehvi": 18, "qnei": [19, 481], "qnipv": [17, 481, 485], "qnoisyexpectedhypervolumeimprov": 481, "qpi": [21, 441], "qposteriorstandarddevi": 485, "qpstd": [20, 481, 485, 487], "qsimpleregret": 23, "qsr": [22, 481], "qt": 23, "qthompsonsampl": [461, 481], "quad": 502, "quadrat": [117, 311, 435, 464, 502], "qualifi": [127, 308], "qualiti": 482, "quantif": 501, "quantifi": [461, 485, 501], "quantil": [34, 259, 261, 262, 263, 268, 272, 286, 288, 290, 292, 487], "quantiti": [34, 57, 476, 487, 491, 492, 500, 502, 504], "quantum": 147, "qucb": [24, 441, 481, 485], "queri": [127, 182, 192, 248, 250, 252, 308, 463, 464, 476, 479, 487, 490, 498], "queryselectoral": 455, "question": [482, 487, 501], "quick": 486, "quickli": [488, 500, 502], "qupperconfidencebound": 485, "qvarucb": 481, "r": [47, 436, 437, 438, 440, 441], "radial": 115, "radiu": [152, 481, 493], "rais": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 228, 229, 233, 234, 240, 250, 252, 256, 259, 261, 263, 266, 267, 268, 269, 272, 275, 286, 288, 290, 292, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 343, 359, 361, 364, 366, 368, 371, 379, 380, 381, 384, 385, 387, 392, 393, 394, 402, 408, 409, 410, 420, 421, 430, 431, 432, 433, 451, 452, 453, 468, 480, 481, 482, 486, 494, 497], "ramp": 503, "rand": 455, "random": [17, 116, 209, 214, 216, 245, 250, 252, 254, 291, 292, 377, 419, 420, 421, 435, 436, 437, 438, 441, 452, 453, 455, 459, 461, 464, 474, 476, 479, 481, 485, 493, 494, 498, 504], "random_campaign": 435, "random_forest": [292, 441], "random_se": [245, 246, 250, 254, 452, 453, 461, 464, 476, 497, 498], "random_st": 377, "random_tie_break": [210, 420, 481], "randomforestmodel": 456, "randomforestregressor": 292, "randomforestsurrog": [441, 481, 499], "randomli": [199, 211, 420, 435, 437, 464, 485, 491, 494], "randomrecommend": [435, 436, 437, 438, 441, 446, 447, 448, 449, 451, 452, 453, 459, 461, 481, 486, 494], "randomst": 377, "rang": [47, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 303, 311, 323, 384, 402, 435, 443, 444, 446, 447, 448, 449, 453, 458, 461, 466, 467, 468, 474, 479, 481, 488, 492, 495, 496, 498, 500, 502, 504], "rank": 500, "rare": 481, "rastrigin": [443, 444, 467, 468], "rate": [173, 259, 461], "rather": [470, 480, 481, 485, 496], "ration": 117, "ravel": [464, 474], "raw": [199, 496], "rbf": 115, "rbfkernel": 481, "rdf": 152, "rdffingerprint": 152, "rdkit": [152, 446, 448, 449, 481, 488, 493], "rdkit2ddescriptor": [152, 437, 446, 448, 449, 481], "rdkit2ddescriptorsfingerprint": [152, 437, 446], "rdkitfingerprint": 152, "re": [127, 308, 452, 467, 468, 476, 482, 494], "reach": [311, 322, 330, 502], "reactant": [491, 493], "reaction": [437, 440, 479, 488, 491, 493, 501], "reactor": [486, 501], "reactora": 501, "reactorb": 501, "reactorc": 501, "read": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 236, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 437, 440, 479, 481, 482], "read_csv": [436, 437, 452], "read_excel": 438, "readabl": [221, 396, 405, 470, 481, 483, 484, 496], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 250, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 482, 486], "readm": [481, 482], "reagent": [488, 493], "real": [402, 476, 479, 487, 500], "realist": [476, 498], "realiz": [248, 498], "reason": [45, 127, 204, 205, 206, 207, 308, 437, 467, 481, 482, 484, 485, 486, 488, 492, 493, 498, 500], "reassembl": 496, "rebas": 482, "rec": [446, 447, 448, 449, 486, 487], "rec_finish": 486, "rec_next": 486, "rec_par": 464, "rec_pend": 486, "rec_y0": 464, "rec_y1": 464, "receiv": [127, 308, 484, 496], "recip": 482, "recipi": 484, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 75, 86, 87, 99, 141, 144, 145, 147, 155, 158, 160, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 245, 248, 250, 264, 266, 267, 385, 387, 435, 436, 437, 438, 439, 443, 444, 446, 447, 448, 449, 451, 452, 453, 459, 461, 464, 471, 472, 474, 476, 477, 478, 479, 481, 482, 485, 491, 493, 498, 499, 501, 502, 503, 504], "recommendation_orig": 470, "recommendation_recr": 470, "recommended_arm_idx": 461, "recommender_with_hook": 452, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 99, 184, 186, 187, 188, 189, 194, 197, 199, 264, 266, 451, 453, 478, 481, 486], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 487, 496], "record": [34, 127, 308, 501], "recreat": [279, 470, 496, 502], "recreate_model": 456, "recurs": [127, 184, 186, 187, 188, 189, 308, 354, 355], "red": [455, 464, 476], "redesign": [481, 500], "redistribut": 484, "reduc": [158, 453, 461, 474, 482, 488, 490, 493, 500], "reduct": 503, "redund": [338, 502], "ref": 479, "ref_point": 31, "refactor": 481, "refer": [9, 12, 15, 18, 31, 127, 248, 284, 308, 321, 360, 377, 392, 412, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 451, 453, 455, 456, 458, 467, 468, 470, 476, 480, 481, 487, 491, 492, 493, 494, 495, 496, 498, 499, 501], "referenc": [127, 308, 482, 497], "reference_point": [9, 12, 15, 18], "refin": [452, 476, 479, 481, 487, 490], "reflect": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 453, 463, 481, 482, 485, 488, 493, 500], "regard": [37, 43, 443, 444, 482, 484], "regardless": [127, 308, 499], "regim": [479, 481, 491], "region": [162, 311, 330, 500], "regist": [127, 308, 361, 450, 452], "register_backward_hook": [127, 308], "register_buff": [127, 308], "register_custom_architectur": 481, "register_forward_hook": [127, 308], "register_forward_pre_hook": [127, 308], "register_full_backward_hook": [127, 308], "register_full_backward_pre_hook": [127, 308], "register_hook": [450, 451, 452, 453, 481], "register_load_state_dict_post_hook": [127, 308], "register_load_state_dict_pre_hook": [127, 308], "register_modul": [127, 308], "register_module_forward_hook": [127, 308], "register_module_forward_pre_hook": [127, 308], "register_module_full_backward_hook": [127, 308], "register_module_full_backward_pre_hook": [127, 308], "register_paramet": [127, 308], "register_state_dict_post_hook": [127, 308], "register_state_dict_pre_hook": [127, 308], "registr": 481, "regress": [286, 481, 483], "regressor": 455, "regret": [22, 23], "regroup": 481, "regular": [23, 160, 296, 455, 466, 480, 481, 486, 500, 501], "reinstal": 479, "reject": 486, "rel": [9, 12, 15, 18, 31, 47, 250, 384, 488, 492], "relat": [57, 124, 129, 130, 133, 135, 148, 216, 235, 309, 341, 468, 474, 478, 481, 482, 487, 488, 501], "relationship": [474, 476, 479, 482, 492, 501], "relative_perc": 385, "relative_threshold": [47, 481, 488], "relax": 500, "releas": [127, 308, 479, 481], "relev": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 99, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 252, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 392, 393, 394, 402, 408, 409, 447, 458, 481, 482, 487, 488, 490, 501, 504], "reli": [463, 480, 481, 492, 502], "reliabl": 493, "reloc": 481, "remain": [58, 160, 189, 256, 435, 441, 446, 447, 448, 449, 458, 461, 468, 470, 474, 484, 493, 496, 498], "remain_switch": [189, 481], "remaind": 421, "rememb": 497, "remind": 481, "remot": 482, "remov": [54, 57, 58, 124, 127, 129, 133, 135, 222, 308, 338, 458, 479, 482, 488, 489, 495, 502, 503], "removablehandl": [127, 308], "remove_dupl": [127, 308], "renam": [437, 474, 476, 481, 482], "render": [99, 455], "reoccur": 501, "reorder": 481, "reorgan": 481, "repeat": [461, 481, 482, 486, 487], "repetit": [254, 441, 452], "rephras": 488, "replac": [127, 247, 308, 455, 467, 468, 481, 482], "replic": [259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 481, 492, 496, 503], "repo": 481, "report": [181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 461, 480], "repositori": [437, 479, 482], "repr": 455, "repres": [9, 12, 15, 18, 41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 119, 120, 147, 216, 256, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 324, 329, 364, 365, 379, 397, 402, 405, 420, 435, 458, 459, 461, 464, 471, 472, 476, 479, 481, 484, 487, 492, 493, 495, 498, 502, 504], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 240, 259, 261, 263, 264, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 368, 370, 379, 381, 396, 402, 408, 409, 446, 447, 448, 449, 455, 457, 470, 481, 486, 487, 493, 496, 498, 502, 503, 504], "reproduc": [452, 461, 464, 481, 484, 503], "reproduct": 484, "request": [34, 86, 87, 187, 188, 189, 229, 259, 261, 262, 263, 268, 272, 275, 286, 288, 290, 292, 387, 410, 420, 421, 464, 478, 481, 486, 487, 490, 491], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 47, 48, 53, 84, 99, 127, 189, 222, 300, 308, 361, 428, 431, 440, 451, 452, 455, 459, 461, 463, 467, 471, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 504], "require_norm": [129, 463, 492, 496], "requires_grad": [127, 308], "requires_grad_": [127, 308], "rerun": 455, "reserv": [479, 482], "reset": [34, 127, 308, 486], "reset_index": 486, "reshap": 464, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 447, 449, 458, 496], "resolv": [127, 308, 372], "resort": [296, 463, 482, 496, 504], "resource_track": 480, "resp": [217, 438, 468], "respect": [34, 127, 199, 217, 250, 254, 308, 330, 342, 458, 459, 481, 482, 487, 488, 490, 491, 492, 496, 498, 500, 502, 504], "respond": 478, "respons": [184, 186, 187, 188, 189, 484, 487, 494], "restart": [187, 199], "restor": [245, 496], "restore_default": [245, 497], "restore_environ": [245, 497], "restore_previ": [245, 497], "restr": 23, "restrain": 493, "restrict": [216, 222, 248, 254, 256, 446, 459, 481, 490, 498, 500, 501, 503], "result": [9, 11, 12, 15, 18, 34, 127, 158, 160, 222, 250, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 383, 391, 436, 437, 438, 440, 455, 456, 458, 459, 461, 464, 466, 474, 479, 481, 483, 484, 485, 487, 488, 491, 492, 493, 494, 496, 498, 500, 501, 502, 503, 504], "result_baselin": 474, "result_fract": 474, "results_interrupt": 452, "results_uninterrupt": 452, "retain": [484, 488, 497], "retrain": [267, 268, 499], "retriev": [216, 236, 248, 348, 353, 354, 355, 371, 481, 482, 498], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 237, 238, 240, 242, 243, 245, 247, 250, 252, 254, 256, 259, 261, 263, 264, 266, 268, 269, 272, 275, 276, 280, 286, 288, 290, 292, 294, 295, 296, 298, 300, 303, 305, 308, 311, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 339, 342, 343, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 370, 371, 372, 373, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 405, 408, 409, 410, 413, 414, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 446, 452, 453, 455, 458, 461, 464, 476, 481, 487, 488, 498, 504], "return_std": 455, "reus": [189, 481, 500], "reuse_last": 187, "reveal": [453, 459, 474, 476], "revers": [500, 502], "review": 482, "revis": [481, 484], "reward": [8, 461, 476], "rework": 481, "rewrit": 481, "rff": 116, "rffkernel": 481, "rh": [48, 50, 51, 443, 444, 459, 488], "right": [48, 178, 330, 331, 392, 402, 436, 438, 447, 461, 476, 479, 480, 482, 484, 488, 490, 492, 493, 502], "right_df": 392, "rihana": [479, 483], "rim": [479, 483], "risk": [8, 480, 484, 487], "roam": 480, "robust": [479, 481, 501], "robustli": 296, "role": [481, 482, 487, 491, 492, 497, 498, 500, 503], "room": [453, 487], "root": [437, 479, 482, 488], "round": [396, 443, 455, 456, 488], "roundtrip": [481, 496], "rout": [377, 476, 481, 496], "routin": [47, 500], "row": [9, 12, 15, 18, 41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 252, 342, 343, 377, 384, 387, 391, 392, 394, 396, 436, 438, 446, 447, 448, 449, 458, 459, 470, 481, 486, 487, 490, 495, 498], "rowei": 501, "roya": 483, "royalti": 484, "rq": 117, "rqkernel": 481, "rsc": 479, "ruff": [481, 482], "rule": [451, 481, 497, 500, 502], "run": [127, 245, 250, 254, 308, 436, 437, 438, 452, 453, 474, 476, 479, 480, 481, 482, 487, 490, 493, 496, 497, 498, 504], "run_full_initial_data": 436, "run_impute_mod": 438, "runner": [446, 448, 449], "running_mean": [127, 308], "running_var": [127, 308], "runtim": [127, 308, 412, 480, 486], "runtimeerror": [187, 451], "rv": 461, "s3": 481, "s41586": [284, 390], "s_0": 497, "s_1337": 497, "s_42": 497, "safe": [481, 482, 487], "safeti": 361, "sai": [127, 308, 488], "said": 482, "sake": 458, "same": [57, 127, 137, 189, 222, 228, 250, 252, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 322, 356, 430, 441, 452, 455, 456, 458, 461, 464, 470, 476, 480, 481, 488, 490, 496, 498, 499, 500, 501, 502], "sampl": [11, 17, 23, 47, 127, 199, 209, 210, 211, 214, 377, 418, 419, 420, 421, 436, 441, 446, 447, 448, 449, 461, 464, 466, 470, 474, 479, 481, 483, 491, 503], "sample_from_full_factori": [214, 481], "sample_inactive_paramet": 47, "sample_shap": 127, "sample_uniform": [214, 464, 466, 481, 498], "sampler": [127, 441, 446, 447, 448, 449, 470], "samples_full_factori": 481, "samples_random": 481, "sampling_algorithm": [419, 485], "sampling_fract": [17, 485], "sampling_method": [17, 485], "sampling_n_point": [17, 485], "sampling_percentag": [199, 494], "satisfi": [43, 44, 45, 222, 443, 444, 458], "save": [127, 308, 436, 438, 455, 481, 498], "savefig": [436, 438, 464], "sca": 464, "scalar": [14, 129, 463, 479, 481, 487, 492, 496], "scale": [121, 174, 175, 176, 177, 178, 214, 216, 222, 311, 322, 377, 423, 464, 481, 485, 492, 500, 502], "scalekernel": 481, "scaler": 481, "scaling_bound": [214, 216, 222], "scatter": [99, 101], "scenario": [250, 256, 435, 436, 437, 438, 452, 458, 474, 486, 488, 492, 501, 503, 504], "scene": [492, 498, 499, 500, 502], "schema": 487, "schembl15068049": [436, 437, 438], "scheme": [481, 488], "scienc": [479, 483], "scientif": [481, 501], "scikit": [152, 377, 479, 481, 483, 493], "scipi": [453, 461, 481], "scm": 481, "scope": [435, 497], "screen": [356, 501], "script": [372, 455, 480, 481, 504], "scriptmodul": [127, 308], "seaborn": [435, 436, 437, 438, 452, 474, 476], "seamlessli": 496, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 41, 54, 57, 70, 75, 87, 91, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 226, 250, 254, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 392, 393, 435, 438, 440, 442, 445, 446, 447, 448, 449, 451, 452, 453, 461, 465, 470, 474, 476, 481, 483, 486, 487, 488, 490, 491, 494, 496, 498, 503], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 99, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 217, 221, 222, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 435, 437, 440, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 470, 471, 472, 476, 477, 479, 481, 487, 488, 490, 491, 493, 495, 496, 498, 504], "searchspace1": 466, "searchspace2": 466, "searchspace3": 466, "searchspace_ful": 490, "searchspace_json": 496, "searchspace_reduc": 490, "searchspacetyp": [191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 441, 446, 447, 448, 449, 452, 453, 470, 495], "secfp": 152, "secfpfingerprint": 152, "second": [391, 413, 455, 456, 463, 464, 472, 476, 488, 491, 500, 502], "secondari": 463, "section": [479, 481, 482, 484, 489, 496, 497, 502], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 91, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 221, 222, 245, 250, 254, 256, 259, 261, 263, 264, 266, 268, 272, 275, 282, 284, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 359, 364, 367, 377, 385, 391, 398, 402, 408, 409, 423, 428, 436, 437, 438, 443, 444, 451, 452, 456, 459, 463, 468, 476, 478, 479, 481, 482, 487, 490, 491, 493, 496, 498, 500, 502, 503], "seed": [245, 250, 254, 416, 417, 452, 453, 461, 464, 479, 481, 497, 504], "seek": [311, 481, 492, 500], "seem": [412, 472, 480, 500], "seen": 485, "segment": [331, 502], "select": [6, 43, 44, 45, 72, 76, 84, 184, 186, 187, 188, 189, 192, 199, 207, 209, 210, 259, 261, 263, 268, 272, 286, 288, 290, 292, 391, 420, 441, 447, 448, 458, 459, 461, 463, 468, 479, 481, 485, 487, 488, 491, 493, 494, 496, 499], "select_recommend": [184, 186, 187, 188, 189, 481], "selectivity_mean": 487, "selectivity_mod": 487, "selectivity_q_0": 487, "selectivity_std": 487, "self": [127, 308, 361, 377, 380, 425, 426, 427, 429, 451, 452, 453, 461, 482], "sell": 484, "semant": [481, 496, 500], "sens": [59, 133, 361, 367, 391, 488, 493, 499], "sent": 484, "sentinel": [346, 347], "separ": [254, 256, 296, 359, 423, 453, 478, 481, 482, 484, 491, 496, 500], "sequenc": [34, 48, 166, 187, 188, 214, 216, 222, 223, 224, 227, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 311, 329, 330, 338, 342, 343, 361, 373, 380, 386, 392, 393, 398, 428, 487, 492, 494, 502], "sequenti": [127, 186, 187, 188, 189, 199, 308, 441, 446, 447, 448, 449, 470, 481, 494, 502], "sequential_continu": [199, 481, 494], "sequential_greedy_x": 481, "sequentialgreedyrecommend": 481, "sequentialmetarecommend": [188, 494], "sequentialstrategi": 481, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 44, 45, 54, 141, 144, 145, 147, 155, 158, 197, 199, 303, 305, 311, 397, 446, 458, 476, 481, 488, 490, 500], "serial": [127, 188, 222, 240, 308, 455, 477, 480, 481, 482, 488, 494, 503], "serializ": [479, 494], "serialize_datafram": 496, "serialized_df": 242, "serializetostr": 455, "serialmixin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 481], "serv": [256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 392, 474, 487, 488, 493, 502], "servic": 484, "session": [348, 496], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 45, 47, 57, 59, 66, 67, 99, 103, 127, 158, 181, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 250, 254, 279, 308, 348, 377, 390, 391, 416, 417, 436, 437, 438, 439, 441, 446, 448, 451, 456, 457, 458, 459, 461, 463, 468, 478, 479, 481, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 502, 503, 504], "set_box_aspect": 453, "set_dash": 452, "set_extra_st": [127, 308], "set_output": 377, "set_param": 377, "set_random_se": 504, "set_size_inch": [436, 438], "set_submodul": [127, 308], "set_to_non": [127, 308], "set_x_pend": 28, "set_xlabel": [453, 476], "set_xtick": 453, "set_xticklabel": 453, "set_ylabel": [453, 476], "set_ylim": 453, "set_zlabel": 453, "setattribut": 455, "setpoint": 155, "settimeout": 455, "setup": [250, 452, 488, 498, 504], "setuptool": 481, "sever": [65, 127, 161, 182, 308, 334, 435, 437, 441, 452, 455, 461, 463, 466, 474, 476, 479, 481, 482, 486, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 501, 504], "sh": 491, "shall": [187, 385, 484, 492], "shallow": [127, 308], "shan": 483, "shap": [99, 479, 481, 483, 499, 503], "shap_valu": 499, "shape": [9, 12, 23, 31, 214, 221, 330, 377, 420, 463, 464, 476, 481, 495, 502, 504], "shapinsight": [97, 98, 100, 101, 481, 491, 492], "shaplei": 99, "share": [127, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 481, 484, 501], "share_memori": [127, 308], "share_memory_": [127, 308], "shield": [284, 390, 437, 479, 493], "shift": [308, 321, 502], "shift_first": [321, 502], "ship": 496, "shm": 480, "short": 482, "shortcut": [222, 495, 496], "shorten": [481, 482], "shot": 501, "should": [34, 47, 55, 99, 127, 158, 189, 250, 254, 308, 311, 342, 343, 364, 383, 385, 389, 390, 396, 401, 402, 413, 446, 448, 452, 455, 458, 459, 468, 472, 479, 481, 482, 486, 487, 488, 491, 495, 497, 498, 501, 504], "show": [99, 127, 308, 436, 437, 438, 440, 441, 446, 447, 448, 455, 456, 458, 461, 468, 470, 471, 472, 474, 476, 488, 491, 500], "showcas": 494, "shown": [452, 461, 474, 481, 487], "shrink": 453, "shutdown": 480, "side": [48, 160, 331, 481, 502], "sigma": [175, 176, 177, 178, 311, 322, 463, 476, 483, 492, 500, 502], "sigmoid": [311, 329, 502, 503], "sigmoidtransform": [311, 503], "sign": 500, "signal": [69, 492, 500], "signatur": [93, 127, 300, 308, 359, 361, 453, 481, 482, 488, 496], "significantli": [222, 461, 474, 488, 500], "silenc": 482, "silent": [481, 488, 497], "similar": [127, 188, 308, 480, 481, 488, 491, 493, 494, 495, 496, 500, 501, 504], "similarli": [127, 308, 464, 493, 500], "simpl": [22, 23, 127, 308, 349, 377, 437, 451, 452, 459, 463, 479, 481, 486, 487, 494, 498, 500, 501], "simpler": [482, 496], "simplest": [495, 499, 500], "simplex": [222, 503], "simplex_paramet": [222, 458, 495], "simpli": [367, 451, 452, 482, 488, 490, 492, 493, 494, 495, 496, 497, 500, 501], "simplic": 361, "simplifi": 482, "simul": [88, 245, 385, 448, 453, 479, 481, 501, 503], "simulate_experi": [254, 256, 481, 498], "simulate_scenario": [256, 435, 436, 437, 438, 452, 474, 476, 481, 498], "simulate_transfer_learn": 498, "simulationresult": 461, "simultan": [492, 499], "sin": [476, 502], "sinc": [59, 127, 160, 216, 267, 308, 361, 377, 436, 443, 444, 456, 467, 470, 471, 472, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 496, 498, 499, 500, 501, 502], "singer": 501, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 55, 99, 127, 135, 160, 214, 216, 222, 250, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 303, 305, 308, 311, 381, 402, 420, 436, 437, 438, 447, 452, 458, 463, 474, 479, 481, 487, 488, 490, 491, 492, 493, 495, 499, 500, 501, 502, 503], "single_lin": 381, "single_y0": 464, "single_y1": 464, "singledispatch": 403, "singletargetobject": [34, 303, 305, 311, 436, 437, 438, 440, 441, 446, 447, 448, 449, 452, 455, 456, 470, 471, 472, 479, 481, 503], "sink": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409], "sinusoid": 502, "site": 480, "situat": [99, 160, 420, 446, 448, 458, 480, 482, 486, 488, 492, 493, 496, 498, 500, 501], "six": [458, 459], "size": [23, 106, 107, 108, 111, 113, 115, 116, 117, 127, 187, 189, 216, 221, 222, 308, 405, 453, 455, 461, 467, 468, 474, 487, 496, 498, 500, 501, 504], "sk": 455, "skeleton": 481, "skew": 502, "skfp": 152, "skicit": 481, "skin": 498, "skip": [127, 219, 225, 308, 481, 487], "skl2onnx": 455, "sklearn": [207, 412, 455], "sklearnclusteringrecommend": [204, 205, 206, 481, 486], "skubch": 483, "slightli": [248, 437, 458, 498, 502], "slope": [331, 502], "slope_left": [331, 502], "slope_right": [331, 502], "slot": [457, 461, 477, 481, 488], "slot1_amount": 458, "slot1_label": 458, "slot2_amount": 458, "slot2_label": 458, "slot3_amount": 458, "slot3_label": 458, "slow": [446, 448, 449, 486, 495], "slow_and_pedant": 497, "slower": 486, "slowest": 481, "small": [340, 344, 443, 458, 474, 481, 482, 485, 493], "smaller": [34, 461, 487, 501], "smallest": [214, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 392, 495], "smart": [479, 502], "smartli": 458, "smile": [158, 370, 372, 373, 479, 493], "smoke": 481, "smoke_test": [435, 436, 437, 438, 444, 446, 447, 449, 452, 453, 461, 464, 474, 476], "smooth": [111, 113, 178, 500], "smoothedboxprior": 481, "smoother": 111, "smoothli": 500, "sn": [435, 436, 437, 438, 452, 474, 476], "so": [34, 127, 250, 267, 308, 377, 391, 438, 452, 458, 461, 463, 467, 468, 476, 479, 480, 487, 488, 490, 492, 493, 494, 496, 497, 500, 502], "soften": 500, "softwar": [479, 484], "sola": 483, "sole": 484, "solut": [78, 476, 487, 488, 492, 495, 496, 501], "solv": [267, 447, 448, 458, 461, 481], "solv_rdkit2ddesc": 448, "solvent": [436, 437, 438, 440, 441, 446, 447, 448, 449, 452, 456, 458, 459, 471, 472, 479, 488, 493], "solvent1": [458, 459], "solvent2": [458, 459], "solvent3": 458, "solvent4": 458, "solvent5": 458, "solvent8": 458, "solvent9": 458, "solvent_1": 488, "solvent_2": 488, "solvent_3": 488, "solvent_data": 452, "solvent_encoding1": 488, "solvent_encoding2": 488, "solvent_mordred_enc": 488, "solvent_rdkit2dd": [446, 449], "solvent_rdkit_enc": 488, "solvent_smil": 452, "solver": 498, "some": [55, 127, 308, 412, 436, 437, 438, 441, 446, 447, 448, 449, 452, 453, 455, 456, 458, 459, 464, 466, 467, 468, 470, 474, 481, 486, 487, 488, 493, 494, 496, 498, 499, 500, 504], "someth": [91, 127, 308, 472], "sometim": [488, 492, 498, 500], "somewher": 487, "soon": [479, 487, 494], "sophist": [481, 490, 496], "sort": 163, "sourabh": 483, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 131, 133, 135, 137, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 158, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 236, 237, 238, 240, 242, 243, 245, 247, 250, 252, 254, 256, 259, 261, 263, 264, 266, 268, 269, 272, 274, 275, 276, 279, 280, 282, 284, 286, 288, 290, 292, 294, 295, 296, 298, 300, 303, 305, 308, 311, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 405, 408, 409, 410, 413, 414, 416, 417, 419, 420, 421, 423, 428, 429, 430, 431, 432, 433, 480, 481, 482, 484, 497, 500], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 41, 48, 54, 57, 70, 75, 81, 87, 91, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 190, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 225, 226, 250, 254, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 377, 392, 420, 435, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 461, 464, 465, 467, 470, 474, 476, 477, 481, 483, 486, 488, 490, 491, 493, 494, 496, 498, 503], "span": [63, 140, 141, 142, 144, 145, 147, 154, 155, 158, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 451, 461, 466, 491], "spars": 377, "speak": 501, "spec": [219, 225, 237], "special": [189, 479, 480, 484, 485, 490, 497, 501, 504], "specif": [104, 161, 168, 207, 216, 219, 233, 254, 296, 298, 311, 353, 410, 432, 451, 452, 463, 467, 476, 479, 481, 482, 487, 488, 490, 493, 494, 495, 496, 497, 498, 499, 501, 502], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 47, 55, 92, 99, 103, 127, 147, 158, 160, 161, 162, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 237, 250, 252, 254, 264, 308, 321, 323, 329, 342, 360, 371, 377, 386, 392, 393, 402, 410, 421, 437, 441, 443, 455, 456, 461, 463, 479, 480, 481, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502], "speed": [222, 446, 448, 449, 474, 495], "speed_fast": 495, "speed_norm": 495, "speed_slow": 495, "speedup": [481, 501], "spell": 482, "spellcheck": 481, "sphinx": [481, 482], "split": [191, 486], "sporad": 481, "sqrt": 488, "squar": [377, 461, 464, 488, 500], "squash": 482, "stabil": 481, "stabl": [104, 168], "stage": [487, 488, 496], "stand": 481, "standard": [6, 20, 296, 322, 455, 481, 487, 493, 502], "star": 458, "start": [250, 435, 451, 452, 453, 459, 461, 464, 476, 480, 481, 482, 486, 493, 494, 496, 498, 501, 502], "startup": [481, 497], "stat": [34, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 453, 459, 461, 487], "state": [127, 184, 186, 187, 188, 189, 308, 377, 452, 458, 478, 481, 484, 487, 490, 503], "state_dict": [127, 308], "stateless": [461, 478, 481, 490], "statement": [396, 467, 484], "static": [9, 12, 15, 18, 216, 222, 272, 479, 482, 500, 501], "statist": [34, 259, 261, 262, 263, 268, 272, 286, 288, 290, 292, 474, 481, 503], "statu": 487, "std": [34, 259, 261, 262, 263, 266, 268, 272, 286, 288, 290, 292], "std_threshold": 296, "steep": [329, 502], "steeper": 502, "steer": 502, "stem": [480, 501], "step": [219, 225, 250, 458, 461, 478, 479, 482, 487, 492, 496, 499, 500, 502], "sterl": 483, "steven": 437, "still": [161, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 452, 461, 476, 486, 488, 491, 493, 499, 501, 504], "stop": [450, 477, 481, 482], "stop_on_pi": 452, "stoppag": 484, "storag": [127, 308, 487, 496], "store": [28, 127, 142, 296, 303, 308, 377, 453, 458, 461, 479, 481, 487, 497, 504], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 90, 91, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 162, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 197, 199, 204, 205, 206, 207, 214, 216, 221, 222, 238, 240, 245, 254, 256, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 306, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 343, 353, 359, 360, 364, 368, 370, 372, 373, 379, 381, 386, 389, 390, 394, 396, 402, 405, 407, 408, 409, 410, 414, 456, 461, 471, 472, 474], "straightforward": [487, 500, 501], "strategi": [17, 199, 216, 248, 435, 461, 481], "stream": [357, 481], "streamingsequentialmetarecommend": [187, 494], "streamingsequentialstrategi": 481, "streamlin": [481, 482, 489], "streamlit": [479, 481], "streibel": 483, "strict": [127, 299, 308, 359, 500], "strictli": [456, 471, 472, 481], "stride": [127, 308, 443], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 157, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 364, 368, 372, 373, 377, 379, 380, 381, 389, 402, 408, 409, 455, 470, 481, 487, 488, 493, 503], "strip": [250, 438], "strong": 481, "strongli": [487, 500], "strtobool": [364, 481], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 236, 479, 480, 481, 482, 483, 487, 493, 496], "studi": [182, 491, 494, 503], "style": [455, 481, 482], "sub": [127, 207, 308, 481, 491, 496], "subclass": [92, 236, 353, 355, 367, 410, 441, 481, 482, 494, 496], "subgraph": 493, "subgroup": 459, "subject": 484, "sublicens": 484, "submiss": [481, 484], "submit": [28, 479, 482, 484], "submodul": [127, 308], "subobject": 377, "subpackag": [481, 482, 498], "subplot": [464, 476], "subselectioncondit": [447, 448, 481, 490, 503], "subsequ": [127, 189, 216, 222, 254, 308, 338, 372, 478, 484, 487, 496], "subset": [34, 124, 129, 133, 135, 158, 216, 356, 393, 420, 487, 488, 490, 493], "subspac": [28, 63, 191, 199, 213, 214, 216, 218, 220, 222, 443, 446, 447, 448, 449, 466, 468, 470, 481, 488, 494, 496, 503, 504], "subspace_continu": 63, "subspace_json": 496, "subspacecontinu": [34, 63, 140, 154, 216, 218, 466, 481, 495], "subspacediscret": [34, 141, 144, 145, 147, 155, 158, 216, 218, 221, 446, 447, 448, 449, 458, 470, 481, 495, 496, 504], "substanc": [152, 158, 371, 437, 440, 446, 448, 449, 459, 481, 488, 491, 493, 501], "substance_12": 488, "substance_3": 488, "substance_43": 488, "substance_data": 481, "substance_encod": 437, "substanceencod": [158, 371, 373, 446, 447, 448, 449, 481, 493, 496], "substanceparamet": [436, 437, 438, 440, 441, 446, 447, 448, 449, 452, 456, 458, 471, 472, 479, 481, 488, 491, 495, 496, 503], "substanti": [158, 504], "substrat": 501, "subtract": 500, "subtyp": 496, "success": [305, 420, 461, 496, 502], "success_valu": 305, "suffic": 482, "suffici": [377, 452, 495, 496], "suggest": [491, 498, 503], "suit": 482, "suitabl": [207, 222, 250, 368, 377, 482, 485, 487, 493, 498, 499, 500, 501], "sum": [61, 119, 222, 333, 377, 435, 445, 446, 447, 448, 452, 458, 459, 461, 464, 477, 488, 495, 502], "sum_": [488, 492], "sum_constraint": 458, "sum_constraint_1": 449, "sum_constraint_2": 449, "sum_toler": 458, "summar": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158, 303, 305, 311], "summari": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 141, 142, 144, 145, 147, 154, 155, 158, 303, 305, 311, 481, 482], "superior": 485, "supersed": 484, "suppli": 377, "support": [11, 34, 97, 98, 99, 100, 101, 188, 210, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 412, 441, 446, 447, 448, 449, 452, 453, 455, 458, 470, 479, 481, 482, 483, 484, 488, 491, 493, 494, 495, 498, 499, 500, 502, 503], "supports_batch": 481, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 259, 261, 263, 268, 272, 286, 288, 290, 292, 481, 499], "supports_partial_measur": [124, 129, 133, 135, 481, 486], "supports_pending_experi": 481, "supports_transfer_learn": [259, 261, 263, 268, 272, 286, 288, 290, 292, 499], "supportsread": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409], "supportswrit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409], "suppos": 488, "sure": [458, 466, 479, 482], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 76, 80, 99, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 197, 199, 204, 205, 206, 207, 214, 216, 222, 259, 261, 264, 266, 268, 272, 274, 275, 279, 282, 284, 286, 288, 290, 292, 446, 447, 448, 449, 453, 461, 470, 477, 479, 481, 483, 486, 487, 492, 493, 494, 501, 503], "surrogate_model": [197, 199, 441, 453, 455, 456, 461, 471, 472, 481], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 99, 197, 199, 263, 266, 481], "svg": 464, "sw": 447, "swiss": 483, "switch": [55, 185, 188, 189, 296, 441, 446, 447, 448, 449, 461, 470, 479, 481, 488, 494], "switch1": 447, "switch2": 447, "switch2_left": 447, "switch2_right": 447, "switch_1": 488, "switch_2": 488, "switch_aft": [189, 471, 472, 494], "switzerland": 483, "sy": 480, "symmetr": [311, 476, 502], "symmetri": 488, "sync": [481, 482], "syntax": [479, 481], "synthet": [443, 444, 453, 464, 474, 481], "system": [377, 406, 437, 461, 476, 479, 480, 483, 484, 498, 501], "t": [127, 294, 295, 308, 329, 358, 364, 368, 436, 437, 438, 440, 441, 448, 453, 464, 474, 478, 490, 493, 498, 500, 502], "t1": [314, 321, 337, 486, 492, 498, 500, 502], "t2": [314, 321, 337, 486, 492, 500, 502], "t3": [492, 500, 502], "t4": [492, 500, 502], "t5": [500, 502], "t6": 500, "t7": 500, "t_1": 492, "t_2": 492, "t_3": 492, "t_ab": 500, "t_bell": 500, "t_both": 502, "t_i": 492, "t_match": [492, 496], "t_max": [492, 496, 502], "t_min": [496, 502], "t_power": 500, "t_quad": 500, "t_skew1": 502, "t_skew2": 502, "t_sym1": 502, "t_sym2": 502, "t_sym3": 502, "tab": [464, 476], "tabl": [396, 455, 481, 487, 488, 491], "tabular": 498, "tag": [479, 481, 496], "tailor": 487, "take": [8, 111, 141, 155, 160, 161, 259, 261, 263, 268, 272, 282, 286, 288, 290, 292, 306, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 451, 458, 463, 481, 486, 487, 488, 492, 493, 494, 497, 501], "taken": [187, 452, 481, 487, 490], "tantamount": 485, "target": [9, 12, 14, 15, 18, 34, 81, 99, 124, 125, 127, 129, 132, 133, 134, 135, 137, 181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 245, 248, 250, 251, 252, 259, 261, 263, 266, 268, 272, 286, 288, 290, 292, 296, 305, 308, 311, 316, 361, 377, 383, 386, 387, 393, 394, 395, 398, 413, 414, 415, 430, 431, 433, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 452, 453, 455, 456, 461, 467, 468, 470, 471, 472, 474, 476, 477, 479, 481, 486, 487, 491, 496, 498, 499, 502, 503], "target_1": [447, 448, 449, 486, 492], "target_2": [486, 492], "target_3": [486, 492], "target_a": 499, "target_b": 499, "target_cumbest": [435, 474], "target_index": [99, 481, 491], "target_match": 463, "target_max": [463, 487], "target_min": 463, "targetmod": [311, 481], "targetnam": 250, "targettransform": [311, 481], "task": [145, 216, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 303, 305, 311, 461, 481, 487, 494, 496, 498, 501], "task_idx": [216, 481], "task_param": [474, 498], "task_paramet": 496, "task_parameter_json": 496, "task_parameter_reconstruct": 496, "taskparamet": [229, 474, 481, 490, 496, 498, 503], "tb": 504, "tbodi": 455, "td": 455, "technic": [127, 222, 308, 486, 498, 501], "techniqu": [207, 494], "technologi": 483, "telemetri": [481, 483], "temp": [446, 448, 483], "temp_c": [436, 437, 438, 452], "temperatur": [436, 438, 440, 441, 446, 448, 451, 455, 456, 470, 488, 493, 495, 501], "temperature_resolut": 446, "temperature_valu": 452, "temporari": [124, 129, 133, 135, 417, 452, 481, 496, 500], "temporarili": [481, 497, 504], "temporary_se": 504, "tempt": 501, "tenac": 481, "tend": 453, "tensor": [28, 31, 48, 127, 245, 259, 294, 295, 308, 321, 329, 339, 386, 397, 402, 423, 481], "tensorcal": 324, "term": [114, 248, 452, 461, 482, 484, 487, 491, 495, 496, 498, 500, 501], "termin": [452, 453, 480, 484], "terminologi": 503, "tert": [436, 437, 438, 440, 441], "test": [222, 250, 268, 461, 474, 479, 480, 481, 482, 487, 491, 498, 500, 504], "test_funct": [443, 444, 453, 467, 468, 474], "test_scenario": [436, 438], "testabl": [88, 250], "testfunct": [443, 444, 467, 468], "testfunctionclass": [443, 444, 467, 468], "text": [37, 330, 455, 464, 476, 484, 488, 492, 502], "textcont": 455, "texttt": 502, "th": [343, 488], "than": [31, 34, 67, 87, 155, 187, 188, 189, 199, 214, 216, 229, 311, 343, 367, 381, 387, 420, 421, 437, 448, 452, 459, 481, 485, 488, 491, 493, 496, 499, 500], "thank": 500, "thei": [127, 161, 182, 192, 308, 389, 393, 441, 449, 452, 458, 461, 463, 466, 481, 482, 486, 487, 488, 491, 493, 494, 495, 496, 497, 500, 501, 502, 504], "them": [41, 282, 384, 441, 476, 480, 481, 482, 486, 488, 490, 491, 493, 494, 496, 497, 500, 501, 502], "theme": 481, "themselv": 500, "theori": 484, "therebi": 222, "therefor": [47, 189, 259, 261, 263, 268, 272, 286, 288, 290, 292, 441, 480, 487, 496, 499, 501, 502], "therein": 481, "thereof": 484, "thf": 488, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 184, 186, 187, 188, 189, 191, 199, 204, 205, 206, 207, 214, 216, 222, 248, 250, 252, 254, 256, 259, 261, 263, 264, 266, 267, 268, 272, 282, 286, 288, 290, 292, 296, 308, 342, 361, 362, 367, 372, 377, 385, 387, 388, 390, 392, 396, 435, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 470, 471, 472, 474, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "think": [461, 493], "third": [375, 463, 484, 491, 498], "third_parti": 377, "thompson": [23, 483], "thomson": 23, "those": [65, 161, 189, 191, 248, 420, 441, 480, 484, 486, 488, 498], "though": [501, 502], "three": [437, 458, 459, 463, 464, 479, 487, 488, 491, 492, 494, 495, 501, 503], "threshold": [9, 12, 31, 45, 47, 147, 158, 160, 162, 189, 199, 296, 390, 443, 448, 449, 452, 458, 481, 488, 493, 500], "thresholdcondit": [60, 61, 443, 448, 449, 458, 503], "through": [34, 216, 329, 342, 393, 456, 458, 461, 476, 479, 481, 482, 484, 488, 492, 496, 498, 502, 503], "throughout": 189, "throw": [127, 308, 372, 488], "thrown": [127, 252, 308, 438, 452, 471, 480, 486], "thu": [199, 250, 361, 393, 436, 437, 443, 444, 446, 447, 448, 449, 455, 456, 458, 461, 467, 468, 470, 480, 482, 487, 490, 493, 494, 496, 498, 501, 504], "tick": 453, "tick_param": 476, "tight": 500, "tight_layout": [464, 476], "time": [11, 127, 199, 308, 421, 444, 451, 458, 461, 479, 481, 486, 487, 488, 490, 493, 496, 497, 498, 499, 503, 504], "timeout": 481, "timer": 451, "titl": [455, 464, 479, 484], "tl": 481, "tmp": 246, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 124, 129, 133, 135, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 481], "to_botorch_object": [317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "to_botorch_posterior_transform": [321, 326], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409], "to_empti": [127, 308], "to_factori": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121], "to_fram": [435, 500], "to_gpytorch": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 170, 172, 173, 174, 175, 176, 177, 178, 481], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 455, 456, 470, 481, 487, 496], "to_keep": 391, "to_ndarrai": 402, "to_numpi": [453, 464], "to_object": [303, 305, 311, 435, 443, 444, 453, 461, 464, 467, 468, 474, 476, 492, 498, 500], "to_polar": [43, 44, 45], "to_searchspac": [140, 141, 142, 144, 145, 147, 154, 155, 158, 214, 222, 461, 463, 466, 476, 481, 490], "to_str": 481, "to_subspac": [140, 141, 144, 145, 147, 154, 155, 158, 481], "to_tensor": [402, 455, 481], "to_tupl": [402, 464, 476], "tobia": 483, "togeth": [41, 71, 343, 441, 461, 468, 479, 481, 488, 502], "toggl": [34, 481], "toggle_discrete_candid": [34, 481, 490], "toggleabl": 455, "toggleable__cont": 455, "toggleablecont": 455, "tol": 455, "toler": [34, 45, 155, 222, 432, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 452, 455, 456, 458, 467, 468, 470, 471, 472, 476, 479, 481, 488], "tolist": 443, "toluen": 493, "toml": 481, "too": [443, 498, 500, 501], "tool": [369, 479, 481, 488, 496], "toolbox": 479, "top": [481, 482], "topic": 487, "topolog": 493, "topologicaltors": 152, "topologicaltorsionfingerprint": 152, "torch": [127, 245, 308, 321, 324, 329, 339, 386, 402, 455, 481, 502], "torch_doctest_cuda1": [127, 308], "toronto": 483, "tort": 484, "total": [31, 188, 189, 420, 458, 459, 461, 495], "total_bas": 459, "total_phase_ag": 459, "toward": [172, 488], "towel": 478, "tox": [481, 482], "tr": 455, "tracebackexcept": 480, "track": [181, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 222, 452, 484, 490], "trade": [8, 484, 492], "trademark": 484, "tradit": [437, 457, 458, 477, 479, 481], "train": [83, 99, 127, 181, 187, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 256, 259, 261, 263, 264, 266, 267, 268, 272, 286, 288, 290, 292, 296, 308, 454, 464, 474, 481, 498], "train_i": 455, "train_x": 455, "training_funct": 474, "trajectori": [248, 435, 452, 461, 476, 487, 498], "transfer": [255, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 441, 446, 447, 448, 449, 470, 477, 479, 481, 483, 484, 493, 499, 503], "transform": [34, 83, 124, 129, 133, 135, 141, 142, 144, 145, 147, 155, 158, 214, 216, 222, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 303, 305, 307, 308, 311, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 373, 377, 386, 393, 398, 402, 423, 446, 447, 448, 449, 463, 470, 476, 477, 481, 484, 492, 493, 503], "transform_rep_exp2comp": 481, "transformermixin": 377, "transit": [127, 308, 481, 500], "translat": [41, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 311, 481, 484, 490, 493], "transmiss": 496, "transport": 377, "travers": 481, "treasur": 503, "treat": [158, 162, 259, 261, 263, 268, 272, 286, 288, 290, 292, 437, 476, 479, 488, 493, 500, 504], "tree": 481, "tremend": 437, "trend": 501, "tri": [127, 308, 495], "triangl": [311, 330, 502], "triangular": [311, 330, 503], "triangular_transform": 481, "triangulartransform": 503, "tricki": 491, "tricyclohexylphosphin": [436, 437, 438], "trigger": [187, 342, 452, 456, 461, 481, 482, 486, 492, 496], "trim": 455, "trivial": [275, 288, 492, 493, 499, 502], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 99, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 162, 199, 216, 246, 272, 305, 308, 311, 354, 355, 359, 364, 365, 367, 368, 377, 381, 391, 420, 428, 432, 435, 437, 441, 443, 444, 446, 447, 448, 449, 453, 455, 456, 458, 461, 463, 464, 467, 468, 470, 471, 472, 474, 481, 486, 487, 488, 490, 491, 492, 493, 496, 497, 500, 502], "trust": 455, "truth": 368, "try": [91, 436, 437, 438, 452, 455, 456, 472, 480, 481, 504], "tunabl": 476, "tune": [475, 476, 477, 479], "tupl": [9, 12, 15, 18, 34, 44, 48, 99, 106, 107, 108, 111, 113, 115, 116, 117, 119, 120, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 163, 214, 216, 221, 222, 295, 308, 330, 333, 334, 335, 338, 342, 352, 358, 359, 362, 380, 397, 402, 405, 423, 481], "turn": [47, 214, 222, 259, 261, 263, 268, 272, 286, 288, 290, 292, 405, 466, 476, 480, 481, 488, 492], "turnaround": 498, "twice": [490, 492, 502], "twini": 476, "two": [9, 12, 15, 18, 37, 57, 66, 67, 127, 189, 199, 209, 248, 308, 314, 329, 330, 331, 333, 335, 337, 343, 349, 351, 386, 413, 420, 430, 435, 436, 438, 451, 458, 461, 464, 468, 474, 476, 478, 479, 481, 482, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 498, 499, 500, 502], "twofold": 461, "twophasemetarecommend": [436, 438, 441, 446, 447, 448, 449, 452, 453, 455, 456, 461, 468, 470, 471, 472, 479, 481, 494], "twophasestrategi": 481, "twosid": 502, "twosidedaffinetransform": 503, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 79, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 236, 237, 238, 240, 242, 243, 245, 247, 250, 252, 254, 256, 259, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 280, 286, 288, 290, 292, 294, 295, 296, 298, 299, 300, 303, 305, 306, 308, 311, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 339, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 370, 371, 372, 373, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 405, 407, 408, 409, 410, 412, 413, 414, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 470, 471, 472, 476, 479, 481, 482, 484, 485, 488, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503], "typealia": 306, "typeddict": [298, 481], "typeerror": [34, 99, 103, 250, 259, 261, 263, 268, 272, 286, 288, 290, 292, 361, 384, 410, 421, 432, 433, 452, 453, 456, 497], "typeguard": 358, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 161, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 227, 237, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 295, 296, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 355, 356, 357, 358, 380, 386, 393, 402, 408, 409, 410], "typic": [17, 127, 308, 361, 381, 437, 476, 479, 481, 486, 487, 491, 493, 496, 504], "typing_extens": 482, "typo": [481, 482], "u": [23, 435, 436, 437, 438, 451, 453, 458, 459, 461, 463, 466, 474, 476, 479, 485, 486, 488, 492, 500, 502], "ucb": [8, 441, 481, 485, 487, 496], "ultim": 482, "ultra": [471, 472], "un": 481, "unabl": 455, "unavail": 481, "unawar": 486, "unbound": [402, 451], "uncaught": 481, "uncertain": 365, "uncertainbool": 311, "uncertainti": [8, 17, 441, 503], "unchang": [127, 160, 308, 377], "uncharacter": 501, "uncorrel": [390, 501], "undefin": [127, 259, 308, 490], "under": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 364, 393, 449, 453, 461, 464, 479, 480, 484, 493], "underflow": 89, "underli": [34, 57, 452, 461, 479, 481, 486, 487, 491, 494, 496, 497, 500], "underscor": 481, "understand": [479, 501], "undesir": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 94, 488, 490, 493, 504], "undo": 480, "unequ": 449, "unevenli": 493, "unexpect": [79, 91, 127, 308, 481], "unexpected_kei": [127, 308], "unfilt": 488, "unfinish": 486, "unfortun": 501, "unhandl": 481, "unifi": [481, 502], "uniform": [214, 259, 384, 385, 481], "uniformli": [209, 420], "uniniti": 367, "uninstal": 90, "unintend": [94, 361, 481, 482], "unintention": 504, "union": [9, 12, 15, 18, 34, 162, 250, 254, 259, 261, 263, 268, 272, 286, 288, 290, 292, 311, 410, 414, 420, 468, 484, 495], "uniqu": [58, 137, 161, 420, 430, 458, 481, 493], "unit": [140, 141, 142, 144, 145, 147, 154, 155, 158, 221, 303, 305, 311, 321, 329, 405, 408, 463, 476, 481], "unix": 502, "unknown": [188, 365, 420, 435, 461, 476, 481, 492, 499, 501], "unlabel": 386, "unless": [127, 308, 479, 482, 484, 493, 496], "unlik": [14, 15, 16, 18, 19, 458, 492, 500, 504], "unlock": 503, "unmaintain": 481, "unmatch": 359, "unmatchedattributeerror": 359, "unmeasur": [250, 438], "unnecessari": [481, 487, 502], "unnorm": 502, "unpromis": [452, 486], "unreach": 481, "unrealist": 498, "unrepresent": 481, "unrestrict": 361, "unsaf": 481, "unspecifi": [347, 481, 496], "unspecifiedtyp": 34, "unstructur": [232, 238, 364, 496], "unstructure_bas": 481, "unstructure_with_typ": 481, "unsupervis": 377, "unsupport": [214, 252, 486], "until": [184, 186, 187, 188, 189, 250, 461, 479, 486, 498], "untouch": 384, "untransform": 34, "unusedobjectwarn": [452, 481, 486], "unveil": 474, "unwant": 41, "unweight": 492, "up": [34, 222, 250, 252, 435, 436, 437, 438, 439, 446, 448, 451, 453, 457, 458, 459, 463, 464, 468, 474, 479, 480, 481, 485, 488, 492, 500, 504], "updat": [34, 127, 308, 377, 437, 440, 481, 482, 486], "update_measur": [34, 481], "upgrad": 481, "upon": [191, 275, 480, 481, 482, 488, 495, 499, 501], "upper": [8, 24, 162, 178, 216, 222, 402, 441, 453, 464, 474, 481, 488, 500, 504], "upper_bound": 495, "upper_threshold": 162, "uppercas": 497, "upperconfidencebound": [24, 485, 496], "upstream": 482, "urg": 491, "url": 479, "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 71, 75, 99, 111, 127, 129, 147, 152, 155, 158, 161, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 223, 224, 236, 237, 245, 250, 252, 254, 259, 261, 263, 268, 269, 272, 286, 288, 290, 292, 299, 308, 311, 314, 345, 348, 361, 362, 364, 372, 373, 377, 385, 386, 392, 403, 412, 420, 435, 443, 444, 450, 451, 452, 453, 454, 457, 458, 459, 463, 466, 470, 471, 472, 474, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 497, 500, 501, 502, 503, 504], "usa": 483, "usabl": [367, 480, 481, 493, 496], "usag": [404, 481, 488, 494, 503], "use_comp_rep": [99, 103, 491], "use_fpsampl": [210, 245, 497], "use_polar": 481, "use_polars_for_constraint": [245, 497], "use_torch": [386, 443, 444, 453, 467, 468, 474], "user": [54, 55, 69, 84, 94, 127, 147, 150, 259, 261, 263, 268, 272, 286, 288, 290, 292, 300, 308, 377, 385, 408, 409, 440, 441, 446, 472, 476, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 501, 502], "userguid": 463, "usernam": 481, "userwarn": 480, "uses_shap_explain": 481, "usort": 481, "usr": 152, "usrcat": 152, "usrcatfingerprint": 152, "usrfingerprint": 152, "usual": [127, 250, 436, 437, 438, 471, 480, 491, 493], "util": [34, 127, 199, 214, 222, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 345, 347, 349, 364, 365, 377, 402, 408, 409, 419, 423, 435, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 464, 467, 468, 471, 474, 479, 481, 485, 486, 487, 491, 492, 493, 494, 496, 498, 499, 501, 503], "uv": 481, "v": [476, 479, 501], "val": 368, "val_from_param1": 59, "val_from_param2": 59, "valid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 160, 161, 216, 219, 222, 225, 245, 268, 387, 392, 446, 469, 471, 477, 480, 481, 482, 487, 488, 498], "validate_compat": 268, "validate_config": [34, 472, 481, 487], "validate_dataframes_carefulli": 497, "validate_parameter_input": [34, 428], "validate_target_input": 34, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 43, 44, 45, 47, 48, 55, 57, 81, 99, 110, 111, 112, 113, 114, 115, 116, 117, 121, 124, 127, 129, 133, 135, 141, 144, 145, 147, 149, 150, 152, 155, 158, 160, 161, 162, 165, 166, 167, 189, 197, 199, 204, 205, 206, 207, 214, 216, 222, 223, 224, 247, 248, 250, 252, 254, 259, 261, 263, 268, 272, 286, 288, 290, 292, 298, 305, 306, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 346, 347, 356, 359, 364, 365, 368, 377, 379, 383, 384, 385, 387, 389, 392, 393, 396, 402, 403, 410, 413, 414, 425, 426, 427, 429, 431, 432, 433, 436, 437, 438, 440, 441, 443, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 461, 464, 467, 468, 470, 471, 472, 474, 476, 479, 481, 482, 485, 486, 488, 490, 491, 492, 497, 500, 501, 502, 503, 504], "valuabl": [494, 498], "valueerror": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 99, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 137, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 161, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 228, 240, 250, 252, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 300, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 343, 359, 364, 366, 368, 371, 379, 381, 385, 387, 392, 393, 394, 402, 408, 409, 420, 421, 430, 432, 433, 468, 480], "vanilla": 502, "var": [34, 127, 259, 261, 262, 263, 266, 268, 272, 286, 288, 290, 292, 308, 461, 503], "vari": [34, 222, 437, 492], "variabl": [37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 259, 261, 263, 268, 272, 286, 288, 290, 292, 303, 467, 476, 481, 482, 488, 493, 494, 496, 499, 503], "varianc": [8, 17, 110, 288, 388, 481, 485], "variance_initial_valu": 110, "variance_prior": 110, "variant": [441, 481, 491, 500, 501], "variat": [464, 476], "varieti": [467, 482, 496, 497, 498], "variou": [377, 402, 458, 465, 481, 482, 486, 491, 494, 497, 498, 500, 502], "varucb": 481, "vector": [37, 455, 481, 483, 492], "vendor": 493, "verbal": 484, "verbos": [455, 456, 481], "veri": [250, 446, 448, 476, 486, 491, 493, 499, 504], "verifi": [367, 443, 446, 447, 448, 449, 458, 459, 466, 468, 470, 482], "versa": 501, "versatil": 494, "version": [124, 127, 129, 133, 135, 308, 348, 377, 412, 446, 448, 449, 458, 461, 466, 474, 479, 480, 481, 482, 484, 496, 500, 502, 503], "vert": 453, "via": [14, 17, 23, 33, 34, 47, 99, 127, 189, 199, 210, 247, 259, 261, 263, 264, 266, 268, 272, 286, 288, 290, 292, 353, 361, 391, 438, 444, 451, 452, 455, 463, 466, 479, 481, 482, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503], "via_init": 496, "via_json": 496, "viabl": 87, "vice": 501, "view": [127, 214, 222, 308, 453, 495], "view_init": 453, "violat": [41, 53, 54, 55, 56, 57, 58, 59, 60, 61, 82, 481], "viridi": 453, "virtual": 482, "visibl": 481, "visual": [437, 474, 476, 491], "vitro": 486, "vivo": 486, "voltag": 476, "voltage_grid": 476, "volum": [31, 479, 501], "vsa": 152, "vsafingerprint": 152, "vulner": [481, 482], "w0": 476, "w_i": 492, "wa": [17, 72, 73, 76, 80, 81, 90, 94, 161, 189, 259, 261, 263, 268, 272, 286, 288, 290, 292, 377, 379, 387, 421, 437, 479, 480, 481, 482, 484, 488, 491, 493, 496, 497, 501], "wai": [216, 451, 458, 459, 465, 466, 476, 478, 479, 486, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "wait": 486, "wall": 11, "want": [54, 250, 441, 446, 458, 461, 468, 474, 479, 481, 482, 487, 488, 490, 491, 492, 493, 494, 496, 499, 500], "warn": [68, 362, 446, 448, 449, 452, 467, 468, 481, 482], "warranti": [479, 484], "watch": 451, "water": [446, 447, 448, 449, 458, 488, 493], "waterfal": [99, 101, 481], "wavelength1": 476, "wavelength1_peak": 476, "wavelength2": 476, "wavelength2_peak": 476, "wavelength_cumbest": 476, "wavelength_grid": 476, "we": [28, 127, 248, 308, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 479, 480, 482, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 499, 500, 501, 502, 503, 504], "web": 482, "weber": 483, "weight": [127, 129, 308, 463, 492, 496], "weight_kdalton": 493, "welcom": 482, "well": [127, 308, 377, 441, 452, 457, 478, 481, 482, 487, 488, 491, 493, 498, 500, 502], "were": [34, 77, 85, 438, 474, 480, 481, 486, 488, 493, 495, 497], "what": [161, 187, 216, 248, 377, 423, 435, 455, 463, 472, 478, 482, 485, 487, 491, 492, 493, 500, 501, 503], "whatsnew": 349, "when": [9, 12, 15, 18, 34, 47, 55, 91, 127, 155, 160, 162, 187, 188, 189, 197, 199, 216, 259, 261, 263, 268, 269, 272, 286, 288, 290, 292, 300, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 346, 347, 359, 361, 367, 377, 381, 386, 421, 446, 447, 449, 451, 456, 458, 459, 461, 478, 479, 480, 481, 482, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504], "whenev": [28, 187, 496, 500], "where": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 214, 216, 222, 240, 248, 256, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 402, 408, 409, 420, 436, 437, 438, 441, 446, 448, 458, 461, 476, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502], "wherea": [476, 496], "wherev": [484, 486], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 37, 38, 39, 40, 41, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 103, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 199, 214, 222, 259, 261, 263, 268, 272, 286, 288, 290, 292, 308, 385, 394, 402, 458, 481, 484, 487, 490], "which": [9, 12, 15, 17, 18, 34, 43, 44, 45, 47, 94, 99, 124, 127, 129, 133, 135, 161, 162, 181, 182, 184, 186, 187, 188, 189, 191, 194, 197, 199, 202, 204, 205, 206, 207, 210, 211, 216, 222, 254, 256, 259, 261, 263, 268, 272, 286, 288, 290, 292, 296, 308, 311, 323, 329, 361, 367, 377, 383, 385, 390, 392, 395, 396, 413, 414, 423, 435, 437, 441, 444, 451, 452, 458, 459, 461, 463, 466, 467, 468, 472, 474, 476, 479, 480, 481, 482, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "whichev": 497, "while": [127, 216, 219, 225, 250, 308, 377, 452, 461, 474, 480, 481, 484, 485, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "whim": 152, "whimfingerprint": 152, "whole": [127, 308, 484], "whom": 484, "whose": [127, 160, 161, 216, 252, 308, 356, 359, 364, 386, 435, 451, 458, 463, 486, 498], "wide": [498, 502], "width": [311, 322, 330, 396, 455, 476, 500, 502], "wieczorek": 483, "william": 501, "willing": 487, "win": [259, 461], "win_rat": 461, "window": [455, 481], "winerror": 480, "winkel": 479, "wish": 496, "with_kwarg": [127, 308], "within": [34, 127, 140, 141, 142, 144, 145, 147, 154, 155, 158, 160, 308, 377, 432, 466, 481, 484, 488, 493, 497, 499, 501, 503, 504], "without": [127, 188, 308, 463, 474, 476, 479, 481, 484, 486, 487, 488, 493, 497, 498, 501, 502, 504], "wolfgang": 479, "won": [127, 308, 493, 500], "work": [28, 127, 293, 308, 342, 377, 386, 446, 448, 449, 452, 470, 472, 481, 482, 483, 484, 488, 494, 496, 498], "workaround": [480, 481], "workflow": [455, 479, 487, 496, 500, 503], "workload": 482, "world": [479, 487], "worldwid": 484, "worst": [9, 12, 15, 18, 250, 252, 254, 438], "would": [58, 89, 127, 160, 161, 248, 250, 256, 267, 308, 451, 458, 461, 476, 479, 482, 486, 488, 490, 491, 493, 494, 495, 496, 498, 499, 501, 504], "wrap": [106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 232, 272, 276, 294, 295, 308, 348, 361, 479, 481, 492], "wrapper": [1, 27, 254, 256, 268, 362, 474, 479, 494], "write": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 129, 133, 135, 140, 141, 142, 144, 145, 147, 154, 155, 158, 170, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 214, 216, 222, 240, 259, 261, 263, 266, 268, 272, 275, 286, 288, 290, 292, 303, 305, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 402, 408, 409, 479, 480, 484, 496], "writetext": 455, "written": [467, 468, 482, 484, 497], "wrong": [472, 481], "wrongli": 480, "www": [479, 484], "x": [28, 125, 127, 162, 218, 238, 250, 252, 276, 308, 330, 339, 352, 358, 362, 377, 380, 397, 413, 423, 435, 436, 437, 438, 446, 447, 448, 449, 452, 453, 458, 470, 474, 476, 479, 481, 495, 499, 502], "x0": [464, 495], "x0_mesh": 464, "x1": [464, 495], "x1_mesh": 464, "x2": 495, "x_": [435, 443, 444, 466, 467, 468], "x_1": [443, 444, 466, 467, 468, 488], "x_2": [443, 444, 466, 467, 468, 488], "x_3": [443, 444, 466, 467, 468, 488], "x_4": [443, 444, 466, 467, 468], "x_5": 468, "x_6": 468, "x_i": 488, "x_new": 377, "x_pend": 28, "xdoctest": [127, 308], "xlabel": 464, "xlsx": [436, 437, 438], "xpho": [436, 437, 438], "xpu": [127, 308], "xxxx": 480, "xylen": [436, 437, 438, 440, 441], "xyzpi": 245, "y": [284, 308, 368, 377, 390, 413, 435, 436, 437, 438, 452, 453, 455, 458, 474, 476, 479, 501], "y0": 464, "y0_mesh": 464, "y1": 464, "y1_mesh": 464, "ye": 368, "year": [479, 501], "yet": [28, 481, 486, 494, 500], "yield": [6, 111, 127, 262, 308, 436, 437, 438, 440, 441, 446, 452, 455, 456, 458, 468, 470, 471, 472, 476, 479, 481, 485, 491, 492, 496, 500], "yield_cumbest": [436, 437, 438, 452], "yield_mean": 487, "yield_mod": 487, "yield_q_0": 487, "yield_std": 487, "ylabel": 464, "yml": 481, "you": [34, 54, 127, 308, 437, 441, 443, 451, 456, 458, 461, 463, 467, 468, 471, 476, 478, 479, 480, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504], "your": [127, 308, 437, 451, 458, 461, 468, 476, 478, 479, 480, 481, 482, 484, 487, 488, 490, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504], "your_branch_nam": 482, "yourself": [461, 500], "z": [453, 479], "zdir": 453, "zero": [47, 65, 67, 127, 160, 162, 172, 308, 311, 321, 330, 377, 388, 458, 461, 488, 500, 501, 502], "zero_grad": [127, 308], "zip": [452, 453], "\u00b5fmt": 481, "\u0161o\u0161i\u0107": [479, 483]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedHypervolumeImprovement", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedHypervolumeImprovement", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.make_partitioning", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.botorch", "ChainedMCObjective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.add_type", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.make_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_with_type", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.settings", "Settings", "baybe.settings.active_settings", "baybe.settings.adjust_defaults", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.botorch", "AffinePosteriorTransform", "baybe.targets.enum", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.utils", "baybe.targets.utils.combine_numerical_targets", "baybe.transformations", "baybe.transformations.base", "MonotonicTransformation", "Transformation", "baybe.transformations.basic", "AbsoluteTransformation", "AffineTransformation", "BellTransformation", "ClampingTransformation", "CustomTransformation", "ExponentialTransformation", "IdentityTransformation", "LogarithmicTransformation", "PowerTransformation", "SigmoidTransformation", "TriangularTransformation", "TwoSidedAffineTransformation", "baybe.transformations.composite", "AdditiveTransformation", "ChainedTransformation", "MultiplicativeTransformation", "baybe.transformations.utils", "baybe.transformations.utils.combine_affine_transformations", "baybe.transformations.utils.compress_transformations", "baybe.transformations.utils.convert_transformation", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "baybe.utils.basic.cache_to_disk", "classproperty", "baybe.utils.basic.compose", "baybe.utils.basic.compose_two", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "AutoBool", "UncertainBool", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.ConvertibleToInterval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.metadata", "baybe.utils.metadata.ConvertibleToMeasurableMetadata", "MeasurableMetadata", "Metadata", "baybe.utils.metadata.to_metadata", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.preprocess_dataframe", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_object_names", "baybe.utils.validation.validate_objective_input", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Desirability Optimization", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Transfer Learning", "Transformations", "Optimizing a Laser\u2019s Wavelength", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Settings", "Simulation", "Surrogates", "Targets", "Transfer Learning", "Transformations", "User Guide", "Utilities"], "titleterms": {"": [476, 482], "0": 481, "01": 481, "02": 481, "03": 481, "04": 481, "05": 481, "06": 481, "07": 481, "08": 481, "09": 481, "1": [481, 492], "10": 481, "11": 481, "12": 481, "13": 481, "14": 481, "15": 481, "16": 481, "17": 481, "19": 481, "2": [481, 492], "2022": 481, "2023": 481, "2024": 481, "2025": 481, "21": 481, "23": 481, "24": 481, "27": 481, "28": 481, "29": 481, "3": 481, "31": 481, "4": 481, "5": 481, "6": 481, "7": 481, "8": 481, "9": 481, "A": 479, "For": 493, "On": 491, "The": [461, 471, 476, 479, 490, 496, 498, 501], "abbrevi": 496, "absolut": 500, "absolutetransform": 320, "access": 463, "acqf": 2, "acquisit": [1, 2, 25, 27, 29, 30, 31, 32, 441, 486, 487], "acquisitionfunct": 26, "action": 501, "activ": [485, 493, 497], "activate_paramet": 160, "active_set": 246, "ad": [440, 481, 486, 487, 501, 504], "add_fake_measur": 383, "add_noise_to_perturb_degenerate_row": 384, "add_parameter_nois": 385, "add_typ": 232, "addit": [458, 502], "additivekernel": 119, "additivetransform": 333, "adjust_default": 247, "advanc": [479, 499, 502], "affineposteriortransform": 308, "affinetransform": [321, 502], "altern": 496, "amount": 458, "an": 461, "appli": 490, "ar": 500, "arm": [460, 461], "arm64": 480, "arrai": 498, "arrays_to_datafram": 386, "assembli": 496, "assign": 497, "asynchron": 486, "attr": 482, "augment": [341, 342, 343], "auto": 499, "autobool": 364, "automat": [496, 502], "avail": [441, 497, 499], "avx": 480, "back": 479, "backtest": 434, "backward": 503, "bandit": [258, 460, 461], "base": [25, 36, 105, 123, 125, 139, 169, 180, 183, 193, 196, 201, 260, 262, 302, 316, 436, 437, 438, 443, 444, 458, 459, 468, 490, 498], "basesequentialmetarecommend": 186, "basic": [109, 171, 319, 344, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 439, 440, 487, 491, 496, 502], "basickernel": 106, "batch": 487, "batchify_ensemble_predictor": 294, "batchify_mean_var_predict": 295, "batteri": 479, "bayb": [0, 1, 2, 25, 27, 29, 30, 31, 32, 33, 35, 36, 42, 46, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 118, 122, 123, 125, 126, 128, 130, 132, 134, 136, 137, 138, 139, 143, 146, 148, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 179, 180, 182, 183, 185, 190, 192, 193, 195, 196, 198, 200, 201, 203, 208, 212, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 265, 267, 269, 270, 271, 273, 276, 277, 278, 280, 281, 283, 285, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307, 309, 310, 312, 313, 314, 315, 316, 319, 332, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 440, 479, 482], "bayesian": [195, 196, 198, 479, 494], "bayesianlinearsurrog": 286, "bayesianrecommend": 197, "bell": 500, "belltransform": [322, 502], "bernoulli": 461, "betabernoullimultiarmedbanditsurrog": 259, "betaprior": 172, "binari": [304, 306], "binarytarget": 305, "black": [435, 461], "block_deserialization_hook": 233, "block_serialization_hook": 234, "bo": 491, "boolean": [363, 366, 367, 368], "both": 470, "botorch": [126, 198, 307, 467], "botorchrecommend": 199, "bound": [451, 495], "box": [435, 461], "break": 481, "build": [461, 495], "bytes_to_human_read": 405, "cach": 487, "cache_to_disk": 348, "call": 490, "callabl": [443, 444, 468, 498], "campaign": [33, 34, 435, 436, 437, 438, 441, 443, 444, 446, 447, 449, 452, 455, 456, 464, 467, 468, 470, 471, 487], "candid": [487, 490], "cardinalityconstraint": 37, "case": 461, "cast": 492, "catch_constant_target": 296, "categor": 143, "categoricalencod": 149, "categoricalparamet": [144, 493], "caution": 490, "chain": 502, "chainedmcobject": 127, "chainedtransform": 334, "challeng": 488, "chang": [481, 497], "changelog": 481, "check_if_in": 366, "chemic": 479, "chemistri": [369, 370, 371, 372, 373], "choicevalu": 306, "citat": 479, "clampingtransform": [323, 502], "class": 482, "classproperti": 349, "clone": 479, "closer_el": 413, "closest_el": 414, "cluster": [203, 494], "clustering_algorithm": [374, 375, 376], "code": 482, "columntransform": 423, "combine_affine_transform": 337, "combine_numerical_target": 314, "compar": 470, "compat": 503, "compon": 451, "compos": 350, "compose_two": 351, "composit": [118, 265, 332, 499, 502], "compositekernel": 107, "compositesurrog": 266, "compress": 502, "compress_transform": 338, "comput": [488, 491], "condit": [42, 43, 488], "config": [471, 472, 487], "configur": [455, 456, 471, 490, 492, 496], "consider": 500, "constraint": [35, 36, 38, 42, 46, 49, 50, 51, 52, 62, 63, 64, 65, 66, 67, 442, 443, 444, 445, 446, 447, 448, 449, 458, 459, 488, 490, 495, 504], "construct": [436, 437, 438, 443, 444, 458, 467, 468, 492, 495, 502], "constructor": [495, 496], "context": 497, "continu": [46, 213, 442, 444, 458, 466, 485, 488, 493, 495, 501, 504], "continuouscardinalityconstraint": [47, 488], "continuousconstraint": 39, "continuouslinearconstraint": [48, 488], "continuouslinearequalityconstraint": 50, "continuouslinearinequalityconstraint": 51, "continuousnonlinearconstraint": 40, "continuousparamet": 140, "contribut": 482, "contributor": 483, "control": [487, 489, 490], "conveni": [492, 502], "convent": 482, "convers": [378, 379, 380, 381, 492, 496], "convert": [235, 455], "convert_acqf": 30, "convert_to_float": 352, "convert_transform": 339, "convertibletointerv": 400, "convertibletomeasurablemetadata": 407, "copi": 496, "core": [215, 218, 219, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 271, 278, 280], "cpu": 480, "creat": [435, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 455, 456, 463, 466, 467, 470, 471, 474, 487, 495], "create_fake_input": 387, "creation": [436, 437, 438, 458, 459, 487, 500, 502, 504], "current": 502, "custom": [146, 267, 269, 435, 446, 450, 451, 454, 455, 456, 463, 499, 500, 502], "customdiscreteparamet": [147, 493], "customencod": 150, "customonnxsurrog": 268, "customtransform": 324, "data": [436, 437, 438, 495, 501], "datafram": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 443, 444, 468, 495, 496, 498], "de": [470, 488, 496], "decor": 497, "default": [281, 495, 496], "defaultkernelfactori": 282, "defin": [435, 443, 444, 451, 452, 453, 463, 464, 467, 468, 472, 474, 479], "definit": 452, "delai": 497, "depend": [447, 479, 493], "deprec": [49, 50, 51, 481, 503], "deprecationerror": 69, "deseri": 496, "deserialize_datafram": 242, "design": [479, 482], "desir": [128, 463, 487], "desirabilityobject": [129, 492], "develop": 482, "df_apply_dependency_augment": 342, "df_apply_permutation_augment": 343, "df_drop_single_value_column": 388, "df_drop_string_column": 389, "df_uncorrelated_featur": 390, "dictionari": [471, 472], "differ": 441, "dimens": 468, "direct": 497, "discret": [52, 220, 223, 224, 225, 445, 446, 447, 448, 458, 467, 487, 488, 493, 495], "discretecardinalityconstraint": [53, 488], "discreteconstraint": 41, "discretecustomconstraint": [54, 488], "discretedependenciesconstraint": [55, 488], "discreteexcludeconstraint": [56, 488], "discretelinkedparametersconstraint": [57, 488], "discretenolabelduplicatesconstraint": [58, 488], "discreteparamet": 141, "discretepermutationinvarianceconstraint": [59, 488], "discreteproductconstraint": [60, 488], "discretesamplingmethod": 419, "discretesumconstraint": [61, 488], "discuss": 461, "do": 498, "docstr": 482, "document": 456, "domin": 492, "dtypefloatonnx": 412, "dummi": 345, "duplic": 458, "dure": 504, "dynam": 490, "edbo": 283, "edbokernelfactori": 284, "effici": [488, 504], "emptysearchspaceerror": 70, "encod": 493, "end": 479, "enum": [130, 148, 309], "environ": [489, 497], "equal": 502, "equival": 496, "estim": 504, "exampl": [436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 455, 456, 467, 468, 470, 471, 472, 477, 479, 491, 492], "except": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "exceptiongroup": 480, "exclud": 490, "exclus": [448, 449, 490], "exist": [500, 502], "expect": 501, "expectedimprov": 3, "experi": [446, 447, 448, 449, 455, 456, 470, 479, 486, 498], "experiment": [487, 491], "expir": 481, "explain": [97, 491], "explicit": 495, "exponentialtransform": 325, "extend": 482, "extract": 499, "fake": 504, "faq": 478, "farthest_point_sampl": 420, "field": 496, "file": [471, 472], "filter_df": 391, "find_subclass": 353, "finite_float": 425, "fix": [480, 481], "fpsiniti": 209, "fpsrecommend": 210, "fraction_to_float": 379, "from": [471, 479, 481, 487, 495, 496, 500, 502], "full": [436, 437, 438, 495], "function": [435, 436, 437, 438, 441, 443, 444, 452, 467, 468, 482, 486, 487], "further": 487, "fuzzy_row_match": 392, "gammaprior": 173, "gaussian_process": [270, 271, 273, 276, 277, 278, 280, 281, 283], "gaussianmixtureclusteringrecommend": 204, "gaussianprocesspreset": 279, "gaussianprocesssurrog": 272, "gener": [474, 482, 494], "get": [440, 463, 487, 490], "get_baseclass": 354, "get_canonical_smil": 370, "get_fingerprint_class": 371, "get_parameters_from_datafram": 161, "get_subclass": 355, "get_transform_object": 393, "get_transform_paramet": 227, "github": 479, "global": [485, 497], "group_duplicate_valu": 356, "guid": 503, "halfcauchyprior": 174, "halfnormalprior": 175, "handle_missing_valu": 394, "hilberts_factori": 357, "hook": [450, 451, 452, 453], "hybrid": [443, 468, 488], "identitytransform": 326, "imaginari": 461, "implement": 488, "implicit": 492, "import": [435, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 451, 453, 455, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 472, 474, 476, 491, 500], "improv": 453, "includ": 479, "inclus": 436, "incompatibilityerror": 71, "incompatibleacquisitionfunctionerror": 72, "incompatibleargumenterror": 73, "incompatibleexplainererror": 74, "incompatiblesearchspaceerror": 75, "incompatiblesurrogateerror": 76, "incomplet": 438, "incompletemeasurementserror": 77, "incorpor": 449, "independentgaussiansurrog": 261, "index": 479, "indic": 479, "infeasibilityerror": 78, "infiniteintervalerror": 401, "influenc": [488, 504], "inform": [487, 494], "initi": [436, 441, 497], "inputdatatypewarn": 79, "insight": [95, 96, 97, 98, 100, 101, 102, 103, 491], "inspect": 497, "instal": [479, 480], "instanc": 451, "instead": [455, 456], "instruct": 500, "interpret": 491, "interrupt": 452, "interv": [399, 400, 401, 402, 403], "invalidsurrogatemodelerror": 80, "invalidtargetvalueerror": 81, "invari": 458, "invok": 496, "irrelev": 501, "is_abstract": 367, "is_all_inst": 358, "is_cardinality_fulfil": 63, "is_inact": 162, "is_shap_explain": 102, "issu": [479, 480], "iter": [443, 444, 455, 456], "joint": 497, "json": [487, 496], "kernel": [104, 105, 108, 109, 118], "kernel_factori": [273, 276], "kernelfactori": 274, "kmeansclusteringrecommend": 205, "kmedoid": [376, 377], "known": [479, 480], "label": 493, "laser": 476, "leak": 480, "learn": [473, 474, 485, 498, 501], "licens": [479, 484], "like": 493, "limit": [486, 488, 491, 500], "linear": [285, 444], "linearkernel": 110, "link": 456, "local": [479, 485], "logarithmictransform": 327, "logexpectedimprov": 4, "lognormalprior": 176, "look_up_target": 252, "lookup": [251, 252, 436, 437, 438, 443, 444, 452, 468, 474, 498], "loop": [435, 436, 437, 438, 474, 476, 479], "maco": 480, "maintain": [479, 483], "make_base_structure_hook": 236, "make_dict_valid": 298, "make_explainer_for_surrog": 103, "make_gp_from_preset": 280, "make_partit": 31, "manual": [446, 447, 448, 449, 497], "mark": 486, "match": 500, "match_attribut": 359, "maternkernel": 111, "maxim": 500, "mean": 498, "meanpredictionsurrog": 288, "measur": [440, 455, 456, 487, 504], "measurablemetadata": 408, "mechan": [436, 437, 438, 489, 498], "memori": [404, 405, 504], "memorys": 221, "meta": [182, 183, 185, 490, 494], "metadata": [406, 407, 409, 410], "metarecommend": 184, "method": [451, 482, 485], "minim": 500, "minimumcardinalityviolatedwarn": 82, "mismatch": 500, "miss": 498, "mixin": 239, "mixtur": [457, 458, 459], "model": [441, 455, 456, 458, 459, 461, 476, 488, 491, 499], "modelnottrainederror": 83, "monitor": 453, "monkeypatch": [451, 452, 453], "monotonictransform": 317, "multi": [460, 461, 462, 491, 492, 499], "multipl": [498, 502], "multiplicativetransform": 335, "naiv": [190, 287], "naivehybridspacerecommend": 191, "name": 493, "name_to_smil": 372, "necessari": [436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 455, 456, 467, 468, 470, 471, 472], "negat": 500, "nest": 496, "new": 489, "ngboost": 289, "ngboostsurrog": 290, "nois": 504, "nomcacquisitionfunctionerror": 84, "nomeasurementserror": 85, "non": 492, "non_inf_float": 426, "non_nan_float": 427, "non_shap_explain": 98, "none": 498, "nonpredict": [200, 201, 203, 208], "nonpredictiverecommend": 202, "nonstring_to_tupl": 380, "norecommenderslefterror": 86, "normal": [463, 492, 500], "normalize_input_dtyp": 395, "normalprior": 177, "notenoughpointslefterror": 87, "nothingtosimulateerror": 88, "numer": [153, 310, 411, 412, 413, 414], "numericalcontinuousparamet": [154, 493], "numericaldiscreteparamet": [155, 493], "numericaltarget": [311, 500], "numericalunderflowerror": 89, "object": [122, 123, 124, 125, 126, 128, 130, 132, 134, 136, 137, 436, 437, 438, 441, 443, 444, 446, 447, 448, 449, 463, 467, 470, 474, 479, 487, 492, 496], "onnx": 455, "oper": 502, "optim": [435, 463, 464, 474, 476, 479, 487, 500, 504], "option": [479, 493], "optionalimporterror": 90, "order": [458, 502], "output": [455, 456, 491, 492, 499], "overrid": 482, "packag": 479, "page": 491, "pamclusteringrecommend": 206, "parallel": 487, "paramet": [138, 139, 142, 143, 146, 148, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 436, 437, 438, 441, 456, 458, 459, 487, 491, 493, 495, 504], "parameter_cartesian_prod_panda": 223, "parameter_cartesian_prod_polar": 224, "parameterencod": 151, "pareto": [132, 464], "paretoobject": [133, 492], "partial": [27, 486], "partialacquisitionfunct": 28, "pass": 456, "pend": 486, "perform": [436, 467, 468], "periodickernel": 112, "perman": 490, "permut": 458, "piecewisepolynomialkernel": 113, "plainkernelfactori": 275, "plot": [435, 452, 453, 491], "point": 500, "polar": [480, 488], "polynomialkernel": 114, "posterior": 487, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 262, "power": 500, "powertransform": 328, "practic": 500, "pre": 455, "preced": 497, "predict": 487, "preprocess_datafram": 428, "preset": [277, 278, 280, 281, 283], "pretrain": 455, "pretty_print_df": 396, "previou": 497, "print": [446, 447, 449], "prior": [168, 169, 170, 171], "probabilityofimprov": 7, "probabl": 453, "problem": [435, 452, 464, 476, 480], "product": [449, 495], "productkernel": 120, "pull": 482, "pure": [192, 193, 195, 196, 198, 200, 201, 203, 208, 485, 494], "purerecommend": 194, "pycharm": 480, "qexpectedhypervolumeimprov": 9, "qexpectedimprov": 10, "qknowledgegradi": 11, "qlogexpectedhypervolumeimprov": 12, "qlogexpectedimprov": 13, "qlognoisyexpectedhypervolumeimprov": 15, "qlognoisyexpectedimprov": 16, "qlognparego": 14, "qnegintegratedposteriorvari": 17, "qnoisyexpectedhypervolumeimprov": 18, "qnoisyexpectedimprov": 19, "qposteriorstandarddevi": 20, "qprobabilityofimprov": 21, "qsimpleregret": 22, "qthompsonsampl": 23, "quick": 479, "qupperconfidencebound": 24, "ramp": 500, "random": [415, 416, 417], "random_forest": 291, "randomforestsurrog": 292, "randomrecommend": 211, "rbfkernel": 115, "recommend": [179, 180, 182, 183, 185, 190, 192, 193, 195, 196, 198, 200, 201, 203, 208, 440, 441, 455, 456, 463, 467, 468, 470, 486, 487, 490, 494], "recommenderprotocol": 181, "reduct": 485, "refers_to": 360, "regist": 451, "register_custom_architectur": 269, "register_hook": 361, "relat": 480, "remov": 481, "replic": 499, "represent": [458, 459, 491, 495], "reproduc": 504, "request": 482, "restor": 497, "restrict": 495, "result": [435, 452, 453, 476, 486], "rffkernel": 116, "role": 501, "rqkernel": 117, "run": [435, 443, 444, 461], "sampl": [208, 485, 494], "sample_numerical_df": 421, "sampling_algorithm": [418, 420, 421], "scalar": 131, "scale": 422, "scalekernel": 121, "scenario": [253, 254, 476, 498], "scope": 502, "search": [458, 459, 463, 466, 479, 485, 495, 504], "searchspac": [212, 213, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 436, 438, 441, 443, 444, 446, 447, 448, 449, 465, 467, 468, 474], "searchspacematchwarn": 91, "searchspacetyp": 217, "see": 501, "select_constructor_hook": 237, "semaphor": 480, "sequenti": [185, 487], "sequentialmetarecommend": 187, "serial": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 469, 470, 487, 496, 502], "serializ": 488, "serialize_datafram": 243, "serialmixin": 240, "set": [244, 245, 246, 247, 435, 452, 453, 464, 466, 474, 476, 489, 497, 500], "set_random_se": 416, "setup": [440, 446, 447, 448, 449, 455, 456, 458, 459, 461, 464, 470], "shap": [96, 97, 98, 100, 101, 102, 103, 491], "shap_explain": 100, "shap_plot": 101, "shapinsight": 99, "sigmoid": 500, "sigmoidtransform": [329, 502], "signatur": 451, "simplex": [458, 495], "simul": [248, 249, 250, 251, 252, 253, 254, 255, 256, 435, 436, 437, 438, 452, 461, 474, 476, 498], "simulate_experi": 250, "simulate_scenario": 254, "simulate_transfer_learn": 256, "singl": [134, 464, 498], "singletargetobject": [135, 492], "sklearnclusteringrecommend": 207, "slot": [458, 459], "smile": 157, "smiles_to_fingerprint_featur": 373, "smoothedboxprior": 178, "some": [443, 444], "sort_paramet": 163, "space": [458, 459, 463, 466, 468, 479, 485, 487, 495, 504], "span": 458, "stage": 455, "start": 479, "statist": 487, "stop": 452, "str_to_acqf": 32, "strategi": [441, 479], "streamingsequentialmetarecommend": 188, "string": [471, 496], "strtobool": 368, "studi": 499, "sub": 485, "subselectioncondit": [44, 488], "subspac": 495, "subspacecontinu": 214, "subspacediscret": 222, "substanc": [156, 157, 458, 479], "substanceencod": 152, "substanceparamet": [158, 493], "suggest": 480, "suitabl": 441, "sum": 449, "support": [480, 486], "surrog": [257, 258, 260, 262, 263, 265, 267, 269, 270, 271, 273, 276, 277, 278, 280, 281, 283, 285, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 441, 454, 455, 456, 488, 491, 499], "surrogateprotocol": 264, "synchron": 482, "synthet": [467, 468], "tabl": [436, 437, 438, 474, 479], "target": [301, 302, 303, 304, 306, 307, 309, 310, 312, 313, 314, 451, 462, 463, 464, 492, 500, 504], "task": 474, "taskparamet": [145, 493, 501], "technologi": 501, "telemetri": 479, "temporary_se": 417, "terminologi": [458, 496, 498, 501], "test": [443, 444, 467, 468], "theoret": 458, "thi": [436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 467, 468, 491], "third_parti": [375, 376], "thresholdcondit": [45, 488], "through": 501, "to_kernel_factori": 276, "to_metadata": 410, "to_object": 125, "to_searchspac": 218, "to_str": 381, "to_tensor": 397, "to_tupl": 362, "toggl": 490, "toler": 487, "tool": 482, "torch": 480, "tradit": 459, "train": 455, "trajectori": 490, "transfer": [473, 474, 498, 501], "transfer_learn": [255, 256], "transform": [312, 315, 316, 318, 319, 332, 336, 337, 338, 339, 475, 500, 502], "transform_target_column": 398, "treasur": 501, "triangular": 500, "triangulartransform": [330, 502], "trigger": [451, 453], "two": 472, "twophasemetarecommend": 189, "twosidedaffinetransform": [331, 502], "type": 496, "type_validation_convert": 299, "uncertainbool": 365, "uncertainti": 485, "unidentifiedsubclasserror": 92, "uninterrupt": 452, "unlock": 501, "unmatchedattributeerror": 93, "unreleas": 481, "unspecifi": 346, "unspecifiedtyp": 347, "unstructure_with_typ": 238, "unsupport": 488, "unusedobjectwarn": 94, "upperconfidencebound": 8, "us": [436, 437, 438, 440, 441, 446, 447, 448, 449, 455, 456, 461, 467, 468, 495, 496, 498, 499], "usag": 491, "use_fallback_constructor_hook": 403, "user": 503, "util": [29, 30, 31, 32, 62, 63, 159, 160, 161, 162, 163, 241, 242, 243, 293, 294, 295, 296, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 504], "v": [451, 458, 464, 480, 487, 490], "valid": [64, 65, 66, 67, 136, 137, 164, 165, 166, 167, 226, 227, 228, 229, 297, 298, 299, 300, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 456, 472, 497], "validate_cardinality_constraint_parameter_bound": 65, "validate_cardinality_constraints_are_nonoverlap": 66, "validate_constraint": 67, "validate_custom_architecture_cl": 300, "validate_decorrel": 165, "validate_is_finit": 166, "validate_not_nan": 429, "validate_object_nam": 430, "validate_objective_input": 431, "validate_paramet": 229, "validate_parameter_input": 432, "validate_parameter_nam": 228, "validate_searchspace_from_config": 219, "validate_simplex_subspace_from_config": 225, "validate_target_input": 433, "validate_target_nam": 137, "validate_unique_valu": 167, "valu": [463, 487, 493, 495, 496, 498], "variabl": [489, 497], "verif": [446, 447, 448, 449, 458, 459, 472], "verifi": 444, "via": [488, 491], "visual": 464, "wavelength": 476, "we": 498, "what": 498, "window": 480, "within": 495, "without": 480, "workflow": [482, 486], "wrap": [443, 444, 468, 502], "write": 482}})
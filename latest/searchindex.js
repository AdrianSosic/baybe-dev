Search.setIndex({"alltitles": {"(De-)Serializability Unsupported": [[484, null]], "Absolute Transformation": [[495, "absolute-transformation"]], "AbsoluteTransformation": [[314, null]], "Accessing Desirability Values": [[458, "accessing-desirability-values"]], "Acquisition Function Values": [[483, "acquisition-function-values"]], "Acquisition function": [[436, "acquisition-function"]], "AcquisitionFunction": [[26, null]], "Active Learning": [[481, null]], "Added": [[477, "added"], [477, "id9"], [477, "id18"], [477, "id29"], [477, "id33"], [477, "id39"], [477, "id46"], [477, "id55"], [477, "id61"], [477, "id65"], [477, "id72"], [477, "id77"], [477, "id83"], [477, "id89"], [477, "id93"], [477, "id97"], [477, "id101"], [477, "id106"], [477, "id110"], [477, "id113"], [477, "id117"], [477, "id121"], [477, "id125"], [477, "id128"], [477, "id132"], [477, "id136"], [477, "id140"], [477, "id144"], [477, "id150"], [477, "id153"]], "Adding Fake Target Measurements and Parameter Noise": [[499, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[496, null]], "Adding Measurements": [[483, "adding-measurements"]], "Adding Partial Results": [[482, "adding-partial-results"]], "Addition": [[497, "addition"]], "AdditiveKernel": [[120, null]], "AdditiveTransformation": [[327, null]], "Advanced Example: Chemical Substances": [[475, "advanced-example-chemical-substances"]], "Advanced Transformations": [[497, "advanced-transformations"]], "AffinePosteriorTransform": [[304, null]], "AffineTransformation": [[315, null], [497, "affinetransformation"]], "An Imaginary Use Case": [[456, "an-imaginary-use-case"]], "Array-Based Callables": [[493, null]], "Asynchronous Workflows": [[482, null]], "Auto-Replication": [[494, "auto-replication"]], "Automatic Wrapping": [[497, null]], "Automatic field conversion": [[492, "automatic-field-conversion"]], "Available Models": [[494, "available-models"]], "Available recommenders suitable for initial recommendation": [[436, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[436, "available-surrogate-models"]], "Backtesting": [[429, null], [469, null]], "Backwards Compatibility and Deprecations": [[498, null]], "BaseSequentialMetaRecommender": [[187, null]], "Basic Creation": [[483, "basic-creation"]], "Basic Instructions": [[485, "basic-instructions"]], "Basic Transformations": [[497, "basic-transformations"]], "Basic Usage": [[487, "basic-usage"]], "Basic example for using BayBE": [[435, null]], "Basic string assembly": [[492, "basic-string-assembly"]], "BasicKernel": [[107, null]], "Basics": [[434, null], [483, "basics"]], "Batch Optimization": [[483, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[475, null]], "Bayesian Recommenders": [[490, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[282, null]], "BayesianRecommender": [[198, null]], "Bell Transformation": [[495, "bell-transformation"]], "BellTransformation": [[316, null], [497, "belltransformation"]], "Bernoulli Multi Armed Bandit": [[456, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[255, null]], "BetaPrior": [[173, null]], "BinaryTarget": [[301, null]], "BotorchRecommender": [[200, null]], "Bound methods": [[446, "bound-methods"]], "Breaking Changes": [[477, "breaking-changes"], [477, "id38"], [477, "id45"]], "Building from the Product of Parameter Values": [[491, "building-from-the-product-of-parameter-values"], [491, "id2"]], "Building the Model": [[456, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[476, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[483, "caching-of-recommendations"]], "Campaign": [[34, null]], "Campaign Setup": [[459, "campaign-setup"]], "Campaign Stopping": [[447, null]], "Campaigns": [[483, null]], "Candidate Control in Discrete Spaces": [[483, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[486, null]], "CardinalityConstraint": [[37, null]], "CategoricalEncoding": [[150, null]], "CategoricalParameter": [[145, null], [489, "categoricalparameter"]], "Caution": [[486, null]], "ChainedMCObjective": [[128, null]], "ChainedTransformation": [[328, null]], "Chaining": [[497, "chaining"]], "Chaining Custom Transformations": [[497, null]], "Changed": [[477, "changed"], [477, "id2"], [477, "id5"], [477, "id10"], [477, "id14"], [477, "id16"], [477, "id19"], [477, "id24"], [477, "id30"], [477, "id34"], [477, "id40"], [477, "id47"], [477, "id52"], [477, "id56"], [477, "id62"], [477, "id66"], [477, "id69"], [477, "id73"], [477, "id78"], [477, "id84"], [477, "id90"], [477, "id94"], [477, "id98"], [477, "id102"], [477, "id107"], [477, "id111"], [477, "id114"], [477, "id118"], [477, "id122"], [477, "id126"], [477, "id129"], [477, "id133"], [477, "id137"], [477, "id141"], [477, "id145"]], "Changelog": [[477, null]], "ClampingTransformation": [[317, null], [497, "clampingtransformation"]], "Clustering Recommenders": [[490, "clustering-recommenders"]], "Code Design": [[478, "code-design"]], "ColumnTransformer": [[416, null]], "Comparing recommendations in both objects": [[465, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[494, "composite-surrogates"]], "Composite Transformations": [[497, "composite-transformations"]], "CompositeKernel": [[108, null]], "CompositeSurrogate": [[262, null]], "Compression": [[497, null]], "Computational Challenges": [[484, null]], "Condition": [[43, null]], "Conditions": [[484, "conditions"]], "Constraint": [[38, null]], "Constraint Setup": [[453, "constraint-setup"]], "Constraints": [[484, null]], "Constraints Continuous": [[437, null]], "Constraints Discrete": [[440, null]], "Constraints Setup": [[454, "constraints-setup"]], "Construct the campaign and run some iterations": [[438, "construct-the-campaign-and-run-some-iterations"], [439, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[491, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[431, "constructing-campaigns-for-the-simulation-loop"], [432, "constructing-campaigns-for-the-simulation-loop"], [433, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[491, "constructing-from-a-dataframe"], [491, "id1"], [491, "id3"]], "Constructing hybrid recommenders": [[463, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[462, "constructing-the-campaign-and-performing-a-recommendation"], [463, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[463, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[484, "continuous-constraints"]], "Continuous Parameters": [[489, "continuous-parameters"]], "Continuous Subspaces": [[491, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[47, null], [484, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[39, null]], "ContinuousLinearConstraint": [[48, null], [484, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[40, null]], "ContinuousParameter": [[141, null]], "Contributing to BayBE": [[478, null]], "Contributors": [[479, null], [479, "id1"]], "Convenience Construction": [[497, null], [497, null], [497, null]], "Convenience Construction and Implicit Conversion": [[488, null]], "Convenience Multi-Output Casting": [[488, null]], "Conventions for attrs classes": [[478, "conventions-for-attrs-classes"]], "Convert model to onnx": [[450, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[450, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[451, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[450, "create-campaign"]], "Creating Continuous Search Spaces": [[461, null]], "Creating a Campaign": [[483, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[491, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[466, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[441, "creating-and-printing-the-campaign"], [442, "creating-and-printing-the-campaign"], [444, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[430, "creating-the-campaigns"]], "Creating the Objective": [[432, "creating-the-objective"], [458, "creating-the-objective"]], "Creating the Optimization Objective": [[469, "creating-the-optimization-objective"], [470, "creating-the-optimization-objective"]], "Creating the Search Space": [[469, "creating-the-search-space"]], "Creating the Searchspace": [[470, "creating-the-searchspace"]], "Creating the campaign": [[436, "creating-the-campaign"], [451, "creating-the-campaign"], [465, "creating-the-campaign"]], "Creating the constraint": [[441, "creating-the-constraint"], [443, "creating-the-constraint"]], "Creating the constraints": [[442, "creating-the-constraints"], [444, "creating-the-constraints"]], "Creating the recommender object": [[436, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[431, "creating-the-searchspace-and-the-objective"], [433, "creating-the-searchspace-and-the-objective"], [438, "creating-the-searchspace-and-the-objective"], [439, "creating-the-searchspace-and-the-objective"], [441, "creating-the-searchspace-and-the-objective"], [442, "creating-the-searchspace-and-the-objective"], [443, "creating-the-searchspace-and-the-objective"], [444, "creating-the-searchspace-and-the-objective"], [462, "creating-the-searchspace-and-the-objective"]], "Creation From Existing Targets": [[495, "creation-from-existing-targets"]], "Creation From a JSON Config": [[483, "creation-from-a-json-config"]], "Creation from Existing Transformations": [[497, null]], "Current Scope": [[497, null]], "Custom Hooks": [[445, null]], "Custom Surrogates": [[449, null]], "Custom Transformation": [[495, "custom-transformation"]], "Custom Transformations": [[497, "custom-transformations"]], "CustomDiscreteParameter": [[148, null], [489, "customdiscreteparameter"]], "CustomEncoding": [[151, null]], "CustomONNXSurrogate": [[264, null]], "CustomTransformation": [[318, null]], "Customization": [[458, null]], "Dataframe deserialization": [[492, "dataframe-deserialization"]], "DefaultKernelFactory": [[278, null]], "Defining config dictionaries": [[467, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[447, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[448, "defining-the-hook"]], "Defining the Hooks": [[446, "defining-the-hooks"]], "Defining the Optimization Objective": [[475, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[430, "defining-the-optimization-problem"], [459, "defining-the-optimization-problem"]], "Defining the Search Space": [[458, "defining-the-search-space"], [475, "defining-the-search-space"]], "Defining the Targets": [[458, "defining-the-targets"]], "Defining the Tasks": [[469, "defining-the-tasks"], [470, "defining-the-tasks"]], "Defining the test function": [[438, "defining-the-test-function"], [439, "defining-the-test-function"], [462, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[463, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[477, "deprecations"], [477, "id22"], [477, "id36"], [477, "id43"], [477, "id50"], [477, "id59"], [477, "id75"], [477, "id81"], [477, "id87"], [477, "id104"]], "Deserialization from configuration strings": [[492, "deserialization-from-configuration-strings"]], "Desirability Optimization": [[458, null]], "DesirabilityObjective": [[130, null], [488, "desirabilityobjective"]], "Developer Tools": [[478, "developer-tools"]], "Discrete Constraints": [[484, "discrete-constraints"]], "Discrete Parameters": [[489, "discrete-parameters"]], "Discrete Subspaces": [[491, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[453, null]], "DiscreteCardinalityConstraint": [[54, null], [484, "discretecardinalityconstraint"]], "DiscreteConstraint": [[41, null]], "DiscreteCustomConstraint": [[55, null], [484, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[56, null], [484, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[57, null], [484, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[58, null], [484, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[59, null], [484, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[142, null]], "DiscretePermutationInvarianceConstraint": [[60, null], [484, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[61, null]], "DiscreteSamplingMethod": [[412, null]], "DiscreteSumConstraint": [[62, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[484, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[456, "discussion"]], "Disk Caching": [[485, "disk-caching"]], "Dummy": [[339, null]], "Duplicate Substances": [[453, "duplicate-substances"]], "Dynamic Exclusion": [[486, "dynamic-exclusion"]], "EDBOKernelFactory": [[280, null]], "EXPERIMENTAL: Floating Point Precision": [[485, "experimental-floating-point-precision"]], "Efficient Constraint Implementation via Polars": [[484, null]], "Efficient Search Space Creation": [[499, null]], "Environment Variables": [[485, null]], "Equality": [[497, "transformation-equality"]], "Equivalent copies": [[492, null]], "Estimation with Constraints": [[499, null]], "Example 1 \u2013 Normalized Targets": [[488, "example-1-normalized-targets"]], "Example 2 \u2013 Non-Normalized Targets": [[488, "example-2-non-normalized-targets"]], "Example Searchspace and objective parameters": [[436, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[438, null]], "Example for creating campaigns from configs": [[466, null]], "Example for custom parameter passing in surrogate models": [[451, null]], "Example for full simulation loop using a table-based lookup mechanism": [[432, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[433, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[431, null]], "Example for linear constraints in a continuous searchspace": [[439, null]], "Example for surrogate model with a custom pretrained model": [[450, null]], "Example for the serialization of a campaign": [[465, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[462, null]], "Example for using custom constraints in discrete searchspaces": [[441, null]], "Example for using dependency constraints in discrete searchspaces": [[442, null]], "Example for using different strategies": [[436, null]], "Example for using exclusion constraints in discrete searchspaces": [[443, null]], "Example for using exclusion constraints incorporating sums and products": [[444, null]], "Example for using synthetic test functions in hybrid spaces": [[463, null]], "Example for validation of a config file": [[467, null]], "Examples": [[473, null]], "Examples On This Page": [[487, null]], "Excluding Configurations": [[486, "excluding-configurations"]], "Expectations": [[496, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[450, "experiment-setup"], [451, "experiment-setup"]], "Experiment setup": [[441, "experiment-setup"], [442, "experiment-setup"], [443, "experiment-setup"], [444, "experiment-setup"], [465, "experiment-setup"]], "Experimental Feature": [[485, null], [485, null]], "Experimental Representation Limits": [[487, null]], "Experimental and Computational Representations": [[487, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.10.*)": [[477, "expired-deprecations-from-0-10"]], "Expired Deprecations (from 0.6.*)": [[477, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[477, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[477, "expired-deprecations-from-0-9"]], "Explainers": [[487, "explainers"]], "ExponentialTransformation": [[319, null]], "Extending BayBE\u2019s Functionality": [[478, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[494, "extracting-the-model-for-advanced-study"]], "FAQ": [[474, null]], "FPS Sampling Implementation": [[485, "fps-sampling-implementation"]], "FPSInitialization": [[210, null]], "FPSRecommender": [[211, null]], "Fixed": [[477, "fixed"], [477, "id3"], [477, "id6"], [477, "id11"], [477, "id20"], [477, "id25"], [477, "id27"], [477, "id31"], [477, "id35"], [477, "id41"], [477, "id49"], [477, "id53"], [477, "id58"], [477, "id63"], [477, "id67"], [477, "id74"], [477, "id79"], [477, "id85"], [477, "id91"], [477, "id99"], [477, "id103"], [477, "id108"], [477, "id115"], [477, "id119"], [477, "id123"], [477, "id130"], [477, "id134"], [477, "id138"], [477, "id142"], [477, "id146"], [477, "id148"], [477, "id151"]], "For Label-Like Parameters: Values and Active Values": [[489, "label-like"]], "From GitHub": [[475, "from-github"]], "From Local Clone": [[475, "from-local-clone"]], "From Package Index": [[475, "from-package-index"]], "From the Default Constructor": [[491, "from-the-default-constructor"]], "Further Information": [[483, "further-information"]], "GammaPrior": [[174, null]], "GaussianMixtureClusteringRecommender": [[205, null]], "GaussianProcessPreset": [[275, null]], "GaussianProcessSurrogate": [[268, null]], "General Information": [[490, "general-information"]], "General Workflow": [[478, "general-workflow"]], "Generating Lookup Tables": [[469, "generating-lookup-tables"], [470, "generating-lookup-tables"]], "Getting Recommendations": [[458, "getting-recommendations"], [483, "getting-recommendations"], [486, null]], "Getting a recommendation and adding measurements": [[435, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[481, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[175, null]], "HalfNormalPrior": [[176, null]], "Hook instance vs. target instance": [[446, null]], "Hybrid constraints": [[484, null]], "IdentityTransformation": [[320, null]], "Important": [[495, null]], "Imports": [[430, "imports"], [446, "imports"], [448, "imports"], [453, "imports"], [454, "imports"], [456, "imports"], [458, "imports"], [459, "imports"], [461, "imports"], [469, "imports"], [470, "imports"], [472, "imports"]], "Inclusion of initial data": [[431, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[257, null]], "Indices and Tables": [[475, "indices-and-tables"]], "Influence of Continuous Parameters": [[499, null]], "Influence on Surrogate Models": [[484, null]], "Insights": [[487, null]], "Installation Related Issues": [[476, "installation-related-issues"]], "Interval": [[394, null]], "Invoking alternative constructors": [[492, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[450, "iterate-with-recommendations-and-measurements"], [451, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[492, "json-de-serialization"]], "KMeansClusteringRecommender": [[206, null]], "KMedoids": [[369, null]], "Kernel": [[109, null]], "KernelFactory": [[270, null]], "Known Issues": [[476, null]], "License": [[480, null]], "Limitations": [[482, null], [495, "limitations"]], "LinearKernel": [[111, null]], "Links for documentation": [[451, "links-for-documentation"]], "Local Uncertainty Reduction": [[481, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[177, null]], "LogarithmicTransformation": [[321, null]], "Lookup functionality and data creation": [[431, "lookup-functionality-and-data-creation"], [432, "lookup-functionality-and-data-creation"], [433, "lookup-functionality-and-data-creation"]], "Maintainers": [[479, "maintainers"]], "Manual verification of the constraint": [[441, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[442, "manual-verification-of-the-constraints"], [443, "manual-verification-of-the-constraints"], [444, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[482, "marking-experiments-as-pending"]], "MaternKernel": [[112, null]], "MeanPredictionSurrogate": [[284, null]], "MeasurableMetadata": [[399, null]], "Memory During Optimization": [[499, null]], "MemorySize": [[222, null]], "Meta Recommenders": [[486, null], [490, "meta-recommenders"]], "MetaRecommender": [[185, null]], "Metadata": [[400, null]], "Method overrides": [[478, "method-overrides"]], "Minimization": [[495, "minimization"]], "Minimization = Negated Maximization": [[495, null]], "Missing Lookup Values": [[493, null]], "Mixtures": [[452, null]], "Model Interpretation in BO": [[487, null]], "Model Outputs": [[450, "model-outputs"], [451, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[453, null]], "Modeling a Mixture in Traditional Representation": [[454, null]], "Monitoring the Probability of Improvement": [[448, null]], "Monkeypatching": [[446, "monkeypatching"], [447, null], [448, "monkeypatching"]], "MonotonicTransformation": [[311, null]], "Multi Target": [[457, null]], "Multi-Armed Bandit": [[455, null]], "Multi-Output Modeling": [[494, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[487, "multi-output-surrogate-models"]], "Multiplication": [[497, "multiplication"]], "MultiplicativeTransformation": [[329, null]], "NGBoostSurrogate": [[286, null]], "NaiveHybridSpaceRecommender": [[192, null]], "Necessary imports": [[450, "necessary-imports"], [451, "necessary-imports"], [465, "necessary-imports"], [466, "necessary-imports"], [467, "necessary-imports"]], "Necessary imports for this example": [[431, "necessary-imports-for-this-example"], [432, "necessary-imports-for-this-example"], [433, "necessary-imports-for-this-example"], [435, "necessary-imports-for-this-example"], [436, "necessary-imports-for-this-example"], [438, "necessary-imports-for-this-example"], [439, "necessary-imports-for-this-example"], [441, "necessary-imports-for-this-example"], [442, "necessary-imports-for-this-example"], [443, "necessary-imports-for-this-example"], [444, "necessary-imports-for-this-example"], [462, "necessary-imports-for-this-example"], [463, "necessary-imports-for-this-example"]], "Nesting objects": [[492, "nesting-objects"]], "Non-Dominated Configurations": [[488, null]], "NonPredictiveRecommender": [[203, null]], "NormalPrior": [[178, null]], "Normalizing Existing Targets": [[495, "normalizing-existing-targets"]], "NumericalContinuousParameter": [[155, null], [489, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[156, null], [489, "numericaldiscreteparameter"]], "NumericalTarget": [[307, null], [495, "numericaltarget"]], "Objective": [[125, null], [488, null]], "Optimizing a Custom Black-Box Function": [[430, null]], "Optimizing a Laser\u2019s Wavelength": [[472, null]], "Optional Dependencies": [[475, "optional-dependencies"]], "Optional Dependency": [[489, null]], "Optional: Defining the Optimization Strategy": [[475, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[453, null]], "Order of Operations": [[497, null]], "PAMClusteringRecommender": [[207, null]], "Parallel Runs in Scenario Simulations": [[485, "parallel-runs-in-scenario-simulations"]], "Parameter": [[143, null]], "Parameter Encoding": [[489, null]], "Parameter Importance via SHAP": [[487, "parameter-importance-via-shap"]], "Parameter Names": [[489, null]], "Parameter Setup": [[453, "parameter-setup"], [454, "parameter-setup"]], "Parameter tolerances": [[483, null]], "ParameterEncoding": [[152, null]], "Parameters": [[489, null]], "Parameters for a full simulation loop": [[431, "parameters-for-a-full-simulation-loop"], [432, "parameters-for-a-full-simulation-loop"], [433, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[134, null], [488, "paretoobjective"]], "PartialAcquisitionFunction": [[28, null]], "Performing the simulation loop": [[431, "performing-the-simulation-loop"]], "PeriodicKernel": [[113, null]], "Permanent Exclusion": [[486, "permanent-exclusion"]], "Permutation Invariance": [[453, "permutation-invariance"]], "PiecewisePolynomialKernel": [[114, null]], "PlainKernelFactory": [[271, null]], "Plots": [[487, "plots"]], "Plotting the Results": [[430, "plotting-the-results"], [447, "plotting-the-results"], [448, "plotting-the-results"]], "Polars": [[485, "polars"]], "PolynomialKernel": [[115, null]], "Posterior Statistics with Desirability Objectives": [[483, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Power Transformation": [[495, "power-transformation"]], "PowerTransformation": [[322, null]], "Practical Considerations": [[495, null], [495, null], [495, null], [495, null], [495, null], [495, null]], "Predictive Statistics": [[483, "predictive-statistics"]], "Prior": [[171, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[447, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[121, null]], "Pure Recommenders": [[490, "pure-recommenders"]], "PureRecommender": [[195, null]], "Purely Continuous Search Spaces": [[481, null]], "PyCharm vs. exceptiongroup": [[476, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[116, null]], "RFFKernel": [[117, null]], "RQKernel": [[118, null]], "Ramp Transformation": [[495, "ramp-transformation"]], "RandomForestSurrogate": [[288, null]], "RandomRecommender": [[212, null]], "RecommenderProtocol": [[182, null]], "Recommenders": [[490, null]], "Registering Custom Hooks": [[446, null]], "Removed": [[477, "removed"], [477, "id7"], [477, "id12"], [477, "id21"], [477, "id42"], [477, "id48"], [477, "id57"], [477, "id70"], [477, "id80"], [477, "id86"], [477, "id95"]], "Representation of Data within Discrete Subspaces": [[491, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[499, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[491, "restricting-search-spaces-using-constraints"]], "Row Order": [[485, null]], "Running the Simulation": [[456, "running-the-simulation"]], "Running the Simulation Loop": [[430, "running-the-simulation-loop"]], "SHAPInsight": [[100, null]], "SKLearnClusteringRecommender": [[208, null]], "Sampling Recommenders": [[490, "sampling-recommenders"]], "Scalarizer": [[132, null]], "ScaleKernel": [[122, null]], "Scenario": [[472, "scenario"]], "Search Space Creation": [[453, "search-space-creation"], [454, "search-space-creation"]], "Search Space Memory Estimation": [[499, "search-space-memory-estimation"]], "Search Spaces": [[491, null]], "SearchSpace": [[217, null]], "SearchSpaceType": [[218, null]], "Searchspaces": [[460, null]], "Seeing Transfer Learning in Action": [[496, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[483, null]], "SequentialMetaRecommender": [[188, null]], "SerialMixin": [[240, null]], "Serialization": [[464, null], [483, "serialization"], [492, null], [497, null]], "Serialization and de-serialization": [[465, "serialization-and-de-serialization"]], "Set Point Matching": [[495, "set-point-matching"]], "Settings": [[430, "settings"], [447, "settings"], [448, "settings"], [459, "settings"], [461, "settings"], [469, "settings"], [470, "settings"], [472, "settings"]], "Setup": [[435, "setup"], [456, "setup"]], "Sigmoid Transformation": [[495, "sigmoid-transformation"]], "SigmoidTransformation": [[323, null], [497, "sigmoidtransformation"]], "Signature components": [[446, null]], "Simplex Construction": [[453, null]], "Simulating Multiple Scenarios": [[493, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[493, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[493, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[447, "simulating-the-interrupted-campaigns"]], "Simulating the Optimization Loop": [[472, "simulating-the-optimization-loop"]], "Simulating the Uninterrupted Campaigns": [[447, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[493, null]], "Simulation Loop": [[469, "simulation-loop"], [470, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[459, null]], "SingleTargetObjective": [[136, null], [488, "singletargetobjective"]], "Slot-based Representation": [[454, null]], "SmoothedBoxPrior": [[179, null]], "StreamingSequentialMetaRecommender": [[189, null]], "Sub-Sampling Method": [[481, null]], "SubSelectionCondition": [[44, null], [484, "subselectioncondition"]], "SubspaceContinuous": [[215, null]], "SubspaceDiscrete": [[223, null]], "Substance Amounts": [[453, "substance-amounts"]], "SubstanceEncoding": [[153, null]], "SubstanceParameter": [[159, null], [489, "substanceparameter"]], "Suggested Fix": [[476, null], [476, null], [476, null], [476, null]], "Supported Acquisition Functions": [[482, null]], "Supported Recommenders": [[482, null]], "Surrogate": [[259, null]], "Surrogate Model Limitations": [[484, null]], "Surrogate Replication": [[494, "surrogate-replication"]], "SurrogateProtocol": [[260, null]], "Surrogates": [[494, null]], "Synchronizing Pull Requests": [[478, "synchronizing-pull-requests"]], "Target": [[299, null]], "Target Normalization": [[458, null], [488, "target-normalization"], [495, "target-normalization"]], "Targets": [[495, null]], "Targets are Optimization Instructions": [[495, "targets-as-instruction"]], "TaskParameter": [[146, null], [489, "taskparameter"]], "Technology": [[496, null]], "Terminology": [[453, "terminology"], [492, null], [496, null]], "Terminology Continued": [[496, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[493, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[456, "the-black-box-model"]], "The Laser Model": [[472, "the-laser-model"]], "The Lookup Mechanism": [[493, "the-lookup-mechanism"]], "The Optimization Loop": [[475, "the-optimization-loop"]], "The Optimization Problem": [[472, "the-optimization-problem"]], "The Role of the TaskParameter": [[496, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[466, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[486, "the-recommend-call"]], "The type field": [[492, "the-type-field"]], "Theoretical Span": [[453, null]], "ThresholdCondition": [[45, null], [484, "thresholdcondition"]], "Trajectory-Based Control": [[486, null]], "Transfer Learning": [[468, null], [470, null], [496, null]], "Transformation": [[312, null]], "Transformations": [[471, null], [497, null]], "Triangular Transformation": [[495, "triangular-transformation"]], "TriangularTransformation": [[324, null], [497, "triangulartransformation"]], "Triggering the Hook": [[448, "triggering-the-hook"]], "Triggering the Hooks": [[446, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[190, null]], "TwoSidedAffineTransformation": [[325, null], [497, "twosidedaffinetransformation"]], "UncertainBool": [[341, null]], "Unlocking Data Treasures Through Transfer Learning": [[496, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[342, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[498, null]], "Using Custom Models": [[494, "using-custom-models"]], "Using Explicit Bounds": [[491, "using-explicit-bounds"]], "Using None": [[493, "using-none"]], "Using a Callable": [[493, "using-a-callable"]], "Using a Dataframe": [[493, "using-a-dataframe"]], "Using abbreviations": [[492, "using-abbreviations"]], "Using configuration instead": [[450, "using-configuration-instead"], [451, "using-configuration-instead"]], "Using default values": [[492, "using-default-values"]], "Utilities": [[499, null]], "Validation of model parameters": [[451, "validation-of-model-parameters"]], "Verification of Constraints": [[453, "verification-of-constraints"], [454, "verification-of-constraints"]], "Verification of Span": [[453, "verification-of-span"]], "Verification of the two dictionaries": [[467, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[439, "verify-the-constraints"]], "Visualization": [[459, "visualization"]], "Windows \u2013 Torch Problems": [[476, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[438, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [439, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [463, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[478, "writing-docstrings"]], "Writing classes": [[478, "writing-classes"]], "[0.1.0] - 2022-10-01": [[477, "id152"]], "[0.10.0] - 2024-08-02": [[477, "id44"]], "[0.11.0] - 2024-09-09": [[477, "id37"]], "[0.11.1] - 2024-10-01": [[477, "id32"]], "[0.11.2] - 2024-10-11": [[477, "id28"]], "[0.11.3] - 2024-11-06": [[477, "id26"]], "[0.11.4] - 2025-01-27": [[477, "id23"]], "[0.12.0] - 2025-01-28": [[477, "id17"]], "[0.12.1] - 2025-01-29": [[477, "id15"]], "[0.12.2] - 2025-01-31": [[477, "id13"]], "[0.13.0] - 2025-04-16": [[477, "id8"]], "[0.13.1] - 2025-06-06": [[477, "id4"]], "[0.13.2] - 2025-07-09": [[477, "id1"]], "[0.2.0] - 2022-11-10": [[477, "id149"]], "[0.2.1] - 2022-12-01": [[477, "id147"]], "[0.2.2] - 2023-01-13": [[477, "id143"]], "[0.2.3] - 2023-03-14": [[477, "id139"]], "[0.2.4] - 2023-03-24": [[477, "id135"]], "[0.3.0] - 2023-06-27": [[477, "id131"]], "[0.3.1] - 2023-07-17": [[477, "id127"]], "[0.3.2] - 2023-07-24": [[477, "id124"]], "[0.4.0] - 2023-08-16": [[477, "id120"]], "[0.4.1] - 2023-08-23": [[477, "id116"]], "[0.4.2] - 2023-08-29": [[477, "id112"]], "[0.5.0] - 2023-09-15": [[477, "id109"]], "[0.5.1] - 2023-10-19": [[477, "id105"]], "[0.6.0] - 2023-11-17": [[477, "id100"]], "[0.6.1] - 2023-11-27": [[477, "id96"]], "[0.7.0] - 2023-12-04": [[477, "id92"]], "[0.7.1] - 2023-12-07": [[477, "id88"]], "[0.7.2] - 2024-01-24": [[477, "id82"]], "[0.7.3] - 2024-02-09": [[477, "id76"]], "[0.7.4] - 2024-02-28": [[477, "id71"]], "[0.8.0] - 2024-02-29": [[477, "id68"]], "[0.8.1] - 2024-03-11": [[477, "id64"]], "[0.8.2] - 2024-03-27": [[477, "id60"]], "[0.9.0] - 2024-05-21": [[477, "id54"]], "[0.9.1] - 2024-06-04": [[477, "id51"]], "[Unreleased]": [[477, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[25, null]], "baybe.acquisition.partial": [[27, null]], "baybe.acquisition.utils": [[29, null]], "baybe.acquisition.utils.convert_acqf": [[30, null]], "baybe.acquisition.utils.make_partitioning": [[31, null]], "baybe.acquisition.utils.str_to_acqf": [[32, null]], "baybe.campaign": [[33, null]], "baybe.constraints": [[35, null]], "baybe.constraints.base": [[36, null]], "baybe.constraints.conditions": [[42, null]], "baybe.constraints.continuous": [[46, null]], "baybe.constraints.deprecation": [[49, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[50, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[51, null]], "baybe.constraints.deprecation.structure_constraints": [[52, null]], "baybe.constraints.discrete": [[53, null]], "baybe.constraints.utils": [[63, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[64, null]], "baybe.constraints.validation": [[65, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[66, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[67, null]], "baybe.constraints.validation.validate_constraints": [[68, null]], "baybe.exceptions": [[69, null]], "baybe.exceptions.DeprecationError": [[70, null]], "baybe.exceptions.EmptySearchSpaceError": [[71, null]], "baybe.exceptions.IncompatibilityError": [[72, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[73, null]], "baybe.exceptions.IncompatibleArgumentError": [[74, null]], "baybe.exceptions.IncompatibleExplainerError": [[75, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[76, null]], "baybe.exceptions.IncompatibleSurrogateError": [[77, null]], "baybe.exceptions.IncompleteMeasurementsError": [[78, null]], "baybe.exceptions.InfeasibilityError": [[79, null]], "baybe.exceptions.InputDataTypeWarning": [[80, null]], "baybe.exceptions.InvalidSurrogateModelError": [[81, null]], "baybe.exceptions.InvalidTargetValueError": [[82, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[83, null]], "baybe.exceptions.ModelNotTrainedError": [[84, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[85, null]], "baybe.exceptions.NoMeasurementsError": [[86, null]], "baybe.exceptions.NoRecommendersLeftError": [[87, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[88, null]], "baybe.exceptions.NothingToSimulateError": [[89, null]], "baybe.exceptions.NumericalUnderflowError": [[90, null]], "baybe.exceptions.OptionalImportError": [[91, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[92, null]], "baybe.exceptions.UnidentifiedSubclassError": [[93, null]], "baybe.exceptions.UnmatchedAttributeError": [[94, null]], "baybe.exceptions.UnusedObjectWarning": [[95, null]], "baybe.insights": [[96, null]], "baybe.insights.shap": [[97, null]], "baybe.insights.shap.EXPLAINERS": [[98, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[99, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[101, null]], "baybe.insights.shap.SHAP_PLOTS": [[102, null]], "baybe.insights.shap.is_shap_explainer": [[103, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[104, null]], "baybe.kernels": [[105, null]], "baybe.kernels.base": [[106, null]], "baybe.kernels.basic": [[110, null]], "baybe.kernels.composite": [[119, null]], "baybe.objectives": [[123, null]], "baybe.objectives.base": [[124, null]], "baybe.objectives.base.to_objective": [[126, null]], "baybe.objectives.botorch": [[127, null]], "baybe.objectives.desirability": [[129, null]], "baybe.objectives.enum": [[131, null]], "baybe.objectives.pareto": [[133, null]], "baybe.objectives.single": [[135, null]], "baybe.objectives.validation": [[137, null]], "baybe.objectives.validation.validate_target_names": [[138, null]], "baybe.parameters": [[139, null]], "baybe.parameters.base": [[140, null]], "baybe.parameters.categorical": [[144, null]], "baybe.parameters.custom": [[147, null]], "baybe.parameters.enum": [[149, null]], "baybe.parameters.numerical": [[154, null]], "baybe.parameters.substance": [[157, null]], "baybe.parameters.substance.Smiles": [[158, null]], "baybe.parameters.utils": [[160, null]], "baybe.parameters.utils.activate_parameter": [[161, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[162, null]], "baybe.parameters.utils.is_inactive": [[163, null]], "baybe.parameters.utils.sort_parameters": [[164, null]], "baybe.parameters.validation": [[165, null]], "baybe.parameters.validation.validate_decorrelation": [[166, null]], "baybe.parameters.validation.validate_is_finite": [[167, null]], "baybe.parameters.validation.validate_unique_values": [[168, null]], "baybe.priors": [[169, null]], "baybe.priors.base": [[170, null]], "baybe.priors.basic": [[172, null]], "baybe.recommenders": [[180, null]], "baybe.recommenders.base": [[181, null]], "baybe.recommenders.meta": [[183, null]], "baybe.recommenders.meta.base": [[184, null]], "baybe.recommenders.meta.sequential": [[186, null]], "baybe.recommenders.naive": [[191, null]], "baybe.recommenders.pure": [[193, null]], "baybe.recommenders.pure.base": [[194, null]], "baybe.recommenders.pure.bayesian": [[196, null]], "baybe.recommenders.pure.bayesian.base": [[197, null]], "baybe.recommenders.pure.bayesian.botorch": [[199, null]], "baybe.recommenders.pure.nonpredictive": [[201, null]], "baybe.recommenders.pure.nonpredictive.base": [[202, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, null]], "baybe.searchspace": [[213, null]], "baybe.searchspace.continuous": [[214, null]], "baybe.searchspace.core": [[216, null]], "baybe.searchspace.core.to_searchspace": [[219, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[220, null]], "baybe.searchspace.discrete": [[221, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[224, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[225, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[226, null]], "baybe.searchspace.validation": [[227, null]], "baybe.searchspace.validation.get_transform_parameters": [[228, null]], "baybe.searchspace.validation.validate_parameter_names": [[229, null]], "baybe.searchspace.validation.validate_parameters": [[230, null]], "baybe.serialization": [[231, null]], "baybe.serialization.core": [[232, null]], "baybe.serialization.core.block_deserialization_hook": [[233, null]], "baybe.serialization.core.block_serialization_hook": [[234, null]], "baybe.serialization.core.converter": [[235, null]], "baybe.serialization.core.get_base_structure_hook": [[236, null]], "baybe.serialization.core.select_constructor_hook": [[237, null]], "baybe.serialization.core.unstructure_base": [[238, null]], "baybe.serialization.mixin": [[239, null]], "baybe.serialization.utils": [[241, null]], "baybe.serialization.utils.deserialize_dataframe": [[242, null]], "baybe.serialization.utils.serialize_dataframe": [[243, null]], "baybe.simulation": [[244, null]], "baybe.simulation.core": [[245, null]], "baybe.simulation.core.simulate_experiment": [[246, null]], "baybe.simulation.lookup": [[247, null]], "baybe.simulation.lookup.look_up_targets": [[248, null]], "baybe.simulation.scenarios": [[249, null]], "baybe.simulation.scenarios.simulate_scenarios": [[250, null]], "baybe.simulation.transfer_learning": [[251, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[252, null]], "baybe.surrogates": [[253, null]], "baybe.surrogates.bandit": [[254, null]], "baybe.surrogates.base": [[256, null]], "baybe.surrogates.base.PosteriorStatistic": [[258, null]], "baybe.surrogates.composite": [[261, null]], "baybe.surrogates.custom": [[263, null]], "baybe.surrogates.custom.register_custom_architecture": [[265, null]], "baybe.surrogates.gaussian_process": [[266, null]], "baybe.surrogates.gaussian_process.core": [[267, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[269, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[272, null]], "baybe.surrogates.gaussian_process.presets": [[273, null]], "baybe.surrogates.gaussian_process.presets.core": [[274, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[276, null]], "baybe.surrogates.gaussian_process.presets.default": [[277, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[279, null]], "baybe.surrogates.linear": [[281, null]], "baybe.surrogates.naive": [[283, null]], "baybe.surrogates.ngboost": [[285, null]], "baybe.surrogates.random_forest": [[287, null]], "baybe.surrogates.utils": [[289, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[290, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[291, null]], "baybe.surrogates.utils.catch_constant_targets": [[292, null]], "baybe.surrogates.validation": [[293, null]], "baybe.surrogates.validation.make_dict_validator": [[294, null]], "baybe.surrogates.validation.type_validation_converter": [[295, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[296, null]], "baybe.targets": [[297, null]], "baybe.targets.base": [[298, null]], "baybe.targets.binary": [[300, null]], "baybe.targets.binary.ChoiceValue": [[302, null]], "baybe.targets.botorch": [[303, null]], "baybe.targets.enum": [[305, null]], "baybe.targets.numerical": [[306, null]], "baybe.targets.transforms": [[308, null]], "baybe.transformations": [[309, null]], "baybe.transformations.base": [[310, null]], "baybe.transformations.basic": [[313, null]], "baybe.transformations.composite": [[326, null]], "baybe.transformations.utils": [[330, null]], "baybe.transformations.utils.combine_affine_transformations": [[331, null]], "baybe.transformations.utils.compress_transformations": [[332, null]], "baybe.transformations.utils.convert_transformation": [[333, null]], "baybe.utils": [[334, null]], "baybe.utils.augmentation": [[335, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[336, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[337, null]], "baybe.utils.basic": [[338, null]], "baybe.utils.basic.UNSPECIFIED": [[340, null]], "baybe.utils.basic.compose": [[344, null]], "baybe.utils.basic.compose_two": [[345, null]], "baybe.utils.basic.convert_to_float": [[346, null]], "baybe.utils.basic.find_subclass": [[347, null]], "baybe.utils.basic.get_baseclasses": [[348, null]], "baybe.utils.basic.get_subclasses": [[349, null]], "baybe.utils.basic.group_duplicate_values": [[350, null]], "baybe.utils.basic.hilberts_factory": [[351, null]], "baybe.utils.basic.is_all_instance": [[352, null]], "baybe.utils.basic.match_attributes": [[353, null]], "baybe.utils.basic.refers_to": [[354, null]], "baybe.utils.basic.register_hooks": [[355, null]], "baybe.utils.basic.to_tuple": [[356, null]], "baybe.utils.boolean": [[357, null]], "baybe.utils.boolean.check_if_in": [[358, null]], "baybe.utils.boolean.is_abstract": [[359, null]], "baybe.utils.boolean.strtobool": [[360, null]], "baybe.utils.chemistry": [[361, null]], "baybe.utils.chemistry.get_canonical_smiles": [[362, null]], "baybe.utils.chemistry.get_fingerprint_class": [[363, null]], "baybe.utils.chemistry.name_to_smiles": [[364, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[365, null]], "baybe.utils.clustering_algorithms": [[366, null]], "baybe.utils.clustering_algorithms.third_party": [[367, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[368, null]], "baybe.utils.conversion": [[370, null]], "baybe.utils.conversion.fraction_to_float": [[371, null]], "baybe.utils.conversion.nonstring_to_tuple": [[372, null]], "baybe.utils.conversion.to_string": [[373, null]], "baybe.utils.dataframe": [[374, null]], "baybe.utils.dataframe.add_fake_measurements": [[375, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[376, null]], "baybe.utils.dataframe.add_parameter_noise": [[377, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[378, null]], "baybe.utils.dataframe.create_fake_input": [[379, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[380, null]], "baybe.utils.dataframe.df_drop_string_columns": [[381, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[382, null]], "baybe.utils.dataframe.filter_df": [[383, null]], "baybe.utils.dataframe.fuzzy_row_match": [[384, null]], "baybe.utils.dataframe.get_transform_objects": [[385, null]], "baybe.utils.dataframe.handle_missing_values": [[386, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[387, null]], "baybe.utils.dataframe.pretty_print_df": [[388, null]], "baybe.utils.dataframe.to_tensor": [[389, null]], "baybe.utils.dataframe.transform_target_columns": [[390, null]], "baybe.utils.interval": [[391, null]], "baybe.utils.interval.ConvertibleToInterval": [[392, null]], "baybe.utils.interval.InfiniteIntervalError": [[393, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[395, null]], "baybe.utils.memory": [[396, null]], "baybe.utils.memory.bytes_to_human_readable": [[397, null]], "baybe.utils.metadata": [[398, null]], "baybe.utils.metadata.to_metadata": [[401, null]], "baybe.utils.numerical": [[402, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[403, null]], "baybe.utils.numerical.DTypeFloatONNX": [[404, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[405, null]], "baybe.utils.numerical.closer_element": [[406, null]], "baybe.utils.numerical.closest_element": [[407, null]], "baybe.utils.random": [[408, null]], "baybe.utils.random.set_random_seed": [[409, null]], "baybe.utils.random.temporary_seed": [[410, null]], "baybe.utils.sampling_algorithms": [[411, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[413, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[414, null]], "baybe.utils.scaling": [[415, null]], "baybe.utils.torch": [[417, null]], "baybe.utils.torch.DTypeFloatTorch": [[418, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[419, null]], "baybe.utils.validation": [[420, null]], "baybe.utils.validation.finite_float": [[421, null]], "baybe.utils.validation.non_inf_float": [[422, null]], "baybe.utils.validation.non_nan_float": [[423, null]], "baybe.utils.validation.validate_not_nan": [[424, null]], "baybe.utils.validation.validate_object_names": [[425, null]], "baybe.utils.validation.validate_objective_input": [[426, null]], "baybe.utils.validation.validate_parameter_input": [[427, null]], "baybe.utils.validation.validate_target_input": [[428, null]], "classproperty": [[343, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[476, "macos-arm64-leaked-semaphore"]], "qExpectedHypervolumeImprovement": [[9, null]], "qExpectedImprovement": [[10, null]], "qKnowledgeGradient": [[11, null]], "qLogExpectedHypervolumeImprovement": [[12, null]], "qLogExpectedImprovement": [[13, null]], "qLogNParEGO": [[14, null]], "qLogNoisyExpectedHypervolumeImprovement": [[15, null]], "qLogNoisyExpectedImprovement": [[16, null]], "qNegIntegratedPosteriorVariance": [[17, null]], "qNoisyExpectedHypervolumeImprovement": [[18, null]], "qNoisyExpectedImprovement": [[19, null]], "qPosteriorStandardDeviation": [[20, null]], "qProbabilityOfImprovement": [[21, null]], "qSimpleRegret": [[22, null]], "qThompsonSampling": [[23, null]], "qUpperConfidenceBound": [[24, null]], "\u201cPre-training\u201d stage": [[450, "pre-training-stage"]], "\u26a1 Quick Start": [[475, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[475, "maintainers"]], "\ud83d\udcbb Installation": [[475, "installation"]], "\ud83d\udcc4 License": [[475, "license"]], "\ud83d\udcd6 Citation": [[475, "citation"]], "\ud83d\udce1 Telemetry": [[475, "telemetry"]], "\ud83d\udd0b Batteries Included": [[475, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[475, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.make_partitioning", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.botorch", "_autosummary/baybe.objectives.botorch.ChainedMCObjective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.botorch", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.transformations", "_autosummary/baybe.transformations.base", "_autosummary/baybe.transformations.base.MonotonicTransformation", "_autosummary/baybe.transformations.base.Transformation", "_autosummary/baybe.transformations.basic", "_autosummary/baybe.transformations.basic.AbsoluteTransformation", "_autosummary/baybe.transformations.basic.AffineTransformation", "_autosummary/baybe.transformations.basic.BellTransformation", "_autosummary/baybe.transformations.basic.ClampingTransformation", "_autosummary/baybe.transformations.basic.CustomTransformation", "_autosummary/baybe.transformations.basic.ExponentialTransformation", "_autosummary/baybe.transformations.basic.IdentityTransformation", "_autosummary/baybe.transformations.basic.LogarithmicTransformation", "_autosummary/baybe.transformations.basic.PowerTransformation", "_autosummary/baybe.transformations.basic.SigmoidTransformation", "_autosummary/baybe.transformations.basic.TriangularTransformation", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation", "_autosummary/baybe.transformations.composite", "_autosummary/baybe.transformations.composite.AdditiveTransformation", "_autosummary/baybe.transformations.composite.ChainedTransformation", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation", "_autosummary/baybe.transformations.utils", "_autosummary/baybe.transformations.utils.combine_affine_transformations", "_autosummary/baybe.transformations.utils.compress_transformations", "_autosummary/baybe.transformations.utils.convert_transformation", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UncertainBool", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.compose", "_autosummary/baybe.utils.basic.compose_two", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.ConvertibleToInterval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.metadata", "_autosummary/baybe.utils.metadata.MeasurableMetadata", "_autosummary/baybe.utils.metadata.Metadata", "_autosummary/baybe.utils.metadata.to_metadata", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_object_names", "_autosummary/baybe.utils.validation.validate_objective_input", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/Transformations/Transformations", "examples/Transformations/laser_tuning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/transformations", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.make_partitioning.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.botorch.rst", "_autosummary/baybe.objectives.botorch.ChainedMCObjective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.botorch.rst", "_autosummary/baybe.targets.botorch.AffinePosteriorTransform.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.transformations.rst", "_autosummary/baybe.transformations.base.rst", "_autosummary/baybe.transformations.base.MonotonicTransformation.rst", "_autosummary/baybe.transformations.base.Transformation.rst", "_autosummary/baybe.transformations.basic.rst", "_autosummary/baybe.transformations.basic.AbsoluteTransformation.rst", "_autosummary/baybe.transformations.basic.AffineTransformation.rst", "_autosummary/baybe.transformations.basic.BellTransformation.rst", "_autosummary/baybe.transformations.basic.ClampingTransformation.rst", "_autosummary/baybe.transformations.basic.CustomTransformation.rst", "_autosummary/baybe.transformations.basic.ExponentialTransformation.rst", "_autosummary/baybe.transformations.basic.IdentityTransformation.rst", "_autosummary/baybe.transformations.basic.LogarithmicTransformation.rst", "_autosummary/baybe.transformations.basic.PowerTransformation.rst", "_autosummary/baybe.transformations.basic.SigmoidTransformation.rst", "_autosummary/baybe.transformations.basic.TriangularTransformation.rst", "_autosummary/baybe.transformations.basic.TwoSidedAffineTransformation.rst", "_autosummary/baybe.transformations.composite.rst", "_autosummary/baybe.transformations.composite.AdditiveTransformation.rst", "_autosummary/baybe.transformations.composite.ChainedTransformation.rst", "_autosummary/baybe.transformations.composite.MultiplicativeTransformation.rst", "_autosummary/baybe.transformations.utils.rst", "_autosummary/baybe.transformations.utils.combine_affine_transformations.rst", "_autosummary/baybe.transformations.utils.compress_transformations.rst", "_autosummary/baybe.transformations.utils.convert_transformation.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UncertainBool.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.compose.rst", "_autosummary/baybe.utils.basic.compose_two.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.ConvertibleToInterval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.metadata.rst", "_autosummary/baybe.utils.metadata.MeasurableMetadata.rst", "_autosummary/baybe.utils.metadata.Metadata.rst", "_autosummary/baybe.utils.metadata.to_metadata.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_object_names.rst", "_autosummary/baybe.utils.validation.validate_objective_input.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/Transformations/Transformations.md", "examples/Transformations/laser_tuning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/transformations.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[70, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[71, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[72, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[73, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[74, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[75, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[76, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[77, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[78, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[79, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[80, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[81, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[82, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[83, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[84, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[85, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[86, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[87, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[88, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[89, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[90, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[91, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[92, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[93, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[94, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[95, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[182, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[195, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[217, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[222, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[260, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[278, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[280, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.__init__", false]], "__init__() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.__init__", false]], "__init__() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.__init__", false]], "__init__() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.__init__", false]], "__init__() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.__init__", false]], "__init__() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.__init__", false]], "__init__() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.__init__", false]], "__init__() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.__init__", false]], "__init__() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.__init__", false]], "__init__() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.__init__", false]], "__init__() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.__init__", false]], "__init__() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.__init__", false]], "__init__() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.__init__", false]], "__init__() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.__init__", false]], "__init__() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.__init__", false]], "__init__() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.__init__", false]], "__init__() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[343, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[339, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[393, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.metadata.measurablemetadata method)": [[399, "baybe.utils.metadata.MeasurableMetadata.__init__", false]], "__init__() (baybe.utils.metadata.metadata method)": [[400, "baybe.utils.metadata.Metadata.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[416, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[70, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[71, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[72, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[73, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[74, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[75, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[76, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[77, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[78, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[79, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[80, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[81, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[82, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[83, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[84, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[85, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[86, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[87, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[88, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[89, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[90, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[91, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[92, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[93, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[94, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[95, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[150, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[151, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[153, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[393, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[179, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "abs() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.abs", false]], "abs() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.abs", false]], "abs() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.abs", false]], "abs() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.abs", false]], "abs() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.abs", false]], "abs() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.abs", false]], "abs() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.abs", false]], "abs() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.abs", false]], "abs() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.abs", false]], "abs() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.abs", false]], "abs() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.abs", false]], "abs() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.abs", false]], "abs() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.abs", false]], "abs() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.abs", false]], "abs() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.abs", false]], "abs() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.abs", false]], "abs() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.abs", false]], "abs() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.abs", false]], "absolutetransformation (class in baybe.transformations.basic)": [[314, "baybe.transformations.basic.AbsoluteTransformation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[26, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[161, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[375, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.add_measurements", false]], "add_module() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.add_module", false]], "add_module() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.add_module", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[376, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[377, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[120, "baybe.kernels.composite.AdditiveKernel", false]], "additivetransformation (class in baybe.transformations.composite)": [[327, "baybe.transformations.composite.AdditiveTransformation", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "affineposteriortransform (class in baybe.targets.botorch)": [[304, "baybe.targets.botorch.AffinePosteriorTransform", false]], "affinetransformation (class in baybe.transformations.basic)": [[315, "baybe.transformations.basic.AffineTransformation", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[195, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[195, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[195, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.alpha", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[173, "baybe.priors.basic.BetaPrior.alpha", false]], "apply() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.apply", false]], "apply() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.apply", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[378, "baybe.utils.dataframe.arrays_to_dataframes", false]], "as_pre_transformation (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.as_pre_transformation", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[179, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[100, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[122, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[120, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[121, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[107, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[291, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[275, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[25, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[27, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[29, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[33, "module-baybe.campaign", false]], "baybe.constraints": [[35, "module-baybe.constraints", false]], "baybe.constraints.base": [[36, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[42, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[46, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[49, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[53, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[63, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[65, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[69, "module-baybe.exceptions", false]], "baybe.insights": [[96, "module-baybe.insights", false]], "baybe.insights.shap": [[97, "module-baybe.insights.shap", false]], "baybe.kernels": [[105, "module-baybe.kernels", false]], "baybe.kernels.base": [[106, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[110, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[119, "module-baybe.kernels.composite", false]], "baybe.objectives": [[123, "module-baybe.objectives", false]], "baybe.objectives.base": [[124, "module-baybe.objectives.base", false]], "baybe.objectives.botorch": [[127, "module-baybe.objectives.botorch", false]], "baybe.objectives.desirability": [[129, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[131, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[133, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[135, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[137, "module-baybe.objectives.validation", false]], "baybe.parameters": [[139, "module-baybe.parameters", false]], "baybe.parameters.base": [[140, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[144, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[147, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[149, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[154, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[157, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[160, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[165, "module-baybe.parameters.validation", false]], "baybe.priors": [[169, "module-baybe.priors", false]], "baybe.priors.base": [[170, "module-baybe.priors.base", false]], "baybe.priors.basic": [[172, "module-baybe.priors.basic", false]], "baybe.recommenders": [[180, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[181, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[183, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[184, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[186, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[191, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[193, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[194, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[196, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[197, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[199, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.nonpredictive": [[201, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[202, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[204, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[209, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[213, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[214, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[216, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[221, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[227, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[231, "module-baybe.serialization", false]], "baybe.serialization.core": [[232, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[239, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[241, "module-baybe.serialization.utils", false]], "baybe.simulation": [[244, "module-baybe.simulation", false]], "baybe.simulation.core": [[245, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[247, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[249, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[251, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[253, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[254, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[256, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[261, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[263, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[266, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[267, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[269, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[273, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[274, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[277, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[279, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[281, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[283, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[285, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[287, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[289, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[293, "module-baybe.surrogates.validation", false]], "baybe.targets": [[297, "module-baybe.targets", false]], "baybe.targets.base": [[298, "module-baybe.targets.base", false]], "baybe.targets.binary": [[300, "module-baybe.targets.binary", false]], "baybe.targets.botorch": [[303, "module-baybe.targets.botorch", false]], "baybe.targets.enum": [[305, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[306, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[308, "module-baybe.targets.transforms", false]], "baybe.transformations": [[309, "module-baybe.transformations", false]], "baybe.transformations.base": [[310, "module-baybe.transformations.base", false]], "baybe.transformations.basic": [[313, "module-baybe.transformations.basic", false]], "baybe.transformations.composite": [[326, "module-baybe.transformations.composite", false]], "baybe.transformations.utils": [[330, "module-baybe.transformations.utils", false]], "baybe.utils": [[334, "module-baybe.utils", false]], "baybe.utils.augmentation": [[335, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[338, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[357, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[361, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[366, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[367, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[368, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[370, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[374, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[391, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[396, "module-baybe.utils.memory", false]], "baybe.utils.metadata": [[398, "module-baybe.utils.metadata", false]], "baybe.utils.numerical": [[402, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[408, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[411, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[415, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[417, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[420, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "belltransformation (class in baybe.transformations.basic)": [[316, "baybe.transformations.basic.BellTransformation", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[173, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.BetaPrior", false]], "bfloat16() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.bfloat16", false]], "bfloat16() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.bfloat16", false]], "binarytarget (class in baybe.targets.binary)": [[301, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[233, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.transformations.basic.clampingtransformation attribute)": [[317, "baybe.transformations.basic.ClampingTransformation.bounds", false]], "buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.buffers", false]], "buffers() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.buffers", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[397, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[34, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[292, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[150, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[145, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.transformations.basic.belltransformation attribute)": [[316, "baybe.transformations.basic.BellTransformation.center", false]], "center (baybe.transformations.basic.sigmoidtransformation attribute)": [[323, "baybe.transformations.basic.SigmoidTransformation.center", false]], "center (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.center", false]], "chain() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.chain", false]], "chain() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.chain", false]], "chain() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.chain", false]], "chain() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.chain", false]], "chain() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.chain", false]], "chain() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.chain", false]], "chain() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.chain", false]], "chain() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.chain", false]], "chain() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.chain", false]], "chain() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.chain", false]], "chain() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.chain", false]], "chain() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.chain", false]], "chain() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.chain", false]], "chain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.chain", false]], "chain() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.chain", false]], "chain() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.chain", false]], "chain() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.chain", false]], "chainedmcobjective (class in baybe.objectives.botorch)": [[128, "baybe.objectives.botorch.ChainedMCObjective", false]], "chainedtransformation (class in baybe.transformations.composite)": [[328, "baybe.transformations.composite.ChainedTransformation", false]], "check_if_in() (in module baybe.utils.boolean)": [[358, "baybe.utils.boolean.check_if_in", false]], "children() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.children", false]], "children() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.children", false]], "choicevalue (in module baybe.targets.binary)": [[302, "baybe.targets.binary.ChoiceValue", false]], "clamp() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.clamp", false]], "clamp() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.clamp", false]], "clamp() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.clamp", false]], "clamp() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.clamp", false]], "clamp() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.clamp", false]], "clamp() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.clamp", false]], "clamp() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.clamp", false]], "clamp() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.clamp", false]], "clamp() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.clamp", false]], "clamp() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.clamp", false]], "clamp() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.clamp", false]], "clamp() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.clamp", false]], "clamp() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.clamp", false]], "clamp() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.clamp", false]], "clamp() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.clamp", false]], "clamp() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.clamp", false]], "clamp() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.clamp", false]], "clamp() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.clamp", false]], "clamp() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.clamp", false]], "clampingtransformation (class in baybe.transformations.basic)": [[317, "baybe.transformations.basic.ClampingTransformation", false]], "classproperty (class in baybe.utils.basic)": [[343, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[406, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[407, "baybe.utils.numerical.closest_element", false]], "cluster_centers_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.cluster_centers_", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[416, "baybe.utils.scaling.ColumnTransformer", false]], "combine_affine_transformations() (in module baybe.transformations.utils)": [[331, "baybe.transformations.utils.combine_affine_transformations", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[222, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[222, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[222, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[195, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compile() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.compile", false]], "compile() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.compile", false]], "compose() (in module baybe.utils.basic)": [[344, "baybe.utils.basic.compose", false]], "compose_two() (in module baybe.utils.basic)": [[345, "baybe.utils.basic.compose_two", false]], "compositekernel (class in baybe.kernels.base)": [[108, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[262, "baybe.surrogates.composite.CompositeSurrogate", false]], "compress_transformations() (in module baybe.transformations.utils)": [[332, "baybe.transformations.utils.compress_transformations", false]], "compute_ref_point() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement static method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement static method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[174, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[43, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[217, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[218, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[39, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[50, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[51, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[141, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[30, "baybe.acquisition.utils.convert_acqf", false]], "convert_to_float() (in module baybe.utils.basic)": [[346, "baybe.utils.basic.convert_to_float", false]], "convert_transformation() (in module baybe.transformations.utils)": [[333, "baybe.transformations.utils.convert_transformation", false]], "converter (in module baybe.serialization.core)": [[235, "baybe.serialization.core.converter", false]], "convertibletointerval (in module baybe.utils.interval)": [[392, "baybe.utils.interval.ConvertibleToInterval", false]], "cpu() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.cpu", false]], "cpu() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.cpu", false]], "create() (baybe.utils.interval.interval class method)": [[394, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[379, "baybe.utils.dataframe.create_fake_input", false]], "cuda() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.cuda", false]], "cuda() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.cuda", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[151, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[148, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[151, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "customtransformation (class in baybe.transformations.basic)": [[318, "baybe.transformations.basic.CustomTransformation", false]], "cutoffs (baybe.transformations.basic.triangulartransformation attribute)": [[324, "baybe.transformations.basic.TriangularTransformation.cutoffs", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[278, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[70, "baybe.exceptions.DeprecationError", false]], "description (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.description", false]], "description (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.description", false]], "description (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.description", false]], "description (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.description", false]], "description (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.description", false]], "description (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.description", false]], "description (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.description", false]], "description (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.description", false]], "description (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.description", false]], "description (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.description", false]], "description (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.description", false]], "description (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.description", false]], "description (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.description", false]], "description (baybe.targets.base.target property)": [[299, "baybe.targets.base.Target.description", false]], "description (baybe.targets.binary.binarytarget property)": [[301, "baybe.targets.binary.BinaryTarget.description", false]], "description (baybe.targets.numerical.numericaltarget property)": [[307, "baybe.targets.numerical.NumericalTarget.description", false]], "description (baybe.utils.metadata.measurablemetadata attribute)": [[399, "baybe.utils.metadata.MeasurableMetadata.description", false]], "description (baybe.utils.metadata.metadata attribute)": [[400, "baybe.utils.metadata.Metadata.description", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[242, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[130, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[336, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[337, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[380, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[381, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[382, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[217, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[218, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[41, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[142, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[412, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "double() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.double", false]], "double() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.double", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[403, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[404, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[418, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[339, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[280, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[218, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[71, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[217, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.eval", false]], "eval() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.eval", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "evaluate() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.evaluate", false]], "exp() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.exp", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[222, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[222, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[222, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[100, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.EXPLAINERS", false]], "exponent (baybe.transformations.basic.powertransformation attribute)": [[322, "baybe.transformations.basic.PowerTransformation.exponent", false]], "exponentialtransformation (class in baybe.transformations.basic)": [[319, "baybe.transformations.basic.ExponentialTransformation", false]], "extra_repr() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.extra_repr", false]], "extra_repr() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.extra_repr", false]], "factor (baybe.transformations.basic.affinetransformation attribute)": [[315, "baybe.transformations.basic.AffineTransformation.factor", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[413, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[383, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[347, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[421, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[260, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[416, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "float() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.float", false]], "float() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.float", false]], "forward() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.forward", false]], "forward() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.forward", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[412, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[371, "baybe.utils.conversion.fraction_to_float", false]], "from_anchors() (baybe.transformations.basic.sigmoidtransformation class method)": [[323, "baybe.transformations.basic.SigmoidTransformation.from_anchors", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[100, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[217, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[107, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[108, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[109, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[111, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[112, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[113, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[115, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[116, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[117, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[118, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[120, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[121, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[122, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[125, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[134, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[136, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[141, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[142, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[143, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[145, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[146, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[159, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[171, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[173, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[174, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[175, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[176, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[177, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[178, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[217, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[240, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[259, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[299, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[301, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.transformations.base.monotonictransformation class method)": [[311, "baybe.transformations.base.MonotonicTransformation.from_dict", false]], "from_dict() (baybe.transformations.base.transformation class method)": [[312, "baybe.transformations.base.Transformation.from_dict", false]], "from_dict() (baybe.transformations.basic.absolutetransformation class method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.affinetransformation class method)": [[315, "baybe.transformations.basic.AffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.belltransformation class method)": [[316, "baybe.transformations.basic.BellTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.clampingtransformation class method)": [[317, "baybe.transformations.basic.ClampingTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.customtransformation class method)": [[318, "baybe.transformations.basic.CustomTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.exponentialtransformation class method)": [[319, "baybe.transformations.basic.ExponentialTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.identitytransformation class method)": [[320, "baybe.transformations.basic.IdentityTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.logarithmictransformation class method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.powertransformation class method)": [[322, "baybe.transformations.basic.PowerTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.sigmoidtransformation class method)": [[323, "baybe.transformations.basic.SigmoidTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.triangulartransformation class method)": [[324, "baybe.transformations.basic.TriangularTransformation.from_dict", false]], "from_dict() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.additivetransformation class method)": [[327, "baybe.transformations.composite.AdditiveTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.chainedtransformation class method)": [[328, "baybe.transformations.composite.ChainedTransformation.from_dict", false]], "from_dict() (baybe.transformations.composite.multiplicativetransformation class method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[394, "baybe.utils.interval.Interval.from_dict", false]], "from_dict() (baybe.utils.metadata.measurablemetadata class method)": [[399, "baybe.utils.metadata.MeasurableMetadata.from_dict", false]], "from_dict() (baybe.utils.metadata.metadata class method)": [[400, "baybe.utils.metadata.Metadata.from_dict", false]], "from_erroneous_callable() (baybe.utils.basic.uncertainbool class method)": [[341, "baybe.utils.basic.UncertainBool.from_erroneous_callable", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[26, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[37, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[38, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[39, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[41, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[43, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[45, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[107, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[108, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[109, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[111, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[112, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[113, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[115, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[116, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[117, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[118, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[120, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[121, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[122, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[125, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[134, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[136, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[141, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[142, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[143, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[145, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[146, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[159, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[171, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[173, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[174, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[175, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[176, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[177, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[178, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[217, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[240, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[259, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[299, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[301, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.transformations.base.monotonictransformation class method)": [[311, "baybe.transformations.base.MonotonicTransformation.from_json", false]], "from_json() (baybe.transformations.base.transformation class method)": [[312, "baybe.transformations.base.Transformation.from_json", false]], "from_json() (baybe.transformations.basic.absolutetransformation class method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.from_json", false]], "from_json() (baybe.transformations.basic.affinetransformation class method)": [[315, "baybe.transformations.basic.AffineTransformation.from_json", false]], "from_json() (baybe.transformations.basic.belltransformation class method)": [[316, "baybe.transformations.basic.BellTransformation.from_json", false]], "from_json() (baybe.transformations.basic.clampingtransformation class method)": [[317, "baybe.transformations.basic.ClampingTransformation.from_json", false]], "from_json() (baybe.transformations.basic.customtransformation class method)": [[318, "baybe.transformations.basic.CustomTransformation.from_json", false]], "from_json() (baybe.transformations.basic.exponentialtransformation class method)": [[319, "baybe.transformations.basic.ExponentialTransformation.from_json", false]], "from_json() (baybe.transformations.basic.identitytransformation class method)": [[320, "baybe.transformations.basic.IdentityTransformation.from_json", false]], "from_json() (baybe.transformations.basic.logarithmictransformation class method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.from_json", false]], "from_json() (baybe.transformations.basic.powertransformation class method)": [[322, "baybe.transformations.basic.PowerTransformation.from_json", false]], "from_json() (baybe.transformations.basic.sigmoidtransformation class method)": [[323, "baybe.transformations.basic.SigmoidTransformation.from_json", false]], "from_json() (baybe.transformations.basic.triangulartransformation class method)": [[324, "baybe.transformations.basic.TriangularTransformation.from_json", false]], "from_json() (baybe.transformations.basic.twosidedaffinetransformation class method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.from_json", false]], "from_json() (baybe.transformations.composite.additivetransformation class method)": [[327, "baybe.transformations.composite.AdditiveTransformation.from_json", false]], "from_json() (baybe.transformations.composite.chainedtransformation class method)": [[328, "baybe.transformations.composite.ChainedTransformation.from_json", false]], "from_json() (baybe.transformations.composite.multiplicativetransformation class method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[394, "baybe.utils.interval.Interval.from_json", false]], "from_json() (baybe.utils.metadata.measurablemetadata class method)": [[399, "baybe.utils.metadata.MeasurableMetadata.from_json", false]], "from_json() (baybe.utils.metadata.metadata class method)": [[400, "baybe.utils.metadata.Metadata.from_json", false]], "from_legacy_interface() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_legacy_interface", false]], "from_margins() (baybe.transformations.basic.triangulartransformation class method)": [[324, "baybe.transformations.basic.TriangularTransformation.from_margins", false]], "from_modern_interface() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.from_modern_interface", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[217, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_points_mapped_to_unit_interval_bounds() (baybe.transformations.basic.affinetransformation class method)": [[315, "baybe.transformations.basic.AffineTransformation.from_points_mapped_to_unit_interval_bounds", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[217, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[100, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[100, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "from_width() (baybe.transformations.basic.triangulartransformation class method)": [[324, "baybe.transformations.basic.TriangularTransformation.from_width", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "function (baybe.transformations.basic.customtransformation attribute)": [[318, "baybe.transformations.basic.CustomTransformation.function", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[384, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[275, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[132, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[348, "baybe.utils.basic.get_baseclasses", false]], "get_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_buffer", false]], "get_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_buffer", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[362, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_codomain() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.get_codomain", false]], "get_codomain() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.get_codomain", false]], "get_codomain() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.get_codomain", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[217, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_extra_state", false]], "get_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_extra_state", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[363, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_image() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.get_image", false]], "get_image() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.get_image", false]], "get_image() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.get_image", false]], "get_image() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.get_image", false]], "get_image() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.get_image", false]], "get_image() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.get_image", false]], "get_image() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.get_image", false]], "get_image() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.get_image", false]], "get_image() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.get_image", false]], "get_image() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.get_image", false]], "get_image() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.get_image", false]], "get_image() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.get_image", false]], "get_image() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.get_image", false]], "get_image() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.get_image", false]], "get_image() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.get_image", false]], "get_image() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.get_image", false]], "get_image() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.get_image", false]], "get_image() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.get_image", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_parameter", false]], "get_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_parameter", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[217, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[162, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[349, "baybe.utils.basic.get_subclasses", false]], "get_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.get_submodule", false]], "get_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.get_submodule", false]], "get_surrogate() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[385, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.get_transform_parameters", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[350, "baybe.utils.basic.group_duplicate_values", false]], "half() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.half", false]], "half() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.half", false]], "halfcauchyprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[176, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[386, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[351, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[218, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "identitytransformation (class in baybe.transformations.basic)": [[320, "baybe.transformations.basic.IdentityTransformation", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[72, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[73, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[74, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[75, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[76, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[77, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[78, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "inertia_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.inertia_", false]], "infeasibilityerror": [[79, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[393, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[80, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[150, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[394, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[81, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[82, "baybe.exceptions.InvalidTargetValueError", false]], "ipu() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.ipu", false]], "ipu() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.ipu", false]], "is_abstract() (in module baybe.utils.boolean)": [[359, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[352, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[64, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[37, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[38, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[39, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[41, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_empty (baybe.utils.metadata.measurablemetadata property)": [[399, "baybe.utils.metadata.MeasurableMetadata.is_empty", false]], "is_empty (baybe.utils.metadata.metadata property)": [[400, "baybe.utils.metadata.Metadata.is_empty", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[163, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[125, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[134, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[136, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_normalized (baybe.targets.numerical.numericaltarget property)": [[307, "baybe.targets.numerical.NumericalTarget.is_normalized", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[141, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[143, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[394, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[103, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[185, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[109, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "labels_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.labels_", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[112, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[116, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[117, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[118, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[112, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[116, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[117, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[118, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linearkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[177, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[178, "baybe.priors.basic.NormalPrior.loc", false]], "log() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.log", false]], "logarithmictransformation (class in baybe.transformations.basic)": [[321, "baybe.transformations.basic.LogarithmicTransformation", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[177, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[248, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[394, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[294, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[104, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[276, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "make_partitioning() (in module baybe.acquisition.utils)": [[31, "baybe.acquisition.utils.make_partitioning", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[416, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "margins (baybe.transformations.basic.triangulartransformation property)": [[324, "baybe.transformations.basic.TriangularTransformation.margins", false]], "match_absolute() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_absolute", false]], "match_attributes() (in module baybe.utils.basic)": [[353, "baybe.utils.basic.match_attributes", false]], "match_bell() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_bell", false]], "match_power() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_power", false]], "match_quadratic() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_quadratic", false]], "match_triangular() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.match_triangular", false]], "maternkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.MaternKernel", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[132, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurablemetadata (class in baybe.utils.metadata)": [[399, "baybe.utils.metadata.MeasurableMetadata", false]], "measurements (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.measurements", false]], "medoid_indices_ (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids attribute)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.medoid_indices_", false]], "memorysize (class in baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.objectives.base.objective attribute)": [[125, "baybe.objectives.base.Objective.metadata", false]], "metadata (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.metadata", false]], "metadata (baybe.objectives.pareto.paretoobjective attribute)": [[134, "baybe.objectives.pareto.ParetoObjective.metadata", false]], "metadata (baybe.objectives.single.singletargetobjective attribute)": [[136, "baybe.objectives.single.SingleTargetObjective.metadata", false]], "metadata (baybe.parameters.base.continuousparameter attribute)": [[141, "baybe.parameters.base.ContinuousParameter.metadata", false]], "metadata (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.metadata", false]], "metadata (baybe.parameters.base.parameter attribute)": [[143, "baybe.parameters.base.Parameter.metadata", false]], "metadata (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.metadata", false]], "metadata (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.metadata", false]], "metadata (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.metadata", false]], "metadata (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.metadata", false]], "metadata (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.metadata", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metadata (baybe.targets.base.target attribute)": [[299, "baybe.targets.base.Target.metadata", false]], "metadata (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.metadata", false]], "metadata (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.metadata", false]], "metadata (class in baybe.utils.metadata)": [[400, "baybe.utils.metadata.Metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[185, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "midpoint (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.midpoint", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimize (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.minimize", false]], "minimumcardinalityviolatedwarning": [[83, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "misc (baybe.utils.metadata.measurablemetadata attribute)": [[399, "baybe.utils.metadata.MeasurableMetadata.misc", false]], "misc (baybe.utils.metadata.metadata attribute)": [[400, "baybe.utils.metadata.Metadata.misc", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[84, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [25, "module-baybe.acquisition.base", false], [27, "module-baybe.acquisition.partial", false], [29, "module-baybe.acquisition.utils", false], [33, "module-baybe.campaign", false], [35, "module-baybe.constraints", false], [36, "module-baybe.constraints.base", false], [42, "module-baybe.constraints.conditions", false], [46, "module-baybe.constraints.continuous", false], [49, "module-baybe.constraints.deprecation", false], [53, "module-baybe.constraints.discrete", false], [63, "module-baybe.constraints.utils", false], [65, "module-baybe.constraints.validation", false], [69, "module-baybe.exceptions", false], [96, "module-baybe.insights", false], [97, "module-baybe.insights.shap", false], [105, "module-baybe.kernels", false], [106, "module-baybe.kernels.base", false], [110, "module-baybe.kernels.basic", false], [119, "module-baybe.kernels.composite", false], [123, "module-baybe.objectives", false], [124, "module-baybe.objectives.base", false], [127, "module-baybe.objectives.botorch", false], [129, "module-baybe.objectives.desirability", false], [131, "module-baybe.objectives.enum", false], [133, "module-baybe.objectives.pareto", false], [135, "module-baybe.objectives.single", false], [137, "module-baybe.objectives.validation", false], [139, "module-baybe.parameters", false], [140, "module-baybe.parameters.base", false], [144, "module-baybe.parameters.categorical", false], [147, "module-baybe.parameters.custom", false], [149, "module-baybe.parameters.enum", false], [154, "module-baybe.parameters.numerical", false], [157, "module-baybe.parameters.substance", false], [160, "module-baybe.parameters.utils", false], [165, "module-baybe.parameters.validation", false], [169, "module-baybe.priors", false], [170, "module-baybe.priors.base", false], [172, "module-baybe.priors.basic", false], [180, "module-baybe.recommenders", false], [181, "module-baybe.recommenders.base", false], [183, "module-baybe.recommenders.meta", false], [184, "module-baybe.recommenders.meta.base", false], [186, "module-baybe.recommenders.meta.sequential", false], [191, "module-baybe.recommenders.naive", false], [193, "module-baybe.recommenders.pure", false], [194, "module-baybe.recommenders.pure.base", false], [196, "module-baybe.recommenders.pure.bayesian", false], [197, "module-baybe.recommenders.pure.bayesian.base", false], [199, "module-baybe.recommenders.pure.bayesian.botorch", false], [201, "module-baybe.recommenders.pure.nonpredictive", false], [202, "module-baybe.recommenders.pure.nonpredictive.base", false], [204, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [209, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [213, "module-baybe.searchspace", false], [214, "module-baybe.searchspace.continuous", false], [216, "module-baybe.searchspace.core", false], [221, "module-baybe.searchspace.discrete", false], [227, "module-baybe.searchspace.validation", false], [231, "module-baybe.serialization", false], [232, "module-baybe.serialization.core", false], [239, "module-baybe.serialization.mixin", false], [241, "module-baybe.serialization.utils", false], [244, "module-baybe.simulation", false], [245, "module-baybe.simulation.core", false], [247, "module-baybe.simulation.lookup", false], [249, "module-baybe.simulation.scenarios", false], [251, "module-baybe.simulation.transfer_learning", false], [253, "module-baybe.surrogates", false], [254, "module-baybe.surrogates.bandit", false], [256, "module-baybe.surrogates.base", false], [261, "module-baybe.surrogates.composite", false], [263, "module-baybe.surrogates.custom", false], [266, "module-baybe.surrogates.gaussian_process", false], [267, "module-baybe.surrogates.gaussian_process.core", false], [269, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [273, "module-baybe.surrogates.gaussian_process.presets", false], [274, "module-baybe.surrogates.gaussian_process.presets.core", false], [277, "module-baybe.surrogates.gaussian_process.presets.default", false], [279, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [281, "module-baybe.surrogates.linear", false], [283, "module-baybe.surrogates.naive", false], [285, "module-baybe.surrogates.ngboost", false], [287, "module-baybe.surrogates.random_forest", false], [289, "module-baybe.surrogates.utils", false], [293, "module-baybe.surrogates.validation", false], [297, "module-baybe.targets", false], [298, "module-baybe.targets.base", false], [300, "module-baybe.targets.binary", false], [303, "module-baybe.targets.botorch", false], [305, "module-baybe.targets.enum", false], [306, "module-baybe.targets.numerical", false], [308, "module-baybe.targets.transforms", false], [309, "module-baybe.transformations", false], [310, "module-baybe.transformations.base", false], [313, "module-baybe.transformations.basic", false], [326, "module-baybe.transformations.composite", false], [330, "module-baybe.transformations.utils", false], [334, "module-baybe.utils", false], [335, "module-baybe.utils.augmentation", false], [338, "module-baybe.utils.basic", false], [357, "module-baybe.utils.boolean", false], [361, "module-baybe.utils.chemistry", false], [366, "module-baybe.utils.clustering_algorithms", false], [367, "module-baybe.utils.clustering_algorithms.third_party", false], [368, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [370, "module-baybe.utils.conversion", false], [374, "module-baybe.utils.dataframe", false], [391, "module-baybe.utils.interval", false], [396, "module-baybe.utils.memory", false], [398, "module-baybe.utils.metadata", false], [402, "module-baybe.utils.numerical", false], [408, "module-baybe.utils.random", false], [411, "module-baybe.utils.sampling_algorithms", false], [415, "module-baybe.utils.scaling", false], [417, "module-baybe.utils.torch", false], [420, "module-baybe.utils.validation", false]], "modules() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.modules", false]], "modules() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.modules", false]], "monotonictransformation (class in baybe.transformations.base)": [[311, "baybe.transformations.base.MonotonicTransformation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "mtia() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.mtia", false]], "mtia() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.mtia", false]], "multiplicativetransformation (class in baybe.transformations.composite)": [[329, "baybe.transformations.composite.MultiplicativeTransformation", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[141, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[142, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[143, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[145, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[146, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[159, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[299, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[364, "baybe.utils.chemistry.name_to_smiles", false]], "named_buffers() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_buffers", false]], "named_buffers() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_buffers", false]], "named_children() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_children", false]], "named_children() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_children", false]], "named_modules() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_modules", false]], "named_modules() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_modules", false]], "named_parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.named_parameters", false]], "named_parameters() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.named_parameters", false]], "negate() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.negate", false]], "negate() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.negate", false]], "negate() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.negate", false]], "negate() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.negate", false]], "negate() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.negate", false]], "negate() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.negate", false]], "negate() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.negate", false]], "negate() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.negate", false]], "negate() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.negate", false]], "negate() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.negate", false]], "negate() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.negate", false]], "negate() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.negate", false]], "negate() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.negate", false]], "negate() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.negate", false]], "negate() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.negate", false]], "negate() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.negate", false]], "negate() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.negate", false]], "negate() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.negate", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[85, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[86, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[422, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[423, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[99, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[372, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[87, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.normalize", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[387, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalized_ramp() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.normalized_ramp", false]], "normalized_sigmoid() (baybe.targets.numerical.numericaltarget class method)": [[307, "baybe.targets.numerical.NumericalTarget.normalized_sigmoid", false]], "normalprior (class in baybe.priors.basic)": [[178, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[88, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[89, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[112, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[117, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[307, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[90, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[125, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[115, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[115, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[150, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[91, "baybe.exceptions.OptionalImportError", false]], "output_names (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.output_names", false]], "output_names (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.output_names", false]], "output_names (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.output_names", false]], "output_names (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.output_names", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[122, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[122, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[143, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[225, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[152, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[37, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[38, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[39, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[41, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "parameters() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.parameters", false]], "parameters() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[134, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "peak (baybe.transformations.basic.triangulartransformation attribute)": [[324, "baybe.transformations.basic.TriangularTransformation.peak", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[113, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[100, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[258, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[115, "baybe.kernels.basic.PolynomialKernel.power", false]], "power() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.power", false]], "powertransformation (class in baybe.transformations.basic)": [[322, "baybe.transformations.basic.PowerTransformation", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[388, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[171, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[121, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[195, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[23, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[412, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[174, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[116, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[182, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[192, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[195, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[207, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[211, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[212, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[182, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[354, "baybe.utils.basic.refers_to", false]], "register_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_backward_hook", false]], "register_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_backward_hook", false]], "register_buffer() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_buffer", false]], "register_buffer() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_buffer", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[265, "baybe.surrogates.custom.register_custom_architecture", false]], "register_forward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook", false]], "register_forward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook", false]], "register_forward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook", false]], "register_forward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook", false]], "register_full_backward_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook", false]], "register_full_backward_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook", false]], "register_full_backward_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook", false]], "register_full_backward_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook", false]], "register_hooks() (in module baybe.utils.basic)": [[355, "baybe.utils.basic.register_hooks", false]], "register_load_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_post_hook", false]], "register_load_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_post_hook", false]], "register_load_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook", false]], "register_load_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook", false]], "register_module() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_module", false]], "register_module() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_module", false]], "register_parameter() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_parameter", false]], "register_parameter() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_parameter", false]], "register_state_dict_post_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_post_hook", false]], "register_state_dict_post_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_post_hook", false]], "register_state_dict_pre_hook() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.register_state_dict_pre_hook", false]], "register_state_dict_pre_hook() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.register_state_dict_pre_hook", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "require_normalization (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.require_normalization", false]], "requires_grad_() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.requires_grad_", false]], "requires_grad_() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_", false]], "rffkernel (class in baybe.kernels.basic)": [[117, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[118, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[414, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[132, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[175, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[176, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[177, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[178, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[122, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[34, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[217, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[92, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[218, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[237, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[44, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[243, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[240, "baybe.serialization.mixin.SerialMixin", false]], "set_extra_state() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.set_extra_state", false]], "set_extra_state() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[409, "baybe.utils.random.set_random_seed", false]], "set_submodule() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.set_submodule", false]], "set_submodule() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.set_submodule", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[28, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[101, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[102, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[100, "baybe.insights.shap.SHAPInsight", false]], "share_memory() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.share_memory", false]], "share_memory() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.share_memory", false]], "shift (baybe.transformations.basic.affinetransformation attribute)": [[315, "baybe.transformations.basic.AffineTransformation.shift", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[179, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "sigma (baybe.transformations.basic.belltransformation attribute)": [[316, "baybe.transformations.basic.BellTransformation.sigma", false]], "sigmoidtransformation (class in baybe.transformations.basic)": [[323, "baybe.transformations.basic.SigmoidTransformation", false]], "simulate_experiment() (in module baybe.simulation.core)": [[246, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[250, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[252, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[136, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[208, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "slope_left (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_left", false]], "slope_right (baybe.transformations.basic.twosidedaffinetransformation attribute)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.slope_right", false]], "smiles (in module baybe.parameters.substance)": [[158, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[365, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[179, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[164, "baybe.parameters.utils.sort_parameters", false]], "state_dict() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.state_dict", false]], "state_dict() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.state_dict", false]], "steepness (baybe.transformations.basic.sigmoidtransformation attribute)": [[323, "baybe.transformations.basic.SigmoidTransformation.steepness", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[32, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[360, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[52, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[44, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[215, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[153, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[159, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[301, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[26, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[259, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_partial_measurements (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.supports_partial_measurements", false]], "supports_partial_measurements (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.supports_partial_measurements", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[259, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[259, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[198, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[200, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[260, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[262, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[299, "baybe.targets.base.Target", false]], "targets (baybe.campaign.campaign property)": [[34, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[125, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[130, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[134, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[136, "baybe.objectives.single.SingleTargetObjective.targets", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[146, "baybe.parameters.categorical.TaskParameter", false]], "temporary_seed() (in module baybe.utils.random)": [[410, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[45, "baybe.constraints.conditions.ThresholdCondition", false]], "to() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.to", false]], "to() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.to", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.to_botorch", false]], "to_botorch() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.to_botorch", false]], "to_botorch() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.to_botorch", false]], "to_botorch() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[260, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_botorch_objective() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.to_botorch_objective", false]], "to_botorch_objective() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.to_botorch_objective", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.to_botorch_posterior_transform", false]], "to_botorch_posterior_transform() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.to_botorch_posterior_transform", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[217, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[240, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.to_dict", false]], "to_dict() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.to_dict", false]], "to_dict() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.to_dict", false]], "to_dict() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.to_dict", false]], "to_dict() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.to_dict", false]], "to_dict() (baybe.utils.metadata.measurablemetadata method)": [[399, "baybe.utils.metadata.MeasurableMetadata.to_dict", false]], "to_dict() (baybe.utils.metadata.metadata method)": [[400, "baybe.utils.metadata.Metadata.to_dict", false]], "to_empty() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.to_empty", false]], "to_empty() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.to_empty", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedhypervolumeimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[10, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[11, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedhypervolumeimprovement method)": [[12, "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[13, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[15, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[16, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[14, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[17, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[18, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[19, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[20, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[21, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[22, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[23, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[24, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[26, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[37, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[38, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[39, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[40, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[41, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[47, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[48, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[54, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[57, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[58, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[59, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[60, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[61, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[62, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[107, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[108, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[109, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[111, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[112, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[113, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[114, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[115, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[116, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[117, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[118, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[120, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[121, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[122, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[171, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[173, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[174, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[175, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[176, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[177, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[178, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[179, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[185, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[187, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[188, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[189, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[217, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[240, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[255, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[257, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[259, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[262, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[268, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[271, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[282, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[284, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[286, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[288, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.transformations.base.monotonictransformation method)": [[311, "baybe.transformations.base.MonotonicTransformation.to_json", false]], "to_json() (baybe.transformations.base.transformation method)": [[312, "baybe.transformations.base.Transformation.to_json", false]], "to_json() (baybe.transformations.basic.absolutetransformation method)": [[314, "baybe.transformations.basic.AbsoluteTransformation.to_json", false]], "to_json() (baybe.transformations.basic.affinetransformation method)": [[315, "baybe.transformations.basic.AffineTransformation.to_json", false]], "to_json() (baybe.transformations.basic.belltransformation method)": [[316, "baybe.transformations.basic.BellTransformation.to_json", false]], "to_json() (baybe.transformations.basic.clampingtransformation method)": [[317, "baybe.transformations.basic.ClampingTransformation.to_json", false]], "to_json() (baybe.transformations.basic.customtransformation method)": [[318, "baybe.transformations.basic.CustomTransformation.to_json", false]], "to_json() (baybe.transformations.basic.exponentialtransformation method)": [[319, "baybe.transformations.basic.ExponentialTransformation.to_json", false]], "to_json() (baybe.transformations.basic.identitytransformation method)": [[320, "baybe.transformations.basic.IdentityTransformation.to_json", false]], "to_json() (baybe.transformations.basic.logarithmictransformation method)": [[321, "baybe.transformations.basic.LogarithmicTransformation.to_json", false]], "to_json() (baybe.transformations.basic.powertransformation method)": [[322, "baybe.transformations.basic.PowerTransformation.to_json", false]], "to_json() (baybe.transformations.basic.sigmoidtransformation method)": [[323, "baybe.transformations.basic.SigmoidTransformation.to_json", false]], "to_json() (baybe.transformations.basic.triangulartransformation method)": [[324, "baybe.transformations.basic.TriangularTransformation.to_json", false]], "to_json() (baybe.transformations.basic.twosidedaffinetransformation method)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation.to_json", false]], "to_json() (baybe.transformations.composite.additivetransformation method)": [[327, "baybe.transformations.composite.AdditiveTransformation.to_json", false]], "to_json() (baybe.transformations.composite.chainedtransformation method)": [[328, "baybe.transformations.composite.ChainedTransformation.to_json", false]], "to_json() (baybe.transformations.composite.multiplicativetransformation method)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.to_json", false]], "to_json() (baybe.utils.metadata.measurablemetadata method)": [[399, "baybe.utils.metadata.MeasurableMetadata.to_json", false]], "to_json() (baybe.utils.metadata.metadata method)": [[400, "baybe.utils.metadata.Metadata.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[272, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_metadata() (in module baybe.utils.metadata)": [[401, "baybe.utils.metadata.to_metadata", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[126, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[43, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[44, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[45, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[143, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[219, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[373, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[141, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[389, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[394, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[356, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[45, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "train() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.train", false]], "train() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.train", false]], "transform() (baybe.objectives.base.objective method)": [[125, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[130, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[134, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[136, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[142, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[145, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[146, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[159, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[215, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[217, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[223, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[299, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[301, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[307, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[369, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[416, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[390, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[307, "baybe.targets.numerical.NumericalTarget.transformation", false]], "transformation (class in baybe.transformations.base)": [[312, "baybe.transformations.base.Transformation", false]], "transformations (baybe.transformations.composite.additivetransformation attribute)": [[327, "baybe.transformations.composite.AdditiveTransformation.transformations", false]], "transformations (baybe.transformations.composite.chainedtransformation attribute)": [[328, "baybe.transformations.composite.ChainedTransformation.transformations", false]], "transformations (baybe.transformations.composite.multiplicativetransformation attribute)": [[329, "baybe.transformations.composite.MultiplicativeTransformation.transformations", false]], "triangulartransformation (class in baybe.transformations.basic)": [[324, "baybe.transformations.basic.TriangularTransformation", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[190, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "twosidedaffinetransformation (class in baybe.transformations.basic)": [[325, "baybe.transformations.basic.TwoSidedAffineTransformation", false]], "type (baybe.searchspace.core.searchspace property)": [[217, "baybe.searchspace.core.SearchSpace.type", false]], "type() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.type", false]], "type() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[295, "baybe.surrogates.validation.type_validation_converter", false]], "uncertainbool (class in baybe.utils.basic)": [[341, "baybe.utils.basic.UncertainBool", false]], "unidentifiedsubclasserror": [[93, "baybe.exceptions.UnidentifiedSubclassError", false]], "unit (baybe.parameters.base.continuousparameter property)": [[141, "baybe.parameters.base.ContinuousParameter.unit", false]], "unit (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.unit", false]], "unit (baybe.parameters.base.parameter property)": [[143, "baybe.parameters.base.Parameter.unit", false]], "unit (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.unit", false]], "unit (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.unit", false]], "unit (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.unit", false]], "unit (baybe.parameters.numerical.numericalcontinuousparameter property)": [[155, "baybe.parameters.numerical.NumericalContinuousParameter.unit", false]], "unit (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.unit", false]], "unit (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.unit", false]], "unit (baybe.targets.base.target property)": [[299, "baybe.targets.base.Target.unit", false]], "unit (baybe.targets.binary.binarytarget property)": [[301, "baybe.targets.binary.BinaryTarget.unit", false]], "unit (baybe.targets.numerical.numericaltarget property)": [[307, "baybe.targets.numerical.NumericalTarget.unit", false]], "unit (baybe.utils.metadata.measurablemetadata attribute)": [[399, "baybe.utils.metadata.MeasurableMetadata.unit", false]], "unmatchedattributeerror": [[94, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[340, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[342, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[238, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[95, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[34, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[394, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[395, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[66, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[67, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[264, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[34, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[68, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[296, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[166, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[167, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[424, "baybe.utils.validation.validate_not_nan", false]], "validate_object_names() (in module baybe.utils.validation)": [[425, "baybe.utils.validation.validate_object_names", false]], "validate_objective_input() (in module baybe.utils.validation)": [[426, "baybe.utils.validation.validate_objective_input", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[427, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[229, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[230, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[220, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[226, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[428, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[138, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[168, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[142, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[145, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[146, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[148, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[156, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[159, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[111, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[111, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[405, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[419, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[130, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[153, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]], "xpu() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.xpu", false]], "xpu() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.xpu", false]], "zero_grad() (baybe.objectives.botorch.chainedmcobjective method)": [[128, "baybe.objectives.botorch.ChainedMCObjective.zero_grad", false]], "zero_grad() (baybe.targets.botorch.affineposteriortransform method)": [[304, "baybe.targets.botorch.AffinePosteriorTransform.zero_grad", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [33, 0, 0, "-", "campaign"], [35, 0, 0, "-", "constraints"], [69, 0, 0, "-", "exceptions"], [96, 0, 0, "-", "insights"], [105, 0, 0, "-", "kernels"], [123, 0, 0, "-", "objectives"], [139, 0, 0, "-", "parameters"], [169, 0, 0, "-", "priors"], [180, 0, 0, "-", "recommenders"], [213, 0, 0, "-", "searchspace"], [231, 0, 0, "-", "serialization"], [244, 0, 0, "-", "simulation"], [253, 0, 0, "-", "surrogates"], [297, 0, 0, "-", "targets"], [309, 0, 0, "-", "transformations"], [334, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [25, 0, 0, "-", "base"], [27, 0, 0, "-", "partial"], [29, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedHypervolumeImprovement"], [10, 1, 1, "", "qExpectedImprovement"], [11, 1, 1, "", "qKnowledgeGradient"], [12, 1, 1, "", "qLogExpectedHypervolumeImprovement"], [13, 1, 1, "", "qLogExpectedImprovement"], [14, 1, 1, "", "qLogNParEGO"], [15, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [16, 1, 1, "", "qLogNoisyExpectedImprovement"], [17, 1, 1, "", "qNegIntegratedPosteriorVariance"], [18, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [19, 1, 1, "", "qNoisyExpectedImprovement"], [20, 1, 1, "", "qPosteriorStandardDeviation"], [21, 1, 1, "", "qProbabilityOfImprovement"], [22, 1, 1, "", "qSimpleRegret"], [23, 1, 1, "", "qThompsonSampling"], [24, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 3, 1, "", "alpha"], [9, 2, 1, "", "compute_ref_point"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "reference_point"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.compute_ref_point.params": [[9, 4, 1, "", "array"], [9, 4, 1, "", "factor"], [9, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedHypervolumeImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "num_fantasies"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 3, 1, "", "alpha"], [12, 2, 1, "", "compute_ref_point"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "reference_point"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.compute_ref_point.params": [[12, 4, 1, "", "array"], [12, 4, 1, "", "factor"], [12, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedHypervolumeImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "compute_ref_point"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 3, 1, "", "prune_baseline"], [15, 3, 1, "", "reference_point"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[15, 4, 1, "", "array"], [15, 4, 1, "", "factor"], [15, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "get_integration_points"], [17, 3, 1, "", "sampling_fraction"], [17, 3, 1, "", "sampling_method"], [17, 3, 1, "", "sampling_n_points"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[17, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "compute_ref_point"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "prune_baseline"], [18, 3, 1, "", "reference_point"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[18, 4, 1, "", "array"], [18, 4, 1, "", "factor"], [18, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "prune_baseline"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "abbreviation"], [23, 2, 1, "", "evaluate"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_json"], [23, 3, 1, "", "n_mc_samples"], [23, 3, 1, "", "supports_multi_output"], [23, 2, 1, "", "to_botorch"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[23, 4, 1, "", "candidates"], [23, 4, 1, "", "jointly"], [23, 4, 1, "", "measurements"], [23, 4, 1, "", "objective"], [23, 4, 1, "", "pending_experiments"], [23, 4, 1, "", "searchspace"], [23, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[23, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[23, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 3, 1, "", "beta"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.base": [[26, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "abbreviation"], [26, 2, 1, "", "evaluate"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_json"], [26, 3, 1, "", "supports_multi_output"], [26, 2, 1, "", "to_botorch"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[26, 4, 1, "", "candidates"], [26, 4, 1, "", "jointly"], [26, 4, 1, "", "measurements"], [26, 4, 1, "", "objective"], [26, 4, 1, "", "pending_experiments"], [26, 4, 1, "", "searchspace"], [26, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[26, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[26, 4, 1, "", "string"]], "baybe.acquisition.partial": [[28, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "botorch_acqf"], [28, 3, 1, "", "pin_discrete"], [28, 3, 1, "", "pinned_part"], [28, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[28, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[30, 5, 1, "", "convert_acqf"], [31, 5, 1, "", "make_partitioning"], [32, 5, 1, "", "str_to_acqf"]], "baybe.acquisition.utils.make_partitioning.params": [[31, 4, 1, "", "alpha"], [31, 4, 1, "", "predictions"], [31, 4, 1, "", "ref_point"]], "baybe.campaign": [[34, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "acquisition_values"], [34, 2, 1, "", "add_measurements"], [34, 3, 1, "", "allow_recommending_already_measured"], [34, 3, 1, "", "allow_recommending_already_recommended"], [34, 3, 1, "", "allow_recommending_pending_experiments"], [34, 2, 1, "", "from_config"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_acquisition_function"], [34, 2, 1, "", "get_surrogate"], [34, 2, 1, "", "joint_acquisition_value"], [34, 6, 1, "", "measurements"], [34, 3, 1, "", "n_batches_done"], [34, 3, 1, "", "n_fits_done"], [34, 3, 1, "", "objective"], [34, 6, 1, "", "parameters"], [34, 2, 1, "", "posterior"], [34, 2, 1, "", "posterior_stats"], [34, 2, 1, "", "recommend"], [34, 3, 1, "", "recommender"], [34, 3, 1, "", "searchspace"], [34, 6, 1, "", "targets"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"], [34, 2, 1, "", "toggle_discrete_candidates"], [34, 2, 1, "", "update_measurements"], [34, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[34, 4, 1, "", "acquisition_function"], [34, 4, 1, "", "batch_size"], [34, 4, 1, "", "candidates"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[34, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[34, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[34, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[34, 4, 1, "", "candidates"], [34, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[34, 4, 1, "", "batch_size"], [34, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[34, 4, 1, "", "complement"], [34, 4, 1, "", "constraints"], [34, 4, 1, "", "dry_run"], [34, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[34, 4, 1, "", "data"], [34, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[34, 4, 1, "", "config_json"]], "baybe.constraints": [[36, 0, 0, "-", "base"], [42, 0, 0, "-", "conditions"], [46, 0, 0, "-", "continuous"], [49, 0, 0, "-", "deprecation"], [53, 0, 0, "-", "discrete"], [63, 0, 0, "-", "utils"], [65, 0, 0, "-", "validation"]], "baybe.constraints.base": [[37, 1, 1, "", "CardinalityConstraint"], [38, 1, 1, "", "Constraint"], [39, 1, 1, "", "ContinuousConstraint"], [40, 1, 1, "", "ContinuousNonlinearConstraint"], [41, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "max_cardinality"], [37, 3, 1, "", "min_cardinality"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[39, 2, 1, "", "__init__"], [39, 3, 1, "", "eval_during_augmentation"], [39, 3, 1, "", "eval_during_creation"], [39, 3, 1, "", "eval_during_modeling"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 6, 1, "", "is_continuous"], [39, 6, 1, "", "is_discrete"], [39, 3, 1, "", "numerical_only"], [39, 3, 1, "", "parameters"], [39, 2, 1, "", "summary"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 2, 1, "", "get_invalid"], [41, 2, 1, "", "get_invalid_polars"], [41, 2, 1, "", "get_valid"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[41, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[41, 4, 1, "", "df"]], "baybe.constraints.conditions": [[43, 1, 1, "", "Condition"], [44, 1, 1, "", "SubSelectionCondition"], [45, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[43, 2, 1, "", "evaluate"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"], [43, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[43, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[43, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[43, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[43, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "evaluate"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 6, 1, "", "selection"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"], [44, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[44, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[44, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "evaluate"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "threshold"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"], [45, 2, 1, "", "to_polars"], [45, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[45, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[45, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[47, 1, 1, "", "ContinuousCardinalityConstraint"], [48, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_absolute_thresholds"], [47, 2, 1, "", "inactive_parameter_combinations"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 6, 1, "", "n_inactive_parameter_combinations"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "relative_threshold"], [47, 2, 1, "", "sample_inactive_parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[47, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[47, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "coefficients"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 6, 1, "", "is_eq"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "operator"], [48, 3, 1, "", "parameters"], [48, 3, 1, "", "rhs"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_botorch"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[48, 4, 1, "", "idx_offset"], [48, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[50, 5, 1, "", "ContinuousLinearEqualityConstraint"], [51, 5, 1, "", "ContinuousLinearInequalityConstraint"], [52, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[54, 1, 1, "", "DiscreteCardinalityConstraint"], [55, 1, 1, "", "DiscreteCustomConstraint"], [56, 1, 1, "", "DiscreteDependenciesConstraint"], [57, 1, 1, "", "DiscreteExcludeConstraint"], [58, 1, 1, "", "DiscreteLinkedParametersConstraint"], [59, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [60, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [61, 1, 1, "", "DiscreteProductConstraint"], [62, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "max_cardinality"], [54, 3, 1, "", "min_cardinality"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"], [55, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "affected_parameters"], [56, 3, 1, "", "conditions"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 3, 1, "", "permutation_invariant"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "combiner"], [57, 3, 1, "", "conditions"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "dependencies"], [60, 3, 1, "", "eval_during_augmentation"], [60, 3, 1, "", "eval_during_creation"], [60, 3, 1, "", "eval_during_modeling"], [60, 2, 1, "", "from_dict"], [60, 2, 1, "", "from_json"], [60, 2, 1, "", "get_invalid"], [60, 2, 1, "", "get_invalid_polars"], [60, 2, 1, "", "get_valid"], [60, 6, 1, "", "is_continuous"], [60, 6, 1, "", "is_discrete"], [60, 3, 1, "", "numerical_only"], [60, 3, 1, "", "parameters"], [60, 2, 1, "", "summary"], [60, 2, 1, "", "to_dict"], [60, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[60, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[60, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[60, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[60, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "condition"], [61, 3, 1, "", "eval_during_augmentation"], [61, 3, 1, "", "eval_during_creation"], [61, 3, 1, "", "eval_during_modeling"], [61, 2, 1, "", "from_dict"], [61, 2, 1, "", "from_json"], [61, 2, 1, "", "get_invalid"], [61, 2, 1, "", "get_invalid_polars"], [61, 2, 1, "", "get_valid"], [61, 6, 1, "", "is_continuous"], [61, 6, 1, "", "is_discrete"], [61, 3, 1, "", "numerical_only"], [61, 3, 1, "", "parameters"], [61, 2, 1, "", "summary"], [61, 2, 1, "", "to_dict"], [61, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[61, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[61, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[61, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[61, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[62, 2, 1, "", "__init__"], [62, 3, 1, "", "condition"], [62, 3, 1, "", "eval_during_augmentation"], [62, 3, 1, "", "eval_during_creation"], [62, 3, 1, "", "eval_during_modeling"], [62, 2, 1, "", "from_dict"], [62, 2, 1, "", "from_json"], [62, 2, 1, "", "get_invalid"], [62, 2, 1, "", "get_invalid_polars"], [62, 2, 1, "", "get_valid"], [62, 6, 1, "", "is_continuous"], [62, 6, 1, "", "is_discrete"], [62, 3, 1, "", "numerical_only"], [62, 3, 1, "", "parameters"], [62, 2, 1, "", "summary"], [62, 2, 1, "", "to_dict"], [62, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[62, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[62, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[62, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[62, 4, 1, "", "df"]], "baybe.constraints.utils": [[64, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[64, 4, 1, "", "check_maximum"], [64, 4, 1, "", "check_minimum"], [64, 4, 1, "", "df"], [64, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[66, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [67, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [68, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[66, 4, 1, "", "constraint"], [66, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[67, 4, 1, "", "constraints"]], "baybe.exceptions": [[70, 7, 1, "", "DeprecationError"], [71, 7, 1, "", "EmptySearchSpaceError"], [72, 7, 1, "", "IncompatibilityError"], [73, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [74, 7, 1, "", "IncompatibleArgumentError"], [75, 7, 1, "", "IncompatibleExplainerError"], [76, 7, 1, "", "IncompatibleSearchSpaceError"], [77, 7, 1, "", "IncompatibleSurrogateError"], [78, 7, 1, "", "IncompleteMeasurementsError"], [79, 7, 1, "", "InfeasibilityError"], [80, 7, 1, "", "InputDataTypeWarning"], [81, 7, 1, "", "InvalidSurrogateModelError"], [82, 7, 1, "", "InvalidTargetValueError"], [83, 7, 1, "", "MinimumCardinalityViolatedWarning"], [84, 7, 1, "", "ModelNotTrainedError"], [85, 7, 1, "", "NoMCAcquisitionFunctionError"], [86, 7, 1, "", "NoMeasurementsError"], [87, 7, 1, "", "NoRecommendersLeftError"], [88, 7, 1, "", "NotEnoughPointsLeftError"], [89, 7, 1, "", "NothingToSimulateError"], [90, 7, 1, "", "NumericalUnderflowError"], [91, 7, 1, "", "OptionalImportError"], [92, 7, 1, "", "SearchSpaceMatchWarning"], [93, 7, 1, "", "UnidentifiedSubclassError"], [94, 7, 1, "", "UnmatchedAttributeError"], [95, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__new__"]], "baybe.insights": [[97, 0, 0, "-", "shap"]], "baybe.insights.shap": [[98, 8, 1, "", "EXPLAINERS"], [99, 8, 1, "", "NON_SHAP_EXPLAINERS"], [100, 1, 1, "", "SHAPInsight"], [101, 8, 1, "", "SHAP_EXPLAINERS"], [102, 8, 1, "", "SHAP_PLOTS"], [103, 5, 1, "", "is_shap_explainer"], [104, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[100, 2, 1, "", "__init__"], [100, 3, 1, "", "background_data"], [100, 2, 1, "", "explain"], [100, 2, 1, "", "explain_target"], [100, 3, 1, "", "explainers"], [100, 2, 1, "", "from_campaign"], [100, 2, 1, "", "from_recommender"], [100, 2, 1, "", "from_surrogate"], [100, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[100, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[100, 4, 1, "", "data"], [100, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[100, 4, 1, "", "campaign"], [100, 4, 1, "", "explainer_cls"], [100, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[100, 4, 1, "", "explainer_cls"], [100, 4, 1, "", "measurements"], [100, 4, 1, "", "objective"], [100, 4, 1, "", "recommender"], [100, 4, 1, "", "searchspace"], [100, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[100, 4, 1, "", "**kwargs"], [100, 4, 1, "", "data"], [100, 4, 1, "", "explanation_index"], [100, 4, 1, "", "plot_type"], [100, 4, 1, "", "show"], [100, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[104, 4, 1, "", "data"], [104, 4, 1, "", "explainer_cls"], [104, 4, 1, "", "surrogate"], [104, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[106, 0, 0, "-", "base"], [110, 0, 0, "-", "basic"], [119, 0, 0, "-", "composite"]], "baybe.kernels.base": [[107, 1, 1, "", "BasicKernel"], [108, 1, 1, "", "CompositeKernel"], [109, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_factory"], [107, 2, 1, "", "to_gpytorch"], [107, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[107, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[107, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic": [[111, 1, 1, "", "LinearKernel"], [112, 1, 1, "", "MaternKernel"], [113, 1, 1, "", "PeriodicKernel"], [114, 1, 1, "", "PiecewisePolynomialKernel"], [115, 1, 1, "", "PolynomialKernel"], [116, 1, 1, "", "RBFKernel"], [117, 1, 1, "", "RFFKernel"], [118, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"], [111, 3, 1, "", "variance_initial_value"], [111, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "lengthscale_initial_value"], [112, 3, 1, "", "lengthscale_prior"], [112, 3, 1, "", "nu"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 3, 1, "", "period_length_initial_value"], [113, 3, 1, "", "period_length_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 3, 1, "", "q"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "offset_initial_value"], [115, 3, 1, "", "offset_prior"], [115, 3, 1, "", "power"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "lengthscale_initial_value"], [116, 3, 1, "", "lengthscale_prior"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_factory"], [116, 2, 1, "", "to_gpytorch"], [116, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[116, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 3, 1, "", "lengthscale_initial_value"], [117, 3, 1, "", "lengthscale_prior"], [117, 3, 1, "", "num_samples"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 3, 1, "", "lengthscale_initial_value"], [118, 3, 1, "", "lengthscale_prior"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.kernels.composite": [[120, 1, 1, "", "AdditiveKernel"], [121, 1, 1, "", "ProductKernel"], [122, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[120, 2, 1, "", "__init__"], [120, 3, 1, "", "base_kernels"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_factory"], [120, 2, 1, "", "to_gpytorch"], [120, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[120, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[121, 2, 1, "", "__init__"], [121, 3, 1, "", "base_kernels"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_factory"], [121, 2, 1, "", "to_gpytorch"], [121, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[121, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[122, 2, 1, "", "__init__"], [122, 3, 1, "", "base_kernel"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 3, 1, "", "outputscale_initial_value"], [122, 3, 1, "", "outputscale_prior"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_factory"], [122, 2, 1, "", "to_gpytorch"], [122, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives": [[124, 0, 0, "-", "base"], [127, 0, 0, "-", "botorch"], [129, 0, 0, "-", "desirability"], [131, 0, 0, "-", "enum"], [133, 0, 0, "-", "pareto"], [135, 0, 0, "-", "single"], [137, 0, 0, "-", "validation"]], "baybe.objectives.base": [[125, 1, 1, "", "Objective"], [126, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "description"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 3, 1, "", "is_multi_output"], [125, 3, 1, "", "metadata"], [125, 6, 1, "", "n_outputs"], [125, 6, 1, "", "output_names"], [125, 6, 1, "", "supports_partial_measurements"], [125, 6, 1, "", "targets"], [125, 2, 1, "", "to_botorch"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[125, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[125, 4, 1, "", "allow_extra"], [125, 4, 1, "", "allow_missing"], [125, 4, 1, "", "data"], [125, 4, 1, "", "df"]], "baybe.objectives.botorch": [[128, 1, 1, "", "ChainedMCObjective"]], "baybe.objectives.botorch.ChainedMCObjective": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "add_module"], [128, 2, 1, "", "apply"], [128, 2, 1, "", "bfloat16"], [128, 2, 1, "", "buffers"], [128, 2, 1, "", "children"], [128, 2, 1, "", "compile"], [128, 2, 1, "", "cpu"], [128, 2, 1, "", "cuda"], [128, 2, 1, "", "double"], [128, 2, 1, "", "eval"], [128, 2, 1, "", "extra_repr"], [128, 2, 1, "", "float"], [128, 2, 1, "", "forward"], [128, 2, 1, "", "get_buffer"], [128, 2, 1, "", "get_extra_state"], [128, 2, 1, "", "get_parameter"], [128, 2, 1, "", "get_submodule"], [128, 2, 1, "", "half"], [128, 2, 1, "", "ipu"], [128, 2, 1, "", "modules"], [128, 2, 1, "", "mtia"], [128, 2, 1, "", "named_buffers"], [128, 2, 1, "", "named_children"], [128, 2, 1, "", "named_modules"], [128, 2, 1, "", "named_parameters"], [128, 2, 1, "", "parameters"], [128, 2, 1, "", "register_backward_hook"], [128, 2, 1, "", "register_buffer"], [128, 2, 1, "", "register_forward_hook"], [128, 2, 1, "", "register_forward_pre_hook"], [128, 2, 1, "", "register_full_backward_hook"], [128, 2, 1, "", "register_full_backward_pre_hook"], [128, 2, 1, "", "register_load_state_dict_post_hook"], [128, 2, 1, "", "register_load_state_dict_pre_hook"], [128, 2, 1, "", "register_module"], [128, 2, 1, "", "register_parameter"], [128, 2, 1, "", "register_state_dict_post_hook"], [128, 2, 1, "", "register_state_dict_pre_hook"], [128, 2, 1, "", "requires_grad_"], [128, 2, 1, "", "set_extra_state"], [128, 2, 1, "", "set_submodule"], [128, 2, 1, "", "share_memory"], [128, 2, 1, "", "state_dict"], [128, 2, 1, "", "to"], [128, 2, 1, "", "to_empty"], [128, 2, 1, "", "train"], [128, 2, 1, "", "type"], [128, 2, 1, "", "xpu"], [128, 2, 1, "", "zero_grad"]], "baybe.objectives.botorch.ChainedMCObjective.add_module.params": [[128, 4, 1, "", "module"], [128, 4, 1, "", "name"]], "baybe.objectives.botorch.ChainedMCObjective.apply.params": [[128, 4, 1, "", "fn"]], "baybe.objectives.botorch.ChainedMCObjective.buffers.params": [[128, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.cuda.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.forward.params": [[128, 4, 1, "", "X"], [128, 4, 1, "", "samples"]], "baybe.objectives.botorch.ChainedMCObjective.get_buffer.params": [[128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_parameter.params": [[128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.get_submodule.params": [[128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.ipu.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.mtia.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.named_buffers.params": [[128, 4, 1, "", "prefix"], [128, 4, 1, "", "recurse"], [128, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_modules.params": [[128, 4, 1, "", "memo"], [128, 4, 1, "", "prefix"], [128, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.named_parameters.params": [[128, 4, 1, "", "prefix"], [128, 4, 1, "", "recurse"], [128, 4, 1, "", "remove_duplicate"]], "baybe.objectives.botorch.ChainedMCObjective.parameters.params": [[128, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.register_buffer.params": [[128, 4, 1, "", "name"], [128, 4, 1, "", "persistent"], [128, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_hook.params": [[128, 4, 1, "", "always_call"], [128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"], [128, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_forward_pre_hook.params": [[128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"], [128, 4, 1, "", "with_kwargs"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_hook.params": [[128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_full_backward_pre_hook.params": [[128, 4, 1, "", "hook"], [128, 4, 1, "", "prepend"]], "baybe.objectives.botorch.ChainedMCObjective.register_load_state_dict_pre_hook.params": [[128, 4, 1, "", "hook"]], "baybe.objectives.botorch.ChainedMCObjective.register_parameter.params": [[128, 4, 1, "", "name"], [128, 4, 1, "", "param"]], "baybe.objectives.botorch.ChainedMCObjective.requires_grad_.params": [[128, 4, 1, "", "requires_grad"]], "baybe.objectives.botorch.ChainedMCObjective.set_extra_state.params": [[128, 4, 1, "", "state"]], "baybe.objectives.botorch.ChainedMCObjective.set_submodule.params": [[128, 4, 1, "", "module"], [128, 4, 1, "", "strict"], [128, 4, 1, "", "target"]], "baybe.objectives.botorch.ChainedMCObjective.state_dict.params": [[128, 4, 1, "", "destination"], [128, 4, 1, "", "keep_vars"], [128, 4, 1, "", "prefix"]], "baybe.objectives.botorch.ChainedMCObjective.to.params": [[128, 4, 1, "", "device"], [128, 4, 1, "", "dtype"], [128, 4, 1, "", "memory_format"], [128, 4, 1, "", "tensor"]], "baybe.objectives.botorch.ChainedMCObjective.to_empty.params": [[128, 4, 1, "", "device"], [128, 4, 1, "", "recurse"]], "baybe.objectives.botorch.ChainedMCObjective.train.params": [[128, 4, 1, "", "mode"]], "baybe.objectives.botorch.ChainedMCObjective.type.params": [[128, 4, 1, "", "dst_type"]], "baybe.objectives.botorch.ChainedMCObjective.xpu.params": [[128, 4, 1, "", "device"]], "baybe.objectives.botorch.ChainedMCObjective.zero_grad.params": [[128, 4, 1, "", "set_to_none"]], "baybe.objectives.desirability": [[130, 1, 1, "", "DesirabilityObjective"]], "baybe.objectives.desirability.DesirabilityObjective": [[130, 2, 1, "", "__init__"], [130, 3, 1, "", "as_pre_transformation"], [130, 6, 1, "", "description"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 3, 1, "", "metadata"], [130, 6, 1, "", "n_outputs"], [130, 6, 1, "", "output_names"], [130, 3, 1, "", "require_normalization"], [130, 3, 1, "", "scalarizer"], [130, 6, 1, "", "supports_partial_measurements"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_botorch"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"], [130, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "data"], [130, 4, 1, "", "df"]], "baybe.objectives.enum": [[132, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[132, 3, 1, "", "GEOM_MEAN"], [132, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[134, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[134, 2, 1, "", "__init__"], [134, 6, 1, "", "description"], [134, 2, 1, "", "from_dict"], [134, 2, 1, "", "from_json"], [134, 3, 1, "", "is_multi_output"], [134, 3, 1, "", "metadata"], [134, 6, 1, "", "n_outputs"], [134, 6, 1, "", "output_names"], [134, 6, 1, "", "supports_partial_measurements"], [134, 6, 1, "", "targets"], [134, 2, 1, "", "to_botorch"], [134, 2, 1, "", "to_dict"], [134, 2, 1, "", "to_json"], [134, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[134, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[134, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[134, 4, 1, "", "allow_extra"], [134, 4, 1, "", "allow_missing"], [134, 4, 1, "", "data"], [134, 4, 1, "", "df"]], "baybe.objectives.single": [[136, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "description"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 3, 1, "", "is_multi_output"], [136, 3, 1, "", "metadata"], [136, 6, 1, "", "n_outputs"], [136, 6, 1, "", "output_names"], [136, 6, 1, "", "supports_partial_measurements"], [136, 6, 1, "", "targets"], [136, 2, 1, "", "to_botorch"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[136, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[136, 4, 1, "", "allow_extra"], [136, 4, 1, "", "allow_missing"], [136, 4, 1, "", "data"], [136, 4, 1, "", "df"]], "baybe.objectives.validation": [[138, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[140, 0, 0, "-", "base"], [144, 0, 0, "-", "categorical"], [147, 0, 0, "-", "custom"], [149, 0, 0, "-", "enum"], [154, 0, 0, "-", "numerical"], [157, 0, 0, "-", "substance"], [160, 0, 0, "-", "utils"], [165, 0, 0, "-", "validation"]], "baybe.parameters.base": [[141, 1, 1, "", "ContinuousParameter"], [142, 1, 1, "", "DiscreteParameter"], [143, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "comp_rep_columns"], [141, 6, 1, "", "description"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "metadata"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 6, 1, "", "unit"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 6, 1, "", "description"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "metadata"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "unit"], [142, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[143, 2, 1, "", "__init__"], [143, 6, 1, "", "comp_rep_columns"], [143, 6, 1, "", "description"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 6, 1, "", "is_continuous"], [143, 6, 1, "", "is_discrete"], [143, 2, 1, "", "is_in_range"], [143, 3, 1, "", "is_numerical"], [143, 3, 1, "", "metadata"], [143, 3, 1, "", "name"], [143, 2, 1, "", "summary"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_json"], [143, 2, 1, "", "to_searchspace"], [143, 6, 1, "", "unit"]], "baybe.parameters.base.Parameter.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[143, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[143, 4, 1, "", "item"]], "baybe.parameters.categorical": [[145, 1, 1, "", "CategoricalParameter"], [146, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[145, 2, 1, "", "__init__"], [145, 6, 1, "", "active_values"], [145, 6, 1, "", "comp_df"], [145, 6, 1, "", "comp_rep_columns"], [145, 6, 1, "", "description"], [145, 3, 1, "", "encoding"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 6, 1, "", "is_continuous"], [145, 6, 1, "", "is_discrete"], [145, 2, 1, "", "is_in_range"], [145, 3, 1, "", "is_numerical"], [145, 3, 1, "", "metadata"], [145, 3, 1, "", "name"], [145, 2, 1, "", "summary"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_json"], [145, 2, 1, "", "to_searchspace"], [145, 2, 1, "", "to_subspace"], [145, 2, 1, "", "transform"], [145, 6, 1, "", "unit"], [145, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[145, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[145, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[145, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[146, 2, 1, "", "__init__"], [146, 6, 1, "", "active_values"], [146, 6, 1, "", "comp_df"], [146, 6, 1, "", "comp_rep_columns"], [146, 6, 1, "", "description"], [146, 3, 1, "", "encoding"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 6, 1, "", "is_continuous"], [146, 6, 1, "", "is_discrete"], [146, 2, 1, "", "is_in_range"], [146, 3, 1, "", "is_numerical"], [146, 3, 1, "", "metadata"], [146, 3, 1, "", "name"], [146, 2, 1, "", "summary"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_json"], [146, 2, 1, "", "to_searchspace"], [146, 2, 1, "", "to_subspace"], [146, 2, 1, "", "transform"], [146, 6, 1, "", "unit"], [146, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[146, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[146, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[146, 4, 1, "", "series"]], "baybe.parameters.custom": [[148, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[148, 2, 1, "", "__init__"], [148, 6, 1, "", "active_values"], [148, 6, 1, "", "comp_df"], [148, 6, 1, "", "comp_rep_columns"], [148, 3, 1, "", "data"], [148, 3, 1, "", "decorrelate"], [148, 6, 1, "", "description"], [148, 3, 1, "", "encoding"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 6, 1, "", "is_continuous"], [148, 6, 1, "", "is_discrete"], [148, 2, 1, "", "is_in_range"], [148, 3, 1, "", "is_numerical"], [148, 3, 1, "", "metadata"], [148, 3, 1, "", "name"], [148, 2, 1, "", "summary"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_json"], [148, 2, 1, "", "to_searchspace"], [148, 2, 1, "", "to_subspace"], [148, 2, 1, "", "transform"], [148, 6, 1, "", "unit"], [148, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[148, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[148, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[148, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[148, 4, 1, "", "series"]], "baybe.parameters.enum": [[150, 1, 1, "", "CategoricalEncoding"], [151, 1, 1, "", "CustomEncoding"], [152, 1, 1, "", "ParameterEncoding"], [153, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[150, 3, 1, "", "INT"], [150, 3, 1, "", "OHE"], [150, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[151, 3, 1, "", "CUSTOM"], [151, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[153, 3, 1, "", "ATOMPAIR"], [153, 3, 1, "", "AUTOCORR"], [153, 3, 1, "", "AVALON"], [153, 3, 1, "", "BCUT2D"], [153, 3, 1, "", "E3FP"], [153, 3, 1, "", "ECFP"], [153, 3, 1, "", "ELECTROSHAPE"], [153, 3, 1, "", "ERG"], [153, 3, 1, "", "ESTATE"], [153, 3, 1, "", "FUNCTIONALGROUPS"], [153, 3, 1, "", "GETAWAY"], [153, 3, 1, "", "GHOSECRIPPEN"], [153, 3, 1, "", "KLEKOTAROTH"], [153, 3, 1, "", "LAGGNER"], [153, 3, 1, "", "LAYERED"], [153, 3, 1, "", "LINGO"], [153, 3, 1, "", "MACCS"], [153, 3, 1, "", "MAP"], [153, 3, 1, "", "MHFP"], [153, 3, 1, "", "MORDRED"], [153, 3, 1, "", "MORGAN_FP"], [153, 3, 1, "", "MORSE"], [153, 3, 1, "", "MQNS"], [153, 3, 1, "", "PATTERN"], [153, 3, 1, "", "PHARMACOPHORE"], [153, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [153, 3, 1, "", "PUBCHEM"], [153, 3, 1, "", "RDF"], [153, 3, 1, "", "RDKIT"], [153, 3, 1, "", "RDKIT2DDESCRIPTORS"], [153, 3, 1, "", "RDKITFINGERPRINT"], [153, 3, 1, "", "SECFP"], [153, 3, 1, "", "TOPOLOGICALTORSION"], [153, 3, 1, "", "USR"], [153, 3, 1, "", "USRCAT"], [153, 3, 1, "", "VSA"], [153, 3, 1, "", "WHIM"], [153, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[155, 1, 1, "", "NumericalContinuousParameter"], [156, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "bounds"], [155, 6, 1, "", "comp_rep_columns"], [155, 6, 1, "", "description"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "metadata"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 6, 1, "", "unit"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[155, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[156, 2, 1, "", "__init__"], [156, 6, 1, "", "active_values"], [156, 6, 1, "", "comp_df"], [156, 6, 1, "", "comp_rep_columns"], [156, 6, 1, "", "description"], [156, 3, 1, "", "encoding"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 6, 1, "", "is_continuous"], [156, 6, 1, "", "is_discrete"], [156, 2, 1, "", "is_in_range"], [156, 3, 1, "", "is_numerical"], [156, 3, 1, "", "metadata"], [156, 3, 1, "", "name"], [156, 2, 1, "", "summary"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"], [156, 2, 1, "", "to_searchspace"], [156, 2, 1, "", "to_subspace"], [156, 3, 1, "", "tolerance"], [156, 2, 1, "", "transform"], [156, 6, 1, "", "unit"], [156, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[156, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[156, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[156, 4, 1, "", "series"]], "baybe.parameters.substance": [[158, 3, 1, "", "Smiles"], [159, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[159, 2, 1, "", "__init__"], [159, 6, 1, "", "active_values"], [159, 6, 1, "", "comp_df"], [159, 6, 1, "", "comp_rep_columns"], [159, 3, 1, "", "data"], [159, 3, 1, "", "decorrelate"], [159, 6, 1, "", "description"], [159, 3, 1, "", "encoding"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 6, 1, "", "is_continuous"], [159, 6, 1, "", "is_discrete"], [159, 2, 1, "", "is_in_range"], [159, 3, 1, "", "is_numerical"], [159, 3, 1, "", "kwargs_conformer"], [159, 3, 1, "", "kwargs_fingerprint"], [159, 3, 1, "", "metadata"], [159, 3, 1, "", "name"], [159, 2, 1, "", "summary"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_json"], [159, 2, 1, "", "to_searchspace"], [159, 2, 1, "", "to_subspace"], [159, 2, 1, "", "transform"], [159, 6, 1, "", "unit"], [159, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[159, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[159, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[159, 4, 1, "", "series"]], "baybe.parameters.utils": [[161, 5, 1, "", "activate_parameter"], [162, 5, 1, "", "get_parameters_from_dataframe"], [163, 5, 1, "", "is_inactive"], [164, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[161, 4, 1, "", "parameter"], [161, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[162, 4, 1, "", "df"], [162, 4, 1, "", "factory"], [162, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[163, 4, 1, "", "lower_threshold"], [163, 4, 1, "", "upper_threshold"], [163, 4, 1, "", "x"]], "baybe.parameters.validation": [[166, 5, 1, "", "validate_decorrelation"], [167, 5, 1, "", "validate_is_finite"], [168, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[170, 0, 0, "-", "base"], [172, 0, 0, "-", "basic"]], "baybe.priors.base": [[171, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic": [[173, 1, 1, "", "BetaPrior"], [174, 1, 1, "", "GammaPrior"], [175, 1, 1, "", "HalfCauchyPrior"], [176, 1, 1, "", "HalfNormalPrior"], [177, 1, 1, "", "LogNormalPrior"], [178, 1, 1, "", "NormalPrior"], [179, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "alpha"], [173, 3, 1, "", "beta"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "concentration"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "rate"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "scale"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "from_dict"], [176, 2, 1, "", "from_json"], [176, 3, 1, "", "scale"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_gpytorch"], [176, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[176, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[176, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "from_dict"], [177, 2, 1, "", "from_json"], [177, 3, 1, "", "loc"], [177, 3, 1, "", "scale"], [177, 2, 1, "", "to_dict"], [177, 2, 1, "", "to_gpytorch"], [177, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[177, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[177, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "from_dict"], [178, 2, 1, "", "from_json"], [178, 3, 1, "", "loc"], [178, 3, 1, "", "scale"], [178, 2, 1, "", "to_dict"], [178, 2, 1, "", "to_gpytorch"], [178, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[178, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[178, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "a"], [179, 3, 1, "", "b"], [179, 2, 1, "", "from_dict"], [179, 2, 1, "", "from_json"], [179, 3, 1, "", "sigma"], [179, 2, 1, "", "to_dict"], [179, 2, 1, "", "to_gpytorch"], [179, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[179, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[179, 4, 1, "", "string"]], "baybe.recommenders": [[181, 0, 0, "-", "base"], [183, 0, 0, "-", "meta"], [191, 0, 0, "-", "naive"], [193, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[182, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[182, 4, 1, "", "batch_size"], [182, 4, 1, "", "measurements"], [182, 4, 1, "", "objective"], [182, 4, 1, "", "pending_experiments"], [182, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[184, 0, 0, "-", "base"], [186, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[185, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[187, 1, 1, "", "BaseSequentialMetaRecommender"], [188, 1, 1, "", "SequentialMetaRecommender"], [189, 1, 1, "", "StreamingSequentialMetaRecommender"], [190, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_json"], [187, 2, 1, "", "get_current_recommender"], [187, 2, 1, "", "get_next_recommender"], [187, 2, 1, "", "get_non_meta_recommender"], [187, 6, 1, "", "is_stateful"], [187, 2, 1, "", "recommend"], [187, 2, 1, "", "select_recommender"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[187, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[187, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_json"], [188, 2, 1, "", "get_current_recommender"], [188, 2, 1, "", "get_next_recommender"], [188, 2, 1, "", "get_non_meta_recommender"], [188, 6, 1, "", "is_stateful"], [188, 3, 1, "", "mode"], [188, 2, 1, "", "recommend"], [188, 3, 1, "", "recommenders"], [188, 2, 1, "", "select_recommender"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[188, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[188, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_json"], [189, 2, 1, "", "get_current_recommender"], [189, 2, 1, "", "get_next_recommender"], [189, 2, 1, "", "get_non_meta_recommender"], [189, 6, 1, "", "is_stateful"], [189, 2, 1, "", "recommend"], [189, 3, 1, "", "recommenders"], [189, 2, 1, "", "select_recommender"], [189, 2, 1, "", "to_dict"], [189, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[189, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[189, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "from_dict"], [190, 2, 1, "", "from_json"], [190, 2, 1, "", "get_current_recommender"], [190, 2, 1, "", "get_next_recommender"], [190, 2, 1, "", "get_non_meta_recommender"], [190, 3, 1, "", "initial_recommender"], [190, 6, 1, "", "is_stateful"], [190, 2, 1, "", "recommend"], [190, 3, 1, "", "recommender"], [190, 3, 1, "", "remain_switched"], [190, 2, 1, "", "select_recommender"], [190, 3, 1, "", "switch_after"], [190, 2, 1, "", "to_dict"], [190, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[190, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[190, 4, 1, "", "string"]], "baybe.recommenders.naive": [[192, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 3, 1, "", "cont_recommender"], [192, 3, 1, "", "disc_recommender"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[194, 0, 0, "-", "base"], [196, 0, 0, "-", "bayesian"], [201, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[195, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[195, 2, 1, "", "__init__"], [195, 6, 1, "", "allow_recommending_already_measured"], [195, 6, 1, "", "allow_recommending_pending_experiments"], [195, 6, 1, "", "allow_repeated_recommendations"], [195, 3, 1, "", "compatibility"], [195, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[195, 4, 1, "", "batch_size"], [195, 4, 1, "", "measurements"], [195, 4, 1, "", "objective"], [195, 4, 1, "", "pending_experiments"], [195, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[197, 0, 0, "-", "base"], [199, 0, 0, "-", "botorch"]], "baybe.recommenders.pure.bayesian.base": [[198, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[198, 2, 1, "", "__init__"], [198, 3, 1, "", "acquisition_function"], [198, 2, 1, "", "acquisition_values"], [198, 6, 1, "", "allow_recommending_already_measured"], [198, 6, 1, "", "allow_recommending_pending_experiments"], [198, 6, 1, "", "allow_repeated_recommendations"], [198, 3, 1, "", "compatibility"], [198, 2, 1, "", "get_acquisition_function"], [198, 2, 1, "", "get_surrogate"], [198, 2, 1, "", "joint_acquisition_value"], [198, 2, 1, "", "recommend"], [198, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[198, 4, 1, "", "acquisition_function"], [198, 4, 1, "", "candidates"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[198, 4, 1, "", "batch_size"], [198, 4, 1, "", "measurements"], [198, 4, 1, "", "objective"], [198, 4, 1, "", "pending_experiments"], [198, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[200, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[200, 2, 1, "", "__init__"], [200, 3, 1, "", "acquisition_function"], [200, 2, 1, "", "acquisition_values"], [200, 6, 1, "", "allow_recommending_already_measured"], [200, 6, 1, "", "allow_recommending_pending_experiments"], [200, 6, 1, "", "allow_repeated_recommendations"], [200, 3, 1, "", "compatibility"], [200, 2, 1, "", "get_acquisition_function"], [200, 2, 1, "", "get_surrogate"], [200, 3, 1, "", "hybrid_sampler"], [200, 2, 1, "", "joint_acquisition_value"], [200, 3, 1, "", "max_n_subspaces"], [200, 3, 1, "", "n_raw_samples"], [200, 3, 1, "", "n_restarts"], [200, 2, 1, "", "recommend"], [200, 3, 1, "", "sampling_percentage"], [200, 3, 1, "", "sequential_continuous"], [200, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[200, 4, 1, "", "acquisition_function"], [200, 4, 1, "", "candidates"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[200, 4, 1, "", "batch_size"], [200, 4, 1, "", "measurements"], [200, 4, 1, "", "objective"], [200, 4, 1, "", "pending_experiments"], [200, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive": [[202, 0, 0, "-", "base"], [204, 0, 0, "-", "clustering"], [209, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[203, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[205, 1, 1, "", "GaussianMixtureClusteringRecommender"], [206, 1, 1, "", "KMeansClusteringRecommender"], [207, 1, 1, "", "PAMClusteringRecommender"], [208, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[207, 2, 1, "", "__init__"], [207, 6, 1, "", "allow_recommending_already_measured"], [207, 6, 1, "", "allow_recommending_pending_experiments"], [207, 6, 1, "", "allow_repeated_recommendations"], [207, 3, 1, "", "compatibility"], [207, 3, 1, "", "model_cluster_num_parameter_name"], [207, 3, 1, "", "model_params"], [207, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[207, 4, 1, "", "batch_size"], [207, 4, 1, "", "measurements"], [207, 4, 1, "", "objective"], [207, 4, 1, "", "pending_experiments"], [207, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[208, 2, 1, "", "__init__"], [208, 6, 1, "", "allow_recommending_already_measured"], [208, 6, 1, "", "allow_recommending_pending_experiments"], [208, 6, 1, "", "allow_repeated_recommendations"], [208, 3, 1, "", "compatibility"], [208, 3, 1, "", "model_cluster_num_parameter_name"], [208, 3, 1, "", "model_params"], [208, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[208, 4, 1, "", "batch_size"], [208, 4, 1, "", "measurements"], [208, 4, 1, "", "objective"], [208, 4, 1, "", "pending_experiments"], [208, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[210, 1, 1, "", "FPSInitialization"], [211, 1, 1, "", "FPSRecommender"], [212, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[210, 3, 1, "", "FARTHEST"], [210, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[211, 2, 1, "", "__init__"], [211, 6, 1, "", "allow_recommending_already_measured"], [211, 6, 1, "", "allow_recommending_pending_experiments"], [211, 6, 1, "", "allow_repeated_recommendations"], [211, 3, 1, "", "compatibility"], [211, 3, 1, "", "initialization"], [211, 3, 1, "", "random_tie_break"], [211, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[211, 4, 1, "", "batch_size"], [211, 4, 1, "", "measurements"], [211, 4, 1, "", "objective"], [211, 4, 1, "", "pending_experiments"], [211, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[212, 2, 1, "", "__init__"], [212, 6, 1, "", "allow_recommending_already_measured"], [212, 6, 1, "", "allow_recommending_pending_experiments"], [212, 6, 1, "", "allow_repeated_recommendations"], [212, 3, 1, "", "compatibility"], [212, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[212, 4, 1, "", "batch_size"], [212, 4, 1, "", "measurements"], [212, 4, 1, "", "objective"], [212, 4, 1, "", "pending_experiments"], [212, 4, 1, "", "searchspace"]], "baybe.searchspace": [[214, 0, 0, "-", "continuous"], [216, 0, 0, "-", "core"], [221, 0, 0, "-", "discrete"], [227, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[215, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[215, 2, 1, "", "__init__"], [215, 6, 1, "", "comp_rep_bounds"], [215, 6, 1, "", "comp_rep_columns"], [215, 6, 1, "", "constraints_cardinality"], [215, 3, 1, "", "constraints_lin_eq"], [215, 3, 1, "", "constraints_lin_ineq"], [215, 3, 1, "", "constraints_nonlin"], [215, 2, 1, "", "empty"], [215, 2, 1, "", "from_bounds"], [215, 2, 1, "", "from_dataframe"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "from_parameter"], [215, 2, 1, "", "from_product"], [215, 6, 1, "", "full_factorial"], [215, 2, 1, "", "get_parameters_by_name"], [215, 2, 1, "", "inactive_parameter_combinations"], [215, 6, 1, "", "is_empty"], [215, 6, 1, "", "n_inactive_parameter_combinations"], [215, 6, 1, "", "parameter_names"], [215, 6, 1, "", "parameter_names_in_cardinality_constraints"], [215, 3, 1, "", "parameters"], [215, 2, 1, "", "sample_from_full_factorial"], [215, 2, 1, "", "sample_uniform"], [215, 6, 1, "", "scaling_bounds"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"], [215, 2, 1, "", "to_searchspace"], [215, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[215, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[215, 4, 1, "", "df"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[215, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[215, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[215, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[215, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[215, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[215, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[217, 1, 1, "", "SearchSpace"], [218, 1, 1, "", "SearchSpaceType"], [219, 5, 1, "", "to_searchspace"], [220, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[217, 2, 1, "", "__init__"], [217, 6, 1, "", "comp_rep_bounds"], [217, 6, 1, "", "comp_rep_columns"], [217, 6, 1, "", "constraints"], [217, 6, 1, "", "constraints_augmentable"], [217, 3, 1, "", "continuous"], [217, 3, 1, "", "discrete"], [217, 2, 1, "", "estimate_product_space_size"], [217, 2, 1, "", "from_dataframe"], [217, 2, 1, "", "from_dict"], [217, 2, 1, "", "from_json"], [217, 2, 1, "", "from_parameter"], [217, 2, 1, "", "from_product"], [217, 2, 1, "", "get_comp_rep_parameter_indices"], [217, 2, 1, "", "get_parameters_by_name"], [217, 6, 1, "", "n_tasks"], [217, 6, 1, "", "parameter_names"], [217, 6, 1, "", "parameters"], [217, 6, 1, "", "scaling_bounds"], [217, 6, 1, "", "task_idx"], [217, 2, 1, "", "to_dict"], [217, 2, 1, "", "to_json"], [217, 2, 1, "", "transform"], [217, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[217, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[217, 4, 1, "", "df"], [217, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[217, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[217, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[217, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[217, 4, 1, "", "constraints"], [217, 4, 1, "", "empty_encoding"], [217, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[217, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[217, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[217, 4, 1, "", "allow_extra"], [217, 4, 1, "", "allow_missing"], [217, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[218, 3, 1, "", "CONTINUOUS"], [218, 3, 1, "", "DISCRETE"], [218, 3, 1, "", "EITHER"], [218, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[222, 1, 1, "", "MemorySize"], [223, 1, 1, "", "SubspaceDiscrete"], [224, 5, 1, "", "parameter_cartesian_prod_pandas"], [225, 5, 1, "", "parameter_cartesian_prod_polars"], [226, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[222, 2, 1, "", "__init__"], [222, 3, 1, "", "comp_rep_bytes"], [222, 6, 1, "", "comp_rep_human_readable"], [222, 3, 1, "", "comp_rep_shape"], [222, 3, 1, "", "exp_rep_bytes"], [222, 6, 1, "", "exp_rep_human_readable"], [222, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[223, 2, 1, "", "__init__"], [223, 3, 1, "", "comp_rep"], [223, 6, 1, "", "comp_rep_bounds"], [223, 6, 1, "", "comp_rep_columns"], [223, 3, 1, "", "constraints"], [223, 2, 1, "", "empty"], [223, 3, 1, "", "empty_encoding"], [223, 2, 1, "", "estimate_product_space_size"], [223, 3, 1, "", "exp_rep"], [223, 2, 1, "", "from_dataframe"], [223, 2, 1, "", "from_dict"], [223, 2, 1, "", "from_json"], [223, 2, 1, "", "from_parameter"], [223, 2, 1, "", "from_product"], [223, 2, 1, "", "from_simplex"], [223, 2, 1, "", "get_candidates"], [223, 2, 1, "", "get_parameters_by_name"], [223, 6, 1, "", "is_empty"], [223, 6, 1, "", "metadata"], [223, 6, 1, "", "parameter_names"], [223, 3, 1, "", "parameters"], [223, 6, 1, "", "scaling_bounds"], [223, 2, 1, "", "to_dict"], [223, 2, 1, "", "to_json"], [223, 2, 1, "", "to_searchspace"], [223, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[223, 4, 1, "", "df"], [223, 4, 1, "", "empty_encoding"], [223, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[223, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[223, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[223, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[223, 4, 1, "", "boundary_only"], [223, 4, 1, "", "constraints"], [223, 4, 1, "", "max_nonzero"], [223, 4, 1, "", "max_sum"], [223, 4, 1, "", "min_nonzero"], [223, 4, 1, "", "product_parameters"], [223, 4, 1, "", "simplex_parameters"], [223, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[223, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[224, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[225, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[228, 5, 1, "", "get_transform_parameters"], [229, 5, 1, "", "validate_parameter_names"], [230, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[232, 0, 0, "-", "core"], [239, 0, 0, "-", "mixin"], [241, 0, 0, "-", "utils"]], "baybe.serialization.core": [[233, 5, 1, "", "block_deserialization_hook"], [234, 5, 1, "", "block_serialization_hook"], [235, 8, 1, "", "converter"], [236, 5, 1, "", "get_base_structure_hook"], [237, 5, 1, "", "select_constructor_hook"], [238, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[236, 4, 1, "", "base"], [236, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[238, 4, 1, "", "base"], [238, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[240, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[240, 4, 1, "", "string"]], "baybe.serialization.utils": [[242, 5, 1, "", "deserialize_dataframe"], [243, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[245, 0, 0, "-", "core"], [247, 0, 0, "-", "lookup"], [249, 0, 0, "-", "scenarios"], [251, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[246, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[246, 4, 1, "", "batch_size"], [246, 4, 1, "", "campaign"], [246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "initial_data"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "n_doe_iterations"], [246, 4, 1, "", "noise_percent"], [246, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[248, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "queries"], [248, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[250, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "groupby"], [250, 4, 1, "", "impute_mode"], [250, 4, 1, "", "initial_data"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "n_mc_iterations"], [250, 4, 1, "", "noise_percent"], [250, 4, 1, "", "parallel_runs"], [250, 4, 1, "", "random_seed"], [250, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[252, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[252, 4, 1, "", "batch_size"], [252, 4, 1, "", "campaign"], [252, 4, 1, "", "groupby"], [252, 4, 1, "", "lookup"], [252, 4, 1, "", "n_doe_iterations"], [252, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[254, 0, 0, "-", "bandit"], [256, 0, 0, "-", "base"], [261, 0, 0, "-", "composite"], [263, 0, 0, "-", "custom"], [266, 0, 0, "-", "gaussian_process"], [281, 0, 0, "-", "linear"], [283, 0, 0, "-", "naive"], [285, 0, 0, "-", "ngboost"], [287, 0, 0, "-", "random_forest"], [289, 0, 0, "-", "utils"], [293, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[255, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_means"], [255, 2, 1, "", "posterior_modes"], [255, 2, 1, "", "posterior_stats"], [255, 3, 1, "", "prior"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base": [[257, 1, 1, "", "IndependentGaussianSurrogate"], [258, 8, 1, "", "PosteriorStatistic"], [259, 1, 1, "", "Surrogate"], [260, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 2, 1, "", "posterior"], [259, 2, 1, "", "posterior_stats"], [259, 2, 1, "", "replicate"], [259, 3, 1, "", "supports_multi_output"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[259, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[259, 4, 1, "", "candidates"], [259, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[262, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 2, 1, "", "from_replication"], [262, 2, 1, "", "posterior"], [262, 2, 1, "", "posterior_stats"], [262, 3, 1, "", "surrogates"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.custom": [[264, 1, 1, "", "CustomONNXSurrogate"], [265, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "onnx_input_name"], [264, 3, 1, "", "onnx_str"], [264, 2, 1, "", "posterior"], [264, 2, 1, "", "posterior_stats"], [264, 2, 1, "", "replicate"], [264, 3, 1, "", "supports_multi_output"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"], [264, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[264, 4, 1, "", "candidates"], [264, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[264, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[267, 0, 0, "-", "core"], [269, 0, 0, "-", "kernel_factory"], [273, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[268, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "fit"], [268, 2, 1, "", "from_dict"], [268, 2, 1, "", "from_json"], [268, 2, 1, "", "from_preset"], [268, 3, 1, "", "kernel_factory"], [268, 2, 1, "", "posterior"], [268, 2, 1, "", "posterior_stats"], [268, 2, 1, "", "replicate"], [268, 3, 1, "", "supports_multi_output"], [268, 3, 1, "", "supports_transfer_learning"], [268, 2, 1, "", "to_botorch"], [268, 2, 1, "", "to_dict"], [268, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[268, 4, 1, "", "measurements"], [268, 4, 1, "", "objective"], [268, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[268, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[268, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[268, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[268, 4, 1, "", "candidates"], [268, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[270, 1, 1, "", "KernelFactory"], [271, 1, 1, "", "PlainKernelFactory"], [272, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[270, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[271, 2, 1, "", "__init__"], [271, 2, 1, "", "from_dict"], [271, 2, 1, "", "from_json"], [271, 3, 1, "", "kernel"], [271, 2, 1, "", "to_dict"], [271, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[271, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[271, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[274, 0, 0, "-", "core"], [277, 0, 0, "-", "default"], [279, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[275, 1, 1, "", "GaussianProcessPreset"], [276, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[275, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[278, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[278, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[280, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[280, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[282, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 3, 1, "", "model_params"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[284, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[286, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[286, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[288, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[288, 2, 1, "", "__init__"], [288, 2, 1, "", "fit"], [288, 2, 1, "", "from_dict"], [288, 2, 1, "", "from_json"], [288, 3, 1, "", "model_params"], [288, 2, 1, "", "posterior"], [288, 2, 1, "", "posterior_stats"], [288, 2, 1, "", "replicate"], [288, 3, 1, "", "supports_multi_output"], [288, 3, 1, "", "supports_transfer_learning"], [288, 2, 1, "", "to_botorch"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[288, 4, 1, "", "measurements"], [288, 4, 1, "", "objective"], [288, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[288, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[288, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[288, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[288, 4, 1, "", "candidates"], [288, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[290, 5, 1, "", "batchify_ensemble_predictor"], [291, 5, 1, "", "batchify_mean_var_prediction"], [292, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[290, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[292, 4, 1, "", "cls"], [292, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[294, 5, 1, "", "make_dict_validator"], [295, 8, 1, "", "type_validation_converter"], [296, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[294, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[296, 4, 1, "", "model_cls"]], "baybe.targets": [[298, 0, 0, "-", "base"], [300, 0, 0, "-", "binary"], [303, 0, 0, "-", "botorch"], [305, 0, 0, "-", "enum"], [306, 0, 0, "-", "numerical"], [308, 0, 0, "-", "transforms"]], "baybe.targets.base": [[299, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[299, 2, 1, "", "__init__"], [299, 6, 1, "", "description"], [299, 2, 1, "", "from_dict"], [299, 2, 1, "", "from_json"], [299, 3, 1, "", "metadata"], [299, 3, 1, "", "name"], [299, 2, 1, "", "summary"], [299, 2, 1, "", "to_dict"], [299, 2, 1, "", "to_json"], [299, 2, 1, "", "to_objective"], [299, 2, 1, "", "transform"], [299, 6, 1, "", "unit"]], "baybe.targets.base.Target.from_dict.params": [[299, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[299, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[299, 4, 1, "", "series"]], "baybe.targets.binary": [[301, 1, 1, "", "BinaryTarget"], [302, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[301, 2, 1, "", "__init__"], [301, 6, 1, "", "description"], [301, 3, 1, "", "failure_value"], [301, 2, 1, "", "from_dict"], [301, 2, 1, "", "from_json"], [301, 3, 1, "", "metadata"], [301, 3, 1, "", "name"], [301, 3, 1, "", "success_value"], [301, 2, 1, "", "summary"], [301, 2, 1, "", "to_dict"], [301, 2, 1, "", "to_json"], [301, 2, 1, "", "to_objective"], [301, 2, 1, "", "transform"], [301, 6, 1, "", "unit"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[301, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[301, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[301, 4, 1, "", "series"]], "baybe.targets.botorch": [[304, 1, 1, "", "AffinePosteriorTransform"]], "baybe.targets.botorch.AffinePosteriorTransform": [[304, 2, 1, "", "__init__"], [304, 2, 1, "", "add_module"], [304, 2, 1, "", "apply"], [304, 2, 1, "", "bfloat16"], [304, 2, 1, "", "buffers"], [304, 2, 1, "", "children"], [304, 2, 1, "", "compile"], [304, 2, 1, "", "cpu"], [304, 2, 1, "", "cuda"], [304, 2, 1, "", "double"], [304, 2, 1, "", "eval"], [304, 2, 1, "", "evaluate"], [304, 2, 1, "", "extra_repr"], [304, 2, 1, "", "float"], [304, 2, 1, "", "forward"], [304, 2, 1, "", "get_buffer"], [304, 2, 1, "", "get_extra_state"], [304, 2, 1, "", "get_parameter"], [304, 2, 1, "", "get_submodule"], [304, 2, 1, "", "half"], [304, 2, 1, "", "ipu"], [304, 2, 1, "", "modules"], [304, 2, 1, "", "mtia"], [304, 2, 1, "", "named_buffers"], [304, 2, 1, "", "named_children"], [304, 2, 1, "", "named_modules"], [304, 2, 1, "", "named_parameters"], [304, 2, 1, "", "parameters"], [304, 2, 1, "", "register_backward_hook"], [304, 2, 1, "", "register_buffer"], [304, 2, 1, "", "register_forward_hook"], [304, 2, 1, "", "register_forward_pre_hook"], [304, 2, 1, "", "register_full_backward_hook"], [304, 2, 1, "", "register_full_backward_pre_hook"], [304, 2, 1, "", "register_load_state_dict_post_hook"], [304, 2, 1, "", "register_load_state_dict_pre_hook"], [304, 2, 1, "", "register_module"], [304, 2, 1, "", "register_parameter"], [304, 2, 1, "", "register_state_dict_post_hook"], [304, 2, 1, "", "register_state_dict_pre_hook"], [304, 2, 1, "", "requires_grad_"], [304, 2, 1, "", "set_extra_state"], [304, 2, 1, "", "set_submodule"], [304, 2, 1, "", "share_memory"], [304, 2, 1, "", "state_dict"], [304, 2, 1, "", "to"], [304, 2, 1, "", "to_empty"], [304, 2, 1, "", "train"], [304, 2, 1, "", "type"], [304, 2, 1, "", "xpu"], [304, 2, 1, "", "zero_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.add_module.params": [[304, 4, 1, "", "module"], [304, 4, 1, "", "name"]], "baybe.targets.botorch.AffinePosteriorTransform.apply.params": [[304, 4, 1, "", "fn"]], "baybe.targets.botorch.AffinePosteriorTransform.buffers.params": [[304, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.cuda.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.evaluate.params": [[304, 4, 1, "", "Y"]], "baybe.targets.botorch.AffinePosteriorTransform.forward.params": [[304, 4, 1, "", "posterior"]], "baybe.targets.botorch.AffinePosteriorTransform.get_buffer.params": [[304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_parameter.params": [[304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.get_submodule.params": [[304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.ipu.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.mtia.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.named_buffers.params": [[304, 4, 1, "", "prefix"], [304, 4, 1, "", "recurse"], [304, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_modules.params": [[304, 4, 1, "", "memo"], [304, 4, 1, "", "prefix"], [304, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.named_parameters.params": [[304, 4, 1, "", "prefix"], [304, 4, 1, "", "recurse"], [304, 4, 1, "", "remove_duplicate"]], "baybe.targets.botorch.AffinePosteriorTransform.parameters.params": [[304, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.register_buffer.params": [[304, 4, 1, "", "name"], [304, 4, 1, "", "persistent"], [304, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_hook.params": [[304, 4, 1, "", "always_call"], [304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"], [304, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_forward_pre_hook.params": [[304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"], [304, 4, 1, "", "with_kwargs"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_hook.params": [[304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_full_backward_pre_hook.params": [[304, 4, 1, "", "hook"], [304, 4, 1, "", "prepend"]], "baybe.targets.botorch.AffinePosteriorTransform.register_load_state_dict_pre_hook.params": [[304, 4, 1, "", "hook"]], "baybe.targets.botorch.AffinePosteriorTransform.register_parameter.params": [[304, 4, 1, "", "name"], [304, 4, 1, "", "param"]], "baybe.targets.botorch.AffinePosteriorTransform.requires_grad_.params": [[304, 4, 1, "", "requires_grad"]], "baybe.targets.botorch.AffinePosteriorTransform.set_extra_state.params": [[304, 4, 1, "", "state"]], "baybe.targets.botorch.AffinePosteriorTransform.set_submodule.params": [[304, 4, 1, "", "module"], [304, 4, 1, "", "strict"], [304, 4, 1, "", "target"]], "baybe.targets.botorch.AffinePosteriorTransform.state_dict.params": [[304, 4, 1, "", "destination"], [304, 4, 1, "", "keep_vars"], [304, 4, 1, "", "prefix"]], "baybe.targets.botorch.AffinePosteriorTransform.to.params": [[304, 4, 1, "", "device"], [304, 4, 1, "", "dtype"], [304, 4, 1, "", "memory_format"], [304, 4, 1, "", "tensor"]], "baybe.targets.botorch.AffinePosteriorTransform.to_empty.params": [[304, 4, 1, "", "device"], [304, 4, 1, "", "recurse"]], "baybe.targets.botorch.AffinePosteriorTransform.train.params": [[304, 4, 1, "", "mode"]], "baybe.targets.botorch.AffinePosteriorTransform.type.params": [[304, 4, 1, "", "dst_type"]], "baybe.targets.botorch.AffinePosteriorTransform.xpu.params": [[304, 4, 1, "", "device"]], "baybe.targets.botorch.AffinePosteriorTransform.zero_grad.params": [[304, 4, 1, "", "set_to_none"]], "baybe.targets.numerical": [[307, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[307, 2, 1, "", "__init__"], [307, 2, 1, "", "abs"], [307, 2, 1, "", "clamp"], [307, 6, 1, "", "description"], [307, 2, 1, "", "exp"], [307, 2, 1, "", "from_dict"], [307, 2, 1, "", "from_json"], [307, 2, 1, "", "from_legacy_interface"], [307, 2, 1, "", "from_modern_interface"], [307, 2, 1, "", "get_codomain"], [307, 2, 1, "", "get_image"], [307, 6, 1, "", "is_normalized"], [307, 2, 1, "", "log"], [307, 2, 1, "", "match_absolute"], [307, 2, 1, "", "match_bell"], [307, 2, 1, "", "match_power"], [307, 2, 1, "", "match_quadratic"], [307, 2, 1, "", "match_triangular"], [307, 3, 1, "", "metadata"], [307, 3, 1, "", "minimize"], [307, 3, 1, "", "name"], [307, 2, 1, "", "negate"], [307, 2, 1, "", "normalize"], [307, 2, 1, "", "normalized_ramp"], [307, 2, 1, "", "normalized_sigmoid"], [307, 2, 1, "", "power"], [307, 2, 1, "", "summary"], [307, 2, 1, "", "to_dict"], [307, 2, 1, "", "to_json"], [307, 2, 1, "", "to_objective"], [307, 2, 1, "", "transform"], [307, 3, 1, "", "transformation"], [307, 6, 1, "", "unit"]], "baybe.targets.numerical.NumericalTarget.clamp.params": [[307, 4, 1, "", "max"], [307, 4, 1, "", "min"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[307, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[307, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.from_legacy_interface.params": [[307, 4, 1, "", "bounds"], [307, 4, 1, "", "metadata"], [307, 4, 1, "", "mode"], [307, 4, 1, "", "name"], [307, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_modern_interface.params": [[307, 4, 1, "", "metadata"], [307, 4, 1, "", "minimize"], [307, 4, 1, "", "name"], [307, 4, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.match_absolute.params": [[307, 4, 1, "", "match_value"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_bell.params": [[307, 4, 1, "", "match_value"], [307, 4, 1, "", "name"], [307, 4, 1, "", "sigma"]], "baybe.targets.numerical.NumericalTarget.match_power.params": [[307, 4, 1, "", "exponent"], [307, 4, 1, "", "match_value"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_quadratic.params": [[307, 4, 1, "", "match_value"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.match_triangular.params": [[307, 4, 1, "", "cutoffs"], [307, 4, 1, "", "margins"], [307, 4, 1, "", "match_value"], [307, 4, 1, "", "name"], [307, 4, 1, "", "width"]], "baybe.targets.numerical.NumericalTarget.normalized_ramp.params": [[307, 4, 1, "", "cutoffs"], [307, 4, 1, "", "descending"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.normalized_sigmoid.params": [[307, 4, 1, "", "anchors"], [307, 4, 1, "", "name"]], "baybe.targets.numerical.NumericalTarget.power.params": [[307, 4, 1, "", "exponent"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[307, 4, 1, "", "series"]], "baybe.transformations": [[310, 0, 0, "-", "base"], [313, 0, 0, "-", "basic"], [326, 0, 0, "-", "composite"], [330, 0, 0, "-", "utils"]], "baybe.transformations.base": [[311, 1, 1, "", "MonotonicTransformation"], [312, 1, 1, "", "Transformation"]], "baybe.transformations.base.MonotonicTransformation": [[311, 2, 1, "", "__init__"], [311, 2, 1, "", "abs"], [311, 2, 1, "", "chain"], [311, 2, 1, "", "clamp"], [311, 2, 1, "", "from_dict"], [311, 2, 1, "", "from_json"], [311, 2, 1, "", "get_codomain"], [311, 2, 1, "", "get_image"], [311, 2, 1, "", "negate"], [311, 2, 1, "", "to_botorch_objective"], [311, 2, 1, "", "to_dict"], [311, 2, 1, "", "to_json"]], "baybe.transformations.base.MonotonicTransformation.from_dict.params": [[311, 4, 1, "", "dictionary"]], "baybe.transformations.base.MonotonicTransformation.from_json.params": [[311, 4, 1, "", "string"]], "baybe.transformations.base.Transformation": [[312, 2, 1, "", "__init__"], [312, 2, 1, "", "abs"], [312, 2, 1, "", "chain"], [312, 2, 1, "", "clamp"], [312, 2, 1, "", "from_dict"], [312, 2, 1, "", "from_json"], [312, 2, 1, "", "get_codomain"], [312, 2, 1, "", "get_image"], [312, 2, 1, "", "negate"], [312, 2, 1, "", "to_botorch_objective"], [312, 2, 1, "", "to_dict"], [312, 2, 1, "", "to_json"]], "baybe.transformations.base.Transformation.from_dict.params": [[312, 4, 1, "", "dictionary"]], "baybe.transformations.base.Transformation.from_json.params": [[312, 4, 1, "", "string"]], "baybe.transformations.basic": [[314, 1, 1, "", "AbsoluteTransformation"], [315, 1, 1, "", "AffineTransformation"], [316, 1, 1, "", "BellTransformation"], [317, 1, 1, "", "ClampingTransformation"], [318, 1, 1, "", "CustomTransformation"], [319, 1, 1, "", "ExponentialTransformation"], [320, 1, 1, "", "IdentityTransformation"], [321, 1, 1, "", "LogarithmicTransformation"], [322, 1, 1, "", "PowerTransformation"], [323, 1, 1, "", "SigmoidTransformation"], [324, 1, 1, "", "TriangularTransformation"], [325, 1, 1, "", "TwoSidedAffineTransformation"]], "baybe.transformations.basic.AbsoluteTransformation": [[314, 2, 1, "", "__init__"], [314, 2, 1, "", "abs"], [314, 2, 1, "", "chain"], [314, 2, 1, "", "clamp"], [314, 2, 1, "", "from_dict"], [314, 2, 1, "", "from_json"], [314, 2, 1, "", "get_codomain"], [314, 2, 1, "", "get_image"], [314, 2, 1, "", "negate"], [314, 2, 1, "", "to_botorch_objective"], [314, 2, 1, "", "to_dict"], [314, 2, 1, "", "to_json"]], "baybe.transformations.basic.AbsoluteTransformation.from_dict.params": [[314, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AbsoluteTransformation.from_json.params": [[314, 4, 1, "", "string"]], "baybe.transformations.basic.AffineTransformation": [[315, 2, 1, "", "__init__"], [315, 2, 1, "", "abs"], [315, 2, 1, "", "chain"], [315, 2, 1, "", "clamp"], [315, 3, 1, "", "factor"], [315, 2, 1, "", "from_dict"], [315, 2, 1, "", "from_json"], [315, 2, 1, "", "from_points_mapped_to_unit_interval_bounds"], [315, 2, 1, "", "get_codomain"], [315, 2, 1, "", "get_image"], [315, 2, 1, "", "negate"], [315, 3, 1, "", "shift"], [315, 2, 1, "", "to_botorch_objective"], [315, 2, 1, "", "to_botorch_posterior_transform"], [315, 2, 1, "", "to_dict"], [315, 2, 1, "", "to_json"]], "baybe.transformations.basic.AffineTransformation.from_dict.params": [[315, 4, 1, "", "dictionary"]], "baybe.transformations.basic.AffineTransformation.from_json.params": [[315, 4, 1, "", "string"]], "baybe.transformations.basic.AffineTransformation.from_points_mapped_to_unit_interval_bounds.params": [[315, 4, 1, "", "mapped_to_one"], [315, 4, 1, "", "mapped_to_zero"]], "baybe.transformations.basic.BellTransformation": [[316, 2, 1, "", "__init__"], [316, 2, 1, "", "abs"], [316, 3, 1, "", "center"], [316, 2, 1, "", "chain"], [316, 2, 1, "", "clamp"], [316, 2, 1, "", "from_dict"], [316, 2, 1, "", "from_json"], [316, 2, 1, "", "get_codomain"], [316, 2, 1, "", "get_image"], [316, 2, 1, "", "negate"], [316, 3, 1, "", "sigma"], [316, 2, 1, "", "to_botorch_objective"], [316, 2, 1, "", "to_dict"], [316, 2, 1, "", "to_json"]], "baybe.transformations.basic.BellTransformation.from_dict.params": [[316, 4, 1, "", "dictionary"]], "baybe.transformations.basic.BellTransformation.from_json.params": [[316, 4, 1, "", "string"]], "baybe.transformations.basic.ClampingTransformation": [[317, 2, 1, "", "__init__"], [317, 2, 1, "", "abs"], [317, 3, 1, "", "bounds"], [317, 2, 1, "", "chain"], [317, 2, 1, "", "clamp"], [317, 2, 1, "", "from_dict"], [317, 2, 1, "", "from_json"], [317, 2, 1, "", "get_codomain"], [317, 2, 1, "", "get_image"], [317, 2, 1, "", "negate"], [317, 2, 1, "", "to_botorch_objective"], [317, 2, 1, "", "to_dict"], [317, 2, 1, "", "to_json"]], "baybe.transformations.basic.ClampingTransformation.from_dict.params": [[317, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ClampingTransformation.from_json.params": [[317, 4, 1, "", "string"]], "baybe.transformations.basic.CustomTransformation": [[318, 2, 1, "", "__init__"], [318, 2, 1, "", "abs"], [318, 2, 1, "", "chain"], [318, 2, 1, "", "clamp"], [318, 2, 1, "", "from_dict"], [318, 2, 1, "", "from_json"], [318, 3, 1, "", "function"], [318, 2, 1, "", "get_codomain"], [318, 2, 1, "", "get_image"], [318, 2, 1, "", "negate"], [318, 2, 1, "", "to_botorch_objective"], [318, 2, 1, "", "to_dict"], [318, 2, 1, "", "to_json"]], "baybe.transformations.basic.CustomTransformation.from_dict.params": [[318, 4, 1, "", "dictionary"]], "baybe.transformations.basic.CustomTransformation.from_json.params": [[318, 4, 1, "", "string"]], "baybe.transformations.basic.ExponentialTransformation": [[319, 2, 1, "", "__init__"], [319, 2, 1, "", "abs"], [319, 2, 1, "", "chain"], [319, 2, 1, "", "clamp"], [319, 2, 1, "", "from_dict"], [319, 2, 1, "", "from_json"], [319, 2, 1, "", "get_codomain"], [319, 2, 1, "", "get_image"], [319, 2, 1, "", "negate"], [319, 2, 1, "", "to_botorch_objective"], [319, 2, 1, "", "to_dict"], [319, 2, 1, "", "to_json"]], "baybe.transformations.basic.ExponentialTransformation.from_dict.params": [[319, 4, 1, "", "dictionary"]], "baybe.transformations.basic.ExponentialTransformation.from_json.params": [[319, 4, 1, "", "string"]], "baybe.transformations.basic.IdentityTransformation": [[320, 2, 1, "", "__init__"], [320, 2, 1, "", "abs"], [320, 2, 1, "", "chain"], [320, 2, 1, "", "clamp"], [320, 2, 1, "", "from_dict"], [320, 2, 1, "", "from_json"], [320, 2, 1, "", "get_codomain"], [320, 2, 1, "", "get_image"], [320, 2, 1, "", "negate"], [320, 2, 1, "", "to_botorch_objective"], [320, 2, 1, "", "to_botorch_posterior_transform"], [320, 2, 1, "", "to_dict"], [320, 2, 1, "", "to_json"]], "baybe.transformations.basic.IdentityTransformation.from_dict.params": [[320, 4, 1, "", "dictionary"]], "baybe.transformations.basic.IdentityTransformation.from_json.params": [[320, 4, 1, "", "string"]], "baybe.transformations.basic.LogarithmicTransformation": [[321, 2, 1, "", "__init__"], [321, 2, 1, "", "abs"], [321, 2, 1, "", "chain"], [321, 2, 1, "", "clamp"], [321, 2, 1, "", "from_dict"], [321, 2, 1, "", "from_json"], [321, 2, 1, "", "get_codomain"], [321, 2, 1, "", "get_image"], [321, 2, 1, "", "negate"], [321, 2, 1, "", "to_botorch_objective"], [321, 2, 1, "", "to_dict"], [321, 2, 1, "", "to_json"]], "baybe.transformations.basic.LogarithmicTransformation.from_dict.params": [[321, 4, 1, "", "dictionary"]], "baybe.transformations.basic.LogarithmicTransformation.from_json.params": [[321, 4, 1, "", "string"]], "baybe.transformations.basic.PowerTransformation": [[322, 2, 1, "", "__init__"], [322, 2, 1, "", "abs"], [322, 2, 1, "", "chain"], [322, 2, 1, "", "clamp"], [322, 3, 1, "", "exponent"], [322, 2, 1, "", "from_dict"], [322, 2, 1, "", "from_json"], [322, 2, 1, "", "get_codomain"], [322, 2, 1, "", "get_image"], [322, 2, 1, "", "negate"], [322, 2, 1, "", "to_botorch_objective"], [322, 2, 1, "", "to_dict"], [322, 2, 1, "", "to_json"]], "baybe.transformations.basic.PowerTransformation.from_dict.params": [[322, 4, 1, "", "dictionary"]], "baybe.transformations.basic.PowerTransformation.from_json.params": [[322, 4, 1, "", "string"]], "baybe.transformations.basic.SigmoidTransformation": [[323, 2, 1, "", "__init__"], [323, 2, 1, "", "abs"], [323, 3, 1, "", "center"], [323, 2, 1, "", "chain"], [323, 2, 1, "", "clamp"], [323, 2, 1, "", "from_anchors"], [323, 2, 1, "", "from_dict"], [323, 2, 1, "", "from_json"], [323, 2, 1, "", "get_codomain"], [323, 2, 1, "", "get_image"], [323, 2, 1, "", "negate"], [323, 3, 1, "", "steepness"], [323, 2, 1, "", "to_botorch_objective"], [323, 2, 1, "", "to_dict"], [323, 2, 1, "", "to_json"]], "baybe.transformations.basic.SigmoidTransformation.from_anchors.params": [[323, 4, 1, "", "anchors"]], "baybe.transformations.basic.SigmoidTransformation.from_dict.params": [[323, 4, 1, "", "dictionary"]], "baybe.transformations.basic.SigmoidTransformation.from_json.params": [[323, 4, 1, "", "string"]], "baybe.transformations.basic.TriangularTransformation": [[324, 2, 1, "", "__init__"], [324, 2, 1, "", "abs"], [324, 2, 1, "", "chain"], [324, 2, 1, "", "clamp"], [324, 3, 1, "", "cutoffs"], [324, 2, 1, "", "from_dict"], [324, 2, 1, "", "from_json"], [324, 2, 1, "", "from_margins"], [324, 2, 1, "", "from_width"], [324, 2, 1, "", "get_codomain"], [324, 2, 1, "", "get_image"], [324, 6, 1, "", "margins"], [324, 2, 1, "", "negate"], [324, 3, 1, "", "peak"], [324, 2, 1, "", "to_botorch_objective"], [324, 2, 1, "", "to_dict"], [324, 2, 1, "", "to_json"]], "baybe.transformations.basic.TriangularTransformation.from_dict.params": [[324, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TriangularTransformation.from_json.params": [[324, 4, 1, "", "string"]], "baybe.transformations.basic.TwoSidedAffineTransformation": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "abs"], [325, 2, 1, "", "chain"], [325, 2, 1, "", "clamp"], [325, 2, 1, "", "from_dict"], [325, 2, 1, "", "from_json"], [325, 2, 1, "", "get_codomain"], [325, 2, 1, "", "get_image"], [325, 3, 1, "", "midpoint"], [325, 2, 1, "", "negate"], [325, 3, 1, "", "slope_left"], [325, 3, 1, "", "slope_right"], [325, 2, 1, "", "to_botorch_objective"], [325, 2, 1, "", "to_dict"], [325, 2, 1, "", "to_json"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_dict.params": [[325, 4, 1, "", "dictionary"]], "baybe.transformations.basic.TwoSidedAffineTransformation.from_json.params": [[325, 4, 1, "", "string"]], "baybe.transformations.composite": [[327, 1, 1, "", "AdditiveTransformation"], [328, 1, 1, "", "ChainedTransformation"], [329, 1, 1, "", "MultiplicativeTransformation"]], "baybe.transformations.composite.AdditiveTransformation": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "abs"], [327, 2, 1, "", "chain"], [327, 2, 1, "", "clamp"], [327, 2, 1, "", "from_dict"], [327, 2, 1, "", "from_json"], [327, 2, 1, "", "get_codomain"], [327, 2, 1, "", "get_image"], [327, 2, 1, "", "negate"], [327, 2, 1, "", "to_botorch_objective"], [327, 2, 1, "", "to_dict"], [327, 2, 1, "", "to_json"], [327, 3, 1, "", "transformations"]], "baybe.transformations.composite.AdditiveTransformation.from_dict.params": [[327, 4, 1, "", "dictionary"]], "baybe.transformations.composite.AdditiveTransformation.from_json.params": [[327, 4, 1, "", "string"]], "baybe.transformations.composite.ChainedTransformation": [[328, 2, 1, "", "__init__"], [328, 2, 1, "", "abs"], [328, 2, 1, "", "chain"], [328, 2, 1, "", "clamp"], [328, 2, 1, "", "from_dict"], [328, 2, 1, "", "from_json"], [328, 2, 1, "", "get_codomain"], [328, 2, 1, "", "get_image"], [328, 2, 1, "", "negate"], [328, 2, 1, "", "to_botorch_objective"], [328, 2, 1, "", "to_dict"], [328, 2, 1, "", "to_json"], [328, 3, 1, "", "transformations"]], "baybe.transformations.composite.ChainedTransformation.from_dict.params": [[328, 4, 1, "", "dictionary"]], "baybe.transformations.composite.ChainedTransformation.from_json.params": [[328, 4, 1, "", "string"]], "baybe.transformations.composite.MultiplicativeTransformation": [[329, 2, 1, "", "__init__"], [329, 2, 1, "", "abs"], [329, 2, 1, "", "chain"], [329, 2, 1, "", "clamp"], [329, 2, 1, "", "from_dict"], [329, 2, 1, "", "from_json"], [329, 2, 1, "", "get_codomain"], [329, 2, 1, "", "get_image"], [329, 2, 1, "", "negate"], [329, 2, 1, "", "to_botorch_objective"], [329, 2, 1, "", "to_dict"], [329, 2, 1, "", "to_json"], [329, 3, 1, "", "transformations"]], "baybe.transformations.composite.MultiplicativeTransformation.from_dict.params": [[329, 4, 1, "", "dictionary"]], "baybe.transformations.composite.MultiplicativeTransformation.from_json.params": [[329, 4, 1, "", "string"]], "baybe.transformations.utils": [[331, 5, 1, "", "combine_affine_transformations"], [332, 5, 1, "", "compress_transformations"], [333, 5, 1, "", "convert_transformation"]], "baybe.transformations.utils.compress_transformations.params": [[332, 4, 1, "", "transformations"]], "baybe.utils": [[335, 0, 0, "-", "augmentation"], [338, 0, 0, "-", "basic"], [357, 0, 0, "-", "boolean"], [361, 0, 0, "-", "chemistry"], [366, 0, 0, "-", "clustering_algorithms"], [370, 0, 0, "-", "conversion"], [374, 0, 0, "-", "dataframe"], [391, 0, 0, "-", "interval"], [396, 0, 0, "-", "memory"], [398, 0, 0, "-", "metadata"], [402, 0, 0, "-", "numerical"], [408, 0, 0, "-", "random"], [411, 0, 0, "-", "sampling_algorithms"], [415, 0, 0, "-", "scaling"], [417, 0, 0, "-", "torch"], [420, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[336, 5, 1, "", "df_apply_dependency_augmentation"], [337, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[336, 4, 1, "", "affected"], [336, 4, 1, "", "causing"], [336, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[337, 4, 1, "", "column_groups"], [337, 4, 1, "", "df"]], "baybe.utils.basic": [[339, 1, 1, "", "Dummy"], [340, 8, 1, "", "UNSPECIFIED"], [341, 1, 1, "", "UncertainBool"], [342, 1, 1, "", "UnspecifiedType"], [343, 1, 1, "", "classproperty"], [344, 5, 1, "", "compose"], [345, 5, 1, "", "compose_two"], [346, 5, 1, "", "convert_to_float"], [347, 5, 1, "", "find_subclass"], [348, 5, 1, "", "get_baseclasses"], [349, 5, 1, "", "get_subclasses"], [350, 5, 1, "", "group_duplicate_values"], [351, 5, 1, "", "hilberts_factory"], [352, 5, 1, "", "is_all_instance"], [353, 5, 1, "", "match_attributes"], [354, 5, 1, "", "refers_to"], [355, 5, 1, "", "register_hooks"], [356, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[339, 2, 1, "", "__init__"]], "baybe.utils.basic.UncertainBool": [[341, 2, 1, "", "from_erroneous_callable"]], "baybe.utils.basic.classproperty": [[343, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[348, 4, 1, "", "abstract"], [348, 4, 1, "", "cls"], [348, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[349, 4, 1, "", "abstract"], [349, 4, 1, "", "cls"], [349, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[350, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[353, 4, 1, "", "callable_"], [353, 4, 1, "", "ignore"], [353, 4, 1, "", "object"], [353, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[355, 4, 1, "", "post_hooks"], [355, 4, 1, "", "pre_hooks"], [355, 4, 1, "", "target"]], "baybe.utils.boolean": [[358, 5, 1, "", "check_if_in"], [359, 5, 1, "", "is_abstract"], [360, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[358, 4, 1, "", "allowed"], [358, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[359, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[360, 4, 1, "", "val"]], "baybe.utils.chemistry": [[362, 5, 1, "", "get_canonical_smiles"], [363, 5, 1, "", "get_fingerprint_class"], [364, 5, 1, "", "name_to_smiles"], [365, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[363, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[364, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[365, 4, 1, "", "encoding"], [365, 4, 1, "", "kwargs_conformer"], [365, 4, 1, "", "kwargs_fingerprint"], [365, 4, 1, "", "prefix"], [365, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[367, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[368, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[369, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[369, 2, 1, "", "__init__"], [369, 3, 1, "", "cluster_centers_"], [369, 2, 1, "", "fit"], [369, 2, 1, "", "fit_predict"], [369, 2, 1, "", "fit_transform"], [369, 2, 1, "", "get_metadata_routing"], [369, 2, 1, "", "get_params"], [369, 3, 1, "", "inertia_"], [369, 3, 1, "", "labels_"], [369, 3, 1, "", "medoid_indices_"], [369, 2, 1, "", "predict"], [369, 2, 1, "", "set_output"], [369, 2, 1, "", "set_params"], [369, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[369, 4, 1, "", "X"], [369, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[369, 4, 1, "", "**kwargs"], [369, 4, 1, "", "X"], [369, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[369, 4, 1, "", "**fit_params"], [369, 4, 1, "", "X"], [369, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[369, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[369, 4, 1, "", "init"], [369, 4, 1, "", "max_iter"], [369, 4, 1, "", "method"], [369, 4, 1, "", "metric"], [369, 4, 1, "", "n_clusters"], [369, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[369, 4, 1, "", "X"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[369, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[369, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[369, 4, 1, "", "-------"], [369, 4, 1, "", "Returns"], [369, 4, 1, "", "X"], [369, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[371, 5, 1, "", "fraction_to_float"], [372, 5, 1, "", "nonstring_to_tuple"], [373, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[371, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[373, 4, 1, "", "*fields"], [373, 4, 1, "", "header"], [373, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[375, 5, 1, "", "add_fake_measurements"], [376, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [377, 5, 1, "", "add_parameter_noise"], [378, 5, 1, "", "arrays_to_dataframes"], [379, 5, 1, "", "create_fake_input"], [380, 5, 1, "", "df_drop_single_value_columns"], [381, 5, 1, "", "df_drop_string_columns"], [382, 5, 1, "", "df_uncorrelated_features"], [383, 5, 1, "", "filter_df"], [384, 5, 1, "", "fuzzy_row_match"], [385, 5, 1, "", "get_transform_objects"], [386, 5, 1, "", "handle_missing_values"], [387, 5, 1, "", "normalize_input_dtypes"], [388, 5, 1, "", "pretty_print_df"], [389, 5, 1, "", "to_tensor"], [390, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[375, 4, 1, "", "data"], [375, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[376, 4, 1, "", "df"], [376, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[377, 4, 1, "", "data"], [377, 4, 1, "", "noise_level"], [377, 4, 1, "", "noise_type"], [377, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[378, 4, 1, "", "input_labels"], [378, 4, 1, "", "output_labels"], [378, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[379, 4, 1, "", "**kwargs"], [379, 4, 1, "", "n_rows"], [379, 4, 1, "", "parameters"], [379, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[380, 4, 1, "", "df"], [380, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[381, 4, 1, "", "df"], [381, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[382, 4, 1, "", "df"], [382, 4, 1, "", "exclude_list"], [382, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[383, 4, 1, "", "complement"], [383, 4, 1, "", "df"], [383, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[384, 4, 1, "", "left_df"], [384, 4, 1, "", "parameters"], [384, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[385, 4, 1, "", "allow_extra"], [385, 4, 1, "", "allow_missing"], [385, 4, 1, "", "df"], [385, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[386, 4, 1, "", "columns"], [386, 4, 1, "", "data"], [386, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[387, 4, 1, "", "df"], [387, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[388, 4, 1, "", "df"], [388, 4, 1, "", "max_columns"], [388, 4, 1, "", "max_colwidth"], [388, 4, 1, "", "max_rows"], [388, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[389, 4, 1, "", "*x"]], "baybe.utils.interval": [[392, 8, 1, "", "ConvertibleToInterval"], [393, 7, 1, "", "InfiniteIntervalError"], [394, 1, 1, "", "Interval"], [395, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[393, 2, 1, "", "__init__"], [393, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[394, 2, 1, "", "__init__"], [394, 6, 1, "", "center"], [394, 2, 1, "", "clamp"], [394, 2, 1, "", "contains"], [394, 2, 1, "", "create"], [394, 2, 1, "", "from_dict"], [394, 2, 1, "", "from_json"], [394, 6, 1, "", "is_bounded"], [394, 6, 1, "", "is_degenerate"], [394, 6, 1, "", "is_fully_unbounded"], [394, 6, 1, "", "is_half_bounded"], [394, 6, 1, "", "is_left_bounded"], [394, 6, 1, "", "is_right_bounded"], [394, 3, 1, "", "lower"], [394, 2, 1, "", "to_dict"], [394, 2, 1, "", "to_json"], [394, 2, 1, "", "to_ndarray"], [394, 2, 1, "", "to_tensor"], [394, 2, 1, "", "to_tuple"], [394, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[394, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[394, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[394, 4, 1, "", "string"]], "baybe.utils.memory": [[397, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[397, 4, 1, "", "num"]], "baybe.utils.metadata": [[399, 1, 1, "", "MeasurableMetadata"], [400, 1, 1, "", "Metadata"], [401, 5, 1, "", "to_metadata"]], "baybe.utils.metadata.MeasurableMetadata": [[399, 2, 1, "", "__init__"], [399, 3, 1, "", "description"], [399, 2, 1, "", "from_dict"], [399, 2, 1, "", "from_json"], [399, 6, 1, "", "is_empty"], [399, 3, 1, "", "misc"], [399, 2, 1, "", "to_dict"], [399, 2, 1, "", "to_json"], [399, 3, 1, "", "unit"]], "baybe.utils.metadata.MeasurableMetadata.from_dict.params": [[399, 4, 1, "", "dictionary"]], "baybe.utils.metadata.MeasurableMetadata.from_json.params": [[399, 4, 1, "", "string"]], "baybe.utils.metadata.Metadata": [[400, 2, 1, "", "__init__"], [400, 3, 1, "", "description"], [400, 2, 1, "", "from_dict"], [400, 2, 1, "", "from_json"], [400, 6, 1, "", "is_empty"], [400, 3, 1, "", "misc"], [400, 2, 1, "", "to_dict"], [400, 2, 1, "", "to_json"]], "baybe.utils.metadata.Metadata.from_dict.params": [[400, 4, 1, "", "dictionary"]], "baybe.utils.metadata.Metadata.from_json.params": [[400, 4, 1, "", "string"]], "baybe.utils.metadata.to_metadata.params": [[401, 4, 1, "", "cls"], [401, 4, 1, "", "value"]], "baybe.utils.numerical": [[403, 3, 1, "", "DTypeFloatNumpy"], [404, 3, 1, "", "DTypeFloatONNX"], [405, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [406, 5, 1, "", "closer_element"], [407, 5, 1, "", "closest_element"]], "baybe.utils.numerical.closer_element.params": [[406, 4, 1, "", "target"], [406, 4, 1, "", "x"], [406, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[407, 4, 1, "", "array"], [407, 4, 1, "", "target"]], "baybe.utils.random": [[409, 5, 1, "", "set_random_seed"], [410, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[409, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[410, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[412, 1, 1, "", "DiscreteSamplingMethod"], [413, 5, 1, "", "farthest_point_sampling"], [414, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[412, 3, 1, "", "FPS"], [412, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[413, 4, 1, "", "initialization"], [413, 4, 1, "", "n_samples"], [413, 4, 1, "", "points"], [413, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[414, 4, 1, "", "df"], [414, 4, 1, "", "method"], [414, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[416, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[416, 2, 1, "", "__init__"], [416, 2, 1, "", "fit"], [416, 3, 1, "", "mapping"], [416, 2, 1, "", "transform"]], "baybe.utils.torch": [[418, 8, 1, "", "DTypeFloatTorch"], [419, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[421, 5, 1, "", "finite_float"], [422, 5, 1, "", "non_inf_float"], [423, 5, 1, "", "non_nan_float"], [424, 5, 1, "", "validate_not_nan"], [425, 5, 1, "", "validate_object_names"], [426, 5, 1, "", "validate_objective_input"], [427, 5, 1, "", "validate_parameter_input"], [428, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_object_names.params": [[425, 4, 1, "", "objects"]], "baybe.utils.validation.validate_objective_input.params": [[426, 4, 1, "", "data"], [426, 4, 1, "", "objective"]], "baybe.utils.validation.validate_parameter_input.params": [[427, 4, 1, "", "data"], [427, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [427, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[428, 4, 1, "", "data"], [428, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 200, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 351, 369, 389, 394, 399, 400, 429, 432, 439, 443, 446, 447, 450, 451, 453, 454, 455, 456, 457, 459, 464, 468, 469, 470, 471, 475, 476, 477, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497], "0": [8, 9, 12, 15, 18, 24, 34, 37, 47, 48, 54, 112, 128, 148, 156, 159, 179, 187, 188, 189, 200, 223, 246, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 315, 316, 323, 324, 325, 336, 337, 360, 369, 376, 377, 382, 383, 404, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 475, 480, 481, 482, 483, 484, 488, 489, 491, 492, 493, 495, 497, 499], "00": [463, 472, 491], "000": [443, 465], "000000": 465, "000663467999970635": 446, "001": [47, 376, 450, 484], "003852": 461, "005": [431, 432, 433, 435, 436], "006008": 454, "006772": 454, "01": [179, 438, 439, 444, 447, 462, 463, 470], "02": 470, "021": [280, 382], "025338": 461, "029505": 454, "03213": [280, 382], "032749": 454, "034128": 454, "05": [470, 472], "056465": 454, "057": [431, 432, 433, 435, 436, 446], "058793": 461, "06": [223, 292, 450], "065997": 454, "072343": 454, "077073": 454, "08": 470, "086509": 454, "086931": 454, "087949": 454, "090700": 435, "093143": 454, "09653736976391157": 456, "0f": 447, "0x7fb355cb8160": 472, "0x7fb398f16e00": 472, "1": [9, 12, 15, 18, 28, 34, 47, 112, 128, 148, 159, 190, 200, 215, 246, 248, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 315, 316, 323, 324, 336, 337, 350, 360, 369, 377, 379, 383, 404, 413, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 475, 476, 480, 482, 483, 484, 489, 491, 492, 493, 495, 497, 498, 499], "10": [9, 12, 15, 18, 200, 248, 280, 382, 430, 432, 441, 442, 443, 447, 450, 451, 453, 454, 456, 458, 459, 461, 465, 466, 467, 469, 470, 472, 475, 482, 483, 485, 488, 489, 493, 495, 497, 499], "100": [128, 304, 435, 436, 441, 442, 443, 444, 447, 450, 451, 453, 454, 458, 459, 465, 470, 487, 488, 489, 493, 497, 499], "1000": [459, 472, 493], "1024": [153, 477, 489], "102991": 454, "1038": [280, 382], "1039": 475, "105": [431, 432, 433, 435, 436, 446, 463, 491], "11": [343, 453, 454, 476, 482], "111": [450, 465], "111111": 450, "113813": 454, "1147": 443, "1148": 443, "1149": 443, "1150": [128, 304, 443], "12": [453, 463, 482, 483, 491], "120": [431, 432, 433, 435, 436, 441, 443, 446, 489], "120000": 462, "121194": 454, "121206": 454, "122": 465, "122444": 454, "126": [441, 443, 444, 476], "1268824": [431, 432, 433], "127": 463, "128": 11, "129": 369, "13": [453, 454, 469, 478, 491], "130002": 458, "133": 451, "1337": [447, 448, 499], "135": 369, "14": [453, 454, 475, 491, 495], "14448993259018328": 456, "1454": 477, "148": 463, "15": [248, 443, 453, 454, 469, 470, 475, 483, 491], "150": [441, 444, 484], "1500": 489, "150786": 463, "151": 443, "153": [431, 432, 433, 435, 436, 446], "1550": 472, "1551": 472, "155395": 461, "158927": 454, "16": [128, 304, 388, 404, 453], "165153": 454, "166699": 458, "17": [453, 454], "174157": 461, "177": 465, "178650": 454, "18": [453, 454, 483], "180": 441, "188": 465, "19": [453, 454, 463], "191108": 461, "1913": [128, 304], "1914": [128, 304], "192": 443, "194243": 435, "1963": 369, "1991": 475, "1e": [223, 292, 450], "1l": [128, 304], "2": [8, 9, 12, 15, 18, 24, 112, 114, 128, 248, 304, 323, 336, 337, 350, 369, 383, 413, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 475, 480, 482, 483, 484, 487, 489, 491, 492, 493, 495, 497, 498], "20": [9, 12, 15, 18, 159, 248, 430, 431, 432, 433, 447, 448, 453, 454, 458, 472, 477, 489, 496, 497, 499], "200": [128, 304, 432, 441, 443, 450, 451, 456, 465], "2000": [450, 475], "2004": 480, "2007": 496, "2009": 369, "2021": 432, "2022": 475, "2025": 475, "206369": 461, "20l": [128, 304], "21": [453, 466], "210018": 461, "210820": 454, "211": 436, "218662": 461, "22": [9, 12, 15, 18, 453, 454, 483], "221": 477, "221289": 463, "222": 465, "227096": 454, "23": [453, 483, 493], "2324": [128, 304], "2325": [128, 304], "2382": [128, 304], "24": [442, 453, 454, 491], "241": 489, "241068": 461, "244991": 461, "245097": 461, "249204": 463, "25": [447, 453, 454, 458, 469, 491], "250": 481, "250546": 454, "26": [453, 454, 491], "267": 436, "27": [453, 454, 466, 491], "271116": 461, "275554": 454, "279003": 454, "28": 453, "285507": 454, "287893": 454, "289974": 454, "29": [453, 454, 475], "290134": 454, "293": 451, "295": 435, "295669": 458, "298": 436, "3": [128, 248, 304, 315, 336, 337, 343, 350, 383, 388, 431, 432, 433, 436, 439, 441, 442, 443, 444, 446, 448, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 469, 470, 475, 476, 478, 480, 482, 483, 484, 487, 489, 491, 492, 493, 495, 496, 497], "30": [430, 444, 448, 453, 454, 465, 489], "300": [369, 450], "3078f3": 477, "31": 453, "314240": 454, "315464": 454, "32": [442, 453, 454, 483, 489], "329004": 454, "33": [128, 304, 442, 453], "331616": 454, "333333": 451, "3336": 369, "3341": 369, "335776": 454, "337880": 454, "34": [442, 483], "340761": 454, "3420": [128, 304], "344021": 454, "35": [442, 453, 454, 458], "351841": 454, "356728": 454, "36": 369, "37": 495, "372178": 454, "372489": 454, "3741": [128, 304], "377766": 454, "378154": 463, "38": [462, 483], "383302": 454, "39": 489, "391012": 436, "397022": 461, "3d": 448, "4": [9, 12, 15, 18, 153, 336, 337, 369, 388, 438, 439, 441, 442, 443, 444, 448, 453, 454, 456, 461, 462, 463, 475, 480, 482, 483, 484, 489, 491, 497], "40": [453, 489], "401381": 454, "40x": 477, "41": [435, 454], "42": [456, 459, 483, 495], "423643": 436, "423731": 461, "43": 454, "44": 436, "4443": [128, 304], "447": 441, "448": 441, "449": 441, "45": [453, 454], "450": 441, "462467": 454, "468": 477, "468431": 463, "47": 495, "476635": 454, "48": 458, "482635": 461, "494712": 463, "494987": 454, "497102": 461, "498480": 461, "4d": [128, 304], "4x": 477, "5": [112, 159, 323, 336, 337, 431, 433, 438, 441, 442, 443, 444, 447, 450, 451, 453, 454, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 475, 480, 481, 482, 483, 484, 489, 491, 492, 493, 495, 496, 497, 499], "50": [444, 451, 453, 456, 458, 469, 470, 480, 481, 488, 489, 491], "500": [448, 489], "5066666666666667": 456, "509174": 454, "5112": [128, 304], "5113": [128, 304], "515121": 454, "518352": 454, "52": 454, "525313": 461, "528657": 461, "53": 436, "5313": 356, "54": [435, 475, 483], "55": 458, "550048": 461, "551173": 463, "551648": 454, "558722": 454, "5593": [128, 304], "56": [483, 493], "563021": 461, "569445": 458, "578044": 461, "58": 454, "586437": 461, "59": [475, 483], "590": 432, "591471": 454, "596826": 461, "598857": 463, "599018": 454, "5l": [128, 304], "6": [323, 336, 337, 388, 431, 432, 433, 442, 444, 453, 454, 456, 461, 463, 480, 484, 491], "60": [458, 472], "606994": 454, "6122": [128, 304], "616726": 461, "617431": 454, "62": [454, 456, 483], "621884": 463, "63": 454, "632408": 454, "64": 200, "643806": 454, "646967": 454, "647732": 454, "65": [456, 458], "653918": 458, "66368270ffd51418ec58bd793f2d9b1b": 496, "666810": 463, "666853": 463, "671292": 461, "679216": 436, "683213": 454, "686967": 454, "688232": 454, "69": [431, 432, 433], "690545": 454, "7": [159, 315, 336, 337, 382, 442, 444, 448, 453, 454, 459, 461, 465, 469, 480, 482, 483, 489, 491], "70": 453, "706667": 462, "71": 489, "72": 483, "730442": 462, "731581": 454, "735399": 454, "740645": 461, "744891": 461, "745": 499, "75": [453, 462, 491], "770956": 461, "772806": 461, "777778": 465, "778": 465, "779967": 454, "782065": 461, "786471": 461, "79": [454, 475], "7gz": 489, "7hf": 489, "8": [337, 369, 431, 433, 441, 443, 444, 453, 454, 456, 458, 461, 463, 466, 472, 475, 480, 482, 484], "80": [454, 465, 484], "81": 436, "820852": 454, "827870": 458, "83": 483, "8389": 356, "84": 462, "8417": 356, "848492": 461, "857": 443, "861": 444, "862": 444, "863": 444, "864": 444, "87": [458, 465, 483], "871838": 461, "88": 465, "8859": 450, "888889": 465, "889": 465, "89": [432, 465], "894888": 454, "8jq": 489, "9": [9, 12, 15, 18, 444, 448, 450, 453, 454, 461, 463, 480, 482, 483, 488, 491, 495, 497], "90": [431, 432, 433, 435, 436, 446, 465, 491], "908668": 454, "91": 483, "914493": 454, "924596": 454, "925940": 461, "933785": 461, "934039": 461, "938914": 454, "947182": 461, "949117": 454, "96": 432, "964763": 454, "965737": 454, "97": 462, "970293": 454, "977973": 461, "978622": 454, "990297": 454, "992924": 463, "999": 484, "A": [0, 9, 12, 15, 18, 28, 31, 34, 41, 43, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 76, 78, 82, 84, 85, 86, 87, 90, 93, 95, 100, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 142, 145, 146, 148, 156, 159, 161, 162, 163, 172, 173, 174, 175, 176, 177, 178, 179, 182, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 224, 225, 240, 241, 246, 248, 250, 252, 255, 257, 259, 262, 264, 268, 270, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 314, 316, 317, 318, 321, 322, 323, 324, 325, 327, 328, 329, 336, 343, 348, 349, 350, 353, 363, 369, 382, 383, 385, 386, 397, 399, 400, 411, 413, 416, 430, 442, 451, 453, 454, 456, 466, 467, 472, 474, 476, 477, 478, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497], "AND": [57, 443, 480, 484], "AS": [475, 480], "And": [128, 304, 450], "As": [431, 432, 433, 448, 456, 469, 470, 475, 476, 477, 482, 483, 484, 487, 490, 491, 493, 498], "By": [100, 130, 162, 223, 324, 359, 383, 454, 477, 478, 482, 483, 485, 486, 487, 488, 490, 491], "FOR": 480, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 169, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 246, 252, 255, 257, 259, 260, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 355, 384, 390, 394, 399, 400, 413, 416, 431, 432, 433, 435, 436, 442, 446, 447, 448, 453, 454, 456, 458, 463, 469, 470, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 499], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 100, 104, 125, 128, 130, 134, 136, 138, 161, 162, 167, 168, 188, 189, 192, 198, 200, 211, 215, 217, 223, 229, 230, 246, 248, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 323, 337, 348, 349, 353, 355, 358, 360, 363, 369, 371, 373, 376, 377, 379, 382, 383, 384, 385, 386, 401, 413, 414, 425, 426, 427, 428, 436, 438, 447, 453, 458, 462, 463, 466, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 495, 496, 497, 499], "In": [34, 48, 60, 128, 161, 200, 217, 244, 246, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 353, 388, 431, 432, 433, 435, 447, 448, 450, 453, 454, 456, 459, 462, 463, 466, 472, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499], "It": [28, 128, 182, 189, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 244, 263, 284, 304, 369, 431, 435, 436, 442, 451, 453, 456, 463, 465, 466, 467, 469, 472, 477, 482, 483, 484, 485, 489, 490, 491, 493, 495, 497, 499], "Its": [128, 248, 304, 450], "No": [384, 431, 432, 447, 461, 474, 477], "Not": [369, 480, 484], "OF": [475, 480], "OR": [475, 480], "Of": [436, 445, 473, 492], "On": [369, 450, 456], "One": [150, 431, 433, 459, 475, 495], "Or": 485, "Such": [436, 484, 487, 493], "That": [47, 217, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 436, 441, 453, 478, 491, 493, 496], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 71, 100, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 235, 236, 238, 240, 244, 246, 248, 250, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 290, 292, 296, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 337, 343, 348, 349, 350, 353, 355, 358, 359, 360, 363, 369, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 397, 399, 400, 401, 406, 407, 409, 410, 413, 414, 426, 427, 428, 431, 432, 433, 436, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 458, 462, 463, 467, 469, 470, 474, 476, 477, 478, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 495, 497, 498, 499], "Then": [448, 497], "There": [89, 292, 404, 453, 461, 475, 476, 478, 482, 486, 491, 494], "These": [429, 432, 433, 434, 437, 440, 445, 449, 452, 455, 457, 460, 464, 468, 471, 475, 478, 482, 484, 489, 491], "To": [128, 304, 431, 436, 447, 448, 454, 456, 458, 459, 465, 469, 470, 472, 475, 476, 478, 482, 483, 484, 485, 486, 488, 489, 493, 494], "Will": 481, "With": [447, 448, 453, 456, 459, 469, 470, 472, 475, 482, 484, 488, 489, 492], "_": [138, 167, 168, 220, 226, 233, 438, 447, 448, 470], "__": [138, 369], "__call__": [128, 304], "__class__": [446, 456], "__excepthook__": 476, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 255, 257, 259, 260, 262, 264, 268, 270, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 339, 343, 369, 393, 394, 399, 400, 416, 491, 492], "__name__": [446, 456], "__new__": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 150, 151, 153, 393], "__str__": 477, "__version__": 477, "_amount": 453, "_ardregressionparam": 282, "_arraylik": 378, "_buffer": [9, 12, 15, 18, 163, 407], "_c": 349, "_cumbest": 246, "_default_my_attribut": 478, "_discretelabellikeparamet": [145, 148, 159], "_expectedhypervolumeimprov": [9, 12, 15, 18], "_fit": 296, "_has_switch": 190, "_iterbest": 246, "_label": 453, "_measur": 246, "_n_last_measur": [187, 188, 189], "_nbase": 365, "_nestedsequ": [9, 12, 15, 18, 163, 407], "_ngbregressorparam": 286, "_no_tl": 469, "_option": 477, "_posterior": 296, "_posterior_comp": 477, "_randomforestregressorparam": 288, "_step": [187, 188, 189], "_supportsarrai": [9, 12, 15, 18, 163, 407], "_surrogategett": 262, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 228, 236, 237, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 350, 351, 352, 372, 385, 387, 394, 399, 400], "_target": 477, "_tmetadata": 401, "_tparamet": 162, "_tsurrog": [291, 292], "_u": 350, "_validate_my_attribut": 478, "_was_us": [187, 188, 189], "a1": 337, "a2": 337, "ab": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 444, 453, 477, 495, 497], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 347, 354, 477, 498], "abc": [26, 37, 38, 39, 40, 41, 43, 107, 108, 109, 125, 142, 143, 171, 185, 195, 198, 203, 208, 257, 259, 299, 311, 312, 359], "abil": [481, 482, 486, 496], "abl": [448, 476, 482, 484, 487, 489, 492, 499], "about": [8, 28, 34, 143, 159, 299, 431, 432, 433, 453, 462, 463, 475, 477, 478, 483, 487, 489, 491, 494, 495], "abov": [128, 292, 304, 359, 382, 430, 436, 443, 444, 446, 447, 454, 461, 475, 478, 480, 481, 482, 483, 484, 486, 489, 492, 493, 494, 495, 496, 497], "absenc": 488, "absolut": [47, 156, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 377, 497, 498], "absolutetransform": 497, "abstract": [26, 37, 38, 39, 40, 41, 43, 107, 108, 109, 125, 141, 142, 143, 171, 185, 195, 198, 203, 259, 299, 311, 312, 348, 349, 359, 477, 484, 496], "abstractli": 456, "acceler": [475, 477, 479, 496], "accept": [34, 125, 128, 130, 134, 136, 188, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 378, 447, 448, 472, 477, 480, 485, 488, 489, 493, 495, 497], "access": [128, 215, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 431, 432, 433, 441, 446, 470, 477, 482, 484, 488, 489, 492], "accord": [47, 183, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 454, 481, 484, 490, 499], "accordingli": [200, 483, 486, 488, 492], "account": 482, "accumul": [173, 456, 496], "accur": [369, 483], "acet": [431, 432, 433, 435, 436], "aceton": 453, "achiev": [23, 128, 223, 304, 448, 453, 456, 458, 459, 475, 478, 481, 483, 484, 486, 488, 494, 495, 497], "ack": 475, "acq_funct": 436, "acq_valu": 483, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 447, 448, 456], "acqf1": 492, "acqf2": 492, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 73, 85, 198, 200, 441, 442, 443, 444, 447, 448, 456, 465, 475, 477, 481, 488, 490, 492, 494, 498], "acquisition_funct": [34, 198, 200, 436, 447, 448, 456, 466, 467, 477], "acquisition_function_cl": 477, "acquisition_valu": [34, 198, 200, 447, 448, 477, 483], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 32, 34, 198, 200, 456, 477, 492], "across": [453, 456, 469, 482, 490, 496], "act": [453, 477, 480, 484, 493], "action": [23, 446, 456, 474, 477, 498], "activ": [17, 37, 161, 190, 200, 447, 448, 456, 475, 476, 477, 478, 484, 485, 486, 487, 490, 495, 496, 498, 499], "activate_paramet": 477, "active_dim": [107, 108, 109, 112, 114, 116, 117, 118], "active_valu": [142, 145, 146, 148, 156, 159, 469, 470, 477, 486, 489, 496], "actual": [188, 217, 244, 462, 477, 487, 491, 493, 496, 499], "ad": [34, 128, 223, 304, 327, 336, 369, 375, 413, 453, 454, 474, 478, 481, 486, 494, 495, 498], "adapt": [189, 280, 360, 382], "add": [34, 128, 238, 248, 304, 375, 376, 436, 450, 451, 453, 469, 472, 475, 480, 482, 483, 484, 487, 491, 496, 497, 499], "add_collection3d": 448, "add_fake_measur": [379, 435, 436, 441, 442, 443, 444, 450, 451, 477, 482, 493, 499], "add_fake_result": 477, "add_measur": [34, 379, 435, 436, 438, 439, 441, 442, 443, 444, 448, 450, 451, 456, 458, 459, 462, 463, 475, 477, 482, 483, 486], "add_modul": [128, 304], "add_noise_to_perturb_degenerate_row": 477, "add_parameter_nois": [379, 477, 499], "add_subplot": 448, "addendum": 480, "addit": [34, 100, 125, 128, 130, 134, 136, 188, 200, 217, 238, 246, 248, 250, 304, 369, 377, 379, 399, 400, 431, 432, 433, 454, 462, 470, 475, 477, 479, 480, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 498, 499], "addition": [446, 454, 475, 487], "additiveexplain": [98, 101], "additivekernel": 477, "additivetransform": 497, "address": 493, "adher": [477, 478], "adjust": [161, 189, 432, 436, 462, 477, 486, 488], "administ": 498, "adopt": 436, "adrian": [475, 479], "advanc": [189, 456, 458, 476, 477, 485, 488, 492, 496, 498], "advantag": [453, 478], "advic": 478, "advis": [480, 493], "affect": [34, 56, 66, 68, 128, 200, 215, 304, 316, 336, 446, 465, 472, 474, 476, 484, 497], "affected_paramet": [56, 441, 442, 443, 444, 453, 484], "affili": 475, "affin": [304, 307, 315, 325, 331, 332, 458, 497], "affineposteriortransform": [315, 320], "affinet": 315, "affinetransform": [495, 498], "afford": 483, "aforement": [217, 485], "after": [128, 190, 304, 355, 435, 436, 441, 442, 443, 444, 448, 465, 475, 477, 483, 487, 488, 489, 492, 498], "afterward": 492, "again": [447, 482, 483, 484, 496], "against": [94, 128, 304, 353, 426, 453, 480, 486, 496], "agent": 454, "aggreg": 488, "agraw": 479, "agre": [475, 480, 487], "agreement": 480, "ai": [105, 169, 404], "aim": [482, 483, 487], "akin": 482, "al": [432, 475, 489], "aldrich": 479, "alex": 479, "alexand": [475, 479], "algorithm": [193, 200, 369, 411, 413, 430, 453, 475, 477, 482, 487, 490], "alia": [128, 158, 258, 304, 392, 489], "alias": 477, "align": [161, 215, 355, 447, 472, 488, 491, 495, 496], "all": [25, 26, 36, 38, 43, 47, 56, 58, 64, 66, 100, 106, 107, 108, 109, 124, 125, 128, 130, 140, 143, 148, 152, 159, 170, 171, 181, 184, 185, 188, 194, 195, 197, 200, 202, 203, 215, 217, 224, 225, 248, 255, 256, 259, 298, 299, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 352, 353, 369, 387, 431, 432, 433, 436, 438, 439, 441, 442, 446, 447, 448, 453, 454, 456, 458, 461, 462, 469, 470, 475, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499], "allclos": [438, 439, 454], "alleg": 480, "alli": 472, "allow": [23, 34, 37, 47, 54, 58, 125, 128, 130, 134, 136, 156, 162, 189, 217, 223, 250, 282, 288, 294, 304, 358, 384, 385, 427, 428, 431, 432, 433, 436, 453, 454, 469, 470, 472, 475, 477, 481, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 497, 499], "allow_": [477, 486], "allow_extra": [125, 130, 134, 136, 215, 217, 223, 228, 385, 390, 458, 477], "allow_miss": [125, 130, 134, 136, 215, 217, 223, 228, 385, 390, 477], "allow_recommending_already_measur": [34, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 456, 466, 467, 474, 477, 483], "allow_recommending_already_recommend": [34, 448, 456, 466, 467, 474, 477, 483], "allow_recommending_pending_experi": [34, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 477, 483], "allow_repeated_recommend": [192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 477], "almost": 432, "alon": [477, 480], "along": [128, 304, 480, 489, 496], "alongsid": [128, 304, 480], "alpha": [9, 12, 31, 173, 448, 459], "alpha_1": 450, "alpha_2": 450, "alpha_init": 450, "alphabet": [164, 477], "alreadi": [34, 128, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 453, 463, 475, 477, 481, 482, 483, 486, 491, 493, 494, 495, 496, 499], "also": [34, 47, 60, 100, 128, 162, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 353, 355, 376, 377, 431, 438, 439, 447, 448, 450, 451, 453, 458, 459, 462, 463, 465, 469, 470, 472, 475, 477, 478, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499], "alter": [453, 477, 483, 486], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 292, 369, 446, 453, 454, 461, 475, 477, 485, 486, 488, 494, 497, 498, 499], "although": [453, 463, 466, 491, 493, 495], "alwai": [17, 34, 43, 128, 233, 234, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 413, 450, 453, 454, 477, 478, 481, 483, 484, 493, 495, 496, 499], "always_cal": [128, 304], "ambigu": [156, 340, 342, 491], "amend": 484, "among": [37, 453, 475, 488, 496], "amount": [337, 414, 454, 469, 470, 482, 484, 487, 489, 499], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 73, 74, 75, 77, 79, 80, 81, 85, 91, 94, 95, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 236, 238, 240, 244, 246, 248, 250, 255, 257, 259, 262, 264, 265, 268, 271, 282, 284, 286, 288, 290, 291, 294, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 340, 341, 342, 344, 351, 353, 355, 358, 364, 369, 372, 373, 382, 383, 384, 386, 388, 392, 393, 394, 399, 400, 407, 414, 425, 431, 433, 434, 436, 443, 444, 446, 447, 450, 451, 454, 458, 461, 465, 466, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "analog": [217, 484, 491, 492, 497], "analogi": [183, 490], "analys": 498, "analysi": [475, 487], "analyt": [3, 4, 7, 8, 85, 472, 482, 493, 496], "analyz": [475, 478, 487], "anchor": [307, 323, 482, 488, 495, 497], "angl": 448, "ani": [9, 12, 15, 18, 67, 68, 91, 100, 128, 141, 142, 143, 145, 146, 148, 159, 162, 163, 166, 167, 168, 233, 234, 238, 242, 243, 250, 304, 307, 332, 336, 352, 353, 355, 356, 358, 359, 373, 379, 384, 386, 395, 399, 400, 401, 407, 421, 422, 423, 424, 428, 446, 453, 458, 469, 470, 474, 475, 476, 477, 478, 480, 482, 483, 485, 486, 489, 492, 493, 495, 496, 497], "annot": [355, 446, 480], "anoth": [56, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 432, 442, 443, 450, 451, 453, 463, 478, 484, 496, 497], "ansatz": 477, "answer": 483, "anti": 383, "anymor": [477, 496], "anyth": 360, "anywai": 494, "anywher": 438, "apach": [475, 480], "apart": [478, 483], "api": [369, 475, 476, 477, 479, 492, 498], "aplei": 487, "appar": 492, "appdata": 476, "appear": [353, 476, 477, 480, 492], "append": [448, 470], "appendix": 480, "appli": [34, 43, 44, 45, 60, 128, 130, 200, 217, 244, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 344, 345, 353, 364, 377, 379, 416, 436, 437, 440, 441, 443, 444, 446, 447, 453, 458, 469, 472, 476, 477, 480, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497], "applic": [369, 373, 475, 478, 480, 489, 490, 493], "approach": [223, 447, 456, 458, 472, 475, 478, 481, 483, 486, 488, 490, 492, 494, 496], "appropri": [50, 51, 223, 456, 458, 478, 480, 486, 488, 491, 495], "approxim": [11, 23, 31, 484, 487], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 72, 83, 87, 88, 89, 100, 125, 128, 130, 134, 136, 142, 145, 146, 148, 156, 159, 161, 162, 163, 168, 182, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 246, 248, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 317, 323, 324, 336, 337, 348, 349, 350, 352, 353, 355, 359, 360, 369, 376, 378, 379, 380, 384, 385, 387, 413, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 451, 453, 454, 456, 458, 461, 462, 465, 466, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 499], "arang": [438, 448, 489], "arbitrari": [189, 217, 318, 344, 395, 477, 484, 489, 490, 493, 496, 497, 499], "arbitrarili": [488, 492], "architectur": [255, 257, 259, 264, 268, 282, 284, 286, 288, 296, 477, 494, 496], "ard_num_dim": [107, 108, 109, 112, 114, 116, 117, 118], "ardregress": 282, "area": 448, "arg": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 111, 113, 115, 120, 121, 122, 128, 171, 173, 174, 175, 176, 177, 178, 179, 182, 260, 265, 270, 304, 307, 393, 478], "argu": 453, "argument": [31, 34, 74, 95, 100, 105, 128, 159, 162, 169, 185, 187, 188, 189, 190, 198, 200, 215, 223, 250, 260, 262, 304, 355, 369, 379, 383, 436, 451, 477, 484, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497], "aris": [59, 453, 472, 477, 478, 480, 484, 492, 499], "arithmet": [132, 488], "arizona": 479, "arm": [254, 255, 473, 479], "arm_index": 456, "around": [9, 12, 15, 18, 47, 207, 250, 252, 458, 472, 477, 490, 492, 495, 499], "arr": 459, "arrai": [9, 12, 15, 18, 163, 339, 369, 378, 389, 403, 407, 413, 448, 477, 490, 494], "arrays_to_datafram": [438, 439, 448, 459, 462, 463, 469, 470, 477, 493], "arriv": [475, 486], "articl": 475, "artifici": 499, "aryl": [431, 432, 433, 435, 475, 489], "as_pre_transform": [130, 477, 482, 487, 488], "asarrai": 369, "ascend": 307, "ask": [453, 475, 477, 478, 483, 486], "aspect": [434, 438, 439, 463, 482, 485, 495], "aspir": 498, "assembl": [453, 492, 494], "assembli": [494, 498], "assert": [68, 138, 323, 384, 441, 442, 443, 444, 450, 451, 453, 454, 461, 465, 477, 480, 482, 483, 484, 492, 494, 495, 497], "assert_frame_equ": 495, "assess": [477, 487, 493], "assign": [447, 454, 461, 488, 489, 495], "associ": [128, 217, 304, 456, 477, 480, 483, 488, 496], "assum": [28, 48, 128, 263, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 355, 384, 385, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 450, 451, 453, 456, 462, 463, 465, 472, 475, 480, 482, 484, 486, 489, 492, 494, 495, 499], "assumpt": 493, "assur": 484, "asymmetr": [47, 497], "asynchron": [128, 304, 475, 483, 498], "atol": [438, 439], "atompair": 153, "atompairfingerprint": 153, "attach": [28, 355, 446, 447, 448, 480], "attempt": [84, 91, 128, 263, 304, 456, 476, 477, 482, 484, 487, 488, 490], "attent": 190, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 255, 257, 259, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 294, 299, 301, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 353, 356, 394, 399, 400, 416, 424, 477], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 94, 97, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 159, 162, 166, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 222, 223, 232, 236, 238, 255, 256, 257, 259, 262, 264, 268, 271, 275, 278, 280, 282, 284, 286, 288, 293, 296, 299, 300, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 338, 341, 342, 353, 372, 385, 391, 394, 399, 400, 402, 412, 416, 417, 420, 421, 422, 423, 424, 461, 477, 478, 480, 484, 490, 492, 494], "attributeerror": [128, 304], "audit": [477, 478], "augment": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 217, 290, 291, 292, 375, 477, 483], "author": [475, 480], "authorship": 480, "auto": [14, 15, 16, 18, 19, 477, 479, 497], "auto_tutori": 404, "autocomplet": 495, "autocorr": 153, "autocorrfingerprint": 153, "autodoc": 477, "autograd": [128, 304], "automat": [34, 200, 268, 430, 448, 462, 476, 477, 478, 484, 487, 488, 490, 491, 494, 496, 498], "autowrap": 333, "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 78, 86, 132, 148, 150, 151, 153, 159, 188, 189, 246, 248, 275, 412, 413, 414, 433, 435, 438, 439, 453, 458, 462, 463, 475, 476, 477, 478, 480, 482, 483, 485, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498], "available_acq_funct": 436, "avalon": 153, "avalonfingerprint": 153, "averag": [128, 284, 304, 447, 448, 458, 470, 489, 493], "avoid": [128, 217, 304, 356, 477, 478, 482, 483, 489, 491, 495], "awai": [9, 12, 15, 18, 161], "awar": [453, 469, 470, 477, 478, 481, 486, 492], "ax": [100, 430, 432, 447, 448, 459, 469, 470, 472, 497], "ax2": 472, "axes3d": 448, "axhlin": 472, "axi": [215, 246, 430, 438, 439, 444, 447, 448, 453, 454, 456, 458, 459, 462, 463, 469, 470, 472, 491], "ayesian": 475, "azim": 448, "azur": 477, "b": [47, 59, 179, 280, 336, 350, 382, 383, 432, 442, 451, 456, 466, 467, 474, 475, 478, 480, 483, 486, 489, 492, 497], "b1": 337, "b2": 337, "b950": [128, 304], "back": [0, 465, 474, 477, 478, 486], "background": [100, 104, 477, 482, 487], "background_data": 100, "backport": 476, "backtest": [244, 245, 251, 433, 468, 473, 475, 477, 490, 493], "backtick": 478, "backward": [125, 128, 130, 134, 136, 304, 477, 495], "backward_pr": [128, 304], "bad": [483, 485, 495], "badg": 477, "bai": 475, "baird": 479, "balanc": [130, 456, 475], "banana": 478, "bandit": [255, 436, 473, 475, 477, 479], "banner": 477, "bar": [100, 102, 450, 451, 453, 465, 466, 467, 475, 477, 487, 494], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 189, 190, 192, 195, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 236, 238, 240, 255, 257, 259, 260, 262, 263, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 292, 294, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 339, 341, 342, 343, 347, 348, 349, 369, 378, 383, 394, 399, 400, 412, 413, 416, 430, 435, 436, 447, 448, 450, 452, 456, 473, 475, 477, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 494, 495], "base1": 454, "base2": 454, "base_data": 447, "base_kernel": [120, 121, 122], "base_nam": [430, 432, 447, 448, 469, 470], "base_predictor": 290, "base_smil": 447, "baseestim": 369, "basefingerprinttransform": 363, "baselin": [430, 432, 469, 475, 489], "basesequentialmetarecommend": [188, 189], "bashrc": 485, "basi": [116, 475, 480, 487], "basic": [107, 111, 112, 113, 114, 115, 116, 117, 118, 173, 174, 175, 176, 177, 178, 179, 246, 307, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 339, 341, 342, 343, 400, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 462, 463, 464, 465, 468, 473, 477, 478, 486, 488, 489, 493, 495, 498], "basic_transfer_learn": 470, "basickernel": [111, 112, 113, 114, 115, 116, 117, 118, 477], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 182, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 249, 290, 291, 436, 441, 442, 443, 444, 448, 462, 463, 465, 469, 470, 477, 482, 486, 490, 493], "batch_quant": 477, "batch_shap": [107, 108, 109, 112, 114, 116, 117, 118, 128, 304], "batch_siz": [34, 47, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 246, 250, 252, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 454, 456, 458, 459, 462, 463, 465, 466, 469, 470, 475, 477, 482, 483, 486, 493], "batchnorm": [128, 304], "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 222, 223, 240, 255, 257, 259, 260, 262, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 339, 341, 342, 343, 369, 394, 399, 400, 412, 416, 429, 430, 431, 432, 433, 434, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "baybe_2025": 475, "baybe_cach": 485, "baybe_cache_dir": [477, 485], "baybe_deactivate_polar": [477, 485], "baybe_debug_fake_hosthash": 477, "baybe_debug_fake_userhash": 477, "baybe_numpy_use_single_precis": [405, 477, 485], "baybe_parallel_simulation_run": [250, 485], "baybe_telemetry_endpoint": 477, "baybe_telemetry_host": 477, "baybe_telemetry_hostnam": 477, "baybe_telemetry_usernam": 477, "baybe_telemetry_vpn_check": 477, "baybe_telemetry_vpn_check_timeout": 477, "baybe_torch_use_single_precis": [419, 477, 485], "baybe_use_fpsampl": [211, 477, 485], "bayesian": [0, 192, 198, 200, 244, 246, 250, 252, 263, 282, 456, 477, 481, 483, 487, 494, 498], "bayesian_recommend": 448, "bayesianlinearmodel": 451, "bayesianlinearsurrog": [436, 477, 494], "bayesianrecommend": [192, 200, 263, 477, 490], "bayesianridg": 450, "bcut2d": [153, 477], "bcut2dfingerprint": 153, "bcw07": 496, "becaus": [47, 89, 128, 156, 161, 217, 223, 252, 304, 359, 446, 447, 453, 458, 470, 472, 478, 481, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497], "becom": [217, 453, 477, 481, 483, 484, 492, 499], "been": [28, 34, 84, 85, 188, 255, 257, 259, 264, 268, 282, 284, 286, 288, 384, 431, 432, 475, 476, 477, 480, 482, 483, 488, 490, 495, 496], "beeswarm": [100, 102, 487], "befor": [84, 128, 190, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 355, 430, 433, 436, 442, 447, 475, 477, 478, 485, 486, 488, 489, 491, 495], "begin": [188, 324, 441, 443, 461, 465, 488, 490, 494, 497], "behalf": 480, "behav": [448, 465, 492], "behavior": [128, 161, 200, 304, 475, 477, 488, 490, 491, 495, 496], "behind": [488, 492, 493, 494, 495], "being": [9, 12, 15, 18, 122, 128, 304, 456, 476, 477, 484, 489, 491, 495, 497], "bell": [307, 316, 458, 497, 498], "bell_transform": 477, "belltransform": [307, 498], "belong": [369, 446, 492], "below": [128, 190, 292, 304, 443, 446, 447, 453, 478, 480, 481, 483, 484, 492, 494, 496, 497, 498], "benchmark": [431, 432, 447, 472, 475, 477, 479], "benefici": [480, 481, 485, 495], "benefit": [484, 496], "benzo": 496, "bernoulli": [255, 455, 473, 479], "besid": [475, 488], "best": [9, 12, 14, 15, 16, 18, 19, 246, 248, 250, 433, 456, 475, 485, 490], "bet": 483, "beta": [8, 24, 173, 255, 436, 477, 481], "betabernoullimultiarmedbanditsurrog": [436, 456, 477], "betaprior": [255, 477], "better": [11, 432, 477, 483, 484, 486, 488, 489], "between": [9, 12, 15, 18, 37, 56, 128, 156, 189, 215, 223, 278, 304, 317, 324, 383, 446, 448, 453, 456, 459, 463, 469, 470, 472, 475, 477, 478, 482, 483, 484, 485, 488, 489, 490, 491, 492, 495, 496], "beyond": [161, 475, 487], "bfloat16": [128, 304], "bia": [128, 304], "bias": 489, "bimod": 472, "bin": 453, "binar": 477, "binari": [301, 428, 465, 475, 476, 477, 492], "binarytarget": [302, 456, 477], "bind": [446, 448, 480], "bit": [477, 489], "black": [244, 472, 493, 496], "blackbox": [429, 430, 473], "blank": 478, "blob": 280, "block": [447, 453, 476, 477, 492, 497], "blue": [459, 472], "boacquisitionfunct": [198, 200], "bodi": 446, "bonilla": 496, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 100, 103, 104, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 228, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 301, 302, 304, 307, 315, 348, 349, 353, 354, 359, 360, 369, 373, 378, 383, 385, 386, 390, 394, 399, 400, 407, 413, 427, 456], "boolean": [9, 12, 15, 18, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 104, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 185, 187, 188, 189, 190, 307, 341, 385, 477, 483, 485, 488], "boost": [286, 470], "both": [9, 11, 12, 15, 18, 125, 128, 130, 134, 136, 161, 162, 223, 252, 304, 307, 324, 355, 430, 442, 447, 450, 453, 454, 456, 459, 469, 470, 472, 475, 477, 478, 481, 483, 484, 487, 489, 491, 492, 494, 495, 498, 499], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 125, 128, 130, 134, 136, 192, 200, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 438, 439, 448, 463, 469, 470, 477, 485, 490], "botorch_acqf": 28, "botorch_function_wrapp": 477, "botorchrecommend": [192, 436, 441, 442, 443, 444, 447, 448, 450, 451, 456, 463, 465, 466, 467, 475, 477, 482, 483, 484, 486, 490], "bottom": 483, "bound": [8, 24, 37, 47, 128, 155, 161, 162, 179, 215, 217, 223, 228, 291, 292, 304, 307, 317, 349, 355, 385, 387, 394, 401, 413, 430, 436, 438, 439, 448, 454, 459, 461, 462, 463, 469, 470, 472, 477, 489, 492, 495, 497, 498, 499], "boundari": [47, 223], "boundary_onli": [223, 453], "bounded": 477, "bounds_transform_func": 477, "box": [179, 244, 472, 493, 496], "boxdecomposit": 31, "brain": [493, 496], "branch": [475, 478], "brandenburg": 475, "break": [128, 263, 304, 492, 498], "brettpho": [431, 432, 433, 435, 436], "breviti": 495, "briefli": [493, 496], "bring": [475, 477, 497], "bro": 280, "broad": 492, "broadcast": 163, "brute": [200, 490], "bu": [431, 432, 433, 435, 436], "bucket": 453, "budget": 483, "buf": [128, 304], "buffer": [128, 304], "bug": [477, 478], "build": [128, 215, 223, 263, 304, 369, 447, 453, 472, 476, 477, 478, 484, 487, 492, 494, 496, 497, 498, 499], "built": [223, 450, 458, 475, 478, 483, 490, 494, 495, 497], "builtin": 343, "bump": 477, "busi": 472, "button": 477, "butyl": [431, 432, 433, 435, 436], "butylphenylphosphin": [431, 432, 433, 435, 436], "butyornitril": [431, 432, 433, 435, 436], "bypass": [162, 447, 485, 488, 494], "byte": [9, 12, 15, 18, 163, 222, 264, 397, 407, 477, 499], "c": [59, 336, 350, 369, 431, 432, 433, 435, 436, 441, 442, 443, 444, 451, 453, 466, 467, 475, 476, 480, 483, 486, 489, 491, 492, 497], "c1": [431, 432, 433, 435, 436, 441, 442, 443, 444, 489], "c1c2": [431, 432, 433, 435, 436], "c1ccccc1": [431, 432, 433, 441, 443], "c1ccoc1": 484, "c2": [431, 432, 433, 435, 436, 441, 443, 444], "c2ccccc2": [431, 432, 433], "c2oc": [431, 432, 433, 435, 436], "c2p": [431, 432, 433, 435, 436], "c3": [431, 432, 433, 435, 436, 441, 443], "c3c": [431, 432, 433], "c3ccccc3": [431, 432, 433, 435, 436], "c4": [431, 432, 433, 441, 443], "c4ccccc4": [431, 432, 433, 435, 436], "c5": [441, 443], "c6": [441, 443], "c_": [459, 497], "c_1": 324, "c_2": 324, "c_g2_min": 454, "c_g3_max": 454, "c_i": 484, "c_total_sum": 454, "cach": [34, 477, 492, 498], "calcul": [34, 369, 438, 448, 469, 483, 485, 487, 489, 491], "calibr": [315, 496], "call": [48, 95, 128, 185, 187, 188, 189, 190, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 341, 355, 378, 431, 432, 433, 446, 451, 453, 454, 466, 467, 475, 476, 477, 481, 483, 484, 485, 489, 492, 493, 494, 495, 496, 497, 498], "callabl": [55, 74, 94, 128, 162, 236, 244, 246, 248, 250, 252, 290, 291, 294, 296, 304, 318, 333, 341, 343, 344, 345, 351, 353, 355, 369, 378, 430, 446, 459, 472, 477, 497, 498], "callable_": [341, 353], "caller": [128, 304], "campaign": [100, 246, 249, 250, 252, 377, 379, 434, 435, 443, 445, 448, 456, 458, 467, 469, 470, 472, 473, 474, 475, 477, 481, 482, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499], "campaign1": 493, "campaign2": 493, "campaign_json": 483, "campaign_oh": 432, "campaign_par": 459, "campaign_rand": [431, 432, 433], "campaign_recr": 465, "campaign_stop": 447, "campaign_with_hook": 447, "campaign_y0": 459, "campaign_y1": 459, "campaignstoppedexcept": 447, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 43, 44, 45, 59, 100, 128, 142, 148, 156, 159, 163, 182, 189, 192, 193, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 244, 248, 255, 257, 259, 260, 262, 263, 264, 268, 282, 284, 286, 288, 292, 302, 304, 307, 353, 355, 359, 369, 377, 378, 392, 404, 430, 431, 432, 433, 436, 437, 440, 441, 442, 443, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 466, 469, 470, 472, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "canada": 479, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 198, 200, 208, 211, 215, 223, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 413, 447, 448, 470, 477, 481, 484, 490, 491, 498], "cannot": [17, 93, 94, 161, 263, 264, 292, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 360, 456, 477, 480, 482, 484, 485, 489, 490, 492, 494, 495, 496], "canon": [362, 492], "capabl": [429, 455, 457, 464, 468, 470, 472, 477, 479, 483, 488, 494, 496], "captur": [472, 489], "cardin": [37, 47, 54, 64, 66, 67, 68, 83, 200, 215, 475, 477, 479, 484], "cardinalityconstraint": [47, 54, 477], "care": [52, 453, 458, 478, 484, 487, 494], "carefulli": 485, "carlo": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 85, 128, 250, 430, 432, 433, 447, 456, 469, 470, 477, 482, 493], "carri": [355, 446, 480, 488], "cartesian": [217, 223, 224, 225, 475, 477, 486, 491], "case": [161, 189, 252, 292, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 355, 369, 388, 447, 452, 453, 458, 462, 463, 466, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 499], "cast": [48, 128, 304, 477], "cat": 383, "catch": 450, "catch_constant_target": 477, "categor": [34, 145, 146, 150, 223, 230, 384, 475, 477, 489, 491, 495], "categori": [432, 447, 475, 477, 492, 495], "categorical_1": 483, "categorical_2": 483, "categorical_paramet": 492, "categorical_parameter_json": 492, "categorical_parameter_reconstruct": 492, "categoricalencod": [145, 146, 441, 442, 443, 444, 465], "categoricalparamet": [146, 223, 432, 441, 442, 443, 444, 451, 456, 465, 466, 467, 475, 477, 486, 487, 491, 492, 498], "cattr": [235, 236, 238, 295, 467, 476, 477, 478], "cauchi": 175, "caus": [156, 336, 343, 477, 480], "caution": 496, "caviti": 472, "cc": [431, 432, 433, 435, 436, 441, 443, 444, 453, 489, 492, 496], "cc1": [431, 432, 433, 435, 436, 489], "ccc": [441, 443, 451, 475], "cccc": [431, 432, 433, 435, 436, 441, 443], "ccccc": [441, 443, 466, 467], "cccccc": [441, 443], "cccccccco": [484, 489], "ccccoc": [431, 432, 433, 435, 436], "cco": 453, "ccoccoccn": [466, 467], "cdot": [484, 488, 497], "cdoubl": [128, 304], "ceil": 447, "cell": [450, 489, 493, 496], "cell_lin": 496, "center": [316, 323, 324, 369, 394, 458, 459, 472, 483, 497], "center_y0": 459, "center_y1": 459, "central": [477, 483, 498], "certain": [34, 56, 94, 128, 190, 236, 238, 244, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 352, 442, 447, 456, 458, 475, 477, 478, 484, 486, 487, 490, 492, 495, 496, 499], "cesium": [431, 432, 433, 435, 436], "chai": 496, "chain": [41, 128, 185, 187, 188, 189, 190, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 343, 484, 495, 498], "chainedtransform": 497, "challeng": [478, 492], "chanc": 476, "chang": [56, 128, 188, 304, 376, 377, 436, 453, 458, 462, 475, 476, 478, 480, 483, 485, 487, 488, 489, 491, 495, 496, 498], "changelog": 498, "channel": 472, "channels_last": [128, 304], "charact": 480, "character": 472, "characterist": [343, 472], "charg": 480, "chebyshev": 14, "check": [34, 64, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 304, 352, 354, 357, 358, 359, 360, 369, 384, 386, 387, 394, 399, 400, 406, 458, 462, 463, 465, 475, 477, 478, 487, 491, 492, 495], "check_maximum": 64, "check_minimum": 64, "checker": 477, "checkout": 478, "chem": [475, 477, 489], "chemic": [364, 432, 435, 453, 477, 479, 484, 487, 489, 496], "cheminformat": [159, 475, 477], "chemistri": [148, 441, 443, 444], "child": [128, 205, 206, 207, 208, 304, 478], "children": [128, 304], "chocol": 478, "choic": [246, 248, 413, 446, 453, 456, 458, 463, 477, 484, 486, 488, 489, 490, 491, 492], "choos": [183, 453, 454, 456, 461, 462, 463, 474, 475, 480, 481, 483, 490, 494], "chose": [462, 492], "chosen": [81, 192, 246, 248, 252, 409, 410, 413, 436, 456, 477, 481, 484, 488, 489, 491, 495], "christoph": 496, "chung": 479, "ci": [439, 469, 470, 477, 478], "circ": 497, "circular": 489, "circumv": [476, 492], "cite": 475, "cl": [52, 233, 237, 292, 348, 349, 354, 359, 395, 401], "claim": 480, "clamp": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 458, 477, 488, 495, 497], "clampingtransform": 498, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 93, 97, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 236, 238, 239, 240, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 296, 298, 299, 300, 301, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 338, 339, 341, 342, 343, 347, 348, 349, 354, 359, 363, 368, 369, 373, 391, 394, 398, 399, 400, 411, 412, 415, 416, 436, 446, 447, 450, 456, 466, 477, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 497], "classic": [456, 488], "classifi": 489, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 341, 343, 394, 399, 400, 477], "classvalidationerror": [467, 476], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 255, 257, 259, 264, 268, 282, 284, 286, 288], "clean": [380, 381, 382, 476, 477, 478], "clear": [128, 304, 404, 496], "click": [456, 489], "clipboard": 450, "clone": 478, "close": [246, 252, 430, 447, 469, 470, 472, 493], "closer": [9, 12, 15, 18, 406, 489], "closest": [369, 407, 450], "closest_el": 477, "closur": [244, 493], "cluster": [205, 206, 207, 208, 366, 367, 368, 369, 436, 472, 477, 479, 498], "cluster_centers_": 369, "clustering_algorithm": 369, "clustering_x": 477, "clustermixin": 369, "cmap": 448, "cn": [431, 432, 433, 435, 436], "co": 453, "co1": [431, 432, 433], "co2": [431, 432, 433], "co3": [431, 432, 433], "coars": [451, 465, 466, 467, 475], "coc": [451, 466, 467, 475], "cococ": [466, 467], "code": [263, 432, 451, 456, 462, 466, 467, 475, 476, 477, 480, 484, 485, 489, 493, 495, 496, 498, 499], "codomain": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329], "coeffici": [48, 50, 51, 438, 439, 454, 484], "coerc": 477, "collect": [34, 66, 67, 68, 110, 120, 121, 138, 162, 164, 172, 188, 190, 215, 223, 229, 230, 241, 248, 262, 334, 336, 338, 352, 353, 366, 367, 385, 386, 411, 413, 430, 436, 448, 453, 456, 458, 459, 469, 470, 477, 483], "color": [448, 450, 459, 472], "column": [43, 44, 45, 100, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 246, 248, 250, 252, 336, 337, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 416, 427, 428, 432, 435, 441, 442, 443, 444, 447, 453, 459, 465, 469, 470, 472, 477, 483, 491, 492, 493], "column_group": 337, "com": [280, 356, 382, 475, 477], "comb": 453, "combin": [47, 57, 162, 200, 215, 217, 223, 224, 225, 331, 332, 343, 364, 425, 431, 432, 433, 441, 443, 446, 447, 453, 475, 476, 480, 484, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 499], "combinatori": [200, 499], "combo_runn": 250, "come": [9, 12, 15, 18, 456, 475, 483, 484, 487, 492, 495, 496, 497, 499], "command": 476, "comment": 477, "commerci": 480, "commit": [475, 477, 478], "common": [172, 450, 454, 477, 478, 480, 482, 483, 484, 489, 492, 495, 497], "commonli": [488, 498], "commun": [480, 488, 496], "comp_df": [142, 145, 146, 148, 156, 159, 477], "comp_rep": [223, 450, 477, 491], "comp_rep_bound": [215, 217, 223, 477], "comp_rep_byt": [222, 499], "comp_rep_column": [141, 142, 143, 145, 146, 148, 155, 156, 159, 215, 217, 223, 477], "comp_rep_human_read": [222, 499], "comp_rep_shap": [222, 499], "compar": [162, 188, 430, 453, 454, 456, 459, 469, 475, 477, 478, 484, 486, 489], "comparison": [128, 304, 447, 459, 469, 470, 490, 492, 495, 497], "compat": [125, 128, 130, 134, 136, 138, 162, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 218, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 294, 304, 355, 385, 424, 436, 441, 442, 443, 444, 446, 448, 465, 477, 490, 494, 495], "compens": 477, "compil": [128, 304, 476, 480], "complain": 478, "complaint": 478, "complement": [34, 383, 486], "complementari": 47, "complet": [78, 426, 448, 453, 482, 484, 486, 492], "complex": [9, 12, 15, 18, 128, 163, 304, 369, 407, 453, 465, 469, 470, 472, 478, 481, 482, 484, 486, 493, 495, 496, 497], "complex128": [128, 304], "compli": [480, 484], "complianc": 475, "complic": [453, 495, 496], "compon": [72, 369, 453, 454, 478, 481, 483, 484, 485, 486, 492, 494, 496, 498], "compos": [119, 128, 262, 304, 328, 345, 477, 492, 497], "composit": [108, 120, 121, 122, 262, 327, 328, 329, 477, 498], "composite_a": 494, "composite_b": 494, "compositekernel": [120, 121, 122, 477], "compositesurrog": [255, 257, 259, 264, 268, 282, 284, 286, 288, 477, 487, 488, 494], "compound": 364, "comprehens": [475, 494], "compress": [332, 492], "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 90, 100, 104, 128, 130, 141, 142, 143, 145, 146, 148, 155, 156, 159, 198, 200, 215, 217, 222, 223, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 292, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 365, 369, 441, 442, 443, 444, 446, 453, 454, 458, 459, 465, 477, 480, 481, 483, 485, 488, 489, 491, 492, 493, 495, 497, 498, 499], "computation": 200, "compute_ref_point": [9, 12, 15, 18], "compute_scor": 450, "computedstyl": 450, "concat": [438, 439, 447, 448, 458, 459, 462, 463, 469, 470], "concentr": [173, 174, 431, 432, 433, 435, 436, 441, 446, 447, 484], "concentrati": 441, "concentration_valu": 447, "concept": [336, 453, 488, 489, 492, 497], "concern": 316, "concis": [477, 495, 497], "concret": [477, 492], "conda": 477, "condit": [37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 383, 432, 438, 442, 443, 444, 453, 459, 475, 477, 480, 496, 498], "conduct": [34, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 431, 432, 433, 475, 478, 483, 496], "confid": [8, 24, 436], "config": [450, 451, 464, 473, 477, 498], "config_json": 34, "configur": [9, 12, 15, 18, 34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 88, 89, 182, 189, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 244, 246, 252, 255, 257, 259, 260, 262, 264, 268, 274, 282, 284, 286, 288, 369, 413, 434, 435, 453, 458, 460, 463, 467, 475, 476, 477, 480, 481, 482, 483, 484, 485, 489, 490, 491, 493, 495, 496, 498, 499], "confirm": 448, "conflict": [475, 478, 488], "conform": [159, 365, 489], "confront": [456, 475, 486], "confus": [128, 304, 478], "conjunct": 494, "connect": [60, 477, 489, 495], "consequ": [433, 458, 472, 476, 484, 485, 490, 491, 493, 494], "consequenti": 480, "consid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 128, 130, 142, 145, 146, 148, 156, 159, 161, 163, 188, 200, 217, 250, 304, 384, 385, 430, 453, 456, 458, 469, 470, 475, 477, 478, 482, 484, 486, 487, 488, 489, 492, 495, 499], "consider": [217, 482], "consist": [128, 183, 222, 304, 369, 448, 478, 480, 487], "consol": [450, 476], "consolid": [477, 490], "consortium": 479, "conspicu": 480, "const": 450, "constant": [284, 292, 315, 472, 477, 478, 489, 491, 495, 497, 498], "constitut": 480, "constrain": [477, 484, 496], "constraint": [34, 37, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 83, 143, 200, 215, 217, 223, 339, 450, 451, 465, 466, 467, 473, 475, 477, 479, 485, 489, 498], "constraint_1": 443, "constraint_2": 443, "constraint_3": 443, "constraints_augment": 217, "constraints_cardin": 215, "constraints_lin_eq": 215, "constraints_lin_ineq": 215, "constraints_nonlin": 215, "constru": 480, "construct": [34, 128, 215, 217, 223, 264, 294, 304, 430, 459, 461, 469, 470, 475, 477, 481, 484, 487, 492, 494, 498], "constructor": [205, 206, 207, 208, 217, 237, 282, 286, 288, 453, 458, 461, 466, 467, 477, 481, 483, 486, 488, 489, 494, 495, 497, 498, 499], "consum": [188, 446, 477], "consumpt": 485, "cont_ind": 463, "cont_indic": [462, 463], "cont_paramet": 463, "cont_recommend": [192, 463], "contact": [475, 479], "contain": [9, 12, 15, 18, 34, 37, 43, 44, 45, 47, 68, 71, 76, 100, 125, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 167, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 224, 225, 229, 244, 246, 248, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 337, 355, 365, 369, 373, 377, 383, 384, 386, 394, 399, 400, 413, 425, 426, 427, 428, 432, 433, 447, 448, 454, 456, 463, 469, 470, 476, 477, 478, 480, 483, 484, 486, 487, 490, 491, 492, 493, 499], "content": [162, 188, 217, 248, 376, 414, 450, 477, 480, 492], "context": [78, 86, 128, 161, 185, 187, 188, 189, 190, 198, 200, 244, 260, 262, 304, 410, 446, 456, 461, 469, 470, 477, 483, 486, 487, 489, 492, 493, 494, 495, 496, 497, 499], "contextu": 496, "continu": [11, 17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 76, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 192, 200, 215, 217, 218, 223, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 436, 438, 441, 442, 443, 444, 454, 459, 460, 463, 465, 473, 475, 477, 483, 485, 486, 490, 492, 493, 498], "continuous_subspac": 491, "continuouscardinalityconstraint": [66, 67, 215, 477, 498], "continuousconstraint": [40, 48, 215, 477, 484, 486], "continuouslinearconstraint": [215, 438, 439, 454, 477, 498], "continuouslinearequalityconstraint": 477, "continuouslinearinequalityconstraint": 477, "continuousnonlinearconstraint": [47, 215, 477], "continuousparamet": [155, 215, 477], "contour": 459, "contract": 480, "contractor": 479, "contraint": 484, "contrast": [223, 359, 454, 456, 482, 486, 488], "contribut": [475, 477, 480, 499], "contributor": [475, 480], "contributori": 480, "control": [9, 12, 15, 17, 18, 23, 31, 130, 162, 173, 200, 215, 223, 307, 385, 462, 472, 475, 477, 480, 481, 484, 488, 489, 490, 495, 497, 498], "conv": [128, 304], "conv2d": [128, 304], "conv4": [128, 304], "conv5": [128, 304], "convei": 492, "conveni": [477, 491, 492, 494, 495], "convent": [217, 369], "converg": [472, 487], "convers": [34, 189, 450, 461, 477, 480, 487, 494, 498], "convert": [30, 125, 126, 128, 130, 134, 136, 219, 232, 295, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 346, 356, 360, 364, 371, 372, 387, 388, 389, 392, 397, 401, 404, 451, 466, 467, 477, 483, 485, 492, 493], "convert_bound": 477, "convert_sklearn": 450, "convert_sklearn_bayesian_ridg": 450, "convertibletofloat": [9, 12, 15, 18, 346], "cooki": 478, "coordin": [9, 12, 15, 18, 413], "copi": [128, 161, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 367, 387, 447, 450, 475, 477, 480, 499], "copy_x": 450, "copyright": [475, 480], "copytoclipboard": 450, "core": [34, 215, 217, 218, 223, 250, 252, 255, 257, 259, 260, 262, 264, 268, 275, 282, 284, 286, 288, 436, 475, 477, 486, 495], "coregion": 496, "coretest": [477, 478], "corpu": 489, "correct": [34, 296, 448, 475, 477, 478, 492], "correctli": [128, 304, 453, 463, 477], "correl": [148, 159, 382, 489, 496], "correspond": [28, 34, 47, 125, 128, 130, 134, 136, 161, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 236, 244, 246, 248, 255, 257, 258, 259, 264, 268, 282, 284, 286, 288, 294, 304, 355, 358, 360, 363, 364, 378, 379, 385, 386, 387, 388, 390, 413, 427, 428, 430, 435, 436, 453, 456, 458, 459, 463, 469, 470, 472, 475, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "correspondingli": 34, "corrupt": 377, "cost": [369, 432, 456, 485, 495], "costli": [217, 220, 226, 483], "could": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 156, 304, 371, 436, 446, 447, 453, 454, 470, 477, 482, 484, 489, 493, 495, 496], "count": [447, 453, 484], "counterclaim": 480, "counterpart": [355, 491, 495], "coupl": 448, "cours": [469, 470, 478, 492, 496], "cousin": 484, "cov": [477, 478], "cover": [359, 484, 486], "coverag": [477, 478], "cp": [431, 432, 433], "cpu": [128, 304], "craft": 493, "crash": [476, 477], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 224, 225, 240, 248, 255, 257, 259, 260, 262, 264, 268, 271, 276, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 341, 373, 378, 379, 394, 399, 400, 401, 413, 435, 446, 447, 448, 453, 454, 459, 463, 464, 472, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 497, 498, 499], "create_example_plot": [430, 432, 447, 448, 469, 470, 477], "create_from_config": [450, 451], "create_pi_plot": 448, "creation": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 162, 220, 223, 226, 442, 444, 450, 451, 458, 477, 491, 492, 498], "criteria": 448, "criterion": [369, 447, 481], "critic": [472, 477], "cross": [323, 469, 480, 497], "crucial": [475, 495], "csv": [431, 432, 447], "cube": [484, 495], "cuda": [128, 304, 476], "cultur": [489, 496], "curran": 496, "current": [11, 34, 128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 250, 252, 263, 304, 404, 447, 448, 453, 481, 483, 484, 485, 486, 489, 493, 494, 495, 496, 498, 499], "curv": [307, 316, 323, 448, 458, 484, 497], "custom": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 128, 141, 142, 143, 145, 146, 148, 151, 155, 156, 159, 162, 211, 264, 296, 299, 301, 304, 307, 318, 355, 388, 429, 436, 440, 447, 456, 463, 473, 475, 477, 483, 484, 489, 490, 493, 496, 498, 499], "custom_blackbox": 430, "custom_conversion_funct": 450, "custom_filt": 484, "custom_funct": 441, "customari": 480, "customconstraint": 441, "customdiscreteparamet": [477, 487, 498], "customencod": 148, "customonnxsurrog": [436, 450, 477], "customtransform": [495, 497], "cut": 497, "cutoff": [307, 324, 458, 482, 488, 495, 497], "cycl": [188, 475, 477, 486], "cyclic": 188, "d": [9, 12, 15, 18, 28, 59, 128, 336, 350, 413, 448, 451, 466, 467, 469, 470, 475, 480, 491, 496], "d401": 441, "d5dd00050e": 475, "damag": 480, "daniel": 479, "darmstadt": [475, 479], "dashboard": 477, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 75, 80, 92, 100, 104, 125, 130, 134, 136, 148, 156, 159, 182, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 246, 250, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 301, 307, 335, 339, 369, 375, 377, 384, 386, 403, 404, 414, 418, 426, 427, 428, 429, 430, 435, 436, 438, 439, 441, 442, 443, 444, 447, 451, 453, 459, 462, 465, 466, 467, 469, 470, 472, 473, 474, 475, 477, 481, 482, 483, 484, 485, 487, 489, 490, 492, 493, 494, 498, 499], "data_typ": 450, "databas": [34, 475, 492], "dataclass": [446, 456], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 92, 100, 104, 125, 130, 134, 136, 142, 145, 146, 148, 156, 159, 162, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 224, 225, 228, 242, 243, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 301, 307, 336, 337, 364, 365, 369, 414, 426, 427, 428, 430, 431, 435, 436, 441, 442, 443, 444, 447, 448, 450, 451, 453, 454, 459, 462, 465, 469, 470, 472, 477, 482, 483, 484, 486, 489, 498, 499], "datapoint": 477, "dataset": [188, 244, 369, 450, 493], "datatyp": [128, 304, 477], "date": 480, "dditiv": 487, "de": [235, 464, 475, 476, 477, 478, 483, 490, 497, 498], "deactiv": [477, 485], "deal": [433, 482, 489, 493], "debug": 477, "decid": [156, 453, 456, 463, 481], "declar": [56, 60, 68, 208, 442, 478, 484, 495], "decod": 450, "decor": [122, 292, 343, 378, 446, 477, 478, 493], "decorrel": [148, 159, 166, 466, 467, 489], "decreas": [188, 492, 496], "deduc": [438, 439, 462], "dedupl": 477, "deep": [369, 447], "deepcopi": 477, "deeper": 487, "deepli": 494, "def": [128, 304, 430, 441, 446, 447, 448, 453, 456, 459, 469, 472, 478, 484, 493], "default": [9, 12, 15, 18, 45, 100, 125, 128, 130, 134, 136, 148, 159, 162, 192, 198, 200, 205, 206, 207, 208, 215, 223, 235, 255, 275, 278, 304, 307, 324, 369, 383, 430, 431, 433, 436, 450, 451, 463, 475, 477, 478, 483, 484, 485, 487, 488, 489, 495, 497, 498], "default_campaign": 430, "defaultkernelfactori": [436, 441, 442, 443, 444, 465], "defaultscal": 477, "defend": 480, "defer": 477, "defin": [28, 34, 44, 47, 48, 55, 128, 151, 161, 182, 188, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 223, 244, 268, 270, 271, 296, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 377, 382, 383, 399, 400, 416, 431, 432, 433, 435, 441, 442, 443, 444, 450, 451, 456, 461, 472, 477, 478, 480, 483, 484, 486, 489, 492, 493, 495, 497], "definit": [215, 223, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 359, 454, 459, 475, 477, 480, 488, 491], "degener": [376, 394, 477], "degr": 465, "degre": [128, 304, 492], "degree_c": [450, 451, 465], "deliber": 480, "delici": 478, "delimit": 324, "deliveri": 489, "demand": [34, 470], "demo": 477, "demonstr": [429, 430, 431, 434, 437, 440, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 464, 465, 468, 469, 470, 471, 472, 477, 488, 491, 492, 495, 496, 497], "denot": [28, 324], "densiti": 448, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 56, 60, 91, 128, 217, 223, 244, 336, 432, 436, 440, 453, 454, 461, 472, 473, 474, 476, 477, 478, 484, 485, 486, 487, 491, 493, 494, 495, 496, 499], "dependenciesconstraint": 477, "deprec": [70, 128, 153, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 223, 228, 265, 304, 307, 308, 343, 441, 443, 444, 495], "deprecationwarn": [441, 443, 444, 447], "depth": 491, "deriv": [205, 206, 207, 208, 223, 359, 480, 484, 491, 495], "descend": [307, 458, 488, 495], "describ": [205, 206, 207, 208, 255, 257, 259, 264, 268, 282, 284, 286, 288, 294, 436, 441, 446, 447, 454, 456, 459, 478, 480, 482, 483, 484, 488, 489, 492, 493, 495], "descript": [125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 299, 301, 307, 399, 400, 477, 478], "descriptor": [159, 365, 477, 487, 489, 496], "deseri": [233, 237, 242, 465, 476, 477, 483, 498], "deserialize_datafram": 492, "design": [0, 23, 28, 128, 246, 304, 369, 378, 446, 450, 453, 456, 480, 481, 484, 486, 487, 488, 490, 492], "desir": [128, 130, 132, 304, 379, 457, 473, 475, 477, 481, 485, 487, 488, 490, 492, 495, 497, 499], "desirabilityobject": [34, 458, 475, 477, 482, 483, 487, 492, 495, 498], "desktop": 477, "despit": 477, "destin": [128, 304], "detach": [128, 304], "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 169, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 246, 250, 255, 257, 259, 260, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 383, 390, 394, 399, 400, 416, 431, 433, 438, 439, 450, 458, 463, 474, 475, 476, 477, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "detect": [339, 384, 476, 478], "detector": 472, "determin": [9, 12, 15, 18, 34, 47, 100, 190, 223, 250, 359, 383, 397, 406, 413, 431, 453, 456, 477, 480, 485, 490], "determinist": [128, 304, 413, 477], "detriment": 489, "dev": [441, 443, 444, 475, 477, 478], "develop": [475, 477, 489, 493, 495, 498], "deviat": [6, 20, 292, 316, 384, 450, 477, 483, 495, 497], "devic": [128, 304], "df": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 125, 130, 134, 136, 162, 215, 217, 223, 228, 243, 248, 336, 337, 364, 376, 380, 381, 382, 383, 385, 387, 388, 390, 414, 430, 441, 456, 472, 475, 484, 491, 492, 493, 495], "df_y": 459, "dfa": [336, 337], "di": [431, 432, 433, 435, 436, 479], "diagram": [128, 304, 477, 479, 498], "dicret": 484, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 205, 206, 207, 208, 215, 217, 220, 223, 226, 236, 237, 238, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 350, 353, 365, 369, 394, 399, 400, 401, 416, 447, 450, 469, 470, 477], "dict_bas": [431, 432, 433, 435, 436], "dict_ligand": [431, 432, 433, 435, 436], "dict_solv": [431, 432, 433, 435, 436, 441, 442, 443, 444, 453, 484], "dictat": [125, 130, 134, 136, 200, 217, 469, 470], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 236, 238, 240, 250, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 292, 294, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 350, 353, 394, 399, 400, 401, 431, 432, 433, 435, 451, 489, 493], "diff": 478, "differ": [9, 12, 15, 18, 58, 128, 130, 200, 215, 217, 218, 223, 244, 252, 304, 337, 377, 416, 432, 441, 446, 453, 456, 458, 459, 462, 463, 469, 470, 475, 477, 478, 480, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "differenti": [493, 496], "difficult": 496, "digit": [388, 475], "dilemma": 456, "dim": [28, 128, 304, 438, 439, 448, 450, 462, 463, 469, 470], "dimens": [28, 413, 430, 438, 439, 448, 450, 461, 462, 469, 470, 477, 489, 491, 494, 496], "dimension": [9, 12, 15, 18, 141, 142, 143, 145, 146, 148, 155, 156, 159, 278, 378, 413, 430, 469, 470, 477], "dimethylisoxazol": 496, "direct": [9, 12, 15, 18, 128, 304, 307, 431, 432, 433, 435, 475, 477, 480, 486, 489, 495, 499], "direct_aryl": [431, 432, 447], "directli": [9, 12, 15, 18, 128, 359, 470, 475, 477, 484, 485, 488, 492, 494, 495, 497], "directori": [431, 432, 447, 463, 477], "disabl": [128, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 441, 443, 444, 458, 477, 483, 485, 486, 488], "disadvantag": 492, "disappear": 477, "disc_ind": 463, "disc_indic": [462, 463], "disc_paramet": 463, "disc_recommend": [192, 463], "discard": [8, 453], "disclaim": 480, "discourag": 483, "discoveri": 475, "discret": [17, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 76, 141, 142, 143, 145, 146, 148, 155, 156, 159, 192, 200, 205, 206, 207, 208, 211, 215, 217, 218, 222, 223, 252, 412, 435, 438, 444, 447, 448, 450, 460, 463, 465, 470, 473, 475, 477, 481, 486, 487, 490, 492, 493, 498, 499], "discrete_param": [448, 469, 470], "discrete_spac": [438, 439, 463], "discrete_subspac": 491, "discretecardinalityconstraint": [477, 498], "discreteconstraint": [34, 54, 55, 56, 57, 58, 59, 60, 61, 62, 223, 477, 484, 486], "discretecust": 441, "discretecustomconstraint": [441, 477, 498], "discretedep": 442, "discretedependenciesconstraint": [60, 68, 442, 453, 498], "discreteexcl": 443, "discreteexcludeconstraint": [443, 477, 486, 498], "discretelinkedparametersconstraint": [477, 498], "discretenolabelduplicatesconstraint": [60, 453, 477, 498], "discreteparamet": [156, 223, 224, 225, 477], "discretepermutationinvarianceconstraint": [453, 498], "discreteprod": 444, "discreteproductconstraint": [444, 477, 498], "discretesamplingmethod": [17, 200, 414, 477, 481], "discretesumc": 444, "discretesumconstraint": [438, 444, 453, 477, 498], "discuss": [480, 484, 491, 493], "disguis": 495, "disjoint": 223, "disk": [477, 498], "displai": [388, 447, 480, 487], "distanc": [156, 210, 369, 413, 458, 495], "distict": 488, "distinct": [446, 472, 483, 490], "distinguish": [376, 453, 477, 484, 489, 496], "distribut": [34, 169, 172, 255, 257, 259, 264, 268, 282, 284, 286, 288, 316, 453, 463, 475, 477, 480, 481, 482, 494, 497], "distutil": 360, "div": 450, "divers": 494, "divid": [454, 495], "divis": 472, "dll": 476, "dmac": [431, 432, 433, 435, 436], "dmf": 484, "do": [31, 66, 217, 223, 263, 446, 450, 451, 453, 456, 458, 463, 465, 466, 467, 469, 474, 475, 476, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 495, 496, 497, 498, 499], "do_baybe_work": 485, "doc": [105, 169, 343, 475, 477], "doc101": 478, "doc103": 478, "docstr": [128, 304, 477], "doctest": 477, "document": [34, 128, 304, 404, 450, 475, 477, 478, 479, 480, 483, 487, 493], "doe": [33, 34, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 68, 100, 128, 161, 200, 244, 246, 248, 250, 255, 257, 259, 263, 264, 268, 282, 284, 286, 288, 296, 304, 323, 355, 364, 384, 404, 433, 436, 447, 450, 451, 453, 466, 467, 469, 470, 477, 478, 480, 484, 488, 490, 493, 494, 495, 496, 497, 499], "doesn": [128, 304], "doi": [280, 382, 475], "domain": [255, 257, 259, 264, 268, 282, 284, 286, 288, 430, 475, 477, 491, 493, 495, 497], "don": [474, 486], "done": [34, 383, 384, 433, 435, 441, 442, 443, 444, 450, 451, 465, 477, 481, 483, 484, 485, 486], "doubl": [128, 304, 404, 478, 485], "down": [492, 499], "downsid": 189, "draft": 477, "dramat": 496, "drastic": 489, "draw": [11, 117, 215, 454, 456, 461], "draw_arm": 456, "drawback": 488, "drawn": [23, 200], "drift": 472, "drive": [448, 496], "driven": [472, 481], "driver": 476, "drop": [31, 332, 380, 381, 382, 386, 447, 477, 482, 484, 497], "dropout": [128, 304], "drug": 482, "dry_run": 34, "dst_type": [128, 304], "dtype": [9, 12, 15, 18, 128, 163, 304, 369, 387, 407, 477], "due": [161, 470, 477, 478, 481, 484, 485, 488, 489, 490, 491, 492, 495, 497], "dunder": 477, "duplic": [34, 60, 128, 168, 304, 339, 350, 477, 484], "durat": [369, 482, 495], "dure": [34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 217, 223, 244, 353, 413, 453, 456, 469, 470, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 491, 492, 493, 494], "dx": 475, "dynam": [456, 472, 477, 492, 498], "d\u00fcbendorf": 479, "e": [8, 23, 28, 34, 37, 47, 56, 58, 59, 76, 103, 128, 148, 162, 163, 190, 217, 223, 244, 304, 339, 348, 349, 365, 369, 383, 384, 394, 421, 431, 432, 433, 447, 451, 453, 454, 456, 458, 475, 476, 477, 478, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499], "e3fp": 153, "e3fpfingerprint": 153, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 128, 130, 134, 136, 162, 182, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 217, 246, 248, 250, 252, 255, 257, 259, 263, 264, 268, 282, 284, 286, 288, 304, 323, 337, 365, 369, 376, 384, 430, 432, 433, 436, 448, 453, 454, 456, 459, 463, 469, 470, 472, 477, 478, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 499], "eagerli": 477, "earli": [447, 477], "earlier": [34, 474, 476], "earn": 456, "earned_reward": 456, "easi": [364, 477, 478, 492, 495], "easier": [478, 482, 499], "easiest": [475, 478], "easili": [447, 458, 475, 478, 483, 486, 489, 491, 492, 495, 496, 497], "ecfp": [153, 432, 477, 489], "ecfpfingerprint": 153, "ecosystem": 492, "edbo": [278, 280, 382, 477], "edbokernelfactori": [278, 477], "edg": 161, "edit": [475, 478], "editor": 496, "editori": 480, "edwin": 496, "effect": [58, 128, 185, 187, 188, 189, 190, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 446, 447, 456, 470, 472, 477, 481, 484, 489, 490, 493, 496, 499], "effici": [223, 369, 453, 475, 477, 485, 491], "effortlessli": 493, "ei": [3, 436], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 128, 218, 246, 252, 268, 292, 304, 325, 384, 432, 443, 463, 475, 480, 488, 489, 490, 491, 493, 494, 495], "elabor": 480, "elaps": 446, "elapsedtimeprint": 446, "electron": [479, 480], "electroshap": 153, "electroshapefingerprint": 153, "eleg": [469, 492], "element": [43, 44, 45, 55, 163, 252, 328, 339, 352, 358, 369, 373, 406, 407, 450, 453, 469, 470, 472, 477, 484, 493], "elev": 448, "elif": [462, 463], "elimin": [478, 481, 495], "els": [359, 360, 430, 431, 432, 433, 438, 439, 441, 442, 444, 447, 448, 456, 459, 462, 463, 469, 470, 472], "elsewher": 450, "embed": 497, "emd": 479, "emdgroup": 475, "emelin": 479, "emerg": 483, "emit": 472, "empir": 456, "emploi": [34, 456, 490], "empow": 494, "empti": [104, 128, 215, 217, 223, 230, 304, 337, 355, 364, 383, 388, 427, 428, 453, 463, 465, 477, 491], "empty_encod": [217, 223], "emptysearchspaceerror": 230, "emul": [23, 476, 477], "en": [105, 169], "enabl": [189, 250, 431, 432, 433, 453, 458, 469, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 490, 492, 493, 495, 496, 497], "encapsul": [369, 472], "encod": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 217, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 363, 365, 431, 432, 433, 435, 436, 441, 442, 443, 444, 447, 451, 453, 456, 465, 466, 467, 469, 470, 475, 477, 484, 491, 492, 496], "encompass": 483, "encount": [161, 185, 187, 188, 189, 190, 413, 476, 477, 478, 488], "end": [0, 128, 304, 324, 394, 447, 451, 456, 465, 480, 484, 488, 492, 497], "endeavor": 481, "endpoint": 477, "enforc": [128, 211, 304, 405, 419, 477, 478, 489], "engin": [476, 490, 492, 493, 495, 499], "enhanc": [28, 475], "enlarg": 489, "enough": [215, 492], "ensembl": 290, "ensur": [128, 161, 162, 304, 387, 431, 432, 433, 453, 454, 475, 477, 484, 492, 493], "enter": [82, 223, 488, 491, 497], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 394, 414, 477, 478, 481, 483, 484, 485, 495, 499], "entiti": 480, "entri": [34, 41, 44, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 128, 238, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 337, 384, 414, 433, 441, 442, 443, 444, 453, 474, 477, 484, 485, 486, 487, 499], "enum": [132, 150, 151, 152, 153, 210, 218, 275, 341, 342, 412, 477, 492], "enumer": [128, 131, 149, 304, 305, 448, 469, 470], "env": [128, 304, 477, 478], "envar_nam": 485, "environ": [211, 250, 405, 419, 430, 431, 432, 433, 439, 441, 442, 444, 447, 448, 450, 456, 459, 469, 470, 472, 475, 476, 477, 478, 484, 498], "envvar_nam": 485, "eq": [441, 453], "equal": [48, 130, 190, 215, 323, 456, 465, 477, 484, 488, 491, 492, 495], "equat": [48, 484, 493], "equidist": [413, 477, 489], "equip": 484, "equival": [23, 37, 60, 128, 304, 332, 439, 461, 472, 477, 481, 484, 493, 495, 497], "erg": 153, "ergfingerprint": 153, "err": 450, "errno": [431, 432, 447], "erron": [341, 477], "error": [128, 188, 246, 248, 250, 265, 304, 353, 386, 433, 450, 451, 456, 476, 477, 482, 484, 490], "error_msg": [128, 304], "esian": 475, "especi": [478, 482, 495], "essenti": [483, 490], "establish": [447, 469, 470, 496], "estat": 153, "estatefingerprint": 153, "ester": [431, 432, 433, 435, 436], "estim": [217, 222, 223, 255, 369, 456, 477, 494, 498], "estimate_product_space_s": [217, 223, 499], "estimated_win_r": 456, "estimation_bia": 456, "estimation_vari": 456, "et": [432, 475, 489], "etc": [43, 44, 45, 128, 143, 217, 299, 304, 496], "ethan": 492, "ethanol": [453, 484], "euclidean": [369, 413], "eval": [128, 304], "eval_during_augment": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "eval_during_cr": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "eval_during_model": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 128, 130, 134, 136, 198, 200, 290, 291, 304, 360, 462, 463, 477, 483, 485, 490, 493, 496], "even": [190, 292, 381, 469, 470, 480, 482, 483, 485, 488, 489, 493, 494, 496, 497, 499], "event": [34, 447, 480], "everi": [128, 304, 482, 499], "everyth": [478, 484], "evolv": [448, 478], "ex": 487, "exabyt": 499, "exact": [34, 384, 446, 476, 477, 484, 488, 489, 494], "exactexplain": [98, 101, 487], "exactli": [9, 12, 15, 18, 47, 125, 130, 134, 136, 217, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 453, 477, 482, 483, 491, 492, 495], "examin": 483, "exampl": [9, 12, 15, 18, 128, 161, 162, 248, 304, 315, 323, 336, 337, 350, 359, 369, 383, 429, 430, 434, 437, 440, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 482, 483, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "example_input_nam": 450, "exceed": 447, "exceedingli": 493, "except": [34, 128, 304, 355, 364, 372, 391, 393, 431, 432, 433, 447, 451, 466, 467, 475, 476, 477, 480, 486, 494, 497], "excepthook": 476, "exceptiongroup": [66, 477], "excess": 499, "exchang": 497, "exclud": [34, 59, 380, 441, 442, 443, 444, 465, 477, 480, 484, 498], "exclude_list": 382, "exclus": [57, 440, 473, 477, 480, 484, 493, 498], "execut": [34, 70, 128, 246, 304, 355, 430, 432, 458, 476, 477, 478, 480, 485, 492, 493, 496], "exemplari": 483, "exemplifi": 497, "exercis": 480, "exhaust": [188, 200, 487, 490], "exist": [34, 122, 128, 217, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 343, 355, 453, 476, 477, 478, 481, 483, 484, 486, 492, 494, 496, 498], "exot": 477, "exp": [307, 472, 477, 488], "exp_rep": [223, 441, 442, 443, 444, 453, 491], "exp_rep_byt": [222, 499], "exp_rep_human_read": [222, 499], "exp_rep_shap": [222, 499], "expect": [3, 4, 9, 10, 12, 13, 15, 16, 18, 19, 31, 55, 78, 86, 128, 260, 262, 270, 304, 355, 378, 387, 436, 442, 448, 450, 453, 454, 456, 467, 477, 478, 483, 484, 487, 488, 489, 492, 493, 495, 499], "expens": [11, 200, 438, 493], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 182, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 244, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 431, 432, 433, 435, 436, 462, 463, 472, 477, 481, 483, 484, 486, 488, 489, 490, 495, 496, 498], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 104, 142, 145, 146, 148, 156, 159, 182, 185, 186, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 217, 222, 223, 244, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 299, 301, 307, 377, 441, 442, 443, 444, 448, 465, 475, 477, 481, 482, 484, 486, 488, 489, 491, 492, 493, 495, 496, 498, 499], "experimentalist": 474, "expert": 369, "expir": 498, "explain": [75, 99, 100, 101, 103, 104, 448, 477, 479, 494, 498], "explain_target": [100, 477], "explainer_cl": [100, 104, 487], "explan": [100, 104, 128, 304, 477, 483, 487, 494], "explanation_index": [100, 487], "explicit": [162, 189, 446, 447, 451, 453, 461, 466, 467, 477, 478, 488, 492, 494, 496, 497, 498], "explicitli": [128, 215, 223, 446, 463, 470, 477, 480, 486, 488, 491, 495, 496, 497], "exploit": [8, 23, 456, 477], "explor": [8, 34, 456, 472, 481, 490, 491, 496], "exploratori": 481, "expon": [307, 322, 495, 497], "exponenti": [223, 307, 319], "exponentialtransform": 497, "expos": [34, 446, 477], "exposur": 477, "expr": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62], "express": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 475, 477, 480, 484, 495, 497], "extend": [161, 307, 486, 489, 496], "extens": [477, 490], "extern": [478, 479], "extra": [128, 304, 369, 432, 475, 477, 485], "extra_repr": [128, 304], "extract": [34, 185, 187, 188, 189, 190, 385, 448, 469, 487, 498], "extract_pi": 448, "f": [324, 344, 345, 360, 369, 430, 431, 432, 433, 438, 439, 441, 442, 443, 444, 446, 447, 448, 453, 454, 461, 462, 463, 469, 470, 497, 499], "f1": 493, "f2": 493, "fa": 450, "fabian": [475, 479], "face": [255, 257, 259, 264, 268, 282, 284, 286, 288, 454, 456], "facilit": 490, "fact": [23, 448, 453, 474, 484, 488, 495], "factor": [9, 12, 15, 18, 304, 315, 475, 483, 484, 495, 497, 499], "factori": [162, 215, 268, 269, 270, 271, 272, 278, 280, 351, 436, 441, 442, 443, 444, 465, 477], "fail": [450, 463, 467, 476, 477, 494], "failur": [301, 477, 480], "failure_valu": 301, "fairli": 488, "fake": [248, 375, 379, 435, 436, 450, 451, 477, 482, 493, 498], "fall": [161, 190, 447, 483], "fallback": [211, 223, 250, 395, 450, 477, 491, 495], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 100, 104, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 187, 188, 189, 190, 211, 215, 217, 223, 228, 255, 257, 259, 264, 268, 282, 284, 286, 288, 301, 304, 307, 315, 348, 349, 353, 359, 360, 373, 378, 383, 385, 386, 390, 427, 436, 441, 442, 443, 444, 450, 465, 466, 467, 472, 477, 485, 488, 492, 495], "falsi": 485, "famili": 484, "familiar": [431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 450, 451, 462, 463, 465], "fang": 479, "fantasi": 11, "far": [307, 483, 485], "farthest": [210, 211, 412, 413, 436, 475, 477, 479, 481, 485, 490], "farthest_point_sampl": [211, 477], "fast": [369, 441, 443, 444, 482, 491], "faster": [31, 223, 369, 482], "fault": 95, "faulti": 476, "favicon": 477, "favor": [128, 304, 477], "fc": [431, 432, 433], "feasibl": [79, 483, 487], "featur": [100, 117, 159, 382, 475, 476, 477, 478, 484, 487, 494, 496, 497], "fed": [475, 487], "feder": 479, "fee": 480, "feed": [369, 459, 474, 475, 486, 496], "feedback": [472, 479], "feel": 447, "fetch": 478, "few": [430, 456, 477, 478, 481, 489, 492, 494, 496, 499], "field": [237, 372, 373, 477, 496, 498], "fifti": 480, "fig": [448, 459, 472], "figsiz": [459, 472], "figur": 448, "file": [431, 432, 433, 447, 450, 451, 463, 475, 477, 480, 485, 492, 496], "filenotfounderror": [431, 432, 433, 447], "fill": [34, 248, 448], "fill_": [128, 304], "filler": 484, "filter": [34, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 217, 223, 380, 383, 441, 453, 477, 484, 486, 491, 496, 499], "filter_attribut": 477, "filter_df": [34, 477], "filterwarn": 447, "final": [430, 432, 435, 447, 453, 470, 472, 497], "find": [217, 353, 407, 475, 481, 483, 484, 488, 496], "fine": [451, 465, 466, 467, 475, 495], "finer": [162, 475], "finetun": [128, 304], "fingerprint": [153, 159, 363, 365, 475, 477, 479, 489], "finish": 482, "finit": [188, 244, 252, 356, 393, 421, 456, 489, 493], "fire": [128, 304], "first": [210, 217, 250, 328, 344, 345, 406, 413, 430, 432, 435, 436, 441, 446, 447, 450, 451, 453, 458, 459, 463, 467, 469, 470, 472, 475, 476, 477, 483, 484, 488, 489, 490, 491, 495, 496, 497, 499], "fit": [34, 208, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 369, 414, 416, 431, 432, 433, 441, 442, 443, 444, 450, 465, 477, 480, 482, 484, 488, 489, 494, 495, 497], "fit_gpytorch_ml": 477, "fit_gpytorch_mll_torch": 477, "fit_intercept": 450, "fit_param": 369, "fit_predict": 369, "fit_transform": 369, "fitnr": 34, "fitzner": [475, 479], "fix": [244, 271, 447, 448, 453, 456, 459, 462, 463, 478, 483, 489, 493, 496, 499], "flag": [28, 34, 56, 100, 104, 125, 130, 134, 136, 200, 217, 218, 223, 307, 378, 385, 458, 474, 477, 482, 483, 486, 487, 488, 490, 495], "flake8": 477, "flexibl": [446, 461, 477, 488, 492, 493], "flexibli": 490, "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 45, 47, 48, 50, 51, 111, 112, 113, 114, 115, 116, 117, 118, 122, 128, 130, 148, 155, 156, 159, 163, 166, 167, 173, 174, 175, 176, 177, 178, 179, 198, 200, 222, 223, 246, 250, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 292, 301, 302, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 346, 369, 371, 376, 377, 382, 389, 392, 394, 397, 403, 404, 406, 407, 418, 421, 422, 423, 446, 448, 450, 456, 477, 478, 482, 483, 498], "float16": [128, 304], "float64": [128, 304, 418, 459], "floattensortyp": 450, "fly": [189, 492, 494], "fn": [128, 304, 343], "focu": [458, 483], "focus": [136, 459, 463, 475], "folder": [432, 475, 478, 485, 494], "follow": [128, 163, 185, 187, 188, 189, 190, 217, 246, 248, 250, 304, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 446, 447, 451, 456, 463, 466, 467, 469, 470, 472, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "footprint": [11, 217], "forbid": 424, "forc": [100, 102, 161, 200, 477, 478, 487, 490], "foreach": 450, "forest": [287, 288], "fork": 478, "form": [128, 223, 244, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 369, 472, 474, 475, 478, 480, 481, 483, 488, 489, 490, 491, 492, 493, 495, 499], "formal": [454, 474], "format": [48, 128, 304, 369, 388, 397, 450, 451, 465, 466, 475, 476, 477, 478, 483, 485, 492, 493], "format_except": 476, "former": [453, 477], "formul": [482, 496], "formula": 453, "forrest": 477, "forward": [128, 304], "forward_pr": [128, 304], "found": [93, 128, 162, 215, 223, 304, 353, 363, 404, 407, 447, 453, 475, 476, 478, 483, 484, 490, 496, 498], "foundat": 490, "four": [453, 488], "fourier": 117, "fourth": 484, "fp": [412, 477, 481, 498], "fp_size": [153, 489], "fpsampl": [211, 477, 479, 485], "fpsiniti": 211, "fpsrecommend": [436, 450, 451, 465, 466, 467, 475, 477, 479, 482, 485, 490], "frac": [324, 470, 488, 497], "frac1": 442, "fraction": [17, 31, 112, 371, 447, 481, 484], "fraction1": 442, "fraction_1": 484, "fraction_2": 484, "fraction_3": 484, "fractur": 484, "frame": [377, 487, 499], "frame1": 442, "frame2": 442, "frame_1": 484, "frame_2": 484, "framea": 442, "framea_a": 442, "frameb": 442, "framework": [483, 489], "free": [478, 480], "freedom": 492, "freeli": 453, "freez": [128, 304], "frequenc": 117, "frequent": 456, "fresh": 447, "frictionless": 492, "friendli": 477, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 153, 155, 156, 159, 161, 162, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 240, 248, 250, 252, 255, 257, 259, 262, 264, 268, 271, 276, 280, 282, 284, 286, 288, 292, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 341, 355, 359, 360, 364, 367, 369, 377, 378, 380, 382, 394, 399, 400, 413, 414, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 464, 465, 467, 469, 470, 472, 473, 474, 476, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 493, 494, 496, 498, 499], "from_anchor": [323, 497], "from_bound": [215, 477, 491], "from_campaign": [100, 487], "from_config": [34, 466, 467, 483], "from_datafram": [215, 217, 223, 477, 486, 491, 492, 499], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 399, 400, 450, 492], "from_erroneous_cal": 341, "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 399, 400, 450, 451, 465, 483, 492], "from_legacy_interfac": [307, 495], "from_margin": [324, 497], "from_modern_interfac": [307, 495], "from_paramet": [215, 217, 223, 477], "from_points_mapped_to_unit_interval_bound": 315, "from_preset": 268, "from_product": [215, 217, 223, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 459, 461, 462, 463, 465, 466, 467, 469, 470, 475, 477, 484, 486, 491, 492, 493], "from_recommend": [100, 487], "from_record": [492, 493], "from_repl": [262, 494], "from_simplex": [223, 453, 477, 486, 491, 499], "from_surrog": [100, 487], "from_width": [324, 497], "front": 488, "frontier": 459, "frozenset": [47, 215, 453], "fsspec": 477, "fulfil": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 447, 453, 454], "full": [28, 215, 404, 429, 458, 473, 477, 483, 484, 486, 487, 489, 495, 496, 498], "full_factori": 215, "full_lik": 448, "full_lookup": [431, 432, 433], "fulli": [128, 304, 453, 475, 477, 485, 486, 493], "fullparamnam": 450, "fulltest": 478, "func": [369, 478], "func_nam": 469, "funci": 477, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 42, 48, 49, 55, 63, 65, 73, 85, 95, 97, 100, 116, 124, 128, 129, 133, 135, 137, 160, 161, 165, 198, 200, 216, 221, 227, 231, 232, 240, 241, 244, 245, 247, 249, 250, 251, 256, 263, 269, 274, 289, 293, 298, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 335, 338, 344, 345, 357, 361, 370, 374, 377, 379, 384, 385, 388, 391, 396, 398, 402, 408, 411, 420, 435, 441, 442, 443, 444, 446, 448, 450, 453, 456, 459, 465, 469, 470, 471, 472, 475, 476, 477, 481, 484, 485, 486, 488, 490, 491, 493, 494, 495, 496, 497, 498, 499], "function_nam": [469, 470], "functionalgroup": 153, "functionalgroupsfingerprint": 153, "fundament": [472, 489, 492], "furo": 477, "further": [9, 12, 15, 18, 384, 453, 454, 465, 475, 482, 486, 490, 491, 494, 495, 496, 498], "furthermor": 482, "furyl": [431, 432, 433], "futur": [60, 125, 128, 130, 134, 136, 263, 304, 441, 443, 444, 447, 469, 487, 495], "fuzzy_row_match": 477, "g": [56, 58, 59, 76, 103, 128, 148, 162, 217, 223, 304, 339, 345, 365, 384, 456, 458, 475, 476, 477, 478, 481, 482, 484, 485, 487, 488, 489, 490, 491, 493, 495, 497, 499], "g1": 454, "g2": 454, "g3": 454, "gain": [223, 483, 487], "gamma": 174, "gammaprior": 477, "gan": [128, 304], "garbag": 477, "gather": [190, 469, 470, 481, 496], "gaussian": [105, 205, 257, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 316, 436, 472, 477, 484, 490, 496, 497], "gaussian_kd": 448, "gaussian_process": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 268, 270, 271, 275, 278, 280, 436, 477], "gaussianmixtureclusteringrecommend": 490, "gaussianprocesspreset": [268, 276], "gaussianprocesssurrog": [276, 436, 441, 442, 443, 444, 448, 465, 466, 467, 477, 494], "gcf": [431, 433], "ge": 439, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 152, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 255, 257, 259, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 359, 365, 369, 376, 394, 398, 399, 400, 408, 416, 430, 436, 446, 453, 458, 459, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 492, 493, 494, 495, 496, 498, 499], "geom_mean": [130, 132, 477, 488], "geometr": 132, "gerit": 475, "germani": [475, 479], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 198, 200, 215, 268, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 369, 436, 447, 450, 453, 462, 463, 474, 475, 477, 482, 495, 497, 498, 499], "get_absolute_threshold": [47, 477], "get_acquisition_funct": [34, 198, 200, 477], "get_buff": [128, 304], "get_candid": [223, 447, 448], "get_cmap": 448, "get_codomain": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329], "get_comp_rep_parameter_indic": [217, 477], "get_current_recommend": [185, 187, 188, 189, 190, 477], "get_extra_st": [128, 304], "get_imag": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 477], "get_integration_point": 17, "get_invalid": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62], "get_invalid_polar": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62], "get_lin": 447, "get_metadata_rout": 369, "get_next_recommend": [185, 187, 188, 189, 190, 477], "get_non_meta_recommend": [185, 187, 188, 189, 190, 477], "get_param": 369, "get_paramet": [128, 304], "get_parameters_by_nam": [215, 217, 223], "get_parameters_from_datafram": [215, 223], "get_subclass": 436, "get_submodul": [128, 304], "get_surrog": [34, 100, 198, 200, 477, 487, 494], "get_transform_object": [390, 477], "get_transform_paramet": 477, "get_valid": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 477], "getawai": 153, "getawayfingerprint": 153, "getcomputedstyl": 450, "ghosecrippen": 153, "ghosecrippenfingerprint": 153, "git": [475, 478], "github": [280, 356, 382, 450, 477, 478, 479], "give": [450, 451, 453, 470, 480, 483, 484, 488, 492, 497], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 32, 34, 37, 43, 44, 45, 47, 68, 93, 100, 103, 104, 125, 128, 130, 134, 136, 138, 159, 161, 162, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 229, 244, 248, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 292, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 337, 345, 348, 349, 353, 354, 355, 358, 359, 362, 363, 371, 373, 375, 378, 385, 394, 406, 413, 416, 426, 441, 442, 443, 444, 447, 453, 456, 463, 469, 470, 477, 482, 483, 484, 488, 491, 493, 494, 497], "glass_transition_tempc": 489, "global": [17, 128, 304, 409, 477, 498, 499], "gmm": 205, "go": [336, 453, 475], "goal": [430, 456, 458, 472, 488, 496], "goe": 494, "good": [447, 483, 495], "goodwil": 480, "googl": [477, 478], "govern": 475, "gp": [255, 257, 259, 264, 268, 282, 284, 286, 288, 477], "gpu": [128, 304], "gpu1": [128, 304], "gpytorch": [105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 169, 171, 173, 174, 175, 176, 177, 178, 179, 477], "gpytorchposterior": 304, "grab": 474, "grad": [128, 304], "grad_input": [128, 304], "grad_output": [128, 304], "gradient": [11, 128, 200, 286, 304, 477, 485, 490, 495], "grain": 495, "grant": [477, 480], "granular": [451, 465, 466, 467, 475], "granularity_coar": 465, "granularity_fin": 465, "great": [456, 492], "greater": [190, 200], "greatli": 478, "greedi": [200, 477, 490], "green": 450, "grid": [459, 469, 470], "grid_d": [469, 470], "grossli": 480, "ground": [477, 495], "group": [91, 200, 337, 350, 416, 454, 475, 477, 483, 484, 485, 487], "groupbi": [250, 252], "grow": 499, "gt": [444, 453], "gu16": 489, "guarante": [128, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 477, 484, 485, 490], "guid": [369, 435, 475, 476, 477, 478, 481, 483, 486, 491, 493, 496, 497], "guidelin": [477, 478, 481], "h": [369, 497], "ha": [34, 56, 79, 80, 84, 85, 100, 128, 188, 215, 217, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 316, 336, 353, 355, 359, 376, 387, 413, 414, 432, 436, 441, 442, 443, 444, 453, 463, 465, 475, 477, 478, 480, 482, 483, 484, 487, 489, 491, 492, 493, 495, 496, 497], "had": [244, 484, 489, 493], "half": [128, 156, 175, 176, 304, 394, 463, 482], "halfcauchyprior": 477, "halfnormalprior": 477, "halter": 475, "hamster": 496, "hand": [48, 159, 250, 454, 456, 459, 469, 470, 472, 475, 483, 492, 494], "handi": 484, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 100, 128, 134, 143, 246, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 386, 391, 441, 442, 456, 472, 477, 482, 483, 488, 499], "happen": [92, 188, 463, 470, 476, 477, 478, 491, 492, 496, 497], "happili": 488, "hard": [477, 495, 496, 499], "hardcod": 477, "harmless": 480, "hartmann": [448, 469, 470], "hasattr": [438, 439, 462, 463], "hash": 489, "hashabledict": 477, "have": [28, 31, 34, 41, 43, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 125, 128, 130, 134, 136, 159, 161, 208, 217, 244, 263, 296, 304, 337, 350, 353, 369, 384, 385, 404, 425, 431, 432, 435, 436, 441, 442, 446, 448, 453, 454, 456, 462, 463, 469, 470, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 499], "head": 477, "header": 373, "heart": 496, "heatmap": [100, 102], "help": [128, 304, 456, 458, 492, 493, 496], "helper": [307, 446, 448, 450, 453, 492], "henc": [364, 453, 456, 465, 484, 489, 499], "here": [59, 404, 431, 433, 435, 438, 439, 446, 447, 451, 453, 454, 462, 463, 465, 469, 470, 472, 474, 475, 476, 482, 484, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497], "herebi": 480, "herein": [480, 483], "heurist": [200, 369], "hidden": 495, "hierarch": 492, "hierarchi": [93, 477, 478, 483, 492], "high": [278, 430, 456, 472, 477, 478, 481, 483, 484, 489, 492], "higher": [159, 456, 476, 484, 487, 488, 490, 495, 497], "highest": [324, 481, 492], "highlight": 496, "hing": 497, "hint": [478, 495], "histor": 489, "histori": 478, "hoc": 488, "hold": [47, 350, 480, 492, 495], "home": [441, 443, 444], "homepag": [475, 477], "hood": 489, "hook": [52, 128, 223, 232, 236, 304, 355, 473, 476, 477, 478], "hopp": [475, 479], "host": [128, 304, 477], "hot": [150, 432, 456, 475, 477, 489], "how": [57, 128, 246, 248, 304, 307, 369, 384, 413, 430, 431, 433, 434, 435, 436, 437, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 463, 465, 466, 467, 470, 472, 475, 483, 484, 488, 493, 494, 495, 496, 497, 498], "howev": [128, 162, 223, 263, 304, 355, 446, 453, 456, 462, 463, 472, 474, 476, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496, 499], "hrovatin": [475, 479], "hsuan": 479, "html": [105, 169, 343, 404, 450, 477], "http": [105, 169, 280, 343, 356, 382, 404, 475, 477, 480, 496], "hue": [430, 431, 432, 433, 447, 469, 470, 472], "human": [222, 397, 465, 477, 479, 492], "hybrid": [27, 28, 76, 191, 192, 200, 212, 217, 218, 436, 437, 441, 442, 443, 444, 460, 465, 473, 475, 477, 490, 491], "hybrid_recommend": 463, "hybrid_sampl": [200, 490], "hypercel": 31, "hyperrectangl": [215, 491], "hypervolum": [9, 12, 15, 18, 31], "hypothesi": [475, 477, 478], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 75, 76, 82, 84, 85, 87, 89, 100, 103, 104, 119, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 230, 244, 246, 248, 250, 252, 255, 257, 259, 260, 262, 263, 264, 268, 278, 282, 284, 286, 288, 292, 296, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 337, 340, 342, 343, 344, 345, 348, 349, 353, 355, 356, 358, 359, 360, 363, 364, 369, 373, 376, 377, 378, 379, 383, 384, 385, 388, 393, 394, 401, 404, 406, 407, 413, 414, 421, 427, 428, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 462, 463, 465, 466, 467, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "ibm": 369, "icon": 450, "ideal": [482, 484, 493], "ident": [162, 320, 332, 336, 337, 477, 486, 489, 492, 495, 496, 497], "identif": 456, "identifi": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 250, 350, 364, 384, 385, 447, 477, 484, 487, 488, 489, 491, 492, 493, 496], "identitytran": [441, 442, 443, 444, 465], "identitytransform": 497, "idx": [128, 304], "idx_offset": 48, "ignor": [125, 128, 130, 134, 136, 188, 200, 217, 246, 248, 250, 304, 353, 369, 382, 433, 447, 463, 477, 484, 492, 497, 499], "ignore_exampl": 477, "ignore_list": 381, "ignore_w": [128, 304], "ii": 480, "iii": 480, "illustr": [459, 461, 486], "iloc": 482, "imag": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 456, 477], "imagin": [453, 456, 472], "immedi": [128, 304, 446, 483], "immut": 477, "impact": [432, 470, 485], "imperfect": 377, "implement": [23, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 182, 193, 211, 252, 260, 304, 327, 329, 357, 441, 447, 453, 469, 477, 478, 479, 481, 487, 490, 491, 493, 495, 496, 498], "impli": [453, 475, 480, 484, 489], "implicitli": 492, "import": [9, 12, 15, 18, 91, 100, 130, 248, 315, 323, 369, 447, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499], "impos": [453, 454, 477, 484], "imposs": [486, 492], "imprint": 497, "improv": [3, 4, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 436, 439, 445, 447, 473, 475, 477, 480, 485], "imput": [246, 248, 429, 433, 473, 475], "impute_mod": [246, 248, 250, 433, 493], "in_featur": [128, 304], "inabl": 480, "inaccuraci": [475, 477], "inact": [47, 161, 163, 200, 215, 477], "inactive_parameter_combin": [47, 215, 477], "inc": 496, "incident": 480, "includ": [66, 68, 125, 128, 130, 134, 136, 161, 190, 246, 304, 348, 349, 381, 431, 442, 451, 453, 466, 467, 470, 477, 478, 480, 481, 482, 484, 486, 499], "inclus": 480, "incom": [492, 497], "incompat": [72, 73, 74, 75, 76, 77, 104, 264, 443, 484], "incompatibilityerror": [34, 307], "incompatible_kei": [128, 304], "incompatibleacquisitionfunctionerror": 482, "incompatibleexplainererror": 487, "incomplet": [477, 482], "incompletemeasurementserror": 426, "inconsist": 477, "incorpor": [480, 482, 494, 499], "incorrect": 477, "incorrectli": 477, "increas": [11, 188, 250, 324, 469, 470, 477, 481, 489, 496], "increment": 223, "incur": 480, "inde": 483, "indefinit": [188, 246], "indemn": 480, "indemnifi": 480, "indent": [373, 477], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 192, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 450, 477, 488, 490, 493, 494], "independentgaussiansurrog": [264, 282, 284, 286, 477], "index": [34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 217, 250, 262, 336, 337, 369, 383, 384, 450, 451, 463, 465, 477, 482, 487, 489, 491, 493], "indexkernel": 477, "indic": [9, 12, 15, 18, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 95, 103, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 185, 187, 188, 189, 190, 217, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 336, 337, 340, 342, 369, 378, 413, 453, 463, 477, 480, 482, 486, 490, 493, 494], "indirect": [348, 349, 480], "indistinguish": 453, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 56, 57, 120, 121, 128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 246, 262, 304, 328, 388, 447, 454, 459, 477, 480, 483, 486, 487, 488, 490, 496, 497, 498], "induc": [47, 456], "induced_target": 472, "induced_\u03bb": 472, "industri": 496, "ineffici": [223, 484], "inequ": [48, 215, 491], "inertia_": 369, "inf": [8, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 497], "infeas": [484, 486], "infer": [162, 469, 470, 477, 491], "infin": 167, "infinit": [188, 189, 351, 393, 421, 422, 477, 489], "influenti": 496, "info": 477, "inform": [28, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 299, 301, 304, 307, 369, 385, 399, 400, 431, 432, 433, 448, 453, 462, 463, 470, 472, 475, 477, 478, 480, 482, 486, 488, 489, 491, 495, 496, 498], "infring": 480, "ingest": [223, 246, 477, 489, 490], "ingredi": [453, 454, 484, 495], "inher": [23, 161, 255, 257, 259, 264, 268, 282, 284, 286, 288, 453, 494], "inherit": 478, "init": [128, 304, 369], "init_weight": [128, 304], "initi": [111, 112, 113, 114, 115, 116, 117, 118, 122, 128, 190, 192, 200, 205, 206, 207, 208, 210, 211, 223, 246, 250, 304, 369, 413, 429, 441, 442, 443, 444, 447, 448, 465, 470, 473, 477, 479, 482, 483, 485, 489, 490, 492, 493, 496], "initial_data": [246, 250, 431, 470, 493], "initial_recommend": [190, 436, 447, 448, 450, 451, 456, 465, 466, 467, 475, 490], "initial_recommender_cl": 477, "initial_strategi": 477, "initial_typ": 450, "initialis": 369, "inject": [492, 495], "inner": [183, 383, 487, 490, 492], "innerhtml": 450, "inplac": [128, 304, 432, 469, 470, 499], "input": [43, 44, 45, 80, 125, 128, 130, 134, 136, 142, 145, 146, 148, 156, 159, 215, 217, 223, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 350, 369, 371, 372, 377, 378, 379, 383, 386, 387, 389, 394, 395, 401, 406, 413, 426, 427, 428, 430, 450, 459, 469, 470, 477, 488, 492, 493, 496, 497], "input_dim": 450, "input_label": 378, "inputtransform": 416, "insid": [324, 447, 450, 451, 476, 492, 495], "insight": [100, 447, 475, 477, 479, 498], "inspect": [359, 446, 453], "inspir": 497, "instabl": [477, 484], "instal": [211, 477, 478, 484, 485, 487, 489, 499], "instanc": [43, 44, 45, 56, 59, 100, 128, 190, 217, 304, 369, 401, 442, 447, 453, 454, 475, 476, 478, 482, 483, 484, 485, 487, 489, 491, 492, 493, 499], "instanti": [447, 483], "instead": [128, 185, 187, 188, 189, 190, 304, 364, 378, 386, 441, 443, 444, 475, 476, 477, 483, 484, 488, 489, 492, 493, 495, 496, 497, 499], "institut": [479, 480], "instruct": [475, 477, 498], "int": [9, 11, 12, 15, 17, 18, 23, 34, 37, 47, 48, 54, 100, 107, 108, 109, 112, 114, 115, 116, 117, 118, 125, 128, 130, 134, 136, 150, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 246, 250, 252, 301, 302, 304, 307, 322, 369, 379, 388, 389, 407, 409, 410, 413, 414, 416, 441, 443, 444, 453, 456, 470, 477, 478, 489], "int64": 369, "integ": [37, 150, 217, 250, 463, 477, 478, 489], "integr": [17, 128, 304, 477, 478, 481, 483], "intend": [435, 446, 469, 478, 490], "intens": 489, "intention": 480, "interact": [33, 34, 435, 475, 476, 483, 486, 492], "interchang": 453, "interconnect": 483, "interest": [483, 487, 488, 489, 499], "interfac": [182, 260, 270, 307, 446, 448, 477, 480, 483, 486, 487, 495, 498], "intermedi": [208, 413], "intern": [34, 48, 60, 128, 188, 304, 430, 447, 477, 482, 484, 485, 489, 490, 491, 492], "internship": 479, "interplai": 477, "interpol": [112, 278, 477, 495], "interpret": [9, 12, 15, 18, 217, 244, 316, 371, 451, 453, 466, 467, 470, 485, 491, 493, 495, 497], "interrupt": 70, "intersect": 463, "interv": [34, 47, 155, 161, 163, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 458, 477, 483, 489, 492, 495, 497], "intrins": 496, "introduc": [369, 476, 477, 484, 489, 490, 493], "intuit": [483, 487, 495], "invalid": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 81, 128, 223, 304, 364, 414, 451, 466, 476, 477, 483, 484, 491], "invalid_config": 467, "invalid_surrogate_model": 451, "invalid_typ": 467, "invari": [56, 59, 60, 336, 337, 484], "invers": [236, 492], "invert": [34, 383], "investig": [244, 472, 493, 494], "invok": [128, 304, 493, 498, 499], "involv": [34, 223, 262, 446, 453, 472, 475, 487, 488, 489, 492, 496, 497], "ipu": [128, 304], "irrelev": [453, 477, 484], "irrevoc": 480, "is_bound": [394, 477], "is_cardinality_fulfil": 477, "is_continu": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159], "is_degener": 394, "is_discret": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159], "is_empti": [215, 223, 399, 400, 477], "is_eq": 48, "is_finit": 477, "is_fully_unbound": 394, "is_half_bound": 394, "is_in_rang": [141, 142, 143, 145, 146, 148, 155, 156, 159], "is_inact": 477, "is_left_bound": 394, "is_mc": 477, "is_multi_output": [125, 130, 134, 136, 477], "is_norm": [307, 477], "is_numer": [141, 142, 143, 145, 146, 148, 155, 156, 159, 477], "is_right_bound": 394, "is_stat": [185, 187, 188, 189, 190, 477, 486], "isinst": 497, "iso": 450, "isol": 483, "isoxazol": 496, "issu": [263, 343, 356, 387, 477, 480, 493, 499], "item": [44, 141, 142, 143, 145, 146, 148, 155, 156, 159, 453, 456, 469, 470, 489], "iter": [9, 12, 15, 18, 34, 44, 47, 120, 121, 128, 130, 134, 145, 146, 148, 159, 188, 189, 215, 217, 223, 246, 263, 304, 307, 327, 328, 329, 332, 346, 351, 356, 369, 375, 377, 379, 387, 392, 394, 425, 427, 428, 431, 441, 442, 443, 444, 447, 448, 456, 469, 470, 472, 475, 477, 481, 483, 489, 490, 493, 494, 499], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 211, 215, 217, 223, 240, 250, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 347, 355, 359, 394, 397, 399, 400, 430, 436, 446, 448, 453, 454, 456, 470, 472, 475, 476, 478, 480, 481, 482, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499], "itself": [128, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 446, 469, 476, 495, 496], "j": [128, 304, 432, 475, 489, 496], "jackiepho": [431, 432, 433], "jan": 475, "januari": 480, "javadi": 479, "jin": 479, "join": [383, 476], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 198, 200, 262, 483, 494], "joint_acq_valu": 483, "joint_acquisition_valu": [34, 198, 200, 477, 483], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 459, 483], "jonathan": 479, "journal": [369, 475], "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 399, 400, 450, 451, 465, 466, 477, 498], "json_str": 492, "juli": 479, "julian": 479, "jump": [477, 496], "jun": 369, "jupyt": 450, "just": [456, 474, 477, 478, 492, 495, 497], "k": [156, 206, 369, 413, 430, 431, 432, 433, 435, 436, 438, 439, 447, 453, 459, 461, 462, 463, 477, 486, 490, 499], "karin": [475, 479], "kde": 448, "keep": [55, 159, 215, 223, 447, 458, 477, 478], "keep_var": [128, 304], "kei": [128, 282, 288, 294, 304, 350, 432, 478, 487], "kept": [383, 489], "kernel": [107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 268, 269, 270, 271, 272, 278, 280, 369, 436, 441, 442, 443, 444, 465, 477, 484, 496], "kernel_factori": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 268, 270, 271], "kernel_or_factori": 268, "kernel_s": [128, 304], "kernelexplain": [98, 100, 101, 104, 487], "kernelfactori": [268, 271, 272, 278, 280, 477], "keyword": [100, 128, 159, 304, 433, 436, 463, 470, 477, 482, 484, 491, 493], "kgaa": [475, 479], "kian": 496, "kickstart": 492, "kind": [200, 475, 477, 480, 484, 489, 490], "kiter": [441, 442, 443, 444], "klekotaroth": 153, "klekotarothfingerprint": 153, "kmean": [369, 436], "kmeansclusteringrecommend": [436, 490], "knob": 475, "know": [456, 458, 466, 475, 476, 488, 492, 496], "knowledg": [8, 11, 475, 477, 496, 497], "known": [472, 484, 486, 494, 496], "koller": 496, "kwarg": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 111, 113, 115, 120, 121, 122, 128, 171, 173, 174, 175, 176, 177, 178, 179, 182, 260, 265, 270, 304, 307, 365, 369, 379, 393], "kwargs_conform": [159, 365, 489], "kwargs_fingerprint": [159, 365, 489], "l": [128, 304], "l0": 37, "l1": 489, "l664": 280, "lab": 472, "label": [59, 60, 148, 159, 369, 378, 453, 454, 459, 475, 477, 484, 486, 491, 493], "labelcolor": 472, "labelpad": 448, "labels_": 369, "laboratori": 459, "lack": 472, "laggner": 153, "laggnerfingerprint": 153, "lambda": [441, 443, 444, 447, 453, 469, 494], "lambda_1": 450, "lambda_2": 450, "lambda_init": 450, "lanat": 487, "land": 477, "languag": [343, 454, 475], "larg": [159, 223, 369, 438, 439, 454, 477, 484, 485, 489, 493, 499], "larger": [112, 156, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 414, 436, 443, 483, 484, 492, 496], "largest": [210, 413, 456, 481], "laser": [471, 473], "laser_tun": 472, "last": [188, 456, 478, 483, 490, 498], "last_call_tim": 446, "lastli": 448, "latent": 489, "later": [156, 476, 482, 483, 492], "latest": [189, 475, 478, 483], "latter": [23, 34, 128, 304, 336, 359, 369, 447, 453, 483, 488, 495, 496, 497], "law": [475, 480], "lawsuit": 480, "layer": [153, 497], "layeredfingerprint": 153, "layout": 477, "lazi": [225, 417, 477], "lazili": [477, 485], "lazyfram": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 225], "le": 439, "le_method": 478, "lead": [31, 90, 472, 477, 485, 492], "lean": 478, "learn": [17, 251, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 369, 436, 441, 442, 443, 444, 456, 465, 469, 473, 475, 477, 484, 487, 489, 494, 495, 497, 498], "least": [163, 188, 454, 475, 480, 482, 483], "leav": 492, "lee": 479, "left": [87, 88, 179, 246, 324, 325, 376, 384, 394, 442, 459, 477, 488, 497], "left_df": 384, "leftov": 477, "legaci": [307, 477, 495], "legal": 480, "legend": [431, 433, 459, 472], "len": [442, 447, 448, 453, 454, 456], "length": [113, 188, 189, 255, 356], "lengthi": 483, "lengthscal": [112, 113, 114, 116, 117, 118], "lengthscale_initial_valu": [112, 113, 114, 116, 117, 118], "lengthscale_prior": [112, 113, 114, 116, 117, 118], "leq": [37, 324, 497], "less": [8, 31, 337, 379, 413, 447, 448, 456, 483, 484, 495, 499], "let": [128, 304, 430, 432, 446, 447, 448, 450, 451, 453, 454, 459, 461, 470, 472, 475, 482, 484, 488, 492, 495], "level": [377, 477, 478, 482, 483, 484, 490, 492, 497], "leverag": [447, 482, 483, 490], "li": [163, 458, 489], "liabil": 480, "liabl": 480, "lib": 476, "librari": [476, 477], "licensor": 480, "lie": [34, 255, 257, 259, 264, 268, 282, 284, 286, 288], "liebig": [475, 479], "life": [475, 478, 479, 499], "lifecycl": 483, "ligand": [431, 432, 433, 435, 436, 447, 475, 487, 489], "ligand_data": 447, "ligand_smil": 447, "like": [9, 12, 15, 18, 128, 163, 208, 250, 304, 339, 369, 448, 453, 456, 458, 475, 476, 477, 478, 482, 483, 484, 486, 492, 493, 496, 497, 499], "likelihood": 255, "lime": [100, 103, 487], "limetabular": [98, 99, 487], "limit": [8, 278, 448, 475, 479, 480, 488, 491, 497, 498], "line": [128, 304, 373, 394, 431, 433, 447, 456, 472, 477, 478, 481, 483, 489, 493, 495, 496], "line2d": 472, "linear": [48, 111, 128, 215, 282, 304, 436, 437, 472, 473, 477, 478, 487, 491, 495], "linear_model": 450, "linear_regressor": 450, "linear_transform": 477, "linearkernel": 477, "linearli": [278, 324, 477, 495], "lineplot": [430, 431, 432, 433, 447, 469, 470, 472], "lingo": 153, "lingofingerprint": 153, "link": [58, 476, 477, 480, 489], "linspac": [441, 442, 443, 444, 448, 450, 451, 453, 459, 462, 463, 465, 469, 470, 472, 495, 497, 499], "lint": [475, 477, 478], "linter": [477, 478], "list": [37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 162, 168, 188, 189, 215, 217, 223, 224, 225, 228, 229, 230, 246, 250, 252, 304, 348, 349, 350, 358, 365, 380, 381, 382, 385, 413, 431, 436, 441, 442, 443, 444, 448, 453, 454, 456, 462, 463, 470, 475, 477, 478, 480, 484, 488, 489, 490, 491, 493], "liter": [34, 100, 188, 246, 248, 250, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 377, 413, 478], "literatur": 477, "litig": 480, "littl": 476, "live": [128, 304, 494], "liver": [493, 496], "ll": 486, "ller": 475, "ln": 497, "load": [128, 304, 417, 447, 450, 466, 467, 476, 477], "load_state_dict": [128, 304], "loc": [177, 178, 431, 433, 459, 482], "local": [128, 304, 476, 478, 485, 487, 498], "local_metadata": [128, 304], "locat": [9, 12, 15, 18, 177, 178, 324, 369, 482, 485, 496, 497], "lock": 477, "lockfil": 477, "log": [177, 307, 436, 477], "logarithm": [4, 12, 13, 15, 16, 307, 321], "logarithmictransform": [495, 497], "logei": [4, 477], "logic": [183, 262, 378, 430, 458, 477, 484, 490, 493, 495, 497, 499], "lognormalprior": 477, "logo": 477, "long": [483, 492, 493], "longer": [161, 477, 485], "look": [128, 248, 304, 436, 453, 456, 476, 481, 483, 484, 486, 487, 492, 493, 495], "look_up_target": 246, "lookup": [244, 246, 250, 252, 378, 384, 429, 430, 448, 459, 462, 472, 473, 477, 485, 487, 498], "lookup_df": 248, "lookup_test_task": 470, "lookup_training_task": 470, "lookup_valu": [438, 439, 448, 462, 463], "lookup_withmiss": 433, "loop": [244, 246, 252, 441, 442, 443, 444, 447, 477, 482, 487, 493, 498, 499], "loss": [458, 480, 497], "lost": 492, "lot": 461, "low": [278, 456, 475, 476, 477, 487, 489, 492], "lower": [163, 179, 394, 431, 433, 448, 469, 470, 484, 489, 495], "lower_bound": 491, "lower_threshold": 163, "lst_exclud": 380, "lt": 476, "luxuri": 483, "m": [128, 304, 453, 475], "m1": 476, "mac": 476, "macc": 153, "maccsfingerprint": 153, "machin": [456, 476, 478, 481, 485, 489, 495, 496], "machineri": [23, 200, 476, 477, 478, 486, 496, 499], "made": [34, 91, 128, 246, 304, 413, 433, 475, 476, 480, 484, 485, 493], "magic": 496, "magnitud": [316, 376, 377, 484, 497, 499], "mai": [34, 47, 125, 128, 130, 134, 136, 217, 304, 355, 369, 474, 475, 480, 483, 486, 492, 493, 494, 495], "mail": 480, "main": [33, 34, 475, 477, 484], "maintain": [292, 478, 486, 488], "major": [477, 493], "make": [60, 128, 200, 255, 257, 259, 264, 268, 282, 284, 286, 288, 290, 291, 292, 304, 343, 376, 378, 431, 433, 436, 438, 453, 454, 472, 475, 476, 477, 478, 480, 482, 483, 484, 486, 487, 489, 492, 494, 496, 499], "make_explainer_for_surrog": 100, "malfunct": 480, "manag": [33, 215, 216, 217, 223, 410, 477, 480, 493], "mandatori": [474, 477], "mani": [200, 414, 453, 462, 463, 475, 483, 484, 489, 492, 495, 496], "manipul": [477, 485], "manner": 485, "manual": [463, 476, 477, 492, 494, 495], "map": [148, 153, 159, 248, 250, 262, 315, 353, 369, 378, 416, 431, 432, 433, 493, 495], "mapfingerprint": 153, "mapl": [98, 99, 100, 103, 487], "mapped_to_on": 315, "mapped_to_zero": 315, "maranzana": 369, "marcel": 475, "margin": [307, 324, 477, 495, 497], "mark": [480, 483, 496, 498], "markdown": [451, 466, 467, 477], "marker": [430, 431, 432, 433, 447, 469, 470, 477], "markers": [430, 432, 447, 459, 469, 470], "market": 456, "marketplac": 477, "martin": [475, 479], "mask_bad1": 441, "mask_bad2": 441, "mask_bad3": 441, "mask_good": [441, 484], "mass": 173, "master": 280, "match": [34, 92, 94, 142, 145, 146, 148, 156, 159, 162, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 299, 301, 307, 353, 355, 384, 385, 427, 446, 448, 458, 463, 475, 477, 482, 483, 486, 492, 493, 498], "match_": 495, "match_absolut": [307, 477, 488, 492, 495], "match_attribut": 477, "match_bel": [307, 458, 477, 488, 495], "match_pow": [307, 477, 495], "match_quadrat": [307, 477, 495], "match_triangular": [307, 477, 495], "match_valu": [307, 458, 488, 492, 495], "materi": [456, 479, 496], "matern": 112, "maternkernel": 477, "math": [447, 453], "mathemat": [311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 477, 497], "mathia": 475, "matmin": 476, "matplotlib": [431, 433, 448, 459, 472, 477], "matrix": 369, "matter": [453, 458, 461, 478, 488, 495, 497], "max": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 376, 394, 431, 433, 448, 456, 472, 475, 477, 488, 495, 497], "max_cardin": [37, 47, 54, 484], "max_column": [388, 453], "max_colwidth": 388, "max_it": [369, 450], "max_n_subspac": [200, 477, 484], "max_nonzero": 223, "max_row": [388, 453], "max_sum": [223, 453, 491], "max_yield": [431, 433], "maxim": [6, 9, 12, 15, 18, 128, 435, 448, 456, 458, 475, 477, 487], "maximum": [6, 37, 47, 54, 64, 159, 200, 215, 217, 223, 307, 316, 369, 388, 453, 454, 477, 484, 489, 491], "mc": [456, 482], "mc_obj": 128, "mcacquisitionobject": [125, 128, 130, 134, 136, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329], "md": 477, "me2pph": [431, 432, 433], "mean": [5, 8, 23, 34, 60, 132, 206, 244, 246, 248, 250, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 292, 433, 436, 450, 456, 458, 459, 477, 478, 480, 481, 482, 483, 484, 486, 488, 489, 490, 492, 494, 495, 498], "meaning": [399, 400, 488], "meaningless": [453, 481], "meanpredictionsurrog": [292, 436, 494], "meantim": [478, 484], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 78, 86, 100, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 244, 246, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 299, 301, 307, 379, 384, 399, 426, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 458, 462, 463, 465, 472, 474, 475, 477, 478, 481, 482, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498], "measurablemetadata": [141, 142, 143, 145, 146, 148, 155, 156, 159, 299, 301, 307, 477], "mechan": [34, 70, 128, 130, 132, 244, 247, 248, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 355, 369, 383, 395, 413, 430, 446, 447, 448, 469, 470, 472, 477, 480, 482, 486, 487, 489, 491, 492, 494, 496, 498], "mechanist": 475, "media": [480, 489, 496], "medic": 482, "mediocr": 495, "medium": [451, 465, 475, 480, 489], "medoid": [207, 369, 477, 490], "medoid_indices_": 369, "meet": [325, 480, 497], "mem_estim": 499, "member": [128, 304, 359, 484, 489], "memo": [128, 304], "memori": [11, 128, 217, 222, 223, 304, 369, 477, 484, 485, 498], "memory_format": [128, 304], "memorys": [217, 223, 499], "mention": 481, "merchant": 480, "merck": [475, 479], "mere": [480, 488], "merg": 478, "meshgrid": [459, 469, 470], "messag": [92, 447], "meta": [34, 87, 185, 187, 188, 189, 190, 193, 441, 442, 443, 444, 465, 475, 477, 498], "metadata": [34, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 215, 223, 299, 301, 307, 369, 399, 472, 477, 479], "metadatarequest": 369, "metarecommend": [187, 188, 189, 190, 477, 486], "methan": 492, "methanol": 453, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 95, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 217, 222, 223, 240, 255, 257, 259, 260, 262, 264, 268, 270, 271, 278, 280, 282, 284, 286, 288, 291, 296, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 339, 341, 343, 355, 359, 369, 394, 399, 400, 412, 413, 414, 416, 448, 451, 458, 466, 467, 474, 477, 479, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497], "methodtyp": [446, 447, 448], "methyldiphenylphosphin": [431, 432, 433], "methylisoxazol": 496, "metric": [369, 456, 489], "mhfp": 153, "mhfpfingerprint": 153, "micromamba": 477, "mid": 497, "middl": 486, "midpoint": [307, 325, 497], "might": [56, 60, 159, 217, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 432, 436, 438, 442, 463, 470, 476, 478, 482, 483, 484, 485, 487, 491, 493, 496, 497, 498, 499], "migrat": 477, "mimic": [105, 169, 484], "min": [307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 376, 394, 472, 475, 477, 497], "min_cardin": [37, 47, 54, 484], "min_nonzero": 223, "mind": 456, "miniconda": 477, "minim": [6, 307, 369, 430, 438, 439, 441, 442, 443, 444, 448, 458, 459, 462, 463, 465, 469, 470, 477, 484, 488, 491, 492, 498], "minimum": [37, 47, 54, 64, 83, 156, 215, 217, 223, 307, 332, 413, 477, 484], "minimumcardinalityviolatedwarn": [477, 484], "minor": [477, 498], "mirror": [9, 12, 15, 18, 483, 492], "misc": [399, 400], "miss": [128, 246, 248, 304, 386, 426, 427, 428, 433, 477, 478, 482], "missing_kei": [128, 304], "mistak": [34, 478], "mix": [252, 453, 454, 475, 484, 489, 492, 496], "mixin": 240, "mixtur": [205, 473, 477, 484, 489, 490, 496, 499], "mobil": 477, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 128, 148, 159, 188, 246, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 304, 307, 353, 429, 472, 473, 475, 476, 477, 483, 490], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 81, 84, 100, 104, 105, 128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 255, 257, 259, 260, 261, 262, 263, 264, 268, 282, 284, 286, 288, 292, 296, 304, 404, 438, 439, 449, 459, 469, 470, 475, 477, 479, 481, 482, 483, 488, 489, 490, 492, 493, 495, 496, 498], "model_cl": 296, "model_cluster_num_parameter_nam": [205, 206, 207, 208], "model_from_config": 450, "model_from_python": 450, "model_json": 450, "model_param": [205, 206, 207, 208, 282, 286, 288, 451, 477], "modellist": 262, "modelnottrainederror": [255, 257, 259, 264, 268, 282, 284, 286, 288], "modern": 307, "modif": [128, 304, 476, 480], "modifi": [128, 189, 248, 292, 304, 375, 376, 377, 477, 480, 499], "modul": [0, 1, 35, 96, 97, 105, 123, 128, 139, 157, 169, 180, 183, 193, 196, 201, 213, 231, 232, 244, 253, 256, 266, 273, 293, 297, 300, 304, 309, 334, 338, 366, 367, 391, 402, 417, 420, 475, 476, 477, 478, 497], "modular": 478, "molecul": [58, 159, 364, 453, 489], "molecular": [365, 489], "moment": [252, 278, 478, 498], "monitor": 477, "monkeypatch": 476, "monoton": 311, "monotonictransform": [315, 317, 319, 320, 321, 323], "mont": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 85, 128, 250, 430, 432, 433, 447, 456, 469, 470, 477, 482, 493], "monte_carlo_run": [250, 447, 472], "mordr": [153, 159, 431, 432, 433, 435, 436, 442, 447, 451, 453, 466, 467, 475, 477, 484, 489], "mordredcommun": 477, "mordredfingerprint": [153, 489], "more": [8, 11, 31, 60, 68, 88, 128, 159, 188, 189, 215, 217, 223, 230, 246, 292, 304, 307, 359, 369, 373, 390, 413, 425, 433, 436, 448, 453, 454, 458, 469, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 489, 491, 492, 493, 494, 495, 497, 499], "morgan": 489, "morgan_fp": [153, 477], "mors": [153, 492], "morsefingerprint": 153, "most": [223, 246, 434, 456, 475, 478, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499], "motiv": 477, "mous": 482, "move": [9, 12, 15, 18, 128, 161, 304, 477, 492], "mpl_toolkit": 448, "mplot3d": 448, "mqn": 153, "mqnsfingerprint": 153, "mse": 456, "mtia": [128, 304], "mu": [177, 178], "much": [432, 484, 488, 489], "multi": [100, 128, 133, 254, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 304, 458, 459, 473, 475, 477, 479, 496, 498], "multiarmedbandit": 456, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 43, 125, 130, 134, 136, 249, 250, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 315, 377, 431, 432, 433, 442, 453, 456, 475, 477, 482, 484, 487, 488, 494, 495, 496, 498], "multiplex": 472, "multipli": [121, 329, 497], "multiplicativetransform": 497, "multitask": 477, "must": [56, 125, 130, 134, 136, 217, 223, 248, 252, 323, 355, 369, 377, 427, 436, 446, 447, 453, 456, 477, 478, 480, 481, 484, 485, 486, 487, 488, 489, 493], "mutual": 493, "my_attribut": 478, "my_valu": 485, "mypi": [343, 356, 475, 477, 478], "mystr": 478, "n": [28, 128, 255, 304, 337, 360, 413, 431, 432, 433, 435, 436, 441, 442, 443, 444, 451, 453, 456, 462, 463, 465], "n_arm": 456, "n_batches_don": 34, "n_cluster": [206, 207, 369], "n_combin": 453, "n_combinations_actu": 453, "n_combinations_expect": 453, "n_compon": 205, "n_doe_iter": [246, 250, 252, 430, 431, 432, 433, 447, 448, 469, 470, 472, 493], "n_duplic": 453, "n_estim": 451, "n_featur": 369, "n_features_new": 369, "n_fits_don": 34, "n_grid_point": 459, "n_inactive_parameter_combin": [47, 215, 477], "n_index": 369, "n_interrupted_campaign": 447, "n_iter": [438, 439, 441, 442, 443, 444, 456], "n_mc_iter": [250, 252, 430, 432, 433, 447, 469, 470, 472, 485, 493], "n_mc_run": 456, "n_mc_sampl": 23, "n_output": [31, 125, 130, 134, 136, 369, 477], "n_permut": 453, "n_pis_ov": 447, "n_pis_over_requir": 447, "n_point": 414, "n_queri": 369, "n_raw_sampl": [200, 477, 490], "n_restart": [200, 477, 490], "n_row": 379, "n_sampl": [31, 369, 413], "n_task": 217, "n_task_param": 477, "n_training_data": 459, "n_wrong_sum": 453, "na": 482, "nactivevalu": [441, 442, 443, 444, 465], "naiv": [192, 284, 292, 436, 477, 491], "naivehybridrecommend": 477, "naivehybridspacerecommend": [463, 477, 490], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 47, 68, 91, 125, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 164, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 229, 238, 250, 262, 264, 299, 301, 304, 307, 336, 347, 353, 354, 355, 364, 365, 369, 373, 380, 384, 385, 386, 405, 419, 425, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 475, 477, 478, 480, 482, 483, 484, 485, 488, 491, 492, 493, 494, 495, 496, 497, 499], "name_or_abbr": [347, 354], "named_buff": [128, 304], "named_children": [128, 304], "named_modul": [128, 304], "named_paramet": [128, 304], "namedtupl": [128, 304, 456], "namespac": [477, 478], "nan": [167, 255, 386, 394, 421, 423, 424, 427, 428, 441, 442, 443, 444, 465, 477, 482], "nativ": [450, 477, 494], "natur": [286, 432, 478, 484, 490, 492, 495], "navig": [450, 475, 483], "nbase": 365, "nbsp": 450, "nbviewer": 450, "nd": 475, "ndarrai": [9, 12, 15, 18, 163, 369, 378, 389, 394, 413, 448, 456, 459, 477, 493], "ne": 453, "necessari": [385, 446, 458, 477, 478, 483, 484, 488, 489, 491, 493, 494, 495], "necessarili": [480, 483, 484, 491, 496, 497], "need": [28, 34, 128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 355, 384, 385, 431, 432, 433, 436, 441, 444, 446, 448, 450, 453, 456, 469, 470, 472, 474, 475, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 499], "neg": [17, 459, 477, 484, 495], "negat": [6, 48, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 470, 472, 477, 496, 497], "neglig": 480, "neither": [8, 252, 377], "neq": 37, "nest": [128, 304, 369, 373, 483, 498], "net": [128, 304], "net_b": [128, 304], "net_c": [128, 304], "network": [128, 304], "neural": 496, "neurip": 496, "neutral": 8, "never": [443, 482], "nevertheless": [359, 476], "new": [34, 50, 51, 128, 188, 190, 215, 248, 263, 304, 336, 369, 382, 383, 386, 435, 447, 448, 465, 475, 477, 478, 483, 484, 494, 495, 496, 497, 498], "new_measur": 487, "new_rec": 483, "newli": [475, 478, 486, 496], "next": [34, 430, 446, 448, 453, 454, 458, 459, 465, 469, 470, 472, 475, 481, 482, 483, 490, 492, 497], "nextelements": 450, "ngboost": [286, 436, 477], "ngboostmodel": 451, "ngboostsurrog": [436, 451, 477, 494], "nice": [448, 476], "nicknam": 364, "nm": 472, "nn": [128, 304], "no_duplicates_constraint": 453, "no_grad": [128, 304], "no_tl": 469, "nois": [246, 376, 377, 470, 477, 498], "noise_level": 377, "noise_perc": [246, 250, 493], "noise_ratio": 376, "noise_std": [469, 470], "noise_typ": 377, "noisi": [15, 16, 18, 19, 379, 469, 475, 477, 496], "non": [67, 68, 99, 125, 128, 130, 134, 136, 185, 187, 188, 189, 190, 192, 217, 246, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 353, 355, 359, 376, 413, 414, 421, 422, 423, 427, 428, 453, 469, 475, 477, 480, 482, 484, 486, 487, 491, 492, 495, 498], "non_block": [128, 304], "nondominatedpartit": 31, "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 45, 50, 51, 60, 66, 67, 68, 78, 86, 91, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 125, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 166, 167, 168, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 220, 223, 226, 229, 230, 233, 234, 236, 238, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 296, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 340, 342, 355, 365, 369, 380, 381, 382, 388, 392, 394, 399, 400, 401, 416, 421, 422, 423, 424, 425, 426, 427, 428, 436, 441, 442, 443, 444, 446, 447, 448, 450, 451, 465, 482, 491, 495, 497, 498], "nonetheless": 496, "nonlinear": [40, 215, 472, 495], "nonpredict": [203, 205, 206, 207, 208, 210, 211, 212], "nonpredictiverecommend": [208, 211, 212, 477], "nonzero": [37, 47, 223, 477], "noqa": [128, 304, 441, 478], "nor": [8, 377, 474], "norecommenderslefterror": [188, 189], "noreturn": [192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 265], "normal": [130, 176, 177, 178, 307, 441, 443, 444, 476, 477, 480, 491, 497, 498], "normalize_input_dtyp": 477, "normalized_": 495, "normalized_ramp": [307, 458, 477, 482, 488, 495], "normalized_sigmoid": [307, 477, 482, 488, 495], "normalprior": 477, "not_a_param": 451, "notabl": [477, 486, 494], "notat": 497, "note": [37, 47, 60, 128, 217, 246, 250, 252, 263, 264, 304, 369, 376, 377, 431, 432, 433, 436, 442, 446, 450, 451, 453, 458, 462, 463, 465, 466, 467, 474, 475, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498], "notebook": 450, "noteworthi": 483, "noth": [17, 34, 37, 45, 47, 48, 54, 89, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 190, 192, 198, 200, 205, 206, 207, 208, 211, 215, 217, 223, 255, 268, 282, 286, 288, 299, 301, 324, 399, 400, 480, 489], "notic": [446, 478, 480, 492, 494, 495], "notimplementederror": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 161, 230, 233, 234, 252, 255, 257, 259, 263, 264, 268, 282, 284, 286, 288], "notwithstand": 480, "now": [430, 431, 432, 433, 435, 436, 441, 443, 446, 447, 448, 453, 454, 456, 458, 459, 461, 465, 466, 469, 470, 472, 474, 475, 477, 496, 499], "np": [369, 438, 439, 441, 442, 443, 444, 448, 450, 451, 453, 454, 456, 459, 461, 462, 463, 465, 469, 470, 472, 482, 484, 489, 493, 495, 499], "nrecommend": [435, 436, 462, 463], "nu": 112, "num": [383, 397], "num_disc_1": 483, "num_experi": [246, 430, 431, 432, 433, 447, 469, 470, 472], "num_fantasi": 11, "num_featur": [128, 304], "num_parameter_1": 444, "num_parameter_2": 444, "num_parameter_3": 444, "num_parameter_4": 444, "num_parameter_5": 444, "num_parameter_6": 444, "num_sampl": 117, "num_valu": 491, "number": [11, 17, 23, 34, 47, 117, 125, 128, 130, 134, 136, 159, 182, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 246, 250, 252, 255, 304, 344, 369, 379, 388, 394, 397, 408, 413, 414, 431, 432, 433, 438, 439, 441, 442, 443, 444, 448, 453, 456, 462, 469, 470, 475, 476, 477, 481, 483, 484, 488, 489, 491, 492, 493, 497, 499], "numer": [9, 12, 15, 18, 34, 37, 38, 39, 40, 41, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 90, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 215, 223, 248, 307, 376, 377, 384, 414, 427, 428, 430, 435, 438, 453, 454, 458, 472, 475, 477, 484, 485, 487, 488, 489, 491, 493, 495, 497], "numerical_measurements_must_be_within_toler": [34, 427, 477, 483], "numerical_onli": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62], "numericalcontinuousparamet": [48, 66, 161, 215, 430, 438, 439, 454, 458, 459, 461, 463, 470, 472, 491, 492, 493, 498], "numericaldiscreteparamet": [223, 431, 432, 433, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 462, 463, 465, 466, 467, 469, 470, 475, 491, 492, 493, 498, 499], "numericaltarget": [130, 134, 248, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 447, 448, 450, 451, 458, 459, 462, 463, 465, 466, 467, 469, 470, 472, 475, 477, 482, 488, 492, 493, 497, 498], "numericcontinu": 463, "numparam1": 444, "numparam2": 444, "numparam3": 444, "numparam4": 444, "numparam5": 444, "numparam6": 444, "numpi": [163, 369, 378, 389, 394, 403, 405, 438, 439, 441, 442, 443, 444, 448, 450, 451, 453, 454, 456, 459, 461, 462, 463, 465, 469, 470, 472, 477, 482, 484, 493, 495, 499], "nuniqu": 453, "nyou": [462, 463], "o": [128, 304, 369, 430, 431, 432, 433, 435, 436, 439, 441, 442, 443, 444, 447, 448, 451, 453, 456, 459, 469, 470, 472, 475, 484, 485, 489], "o2": [431, 432, 433], "obj": [166, 167, 168, 234, 482], "obj_pr": 482, "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 224, 225, 234, 235, 238, 240, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 295, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 339, 343, 353, 355, 369, 377, 384, 385, 387, 390, 394, 398, 399, 400, 416, 425, 426, 430, 435, 446, 447, 448, 450, 451, 456, 459, 461, 463, 466, 467, 472, 476, 477, 478, 480, 482, 484, 486, 487, 490, 491, 493, 494, 495, 497, 498, 499], "objective_json": 492, "oblig": 480, "observ": [244, 255, 257, 259, 264, 268, 282, 284, 286, 288, 456, 472, 493, 495], "obsolet": 477, "obtain": [246, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 432, 448, 456, 459, 470, 475, 477, 483, 487, 488, 492, 495, 496], "oc": [431, 432, 433, 435, 436], "oc1": [431, 432, 433], "occur": [59, 472, 478], "occurr": [482, 484], "octanol": [484, 489], "off": [8, 252, 360, 442, 477, 482, 484, 485, 488], "offer": [355, 448, 453, 456, 458, 462, 474, 475, 476, 480, 481, 484, 486, 489, 490, 492, 493, 494, 495, 496, 499], "offset": [48, 115], "offset_initial_valu": 115, "offset_prior": 115, "often": [311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 454, 456, 476, 481, 484, 486, 487, 489, 492, 499], "oftentim": [492, 493], "oh": [145, 150, 432, 442, 451, 456, 465, 466, 467, 475, 491, 492], "old": [496, 498], "omit": [9, 12, 15, 18, 198, 200, 250, 307, 355, 446, 475, 491, 492], "onc": [128, 250, 304, 447, 458, 489, 493], "onclick": 450, "one": [9, 12, 15, 18, 23, 34, 66, 68, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 173, 182, 183, 188, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 217, 230, 248, 268, 292, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 336, 337, 373, 379, 431, 432, 433, 436, 438, 453, 456, 467, 469, 470, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497], "onehot": 432, "ones": [128, 217, 304, 384, 432, 463, 477, 482, 495, 496, 497], "ongo": [447, 478, 496], "onli": [11, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 100, 112, 125, 128, 130, 134, 136, 159, 211, 217, 223, 248, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 355, 356, 359, 369, 373, 384, 386, 394, 413, 414, 431, 436, 441, 442, 447, 448, 450, 451, 453, 458, 462, 463, 470, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499], "onlin": 456, "onnx": [263, 264, 404, 449, 475, 477, 494], "onnx_input_nam": [264, 450], "onnx_str": [264, 450, 477], "onto": [9, 12, 15, 18, 478], "open": [34, 47, 161, 163, 255, 257, 259, 264, 268, 282, 284, 286, 288, 478], "opentelemetri": 477, "oper": [45, 48, 57, 128, 236, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 378, 402, 438, 439, 443, 444, 453, 454, 476, 477, 482, 484, 485, 486, 487, 490, 492, 498], "operator_convert": 450, "opposit": 484, "optic": 472, "optim": [14, 23, 34, 47, 48, 79, 128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 244, 246, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 432, 434, 435, 438, 439, 447, 448, 453, 456, 463, 477, 479, 481, 484, 485, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498], "optimize_acqf": [48, 200], "optimize_acqf_": 48, "optimize_acqf_discret": 200, "optimize_acqf_mix": 200, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 91, 96, 100, 111, 112, 113, 114, 115, 116, 117, 118, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 236, 238, 246, 250, 252, 282, 286, 288, 299, 301, 304, 307, 355, 365, 369, 380, 381, 382, 433, 436, 450, 451, 456, 458, 476, 477, 478, 481, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 497, 499], "oracl": 493, "orang": 472, "orchestr": [478, 483], "order": [128, 217, 223, 304, 447, 456, 474, 475, 477, 478, 483, 484, 489, 492, 495, 496], "ordereddict": [128, 304], "ordin": [323, 495], "org": [280, 343, 382, 450, 475, 480], "organ": 478, "origin": [28, 34, 161, 336, 337, 350, 369, 378, 387, 465, 474, 477, 478, 480, 488, 490, 492], "originalhtml": 450, "originalstyl": 450, "originalwidth": 450, "orthogon": 478, "oserror": 476, "other": [56, 119, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 215, 299, 301, 304, 307, 337, 431, 433, 435, 436, 438, 439, 447, 454, 456, 458, 463, 469, 470, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499], "otherwis": [48, 64, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 211, 304, 387, 413, 480, 481, 486, 496], "our": [430, 441, 443, 446, 447, 448, 451, 453, 454, 456, 458, 459, 461, 462, 463, 466, 467, 469, 470, 472, 475, 478, 481, 483, 484, 486, 492, 493], "out": [128, 223, 304, 323, 413, 470, 475, 480, 488, 493, 496], "out_featur": [128, 304], "out_par": 459, "out_y0": 459, "out_y1": 459, "outcom": [128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 432, 475, 482, 489, 495], "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 100, 122, 125, 128, 130, 134, 136, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 369, 377, 378, 379, 430, 458, 459, 469, 470, 472, 476, 477, 479, 493, 495, 497, 498], "output_label": 378, "output_nam": [125, 130, 134, 136], "outputscal": 122, "outputscale_initial_valu": 122, "outputscale_prior": 122, "outsid": [34, 161, 189, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 307, 324, 477, 492, 495], "outstand": 480, "over": [34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 215, 250, 304, 453, 474, 477, 481, 483, 485, 486, 495, 496], "overal": [217, 450, 451, 453, 454, 456, 477, 478, 483, 487, 488, 496], "overhead": 485, "overlap": [67, 68, 161, 438, 439, 484], "overload": 497, "overrid": [128, 236, 238, 304, 446, 477], "overridden": [446, 478], "overview": [475, 479, 492], "overwritten": 463, "own": [128, 192, 304, 430, 454, 475, 476, 477, 478, 480, 484, 489, 495], "owner": 480, "ownership": 480, "p": [324, 430, 431, 432, 433, 435, 436, 438, 439, 446, 448, 462, 469, 470, 472, 478, 486, 487, 492, 494, 497, 499], "p1": [323, 491, 492, 493, 497], "p1_json": 492, "p1_via_json": 492, "p2": [323, 491, 492, 493, 497], "p2_json": 492, "p2_via_json": 492, "p3": 492, "p3c4": [431, 432, 433], "p_cont": 491, "p_disc": 491, "p_g1_amount": 454, "p_g2_amount": 454, "p_g3_amount": 454, "p_i": 37, "pack": 492, "packag": [100, 153, 211, 476, 477, 478, 485, 489, 493, 494, 499], "page": [450, 475, 477, 478, 486], "pair": [323, 336, 459, 475, 489], "pairwis": 369, "pairwise_dist": 369, "pam": [207, 369], "pamclusteringrecommend": 490, "panda": [55, 224, 242, 243, 248, 364, 369, 389, 430, 431, 432, 433, 438, 439, 441, 447, 448, 453, 454, 458, 459, 462, 463, 469, 470, 472, 477, 482, 484, 485, 489, 491, 492, 493, 495], "panic": 474, "paper": [475, 496], "paper_fil": 496, "parallel": [250, 477, 478, 498], "parallel_run": [250, 485], "param": [128, 304, 369, 449, 450, 473], "param1": [491, 493], "param2": [491, 493], "param_1": 482, "param_2": 482, "param_bounds_comp": 477, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 88, 92, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 219, 222, 223, 224, 225, 228, 229, 230, 236, 238, 240, 244, 246, 248, 250, 252, 255, 257, 259, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 336, 337, 348, 349, 350, 353, 355, 358, 359, 360, 363, 364, 365, 369, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 397, 399, 400, 401, 406, 407, 409, 410, 413, 414, 416, 425, 426, 427, 428, 430, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 475, 477, 478, 484, 485, 486, 492, 493, 494, 495, 496, 497, 498], "parameter": [173, 174, 175, 176, 177, 178, 179, 497], "parameter_json": 492, "parameter_nam": [215, 217, 223, 463], "parameter_names_in_cardinality_constraint": 215, "parameterencod": [142, 150, 151, 153, 156], "parametr": 484, "paramnam": 450, "paramprefix": 450, "parent": [128, 304, 478], "parentel": 450, "pareto": [14, 31, 134, 457, 473, 475, 477, 488], "paretoobject": [459, 475, 477, 487, 498], "park": 369, "pars": [395, 477], "parser": 477, "part": [17, 28, 34, 43, 76, 128, 193, 215, 217, 223, 304, 428, 451, 463, 466, 467, 469, 470, 477, 478, 480, 481, 482, 483, 484, 489, 490, 491, 492, 498, 499], "parti": [367, 480, 493], "partial": [28, 125, 130, 134, 136, 447, 475, 477, 498], "particl": 496, "particular": [34, 128, 223, 244, 304, 446, 459, 463, 474, 475, 476, 478, 480, 483, 488, 489, 491, 492, 493], "particularli": [355, 483], "partit": [9, 12, 31, 207, 250, 252, 477, 490, 493], "partitionexplain": [98, 101], "pass": [34, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 74, 100, 125, 128, 130, 134, 136, 159, 205, 206, 207, 208, 217, 223, 234, 268, 282, 286, 288, 304, 323, 369, 379, 385, 453, 465, 470, 477, 478, 482, 486, 487, 489, 492, 495, 497], "passthrough": [30, 126, 219, 272, 333, 401], "past": 450, "patch": [447, 477], "patent": 480, "path": [91, 128, 304, 432, 453, 477, 478, 485, 499], "pattern": [153, 478, 496], "patternfingerprint": 153, "pd": [34, 198, 200, 223, 248, 262, 336, 337, 383, 430, 431, 432, 433, 438, 439, 441, 447, 448, 453, 454, 458, 459, 462, 463, 469, 470, 472, 477, 482, 484, 486, 489, 491, 492, 493, 495], "pdf": 496, "peak": [324, 497], "peek": 492, "penal": [458, 495], "penalti": [495, 497], "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 475, 477, 498], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 477, 482, 483], "per": [246, 262, 431, 432, 433, 436, 453, 462, 469, 470, 477, 488, 489, 491, 493], "percent": [246, 480], "percentag": [200, 377, 436, 441, 442, 443, 444, 453, 465, 470, 490], "perf_count": 446, "perfectli": 492, "perform": [128, 200, 246, 304, 369, 384, 432, 441, 442, 443, 444, 448, 453, 466, 469, 470, 472, 474, 475, 477, 478, 480, 481, 482, 483, 485, 487, 489, 490, 493, 494, 496, 498], "period": [113, 495], "period_length_initial_valu": 113, "period_length_prior": 113, "periodickernel": 477, "perm_inv_constraint": 453, "perman": [475, 498], "permiss": [475, 480], "permut": [56, 59, 60, 337, 477, 484], "permutation_invari": 56, "permutationexplain": [98, 101], "perpetu": 480, "persist": [128, 304, 477, 479, 483, 485, 492, 494], "perspect": [492, 497], "pertain": 480, "pharmacophor": 153, "pharmacophorefingerprint": 153, "phase": [190, 454], "phaseagent1": 454, "phaseagent2": 454, "phcpho": [431, 432, 433, 435, 436], "phenomenon": 483, "philosophi": 492, "physic": [472, 487, 493], "physiochemicalproperti": 153, "physiochemicalpropertiesfingerprint": 153, "pi": [7, 436, 447, 448, 472], "pi_max": 448, "pi_per_iter": 448, "pi_required_fract": 447, "pi_threshold": 447, "pickl": [128, 304, 477], "picklabl": [128, 304], "pictur": 475, "piec": [456, 475, 483, 484], "piecewis": [114, 497], "piecewisepolynomialkernel": 477, "pin": [28, 128, 304, 477], "pin_discret": 28, "pinned_part": 28, "pip": [475, 477, 478, 484, 485, 487, 499], "pipe": 497, "pipelin": [369, 469, 470, 477, 478], "pival": [431, 432, 433, 435, 436], "pl": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62], "place": [9, 12, 15, 18, 37, 128, 248, 304, 375, 376, 377, 450, 451, 453, 456, 476, 477, 478, 480, 483, 486, 489, 492, 496], "placehold": 339, "plai": [483, 487, 495], "plain": 272, "plainkernelfactori": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 268], "plan": [263, 475, 486, 489, 497], "platt": 496, "pleas": [128, 304, 369, 450, 451, 475, 478, 481, 487, 490], "plenti": 487, "plot": [100, 102, 246, 431, 433, 459, 470, 472, 477, 494, 496, 498], "plot_abegin_convert_pipelin": 404, "plot_ebegin_float_doubl": 404, "plot_kmedoids_digit": 369, "plot_typ": 100, "plt": [431, 433, 448, 459, 472], "plu": [248, 475, 478], "plugin": 477, "pl\u00f6tz": 479, "pm": [5, 436], "png": [431, 433], "po16": 489, "poetri": 477, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 33, 34, 100, 128, 156, 161, 182, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 369, 384, 403, 404, 411, 412, 413, 414, 418, 431, 435, 436, 447, 454, 459, 462, 463, 469, 470, 474, 475, 477, 479, 481, 482, 483, 486, 487, 488, 490, 491, 497, 498, 499], "points_per_dim": [448, 462, 463, 469, 470], "polar": [41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 225, 369, 475, 477, 479, 498, 499], "poli": 448, "polici": 456, "polycollect": 448, "polym": 489, "polynomi": [114, 115], "polynomialkernel": 477, "polytop": 477, "popul": 453, "popular": [487, 489, 494], "posit": [9, 12, 15, 18, 100, 128, 304, 355, 413, 477, 484, 487, 488, 497], "possibl": [34, 47, 128, 162, 215, 223, 224, 225, 244, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 355, 369, 433, 447, 448, 453, 475, 477, 480, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 495, 496, 499], "possibli": [128, 304, 477, 482, 483], "post": [128, 304, 488, 489, 498], "post_hook": [355, 446, 447, 448], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 128, 198, 200, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 291, 304, 315, 320, 436, 477, 481, 488, 494], "posterior_mean": [255, 456], "posterior_mod": 255, "posterior_stat": [34, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 477, 483, 488], "posteriorlist": 262, "posteriorstandarddevi": [456, 477, 481], "posteriortransform": 304, "postprocess": 364, "potassium": [431, 432, 433, 435, 436], "potenti": [217, 341, 475, 476, 477, 478, 483, 484, 487, 488, 491, 495, 499], "power": [115, 307, 322, 472, 477, 480, 484, 490, 497, 498], "powertransform": 497, "pp": 369, "pph3": [431, 432, 433], "pr": [477, 478], "practic": [472, 481, 487, 490], "pre": [128, 130, 162, 188, 271, 304, 413, 449, 476, 477, 478, 495, 497], "pre_hook": [355, 446], "preced": 485, "precis": [60, 188, 215, 388, 404, 405, 419, 472, 477, 495, 497, 498], "precomput": [148, 369], "predefin": [483, 490], "predict": [31, 34, 84, 208, 255, 257, 259, 264, 268, 282, 284, 286, 288, 369, 475, 477, 481, 482, 488, 493, 494, 496, 498], "predictor": 290, "prefer": [34, 480, 486, 488, 492], "prefix": [128, 304, 365, 450, 495], "preliminari": 496, "prepar": [448, 472, 478, 480, 499], "prepend": [128, 304], "preprocess": 477, "presenc": [200, 476, 477], "present": [34, 75, 100, 125, 130, 134, 136, 217, 336, 337, 355, 369, 435, 456, 477, 484, 493, 495, 499], "preset": [268, 275, 278, 280, 477], "pressur": [443, 450, 451, 465, 466, 467, 475, 484], "pretrain": [264, 449, 473], "pretti": 388, "pretty_print_df": [453, 477], "prevent": [161, 233, 234, 355, 476, 477, 478], "previou": [188, 447, 448, 477, 483, 495, 496], "previous": [34, 431, 432, 433, 435, 443, 482, 483], "price": 489, "primari": 483, "primarili": 481, "principl": [453, 456, 494], "print": [128, 248, 304, 373, 388, 431, 432, 433, 435, 436, 438, 439, 443, 446, 447, 450, 451, 453, 454, 456, 458, 461, 462, 463, 465, 466, 467, 475, 477, 491, 499], "print_parameter_names_hook": 446, "printer_inst": 446, "prior": [111, 112, 113, 114, 115, 116, 117, 118, 122, 173, 174, 175, 176, 177, 178, 179, 255, 278, 444, 475, 476, 477], "priori": [484, 492, 496], "privat": [477, 479], "probabilist": 481, "probability_of_improv": 448, "probabilityofimprov": [447, 448], "probabl": [7, 21, 23, 436, 445, 447, 473, 477], "problem": [79, 453, 454, 456, 458, 469, 470, 477, 478, 483, 488, 492, 495], "problemat": [359, 476, 489], "proce": [246, 435, 482, 485], "procedur": [481, 496], "proceed": 496, "process": [34, 105, 128, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 304, 383, 413, 436, 446, 453, 456, 458, 469, 470, 472, 477, 478, 481, 482, 483, 484, 485, 486, 488, 489, 492, 496, 497], "prod": 444, "prod_constraint": 444, "prod_i": 488, "produc": [125, 130, 134, 136, 248, 475, 477, 478, 485, 493, 497], "product": [61, 121, 217, 223, 224, 225, 329, 351, 440, 473, 475, 477, 480, 484, 486, 497, 498, 499], "product_paramet": [223, 453, 491], "productkernel": 477, "programmat": 453, "progress": [34, 186, 448, 477, 486], "prohibit": 481, "project": [448, 477], "promin": [478, 480], "promis": [447, 482], "prompt": 485, "proper": 477, "properli": [28, 458, 476, 477, 488, 491], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 222, 223, 255, 257, 259, 262, 264, 268, 271, 275, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 341, 342, 343, 394, 399, 400, 412, 416, 477, 478, 482, 484, 486, 489], "proport": 470, "propos": 483, "protobuf": 477, "protocol": [181, 182, 260, 270, 359, 477], "prototyp": 479, "provid": [9, 12, 15, 17, 18, 34, 48, 100, 104, 128, 148, 159, 162, 182, 188, 189, 192, 193, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 236, 240, 244, 246, 248, 250, 252, 255, 257, 259, 264, 268, 278, 280, 282, 284, 286, 288, 304, 307, 336, 351, 355, 369, 371, 376, 377, 382, 385, 389, 399, 400, 413, 414, 425, 430, 431, 432, 433, 446, 451, 453, 459, 461, 462, 463, 466, 469, 470, 472, 475, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498], "proxim": 495, "prune": [14, 15, 16, 18, 19], "prune_baselin": [14, 15, 16, 18, 19], "pstd": [6, 477, 481], "pubchem": 153, "pubchemfingerprint": 153, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 132, 134, 136, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 222, 223, 240, 255, 257, 259, 260, 262, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 339, 341, 342, 343, 369, 394, 399, 400, 412, 416, 477, 478], "publicli": 480, "publish": [475, 477], "pull": [456, 477], "punish": 8, "pure": [8, 11, 17, 183, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 217, 252, 263, 414, 462, 477, 498], "purerecommend": [185, 187, 188, 189, 190, 192, 198, 203, 477], "purpl": 459, "purpos": [17, 446, 447, 450, 456, 475, 476, 478, 480, 483, 486, 488, 492, 495, 499], "pursu": 495, "push": [47, 478], "put": [453, 456, 485, 489], "puzzl": 475, "py": [280, 369, 441, 443, 444, 477, 485], "py313": 478, "pyarrow": 477, "pydant": 477, "pydoclint": [477, 478], "pydocstyl": 478, "pylint": 477, "pymatgen": 476, "pypi": [475, 477], "pyplot": [431, 433, 448, 459, 472], "pyproject": 477, "pytest": [477, 478], "python": [33, 343, 356, 432, 451, 466, 467, 475, 476, 477, 478, 483, 484, 485, 492], "python310": 476, "pytorch": 477, "pyupgrad": 477, "q": [114, 128, 290, 291, 304, 436, 482], "qehvi": [9, 477], "qei": [10, 436, 466, 467, 477], "qkg": [11, 477], "qlogehvi": [12, 477], "qlogei": [13, 436, 477], "qlogexpectedimprov": 436, "qlognehvi": [9, 12, 15, 18], "qlognei": [16, 477], "qlognoisyexpectedhypervolumeimprov": [477, 488], "qlognparego": 477, "qnegintegratedposteriorvari": 481, "qnehvi": 18, "qnei": [19, 477], "qnipv": [17, 477, 481], "qnoisyexpectedhypervolumeimprov": 477, "qpi": [21, 436], "qposteriorstandarddevi": 481, "qpstd": [20, 477, 481, 483], "qsimpleregret": 23, "qsr": [22, 477], "qt": 23, "qthompsonsampl": [456, 477], "quad": 497, "quadrat": [118, 307, 430, 459, 497], "qualifi": [128, 304], "qualiti": 478, "quantif": 496, "quantifi": [456, 481, 496], "quantil": [34, 255, 257, 258, 259, 264, 268, 282, 284, 286, 288, 483], "quantiti": [34, 58, 472, 483, 487, 488, 495, 497, 499], "quantum": 148, "qucb": [24, 436, 477, 481], "queri": [128, 183, 193, 244, 246, 248, 304, 458, 459, 472, 475, 483, 486, 493], "queryselectoral": 450, "question": [478, 483, 496], "quick": 482, "quickli": [484, 495, 497], "qupperconfidencebound": 481, "qvarucb": 477, "r": [47, 431, 432, 433, 435, 436], "radial": 116, "radiu": [153, 477, 489], "rais": [9, 12, 15, 17, 18, 31, 34, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 100, 104, 125, 128, 130, 134, 136, 138, 161, 162, 167, 168, 188, 189, 215, 217, 223, 229, 230, 233, 234, 246, 248, 252, 255, 257, 259, 263, 264, 265, 268, 282, 284, 286, 288, 296, 304, 307, 323, 337, 353, 355, 358, 360, 363, 371, 372, 373, 376, 377, 379, 384, 385, 386, 401, 413, 414, 425, 426, 427, 428, 446, 447, 448, 463, 476, 477, 478, 482, 490], "ramp": 498, "rand": 450, "random": [17, 117, 210, 215, 217, 246, 248, 250, 287, 288, 369, 412, 413, 414, 430, 431, 432, 433, 436, 447, 448, 450, 454, 456, 459, 470, 475, 477, 481, 489, 490, 493, 499], "random_campaign": 430, "random_forest": [288, 436], "random_se": [246, 250, 447, 493], "random_st": 369, "random_tie_break": [211, 413, 477, 485], "randomforestmodel": 451, "randomforestregressor": 288, "randomforestsurrog": [436, 477, 494], "randomli": [200, 212, 413, 430, 432, 459, 481, 487, 490], "randomrecommend": [430, 431, 432, 433, 436, 441, 442, 443, 444, 446, 447, 448, 454, 456, 477, 482, 490], "randomst": 369, "rang": [47, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 299, 307, 317, 376, 394, 430, 438, 439, 441, 442, 443, 444, 448, 453, 456, 461, 462, 463, 470, 475, 477, 484, 488, 491, 492, 493, 495, 497, 499], "rank": 495, "rare": 477, "rastrigin": [438, 439, 462, 463], "rate": [174, 255, 456], "rather": [465, 476, 477, 481, 492], "ration": 118, "ravel": [459, 469, 470], "raw": [200, 492], "rbf": 116, "rbfkernel": 477, "rdf": 153, "rdffingerprint": 153, "rdkit": [153, 441, 443, 444, 477, 484, 489], "rdkit2ddescriptor": [153, 432, 441, 443, 444, 477], "rdkit2ddescriptorsfingerprint": 153, "rdkitfingerprint": 153, "re": [128, 304, 447, 462, 463, 472, 478, 490], "reach": [307, 316, 324, 497], "reactant": [487, 489], "reaction": [432, 435, 475, 484, 487, 489, 496], "reactor": [482, 496], "reactora": 496, "reactorb": 496, "reactorc": 496, "read": [148, 217, 432, 435, 475, 477, 478], "read_csv": [431, 432, 447], "read_excel": 433, "readabl": [222, 388, 397, 465, 477, 479, 480, 492], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 246, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 478, 482], "readm": [477, 478], "reagent": [484, 489], "real": [394, 472, 475, 483, 495], "realist": [472, 493], "realiz": [244, 493], "reason": [45, 128, 205, 206, 207, 208, 304, 432, 462, 477, 478, 480, 481, 482, 484, 485, 488, 489, 493, 495], "reassembl": 492, "rebas": 478, "rec": [441, 442, 443, 444, 482, 483], "rec_finish": 482, "rec_next": 482, "rec_par": 459, "rec_pend": 482, "rec_y0": 459, "rec_y1": 459, "receiv": [128, 304, 480, 492], "recip": 478, "recipi": 480, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 76, 87, 88, 100, 142, 145, 146, 148, 156, 159, 161, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 244, 246, 260, 262, 263, 377, 379, 430, 431, 432, 433, 434, 438, 439, 441, 442, 443, 444, 446, 447, 448, 454, 456, 459, 466, 467, 469, 470, 472, 473, 474, 475, 477, 478, 481, 485, 487, 489, 493, 494, 496, 497, 498, 499], "recommendation_orig": 465, "recommendation_recr": 465, "recommended_arm_idx": 456, "recommender_with_hook": 447, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 100, 185, 187, 188, 189, 190, 195, 198, 200, 260, 262, 446, 448, 474, 477, 482], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 399, 400, 483, 492], "record": [34, 128, 304, 496], "recreat": [275, 465, 492], "recreate_model": 451, "recurs": [128, 185, 187, 188, 189, 190, 304, 348, 349], "red": [450, 459, 472], "redesign": [477, 495], "redistribut": 480, "reduc": [159, 448, 456, 469, 470, 478, 484, 486, 489, 495], "reduct": 498, "redund": [332, 497], "ref": 475, "ref_point": 31, "refactor": 477, "refer": [9, 12, 15, 18, 31, 128, 244, 280, 304, 315, 354, 369, 384, 404, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 446, 448, 450, 451, 453, 462, 463, 465, 472, 476, 477, 483, 487, 488, 489, 490, 491, 492, 493, 494, 496], "referenc": [128, 304, 478], "reference_point": [9, 12, 15, 18], "refin": [447, 472, 475, 477, 483, 486], "reflect": [192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 448, 458, 477, 478, 481, 484, 489, 495], "regard": [37, 43, 438, 439, 478, 480], "regardless": [128, 304, 494], "regim": [475, 477, 487], "region": [163, 307, 324, 495], "regist": [128, 304, 355, 445, 447], "register_backward_hook": [128, 304], "register_buff": [128, 304], "register_custom_architectur": 477, "register_forward_hook": [128, 304], "register_forward_pre_hook": [128, 304], "register_full_backward_hook": [128, 304], "register_full_backward_pre_hook": [128, 304], "register_hook": [445, 446, 447, 448, 477], "register_load_state_dict_post_hook": [128, 304], "register_load_state_dict_pre_hook": [128, 304], "register_modul": [128, 304], "register_module_forward_hook": [128, 304], "register_module_forward_pre_hook": [128, 304], "register_module_full_backward_hook": [128, 304], "register_module_full_backward_pre_hook": [128, 304], "register_paramet": [128, 304], "register_state_dict_post_hook": [128, 304], "register_state_dict_pre_hook": [128, 304], "registr": 477, "regress": 282, "regressor": 450, "regret": [22, 23], "regroup": 477, "regular": [23, 161, 292, 450, 461, 476, 477, 482, 495, 496], "reinstal": 475, "reject": 482, "rel": [9, 12, 15, 18, 31, 47, 246, 376, 484, 488], "relat": [58, 125, 130, 131, 134, 136, 149, 217, 235, 305, 335, 463, 469, 470, 474, 477, 478, 483, 484, 496], "relationship": [469, 470, 472, 475, 478, 488, 496], "relative_perc": 377, "relative_threshold": [47, 477, 484], "relax": 495, "releas": [128, 304, 475, 477], "relev": [56, 100, 128, 248, 384, 385, 386, 442, 453, 477, 478, 483, 484, 486, 496, 499], "reli": [458, 476, 477, 488, 497], "reliabl": 489, "reloc": 477, "remain": [59, 161, 190, 252, 430, 436, 441, 442, 443, 444, 453, 456, 463, 465, 469, 470, 480, 489, 492, 493], "remain_switch": [190, 477], "remaind": 414, "remind": 477, "remot": 478, "remov": [55, 58, 59, 125, 128, 130, 134, 136, 223, 304, 332, 453, 475, 478, 484, 491, 497, 498], "removablehandl": [128, 304], "remove_dupl": [128, 304], "renam": [432, 469, 470, 472, 477, 478], "render": [100, 450], "reoccur": 496, "reorder": 477, "reorgan": 477, "repeat": [456, 477, 478, 482, 483], "repetit": [250, 436, 447], "rephras": 484, "replac": [128, 304, 450, 462, 463, 477, 478], "replic": [255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 477, 488, 492, 498], "repo": 477, "report": [182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 456, 476], "repositori": [432, 475, 478], "repr": 450, "repres": [9, 12, 15, 18, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 120, 121, 148, 217, 252, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 318, 323, 341, 371, 389, 394, 397, 413, 430, 453, 454, 456, 459, 466, 467, 475, 477, 480, 483, 488, 489, 491, 493, 497, 499], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 240, 255, 257, 259, 260, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 360, 362, 371, 373, 388, 394, 399, 400, 441, 442, 443, 444, 450, 452, 465, 477, 482, 483, 489, 492, 493, 498, 499], "reproduc": [447, 456, 459, 477, 480, 498], "reproduct": 480, "request": [34, 87, 88, 188, 189, 190, 230, 255, 257, 258, 259, 264, 268, 271, 282, 284, 286, 288, 379, 401, 413, 414, 459, 474, 477, 482, 483, 486, 487], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 47, 48, 54, 85, 100, 128, 190, 223, 296, 304, 355, 426, 435, 446, 447, 450, 454, 456, 458, 462, 466, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499], "require_norm": [130, 458, 488, 492], "requires_grad": [128, 304], "requires_grad_": [128, 304], "rerun": 450, "reserv": [475, 478], "reset": [34, 128, 304, 482], "reset_index": [469, 482], "reshap": 459, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 442, 444, 453, 492], "resolv": [128, 304, 364], "resort": [292, 458, 478, 492, 499], "resource_track": 476, "resp": [218, 433, 463], "respect": [34, 128, 200, 218, 246, 250, 304, 324, 336, 453, 454, 477, 478, 483, 484, 486, 487, 488, 492, 493, 495, 497, 499], "respond": 474, "respons": [185, 187, 188, 189, 190, 480, 483, 490], "restart": [188, 200], "restor": 492, "restr": 23, "restrain": 489, "restrict": [217, 223, 244, 250, 252, 441, 454, 477, 486, 493, 495, 496, 498], "result": [9, 11, 12, 15, 18, 34, 128, 159, 161, 223, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 375, 383, 431, 432, 433, 435, 450, 451, 453, 454, 456, 459, 461, 469, 470, 472, 475, 477, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499], "result_baselin": [469, 470], "result_fract": 470, "results_interrupt": 447, "results_uninterrupt": 447, "retain": [480, 484], "retrain": [263, 264, 494], "retriev": [217, 244, 347, 348, 349, 363, 477, 478, 493], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 100, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 219, 220, 223, 224, 225, 226, 228, 229, 230, 233, 234, 236, 237, 238, 240, 242, 243, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 265, 268, 271, 272, 276, 282, 284, 286, 288, 290, 291, 292, 294, 296, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 333, 336, 337, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 363, 364, 365, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 397, 399, 400, 401, 406, 407, 413, 414, 416, 421, 422, 423, 424, 425, 426, 427, 428, 430, 441, 447, 448, 450, 453, 456, 459, 469, 472, 477, 483, 484, 493, 499], "return_std": 450, "reus": [190, 477, 495], "reuse_last": 188, "reveal": [448, 454, 470], "revers": [495, 497], "review": 478, "revis": [477, 480], "reward": [8, 456, 472], "rework": 477, "rewrit": 477, "rff": 117, "rffkernel": 477, "rh": [48, 50, 51, 438, 439, 454, 484], "right": [48, 179, 324, 325, 384, 394, 431, 433, 442, 456, 475, 476, 478, 480, 484, 486, 488, 489, 497], "right_df": 384, "rihana": [475, 479], "rim": [475, 479], "risk": [8, 476, 480, 483], "roam": 476, "robust": [475, 477, 496], "robustli": 292, "role": [477, 478, 483, 487, 488, 493, 495, 498], "room": [448, 483], "root": [432, 475, 478, 484], "round": [388, 438, 450, 451, 484], "roundtrip": [477, 492], "rout": [369, 477, 492], "routin": [47, 495], "row": [9, 12, 15, 18, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 248, 336, 337, 369, 376, 379, 383, 384, 386, 388, 431, 433, 441, 442, 443, 444, 453, 454, 465, 477, 482, 483, 486, 491, 493], "rowei": 496, "roya": 479, "royalti": 480, "rq": 118, "rqkernel": 477, "rsc": 475, "ruff": [477, 478], "rule": [446, 477, 495, 497], "run": [128, 246, 250, 304, 431, 432, 433, 447, 448, 469, 470, 475, 476, 477, 478, 483, 486, 489, 492, 493, 498, 499], "run_full_initial_data": 431, "run_impute_mod": 433, "runner": [250, 441, 443, 444, 485], "running_mean": [128, 304], "running_var": [128, 304], "runtim": [128, 304, 404, 476, 482], "runtimeerror": [188, 446], "rv": 456, "s3": 477, "s41586": [280, 382], "safe": [477, 478, 483], "safeti": 355, "sai": [128, 304, 484], "said": 478, "sake": 453, "same": [58, 128, 138, 190, 223, 229, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 316, 350, 425, 436, 447, 450, 451, 453, 456, 459, 465, 472, 476, 477, 484, 485, 486, 492, 493, 494, 495, 496, 497], "sampl": [11, 17, 23, 47, 128, 200, 210, 211, 212, 215, 369, 411, 412, 413, 414, 431, 436, 441, 442, 443, 444, 456, 459, 461, 465, 470, 475, 477, 479, 487, 498], "sample_from_full_factori": [215, 477], "sample_inactive_paramet": 47, "sample_shap": 128, "sample_uniform": [215, 459, 461, 477, 493], "sampler": [128, 436, 441, 442, 443, 444, 465], "samples_full_factori": 477, "samples_random": 477, "sampling_algorithm": [412, 481], "sampling_fract": [17, 481], "sampling_method": [17, 481], "sampling_n_point": [17, 481], "sampling_percentag": [200, 490], "satisfi": [43, 44, 45, 223, 438, 439, 453], "save": [128, 304, 431, 433, 450, 477, 493], "savefig": [431, 433, 459, 472], "sca": 459, "scalabl": 485, "scalar": [14, 130, 458, 475, 477, 483, 488, 492], "scale": [122, 175, 176, 177, 178, 179, 215, 217, 223, 307, 316, 369, 416, 459, 469, 477, 481, 488, 495, 497], "scalekernel": 477, "scaler": 477, "scaling_bound": [215, 217, 223], "scatter": [100, 102], "scenario": [252, 430, 431, 432, 433, 447, 453, 469, 470, 482, 484, 488, 496, 498, 499], "scene": [488, 493, 494, 495], "schema": 483, "schembl15068049": [431, 432, 433], "scheme": [477, 484], "scienc": [475, 479], "scientif": [477, 496], "scikit": [153, 369, 475, 477, 479, 489], "scipi": [448, 456, 477], "scm": 477, "scope": 430, "screen": [350, 496], "script": [364, 450, 476, 477, 485, 499], "scriptmodul": [128, 304], "seaborn": [430, 431, 432, 433, 447, 469, 470, 472], "seamlessli": 492, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 34, 41, 55, 58, 71, 76, 88, 92, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 227, 246, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 384, 385, 430, 433, 435, 437, 440, 441, 442, 443, 444, 446, 447, 448, 456, 460, 465, 470, 472, 477, 479, 482, 483, 484, 485, 486, 487, 490, 492, 493, 498], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 100, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 218, 222, 223, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 430, 432, 435, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 465, 466, 467, 469, 472, 473, 475, 477, 483, 484, 485, 486, 487, 489, 491, 492, 493, 499], "searchspace1": 461, "searchspace2": 461, "searchspace3": 461, "searchspace_ful": 486, "searchspace_json": 492, "searchspace_reduc": 486, "searchspacetyp": [192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 217, 436, 441, 442, 443, 444, 447, 448, 465, 491], "secfp": 153, "secfpfingerprint": 153, "second": [383, 406, 450, 451, 458, 459, 467, 469, 484, 487, 495, 497], "secondari": 458, "section": [475, 477, 478, 480, 492], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 38, 39, 40, 41, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 92, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 169, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 222, 223, 246, 250, 252, 255, 257, 259, 260, 262, 264, 268, 271, 278, 280, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 353, 359, 369, 377, 383, 390, 394, 399, 400, 416, 431, 432, 433, 438, 439, 446, 447, 451, 454, 458, 463, 474, 475, 477, 478, 483, 485, 486, 487, 489, 492, 493, 495, 497, 498], "seed": [246, 250, 409, 410, 447, 448, 456, 459, 475, 477, 499], "seek": 488, "seem": [404, 467, 476, 495], "seen": 481, "segment": [325, 497], "select": [6, 43, 44, 45, 73, 77, 85, 185, 187, 188, 189, 190, 193, 200, 208, 210, 211, 255, 257, 259, 264, 268, 282, 284, 286, 288, 383, 413, 436, 442, 443, 453, 454, 456, 458, 463, 475, 477, 481, 483, 484, 487, 489, 490, 492, 494], "select_recommend": [185, 187, 188, 189, 190, 477], "selectivity_mean": 483, "selectivity_mod": 483, "selectivity_q_0": 483, "selectivity_std": 483, "self": [128, 304, 355, 369, 372, 421, 422, 423, 424, 446, 447, 448, 456, 478], "sell": 480, "semant": [477, 492, 495], "sens": [60, 134, 355, 359, 383, 484, 489, 494], "sent": 480, "sentinel": [340, 342], "separ": [250, 252, 292, 353, 416, 417, 448, 474, 477, 478, 480, 487, 492, 495], "sequenc": [34, 48, 167, 188, 189, 215, 217, 223, 224, 225, 228, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 307, 323, 324, 332, 336, 337, 355, 365, 372, 378, 384, 385, 390, 483, 488, 490, 497], "sequenti": [128, 187, 188, 189, 190, 200, 304, 436, 441, 442, 443, 444, 465, 477, 490, 497], "sequential_continu": [200, 477, 490], "sequential_greedy_x": 477, "sequentialgreedyrecommend": 477, "sequentialmetarecommend": [189, 490], "sequentialstrategi": 477, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 44, 45, 55, 142, 145, 146, 148, 156, 159, 198, 200, 299, 301, 307, 389, 441, 453, 472, 477, 484, 486, 495], "serial": [128, 189, 223, 240, 304, 450, 473, 476, 477, 478, 484, 490, 498], "serializ": [475, 490], "serialize_datafram": 492, "serialized_df": 242, "serializetostr": 450, "serialmixin": [26, 34, 38, 43, 109, 125, 143, 171, 185, 215, 217, 223, 259, 262, 271, 299, 301, 307, 312, 394, 400, 477], "serv": [252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 384, 469, 470, 483, 484, 489, 497], "servic": 480, "session": [485, 492], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 45, 47, 58, 60, 67, 68, 100, 104, 128, 159, 182, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 246, 250, 275, 304, 369, 382, 383, 409, 410, 431, 432, 433, 434, 436, 441, 443, 446, 451, 452, 453, 454, 456, 458, 463, 474, 475, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499], "set_box_aspect": 448, "set_dash": 447, "set_extra_st": [128, 304], "set_output": 369, "set_param": 369, "set_random_se": [448, 456, 459, 499], "set_size_inch": [431, 433], "set_submodul": [128, 304], "set_to_non": [128, 304], "set_x_pend": 28, "set_xlabel": [448, 472], "set_xtick": 448, "set_xticklabel": 448, "set_ylabel": [448, 472], "set_ylim": 448, "set_zlabel": 448, "setattribut": 450, "setpoint": 156, "settimeout": 450, "setup": [246, 447, 484, 493, 499], "setuptool": 477, "sever": [66, 128, 162, 183, 304, 328, 430, 432, 436, 447, 450, 456, 458, 461, 470, 475, 477, 478, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499], "sh": 487, "shall": [188, 377, 480, 488], "shallow": [128, 304], "shan": 479, "shap": [100, 475, 477, 479, 494, 498], "shap_valu": 494, "shape": [9, 12, 23, 31, 215, 222, 324, 369, 413, 458, 459, 472, 477, 491, 497, 499], "shapinsight": [98, 99, 101, 102, 477, 487, 488], "shaplei": 100, "share": [128, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 477, 480, 496], "share_memori": [128, 304], "share_memory_": [128, 304], "shield": [280, 382, 432, 475, 489], "shift": [304, 315, 469, 497], "shift_first": [315, 497], "shifted_hartmann": 469, "ship": [417, 492], "shm": 476, "short": 478, "shortcut": [223, 491, 492], "shorten": [477, 478], "shot": 496, "should": [34, 47, 56, 100, 128, 159, 190, 238, 250, 304, 307, 336, 337, 375, 377, 381, 382, 388, 393, 394, 406, 441, 443, 447, 450, 453, 454, 463, 467, 475, 477, 478, 482, 483, 484, 487, 491, 493, 496, 499], "show": [100, 128, 304, 431, 432, 433, 435, 436, 441, 442, 443, 450, 451, 453, 456, 463, 465, 466, 467, 469, 470, 472, 484, 487, 495], "showcas": 490, "shown": [447, 456, 470, 477, 483], "shrink": 448, "shutdown": 476, "side": [48, 161, 325, 477, 497], "sigma": [176, 177, 178, 179, 307, 316, 458, 479, 488, 495, 497], "sigmoid": [307, 323, 497, 498], "sigmoidtransform": [307, 498], "sign": 495, "signal": [70, 488, 495], "signatur": [94, 128, 296, 304, 353, 355, 448, 477, 478, 484, 492], "significantli": [223, 456, 469, 470, 484, 485, 495], "silenc": 478, "silent": [477, 484], "similar": [128, 189, 304, 476, 477, 484, 485, 487, 489, 490, 491, 492, 495, 496, 499], "similarli": [128, 304, 459, 489, 495], "simpl": [22, 23, 128, 304, 343, 369, 432, 446, 447, 454, 458, 475, 477, 482, 483, 490, 493, 495, 496], "simpler": [478, 492], "simplest": [491, 494, 495], "simplex": [223, 498], "simplex_paramet": [223, 453, 491], "simpli": [359, 446, 447, 478, 484, 486, 488, 489, 490, 491, 492, 495, 496], "simplic": 355, "simplifi": 478, "simul": [89, 377, 443, 448, 475, 477, 496, 498], "simulate_experi": [250, 252, 493], "simulate_scenario": [252, 430, 431, 432, 433, 447, 469, 470, 472, 477, 485, 493], "simulate_transfer_learn": [469, 493], "simulationresult": 456, "simultan": [488, 494], "sin": [472, 497], "sinc": [60, 128, 161, 217, 263, 304, 355, 369, 431, 438, 439, 451, 462, 465, 466, 467, 469, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 492, 493, 494, 495, 496, 497], "singer": 496, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 43, 56, 100, 128, 136, 161, 215, 217, 223, 246, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 299, 301, 304, 307, 373, 394, 405, 413, 419, 431, 432, 433, 442, 447, 453, 458, 469, 470, 475, 477, 483, 484, 485, 486, 487, 488, 489, 491, 494, 495, 496, 497, 498], "single_lin": 373, "single_y0": 459, "single_y1": 459, "singledispatch": 395, "singletargetobject": [34, 299, 301, 307, 431, 432, 433, 435, 436, 441, 442, 443, 444, 447, 450, 451, 465, 466, 467, 475, 477, 498], "sinusoid": 497, "site": 476, "situat": [100, 161, 413, 441, 443, 453, 476, 478, 482, 484, 488, 489, 492, 493, 495, 496], "six": [453, 454], "size": [23, 107, 108, 109, 112, 114, 116, 117, 118, 128, 188, 190, 217, 222, 223, 304, 397, 448, 450, 456, 462, 463, 469, 470, 483, 492, 493, 495, 496, 499], "sk": 450, "skeleton": 477, "skew": 497, "skfp": 153, "skicit": 477, "skin": 493, "skip": [128, 220, 226, 304, 477, 483], "skl2onnx": 450, "sklearn": [208, 404, 450], "sklearnclusteringrecommend": [205, 206, 207, 477, 482], "slightli": [244, 432, 453, 493], "slope": [325, 497], "slope_left": [325, 497], "slope_right": [325, 497], "slot": [452, 456, 473, 477, 484], "slot1_amount": 453, "slot1_label": 453, "slot2_amount": 453, "slot2_label": 453, "slot3_amount": 453, "slot3_label": 453, "slow": [441, 443, 444, 482, 491], "slower": 482, "slowest": 477, "small": [334, 338, 438, 453, 469, 470, 477, 478, 481, 489], "smaller": [34, 456, 483, 496], "smallest": [215, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 384, 491], "smart": [475, 497], "smartli": 453, "smile": [159, 362, 364, 365, 475, 489], "smoke": 477, "smoke_test": [430, 431, 432, 433, 439, 441, 442, 444, 447, 448, 456, 459, 469, 470, 472], "smooth": [112, 114, 179, 495], "smoothedboxprior": 477, "smoother": 112, "smoothli": 495, "sn": [430, 431, 432, 433, 447, 469, 470, 472], "snippet": 485, "so": [34, 128, 246, 263, 304, 369, 383, 433, 447, 453, 456, 458, 462, 463, 475, 476, 483, 484, 485, 486, 488, 489, 490, 492, 495, 497], "soften": 495, "softwar": [475, 480], "sola": 479, "sole": 480, "solut": [79, 483, 484, 488, 491, 492, 496], "solv": [263, 442, 443, 453, 456, 477], "solv_rdkit2ddesc": 443, "solvent": [431, 432, 433, 435, 436, 441, 442, 443, 444, 447, 451, 453, 454, 466, 467, 475, 484, 489], "solvent1": [453, 454], "solvent2": [453, 454], "solvent3": 453, "solvent4": 453, "solvent5": 453, "solvent8": 453, "solvent9": 453, "solvent_1": 484, "solvent_2": 484, "solvent_3": 484, "solvent_data": 447, "solvent_encoding1": 484, "solvent_encoding2": 484, "solvent_mordred_enc": 484, "solvent_rdkit2dd": [441, 444], "solvent_rdkit_enc": 484, "solvent_smil": 447, "solver": 493, "some": [56, 128, 304, 404, 431, 432, 433, 436, 441, 442, 443, 444, 447, 448, 450, 451, 453, 454, 459, 461, 462, 463, 465, 470, 477, 482, 483, 484, 485, 489, 490, 492, 493, 494, 495, 499], "someth": [92, 128, 304, 467], "sometim": [484, 488, 493, 495], "somewhat": 485, "somewher": 483, "soon": [475, 483, 490], "sophist": [477, 486, 492], "sort": 164, "sourabh": 479, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 132, 134, 136, 138, 141, 142, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 236, 237, 238, 240, 242, 243, 246, 248, 250, 252, 255, 257, 259, 260, 262, 264, 265, 268, 270, 271, 272, 275, 276, 278, 280, 282, 284, 286, 288, 290, 291, 292, 294, 296, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 399, 400, 401, 406, 407, 409, 410, 412, 413, 414, 416, 424, 425, 426, 427, 428, 476, 477, 478, 480, 495], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 41, 48, 55, 58, 71, 76, 82, 88, 92, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 191, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 226, 227, 246, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 369, 384, 413, 430, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 456, 459, 460, 462, 465, 470, 472, 473, 477, 479, 482, 484, 485, 486, 487, 489, 490, 492, 493, 498], "span": [64, 141, 142, 143, 145, 146, 148, 155, 156, 159, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 446, 456, 461, 487], "spars": 369, "speak": 496, "spec": [220, 226, 237], "special": [190, 475, 476, 480, 481, 486, 496, 499], "specif": [105, 162, 169, 208, 211, 217, 220, 233, 250, 292, 294, 307, 347, 401, 427, 446, 447, 458, 462, 472, 475, 477, 478, 483, 484, 486, 489, 490, 491, 492, 493, 494, 496, 497], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 31, 34, 37, 47, 56, 93, 100, 104, 128, 148, 159, 161, 162, 163, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 236, 237, 246, 248, 250, 260, 304, 315, 317, 323, 336, 354, 363, 369, 378, 384, 385, 394, 401, 414, 432, 436, 438, 450, 451, 456, 458, 469, 475, 476, 477, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497], "speed": [223, 441, 443, 444, 469, 470, 485, 491], "speed_fast": 491, "speed_norm": 491, "speed_slow": 491, "speedup": [477, 496], "spell": 478, "spellcheck": 477, "sphinx": [477, 478], "split": [192, 482], "sporad": 477, "sqrt": 484, "squar": [369, 456, 459, 484, 495], "squash": 478, "stabil": [477, 485], "stabl": [105, 169], "stage": [483, 484, 492], "stand": 477, "standard": [6, 20, 292, 316, 450, 477, 483, 489, 497], "star": 453, "start": [246, 430, 446, 447, 448, 454, 456, 459, 476, 477, 478, 482, 489, 490, 492, 493, 496, 497], "startup": 477, "stat": [34, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 448, 454, 456, 483], "state": [128, 185, 187, 188, 189, 190, 304, 369, 447, 453, 474, 477, 480, 483, 486, 498], "state_dict": [128, 304], "stateless": [456, 474, 477, 486], "statement": [388, 462, 480], "static": [9, 12, 15, 18, 217, 223, 268, 475, 478, 495, 496], "statist": [34, 255, 257, 258, 259, 264, 268, 282, 284, 286, 288, 470, 477, 498], "statu": 483, "std": [34, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288], "std_threshold": 292, "steep": [323, 497], "steeper": 497, "steer": 497, "stem": [476, 496], "step": [220, 226, 246, 453, 456, 474, 475, 478, 483, 488, 492, 494, 495, 497], "sterl": 479, "steven": 432, "still": [162, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 447, 456, 482, 484, 485, 487, 489, 494, 496, 499], "stop": [445, 473, 477, 478], "stop_on_pi": 447, "stoppag": 480, "storag": [128, 304, 483, 485, 492], "store": [28, 128, 143, 292, 299, 304, 369, 448, 453, 456, 475, 477, 483, 499], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 91, 92, 100, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 163, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 198, 200, 205, 206, 207, 208, 215, 217, 222, 223, 236, 240, 250, 252, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 302, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 337, 347, 353, 354, 360, 362, 364, 365, 371, 373, 378, 381, 382, 386, 388, 394, 397, 399, 400, 401, 407, 451, 456, 466, 467, 469, 470], "straightforward": [483, 495, 496], "strategi": [17, 200, 217, 244, 430, 456, 477], "stream": [351, 477, 485], "streamingsequentialmetarecommend": [188, 490], "streamingsequentialstrategi": 477, "streamlin": 478, "streamlit": [475, 477], "streibel": 479, "strict": [128, 295, 304, 353, 495], "strictli": [451, 466, 467], "stride": [128, 304, 438], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 158, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 360, 364, 365, 369, 371, 372, 373, 381, 394, 399, 400, 450, 465, 477, 483, 484, 489, 498], "strip": [246, 433], "strong": 477, "strongli": [483, 495], "strtobool": [477, 485], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 52, 236, 475, 476, 477, 478, 479, 483, 489, 492], "studi": [183, 487, 490, 498], "style": [450, 469, 477, 478], "sub": [128, 208, 304, 477, 487, 492], "subclass": [93, 236, 347, 349, 359, 401, 436, 477, 478, 490, 492], "subfold": 485, "subgraph": 489, "subgroup": 454, "subject": 480, "sublicens": 480, "submiss": [477, 480], "submit": [28, 475, 478, 480], "submodul": [128, 304], "subobject": 369, "subpackag": [477, 478, 493], "subplot": [459, 472], "subselectioncondit": [442, 443, 477, 486, 498], "subsequ": [128, 190, 217, 223, 250, 304, 332, 364, 474, 480, 483, 492], "subset": [34, 125, 130, 134, 136, 159, 217, 350, 385, 413, 483, 484, 486, 489], "subspac": [28, 64, 192, 200, 214, 215, 217, 219, 221, 223, 438, 441, 442, 443, 444, 461, 463, 465, 477, 484, 490, 492, 498, 499], "subspace_continu": 64, "subspace_json": 492, "subspacecontinu": [34, 64, 141, 155, 217, 219, 461, 477, 491], "subspacediscret": [34, 142, 145, 146, 148, 156, 159, 217, 219, 222, 441, 442, 443, 444, 453, 465, 477, 491, 492, 499], "substanc": [153, 159, 363, 432, 435, 441, 443, 444, 454, 477, 484, 487, 489, 496], "substance_12": 484, "substance_3": 484, "substance_43": 484, "substance_data": 477, "substance_encod": 432, "substanceencod": [159, 363, 365, 441, 442, 443, 444, 477, 489, 492], "substanceparamet": [431, 432, 433, 435, 436, 441, 442, 443, 444, 447, 451, 453, 466, 467, 475, 477, 484, 485, 487, 491, 492, 498], "substanti": [159, 499], "substrat": 496, "subtract": 495, "subtyp": 492, "success": [301, 413, 456, 492, 497], "success_valu": 301, "suffic": 478, "suffici": [369, 447, 491, 492], "suggest": [487, 493, 498], "suit": 478, "suitabl": [208, 223, 246, 360, 369, 478, 481, 483, 489, 493, 494, 495, 496], "sum": [62, 120, 223, 327, 369, 430, 440, 441, 442, 443, 447, 453, 454, 456, 459, 473, 484, 491, 497], "sum_": [484, 488], "sum_constraint": 453, "sum_constraint_1": 444, "sum_constraint_2": 444, "sum_toler": 453, "summar": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159, 299, 301, 307], "summari": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 141, 142, 143, 145, 146, 148, 155, 156, 159, 299, 301, 307, 477, 478], "superior": 481, "supersed": 480, "suppli": 369, "support": [11, 34, 98, 99, 100, 101, 102, 189, 211, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 404, 436, 441, 442, 443, 444, 447, 448, 450, 453, 465, 475, 477, 478, 479, 480, 484, 487, 489, 490, 491, 493, 494, 495, 497, 498], "supports_batch": 477, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 255, 257, 259, 264, 268, 282, 284, 286, 288, 477, 494], "supports_partial_measur": [125, 130, 134, 136, 477, 482], "supports_pending_experi": 477, "supports_transfer_learn": [255, 257, 259, 264, 268, 282, 284, 286, 288, 494], "suppos": 484, "sure": [453, 461, 475, 478], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 77, 81, 100, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 198, 200, 205, 206, 207, 208, 215, 217, 223, 255, 257, 260, 262, 264, 268, 270, 271, 275, 278, 280, 282, 284, 286, 288, 441, 442, 443, 444, 448, 456, 465, 473, 475, 477, 479, 482, 483, 488, 489, 490, 496, 498], "surrogate_model": [198, 200, 436, 448, 450, 451, 456, 466, 467, 477], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 100, 198, 200, 259, 262, 477], "svg": [459, 472], "sw": 442, "swiss": 479, "switch": [56, 186, 189, 190, 292, 436, 441, 442, 443, 444, 456, 465, 475, 477, 484, 490], "switch1": 442, "switch2": 442, "switch2_left": 442, "switch2_right": 442, "switch_1": 484, "switch_2": 484, "switch_aft": [190, 466, 467, 490], "switzerland": 479, "sy": 476, "symmetr": [307, 497], "symmetri": 484, "sync": [477, 478], "syntax": [475, 477], "synthet": [438, 439, 448, 459, 469, 470, 477], "system": [369, 398, 432, 456, 472, 475, 476, 479, 480, 485, 493, 496], "t": [128, 290, 291, 304, 323, 352, 360, 431, 432, 433, 435, 436, 443, 448, 459, 469, 470, 474, 486, 489, 493, 495, 497], "t1": [331, 482, 488, 493, 495, 497], "t2": [331, 482, 488, 495, 497], "t3": [488, 495, 497], "t4": [488, 495, 497], "t5": [495, 497], "t6": 495, "t7": 495, "t_1": 488, "t_2": 488, "t_3": 488, "t_ab": 495, "t_bell": 495, "t_both": 497, "t_i": 488, "t_match": [488, 492], "t_max": [488, 492, 497], "t_min": [492, 497], "t_power": 495, "t_quad": 495, "t_skew1": 497, "t_skew2": 497, "t_sym1": 497, "t_sym2": 497, "t_sym3": 497, "tab": [459, 472], "tabl": [388, 450, 477, 483, 484, 487], "tabular": 493, "tag": [475, 477, 492], "tailor": 483, "take": [8, 52, 112, 142, 156, 161, 162, 255, 257, 259, 264, 268, 278, 282, 284, 286, 288, 302, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 446, 453, 458, 477, 482, 483, 484, 485, 488, 489, 490, 496], "taken": [188, 447, 477, 483, 486], "tantamount": 481, "target": [9, 12, 14, 15, 18, 34, 82, 100, 125, 126, 128, 130, 133, 134, 135, 136, 138, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 244, 246, 247, 248, 255, 257, 259, 262, 264, 268, 282, 284, 286, 288, 292, 301, 304, 307, 310, 355, 369, 375, 378, 379, 385, 386, 387, 390, 406, 407, 408, 425, 426, 428, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 447, 448, 450, 451, 456, 462, 463, 465, 466, 467, 469, 470, 472, 473, 475, 477, 482, 483, 487, 492, 493, 494, 497, 498], "target_1": [442, 443, 444, 482, 488], "target_2": [482, 488], "target_3": [482, 488], "target_a": 494, "target_b": 494, "target_cumbest": [430, 469, 470], "target_index": [100, 477, 487], "target_match": 458, "target_max": [458, 483], "target_min": 458, "targetmod": [307, 477], "targetnam": 246, "targettransform": [307, 477], "task": [146, 217, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 299, 301, 307, 456, 477, 483, 490, 492, 493, 496], "task_idx": [217, 477], "task_param": [469, 470, 493], "task_paramet": 492, "task_parameter_json": 492, "task_parameter_reconstruct": 492, "taskparamet": [230, 469, 470, 477, 486, 492, 493, 498], "tb": 499, "tbodi": 450, "td": 450, "technic": [128, 223, 304, 482, 493, 496], "techniqu": [208, 490], "technologi": 479, "telemetri": [477, 479], "temp": [441, 443, 479], "temp_c": [431, 432, 433, 447], "temperatur": [431, 433, 435, 436, 441, 443, 446, 450, 451, 465, 484, 489, 491, 496], "temperature_resolut": 441, "temperature_valu": 447, "temporari": [125, 130, 134, 136, 410, 447, 477, 485, 492, 495], "temporarili": [477, 499], "temporary_se": 499, "tempt": 496, "tenac": 477, "tend": 448, "tensor": [28, 31, 48, 128, 255, 290, 291, 304, 315, 323, 333, 378, 389, 394, 416, 418, 469, 477], "tensorcal": 318, "term": [115, 244, 447, 456, 478, 480, 483, 487, 491, 492, 493, 495, 496], "termin": [447, 448, 476, 480], "terminologi": 498, "tert": [431, 432, 433, 435, 436], "test": [223, 246, 264, 456, 469, 470, 475, 476, 477, 478, 483, 487, 493, 495, 499], "test_funct": [438, 439, 448, 462, 463, 469, 470], "test_scenario": [431, 433], "testabl": [89, 246], "testfunct": [438, 439, 462, 463], "testfunctionclass": [438, 439, 462, 463], "text": [37, 324, 450, 459, 480, 484, 485, 488, 497], "textcont": 450, "texttt": 497, "th": [337, 484], "than": [31, 34, 68, 88, 156, 188, 189, 190, 200, 215, 217, 230, 307, 337, 359, 373, 379, 413, 414, 432, 443, 447, 454, 477, 481, 484, 485, 487, 489, 492, 494, 495], "thank": 495, "thei": [128, 162, 183, 193, 304, 381, 385, 436, 444, 447, 453, 456, 458, 461, 477, 478, 482, 483, 484, 487, 489, 490, 491, 492, 495, 496, 497, 499], "them": [41, 278, 376, 436, 472, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 492, 495, 496, 497], "theme": 477, "themselv": 495, "theori": 480, "therebi": 223, "therefor": [47, 190, 255, 257, 259, 264, 268, 282, 284, 286, 288, 436, 476, 483, 492, 494, 496, 497], "therein": 477, "thereof": 480, "thf": 484, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 162, 185, 187, 188, 189, 190, 192, 200, 205, 206, 207, 208, 215, 217, 223, 244, 248, 250, 252, 255, 257, 259, 260, 262, 263, 264, 268, 278, 282, 284, 286, 288, 292, 304, 336, 355, 356, 359, 364, 369, 377, 379, 380, 382, 384, 388, 430, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 465, 466, 467, 469, 470, 472, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "think": [456, 489], "third": [367, 458, 480, 487, 493], "third_parti": 369, "thompson": [23, 479], "thomson": 23, "those": [66, 162, 190, 192, 244, 413, 436, 476, 480, 482, 484, 493], "though": [496, 497], "three": [432, 453, 454, 458, 459, 475, 483, 484, 487, 488, 490, 491, 496, 498], "threshold": [9, 12, 31, 45, 47, 148, 159, 161, 163, 190, 200, 292, 382, 438, 443, 444, 447, 453, 477, 484, 489, 495], "thresholdcondit": [61, 62, 438, 443, 444, 453, 498], "through": [34, 217, 323, 336, 385, 451, 453, 456, 472, 475, 477, 478, 480, 484, 488, 492, 493, 497, 498], "throughout": 190, "throw": [128, 304, 364, 484], "thrown": [128, 248, 304, 433, 447, 466, 476, 482], "thu": [200, 355, 385, 431, 432, 438, 439, 441, 442, 443, 444, 450, 451, 453, 456, 462, 463, 465, 476, 478, 483, 485, 486, 489, 490, 492, 493, 496, 499], "tick": 448, "tick_param": 472, "tight": 495, "tight_layout": 459, "time": [11, 128, 200, 304, 414, 439, 446, 453, 456, 475, 477, 482, 483, 484, 485, 486, 489, 492, 493, 494, 498, 499], "timeout": 477, "timer": 446, "titl": [450, 459, 475, 480], "tl": 469, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 48, 125, 130, 134, 136, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 477], "to_botorch_object": [311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329], "to_botorch_posterior_transform": [315, 320], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 399, 400], "to_empti": [128, 304], "to_factori": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122], "to_fram": [430, 495], "to_gpytorch": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 171, 173, 174, 175, 176, 177, 178, 179, 477], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 299, 301, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 394, 399, 400, 450, 451, 465, 483, 492], "to_keep": 383, "to_ndarrai": 394, "to_numpi": [448, 459], "to_object": [299, 301, 307, 430, 438, 439, 448, 456, 459, 462, 463, 469, 470, 472, 488, 493, 495], "to_polar": [43, 44, 45], "to_searchspac": [141, 142, 143, 145, 146, 148, 155, 156, 159, 215, 223, 456, 458, 461, 472, 477, 486], "to_str": 477, "to_subspac": [141, 142, 145, 146, 148, 155, 156, 159, 477], "to_tensor": [394, 450, 477], "to_tupl": [394, 459, 472], "tobia": 479, "togeth": [41, 72, 337, 436, 456, 463, 475, 477, 484, 497], "toggl": [34, 477], "toggle_discrete_candid": [34, 477, 486], "toggleabl": 450, "toggleable__cont": 450, "toggleablecont": 450, "tol": 450, "toler": [34, 45, 156, 223, 427, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 447, 450, 451, 453, 462, 463, 465, 466, 467, 472, 475, 477, 484], "tolist": 438, "toluen": 489, "toml": 477, "too": [438, 493, 495, 496], "tool": [361, 475, 477, 484, 492], "toolbox": 475, "top": [477, 478], "topic": 483, "topolog": 489, "topologicaltors": 153, "topologicaltorsionfingerprint": 153, "torch": [128, 304, 315, 318, 323, 333, 378, 394, 450, 469, 477, 497], "torch_doctest_cuda1": [128, 304], "toronto": 479, "tort": 480, "total": [31, 189, 190, 413, 453, 454, 456, 491], "total_bas": 454, "total_phase_ag": 454, "toward": [173, 484], "towel": 474, "tox": [477, 478], "tr": 450, "tracebackexcept": 476, "track": [182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 223, 447, 480, 486], "trade": [8, 480, 488], "trademark": 480, "tradit": [432, 452, 453, 473, 475, 477], "train": [84, 100, 128, 182, 188, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 252, 255, 257, 259, 260, 262, 263, 264, 268, 282, 284, 286, 288, 292, 304, 449, 459, 469, 470, 477, 493], "train_i": 450, "train_x": 450, "training_funct": 470, "trajectori": [244, 430, 447, 456, 472, 483, 493], "transfer": [251, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 436, 441, 442, 443, 444, 465, 469, 473, 475, 477, 480, 489, 494, 498], "transform": [34, 84, 125, 130, 134, 136, 142, 143, 145, 146, 148, 156, 159, 215, 217, 223, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 299, 301, 303, 304, 307, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 365, 369, 378, 385, 390, 394, 416, 441, 442, 443, 444, 458, 465, 472, 473, 477, 480, 485, 488, 489, 498], "transform_rep_exp2comp": 477, "transformermixin": 369, "transit": [128, 304, 477, 495], "translat": [41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 307, 477, 480, 486, 489], "transmiss": 492, "transport": 369, "travers": 477, "treasur": 498, "treat": [159, 163, 255, 257, 259, 264, 268, 282, 284, 286, 288, 432, 475, 484, 489, 495, 499], "tree": 477, "tremend": 432, "trend": 496, "tri": [128, 304, 491], "triangl": [307, 324, 497], "triangular": [307, 324, 498], "triangular_transform": 477, "triangulartransform": 498, "tricki": 487, "tricyclohexylphosphin": [431, 432, 433], "trigger": [188, 336, 447, 451, 456, 477, 478, 482, 488, 492], "trim": 450, "trivial": [271, 284, 488, 489, 494], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 100, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 163, 200, 217, 250, 268, 301, 304, 348, 349, 353, 359, 360, 369, 373, 383, 413, 427, 430, 432, 436, 438, 439, 441, 442, 443, 444, 448, 450, 451, 453, 456, 458, 459, 462, 463, 465, 466, 467, 469, 470, 477, 482, 483, 484, 486, 487, 488, 489, 492, 495, 497], "trust": 450, "truth": 360, "truthi": 485, "try": [92, 431, 432, 433, 447, 450, 451, 467, 476, 477, 499], "tunabl": 472, "tune": [471, 472, 473, 475], "tupl": [9, 12, 15, 18, 34, 44, 48, 100, 107, 108, 109, 112, 114, 116, 117, 118, 120, 121, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 164, 215, 217, 222, 223, 291, 304, 324, 327, 328, 329, 332, 336, 346, 352, 353, 356, 372, 389, 394, 397, 416, 477], "turn": [47, 215, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 397, 461, 472, 476, 477, 484, 485, 488], "turnaround": 493, "twice": [486, 488, 497], "twini": 472, "two": [9, 12, 15, 18, 37, 58, 67, 68, 128, 190, 200, 210, 244, 304, 323, 324, 325, 327, 329, 331, 337, 343, 345, 378, 406, 413, 425, 430, 431, 433, 446, 453, 456, 459, 463, 469, 470, 472, 474, 475, 477, 478, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497], "twofold": 456, "twophasemetarecommend": [431, 433, 436, 441, 442, 443, 444, 447, 448, 450, 451, 456, 463, 465, 466, 467, 475, 477, 490], "twophasestrategi": 477, "twosid": 497, "twosidedaffinetransform": 498, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 80, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 128, 130, 134, 136, 138, 141, 142, 143, 145, 146, 148, 155, 156, 158, 159, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 233, 234, 236, 237, 238, 240, 242, 243, 246, 248, 250, 252, 255, 257, 258, 259, 260, 262, 264, 265, 268, 271, 272, 276, 282, 284, 286, 288, 290, 291, 292, 294, 295, 296, 299, 301, 302, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 333, 336, 337, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 363, 364, 365, 369, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 399, 400, 401, 403, 404, 406, 407, 413, 414, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 432, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 465, 466, 467, 472, 475, 477, 478, 480, 481, 484, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498], "typealia": 302, "typeddict": [294, 477], "typeerror": [34, 100, 104, 246, 255, 257, 259, 264, 268, 282, 284, 286, 288, 355, 376, 401, 414, 427, 428, 447, 448, 451], "typeguard": 352, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 128, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 162, 171, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 215, 217, 223, 228, 236, 237, 240, 255, 257, 259, 262, 264, 268, 271, 282, 284, 286, 288, 291, 292, 299, 301, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 349, 350, 351, 352, 372, 378, 385, 387, 394, 399, 400, 401], "typic": [17, 128, 304, 355, 373, 432, 472, 475, 477, 482, 483, 487, 489, 492, 499], "typing_extens": 478, "typo": [477, 478], "u": [23, 430, 431, 432, 433, 446, 448, 453, 454, 456, 458, 461, 470, 472, 475, 481, 482, 484, 488, 495], "ucb": [8, 436, 477, 481, 483, 492], "ultim": 478, "ultra": [466, 467], "un": 477, "unabl": 450, "unavail": 477, "unawar": 482, "unbound": [394, 446], "uncaught": 477, "uncertain": 341, "uncertainbool": 307, "uncertainti": [8, 17, 436, 498], "unchang": [128, 161, 304, 369], "uncharacter": 496, "uncorrel": [382, 496], "undefin": [128, 255, 304, 486], "under": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 385, 444, 448, 456, 459, 475, 476, 480, 489], "underflow": 90, "underli": [34, 58, 447, 456, 475, 477, 482, 483, 487, 490, 492, 495], "underscor": 477, "understand": [475, 496], "undesir": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 95, 484, 486, 489, 499], "undo": 476, "unequ": 444, "unevenli": 489, "unexpect": [80, 92, 128, 304, 477], "unexpected_kei": [128, 304], "unfilt": 484, "unfinish": 482, "unfortun": 496, "unhandl": 477, "uniform": [215, 255, 376, 377, 477], "uniformli": [210, 413], "uniniti": 359, "uninstal": 91, "unintend": [95, 355, 477, 478], "unintention": 499, "union": [9, 12, 15, 18, 34, 163, 246, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 307, 401, 407, 413, 463, 480, 491], "uniqu": [59, 138, 162, 413, 425, 453, 477, 489], "unit": [141, 142, 143, 145, 146, 148, 155, 156, 159, 222, 299, 301, 307, 315, 323, 397, 399, 458, 472, 477], "unix": 497, "unknown": [189, 413, 430, 456, 472, 477, 488, 494, 496], "unlabel": 378, "unless": [128, 304, 475, 478, 480, 485, 489, 492], "unlik": [14, 15, 16, 18, 19, 453, 488, 495, 499], "unlock": 498, "unmaintain": 477, "unmatch": 353, "unmatchedattributeerror": 353, "unmeasur": [246, 433], "unnecessari": [477, 483, 497], "unnorm": 497, "unpromis": [447, 482], "unreach": 477, "unrealist": 493, "unrepresent": 477, "unrestrict": 355, "unsaf": 477, "unspecifi": [342, 477, 492], "unspecifiedtyp": 34, "unstructur": [238, 492], "unstructure_bas": 236, "unsupervis": 369, "unsupport": [215, 248, 482], "unsurprisingli": 472, "until": [185, 187, 188, 189, 190, 246, 456, 475, 482, 493], "untouch": 376, "untransform": 34, "unusedobjectwarn": [447, 477, 482], "unveil": 470, "unwant": 41, "unweight": 488, "up": [34, 223, 246, 248, 430, 431, 432, 433, 434, 441, 443, 446, 448, 452, 453, 454, 458, 459, 463, 469, 470, 475, 476, 477, 481, 484, 485, 488, 495, 499], "updat": [34, 128, 304, 369, 432, 435, 477, 478, 482], "update_measur": [34, 477], "upgrad": 477, "upon": [192, 271, 476, 477, 478, 484, 491, 494, 496], "upper": [8, 24, 163, 179, 217, 223, 394, 436, 448, 459, 469, 470, 477, 484, 495, 499], "upper_bound": 491, "upper_threshold": 163, "upperconfidencebound": [24, 481, 492], "upstream": 478, "urg": 487, "url": [475, 496], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 72, 76, 100, 112, 128, 130, 148, 153, 156, 159, 162, 182, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 215, 217, 223, 224, 225, 237, 246, 248, 250, 255, 257, 259, 264, 265, 268, 282, 284, 286, 288, 295, 304, 307, 339, 355, 356, 364, 365, 369, 377, 378, 384, 395, 403, 404, 413, 418, 430, 438, 439, 445, 446, 447, 448, 449, 452, 453, 454, 458, 461, 465, 466, 467, 469, 470, 472, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 498, 499], "usa": 479, "usabl": [359, 476, 477, 489, 492], "usag": [396, 477, 484, 490, 498], "use_comp_rep": [100, 104, 487], "use_torch": [378, 438, 439, 448, 462, 463, 469, 470], "user": [55, 56, 70, 85, 95, 128, 148, 151, 255, 257, 259, 264, 268, 282, 284, 286, 288, 296, 304, 369, 377, 399, 400, 435, 436, 441, 467, 472, 475, 476, 477, 478, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497], "userguid": 458, "usernam": 477, "userwarn": 476, "uses_shap_explain": 477, "usort": 477, "usr": 153, "usrcat": 153, "usrcatfingerprint": 153, "usrfingerprint": 153, "usual": [128, 246, 431, 432, 433, 466, 476, 485, 487, 489], "util": [34, 128, 200, 215, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 339, 341, 342, 343, 369, 394, 399, 400, 412, 416, 430, 432, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 459, 462, 463, 469, 470, 475, 477, 481, 482, 483, 487, 488, 489, 490, 492, 493, 494, 496, 498], "uv": 477, "v": [472, 475, 496], "val": [52, 360, 469], "val_from_param1": 60, "val_from_param2": 60, "valid": [34, 37, 38, 39, 40, 41, 44, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 161, 162, 217, 220, 223, 226, 264, 379, 384, 441, 464, 466, 473, 476, 477, 478, 483, 484, 493], "validate_compat": 264, "validate_config": [34, 467, 477, 483], "validate_parameter_input": 34, "validate_target_input": 34, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 37, 43, 44, 45, 47, 48, 56, 58, 82, 100, 111, 112, 113, 114, 115, 116, 117, 118, 122, 125, 128, 130, 134, 136, 142, 145, 146, 148, 150, 151, 153, 156, 159, 161, 162, 163, 166, 167, 168, 190, 198, 200, 205, 206, 207, 208, 215, 217, 223, 224, 225, 244, 246, 248, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 294, 301, 302, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 340, 341, 342, 350, 353, 360, 369, 371, 375, 376, 377, 379, 381, 384, 385, 388, 394, 395, 401, 406, 407, 421, 422, 423, 424, 426, 427, 428, 431, 432, 433, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 456, 459, 462, 463, 465, 466, 467, 469, 470, 472, 475, 477, 478, 481, 482, 484, 485, 486, 487, 488, 495, 496, 497, 498, 499], "valuabl": [490, 493], "valueerror": [9, 12, 15, 17, 18, 31, 34, 47, 66, 67, 68, 100, 104, 125, 128, 130, 134, 136, 138, 161, 162, 167, 168, 215, 217, 223, 229, 246, 248, 255, 257, 259, 264, 268, 282, 284, 286, 288, 296, 304, 307, 323, 337, 353, 358, 360, 363, 371, 373, 377, 379, 384, 385, 386, 413, 414, 425, 427, 428, 463, 476], "vanilla": 497, "var": [34, 128, 255, 257, 258, 259, 262, 264, 268, 282, 284, 286, 288, 304, 456, 498], "vari": [34, 223, 432, 485, 488], "variabl": [37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 125, 130, 134, 136, 141, 142, 143, 145, 146, 148, 155, 156, 159, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 250, 255, 257, 259, 264, 268, 282, 284, 286, 288, 299, 405, 419, 462, 477, 478, 484, 489, 490, 492, 494], "varianc": [8, 17, 111, 284, 380, 477, 481], "variance_initial_valu": 111, "variance_prior": 111, "variant": [436, 469, 477, 487, 495, 496], "variat": 459, "varieti": [462, 478, 492, 493], "variou": [369, 394, 453, 460, 477, 478, 482, 487, 490, 493, 495, 497], "varucb": 477, "vector": [37, 450, 477, 479, 488], "vendor": 489, "verbal": 480, "verbos": [450, 451, 477], "veri": [441, 443, 472, 482, 485, 487, 489, 494, 499], "verifi": [359, 438, 441, 442, 443, 444, 453, 454, 461, 463, 465, 478], "versa": [469, 496], "versatil": 490, "version": [125, 128, 130, 134, 136, 304, 369, 404, 441, 443, 444, 453, 456, 461, 469, 470, 475, 476, 477, 478, 480, 492, 495, 497, 498], "vert": 448, "via": [14, 17, 23, 33, 34, 47, 100, 128, 190, 200, 211, 255, 257, 259, 260, 262, 264, 268, 282, 284, 286, 288, 347, 355, 383, 433, 439, 446, 447, 450, 458, 461, 475, 477, 478, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 495, 496, 497, 498], "via_init": 492, "via_json": 492, "viabl": 88, "vice": [469, 496], "view": [128, 215, 223, 304, 448, 491], "view_init": 448, "violat": [41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 83, 477], "viridi": 448, "virtual": 478, "visibl": 477, "visual": [432, 469, 470, 472, 487], "vitro": 482, "vivo": 482, "voltag": 472, "voltage_grid": 472, "volum": [31, 475, 496], "vsa": 153, "vsafingerprint": 153, "vulner": [477, 478], "w_i": 488, "wa": [17, 73, 74, 77, 81, 82, 91, 95, 162, 190, 255, 257, 259, 264, 268, 282, 284, 286, 288, 369, 371, 379, 414, 432, 475, 476, 477, 478, 480, 484, 485, 487, 489, 492, 496], "wai": [217, 446, 453, 454, 460, 461, 469, 472, 474, 475, 482, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499], "wait": 482, "wall": 11, "want": [55, 436, 441, 453, 456, 463, 470, 475, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495], "warn": [69, 356, 441, 443, 444, 447, 462, 463, 477, 478], "warranti": [475, 480], "watch": 446, "water": [441, 442, 443, 444, 453, 484, 489], "waterfal": [100, 102, 477], "wavelength_cumbest": 472, "we": [28, 128, 244, 304, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499], "web": 478, "weber": 479, "weight": [128, 130, 304, 458, 488, 492], "weight_kdalton": 489, "welcom": 478, "well": [128, 304, 369, 436, 447, 452, 474, 477, 478, 483, 484, 487, 489, 493, 495, 497], "were": [34, 78, 86, 433, 470, 476, 477, 482, 484, 489, 491], "what": [162, 188, 217, 244, 369, 416, 430, 450, 458, 467, 474, 478, 481, 483, 487, 488, 489, 495, 496, 498], "whatsnew": 343, "when": [9, 12, 15, 18, 34, 47, 56, 92, 128, 156, 161, 163, 188, 189, 190, 198, 200, 217, 250, 255, 257, 259, 264, 265, 268, 282, 284, 286, 288, 296, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 340, 342, 353, 355, 359, 369, 373, 378, 414, 441, 442, 444, 446, 451, 453, 454, 456, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499], "whenev": [28, 188, 492, 495], "where": [9, 12, 15, 18, 23, 28, 37, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 128, 182, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 244, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 307, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 336, 413, 431, 432, 433, 436, 441, 443, 453, 456, 472, 475, 476, 477, 478, 480, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497], "wherea": 492, "wherev": [480, 482], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 37, 38, 39, 40, 41, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 104, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 200, 215, 223, 255, 257, 259, 264, 268, 282, 284, 286, 288, 304, 377, 386, 394, 453, 477, 480, 483, 486], "which": [9, 12, 15, 17, 18, 34, 43, 44, 45, 47, 95, 100, 125, 128, 130, 134, 136, 162, 163, 182, 183, 185, 187, 188, 189, 190, 192, 195, 198, 200, 203, 205, 206, 207, 208, 211, 212, 217, 223, 250, 252, 255, 257, 259, 264, 268, 282, 284, 286, 288, 292, 304, 307, 317, 323, 355, 359, 369, 375, 377, 382, 384, 387, 388, 406, 407, 416, 430, 432, 436, 439, 446, 447, 453, 454, 456, 458, 461, 462, 463, 467, 469, 470, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499], "while": [128, 217, 220, 226, 304, 369, 447, 456, 470, 476, 477, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497], "whim": 153, "whimfingerprint": 153, "whole": [128, 304, 480], "whom": 480, "whose": [128, 161, 162, 217, 248, 304, 350, 353, 378, 430, 446, 453, 458, 482, 493], "wide": [493, 497], "width": [307, 316, 324, 388, 450, 495, 497], "wieczorek": 479, "william": 496, "willing": 483, "win": [255, 456], "win_rat": 456, "window": [450, 477, 485], "winerror": 476, "winkel": 475, "wish": 492, "with_kwarg": [128, 304], "within": [34, 128, 141, 142, 143, 145, 146, 148, 155, 156, 159, 161, 304, 369, 427, 461, 477, 480, 484, 485, 489, 494, 496, 498, 499], "without": [128, 189, 304, 458, 469, 470, 475, 477, 480, 482, 483, 484, 485, 489, 493, 496, 497, 499], "wolfgang": 475, "won": [128, 304, 489, 495], "work": [28, 128, 289, 304, 336, 369, 378, 441, 443, 444, 447, 465, 467, 477, 478, 479, 480, 484, 485, 490, 492, 493], "workaround": [476, 477], "workflow": [450, 475, 483, 492, 495, 498], "workload": 478, "world": [475, 483], "worldwid": 480, "worst": [9, 12, 15, 18, 246, 248, 250, 433], "would": [59, 90, 128, 161, 162, 244, 246, 252, 263, 304, 446, 453, 456, 472, 475, 478, 482, 484, 486, 487, 489, 490, 491, 492, 493, 494, 496, 499], "wrap": [107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 128, 268, 272, 290, 291, 304, 355, 475, 477, 488], "wrapper": [1, 27, 250, 252, 264, 356, 469, 470, 475, 490], "write": [475, 476, 480, 492], "writetext": 450, "written": [462, 463, 478, 480], "wrong": [467, 477], "wrongli": 476, "www": [475, 480], "x": [28, 126, 128, 163, 219, 246, 248, 272, 304, 324, 333, 346, 352, 356, 369, 372, 389, 406, 416, 430, 431, 432, 433, 441, 442, 443, 444, 447, 448, 453, 465, 469, 470, 472, 475, 477, 491, 494, 497], "x0": [459, 491], "x0_mesh": 459, "x1": [459, 491], "x1_mesh": 459, "x2": 491, "x_": [430, 438, 439, 461, 462, 463], "x_1": [438, 439, 461, 462, 463, 484], "x_2": [438, 439, 461, 462, 463, 484], "x_3": [438, 439, 461, 462, 463, 484], "x_4": [438, 439, 461, 462, 463], "x_5": 463, "x_6": 463, "x_i": 484, "x_new": 369, "x_pend": 28, "xdoctest": [128, 304], "xlabel": 459, "xlsx": [431, 432, 433], "xpho": [431, 432, 433], "xpu": [128, 304], "xxxx": 476, "xylen": [431, 432, 433, 435, 436], "y": [280, 304, 360, 369, 382, 406, 430, 431, 432, 433, 447, 448, 450, 453, 469, 470, 472, 475, 496], "y0": [459, 472], "y0_mesh": 459, "y1": 459, "y1_mesh": 459, "ye": 360, "year": [475, 496], "yet": [28, 477, 482, 490, 495], "yield": [6, 112, 128, 258, 304, 431, 432, 433, 435, 436, 441, 447, 450, 451, 453, 463, 465, 466, 467, 472, 475, 477, 481, 487, 488, 492, 495], "yield_cumbest": [431, 432, 433, 447], "yield_mean": 483, "yield_mod": 483, "yield_q_0": 483, "yield_std": 483, "ylabel": 459, "yml": 477, "you": [34, 55, 128, 304, 432, 436, 438, 446, 451, 453, 456, 458, 462, 463, 466, 472, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499], "your": [128, 304, 432, 446, 453, 456, 463, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 489, 492, 493, 494, 495, 496, 497, 498, 499], "your_branch_nam": 478, "yourself": [456, 495], "z": [448, 475], "zdir": 448, "zero": [47, 66, 68, 128, 161, 163, 173, 304, 307, 315, 324, 369, 380, 453, 456, 484, 495, 496, 497], "zero_grad": [128, 304], "zip": [447, 448], "\u00b5fmt": 477, "\u0161o\u0161i\u0107": [475, 479], "\u03b1": 472, "\u03bb": 472, "\u03bb1": 472, "\u03bb1_bump": 472, "\u03bb2": 472, "\u03bb2_bump": 472, "\u03bb_grid": 472, "\u03c3": 472}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedHypervolumeImprovement", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedHypervolumeImprovement", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.make_partitioning", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.botorch", "ChainedMCObjective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.botorch", "AffinePosteriorTransform", "baybe.targets.enum", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.transformations", "baybe.transformations.base", "MonotonicTransformation", "Transformation", "baybe.transformations.basic", "AbsoluteTransformation", "AffineTransformation", "BellTransformation", "ClampingTransformation", "CustomTransformation", "ExponentialTransformation", "IdentityTransformation", "LogarithmicTransformation", "PowerTransformation", "SigmoidTransformation", "TriangularTransformation", "TwoSidedAffineTransformation", "baybe.transformations.composite", "AdditiveTransformation", "ChainedTransformation", "MultiplicativeTransformation", "baybe.transformations.utils", "baybe.transformations.utils.combine_affine_transformations", "baybe.transformations.utils.compress_transformations", "baybe.transformations.utils.convert_transformation", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UncertainBool", "UnspecifiedType", "classproperty", "baybe.utils.basic.compose", "baybe.utils.basic.compose_two", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.ConvertibleToInterval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.metadata", "MeasurableMetadata", "Metadata", "baybe.utils.metadata.to_metadata", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_object_names", "baybe.utils.validation.validate_objective_input", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Desirability Optimization", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Transformations", "Optimizing a Laser\u2019s Wavelength", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "Transformations", "User Guide", "Utilities"], "titleterms": {"": [472, 478], "0": 477, "01": 477, "02": 477, "03": 477, "04": 477, "05": 477, "06": 477, "07": 477, "08": 477, "09": 477, "1": [477, 488], "10": 477, "11": 477, "12": 477, "13": 477, "14": 477, "15": 477, "16": 477, "17": 477, "19": 477, "2": [477, 488], "2022": 477, "2023": 477, "2024": 477, "2025": 477, "21": 477, "23": 477, "24": 477, "27": 477, "28": 477, "29": 477, "3": 477, "31": 477, "4": 477, "5": 477, "6": 477, "7": 477, "8": 477, "9": 477, "A": 475, "For": 489, "On": 487, "The": [456, 466, 472, 475, 486, 492, 493, 496], "abbrevi": 492, "absolut": 495, "absolutetransform": 314, "access": 458, "acqf": 2, "acquisit": [1, 2, 25, 27, 29, 30, 31, 32, 436, 482, 483], "acquisitionfunct": 26, "action": 496, "activ": [481, 489], "activate_paramet": 161, "ad": [435, 477, 482, 483, 496, 499], "add_fake_measur": 375, "add_noise_to_perturb_degenerate_row": 376, "add_parameter_nois": 377, "addit": [453, 497], "additivekernel": 120, "additivetransform": 327, "advanc": [475, 494, 497], "affineposteriortransform": 304, "affinetransform": [315, 497], "altern": 492, "amount": 453, "an": 456, "appli": 486, "ar": 495, "arm": [455, 456], "arm64": 476, "arrai": 493, "arrays_to_datafram": 378, "assembli": 492, "asynchron": 482, "attr": 478, "augment": [335, 336, 337], "auto": 494, "automat": [492, 497], "avail": [436, 494], "avx": 476, "back": 475, "backtest": [429, 469], "backward": 498, "bandit": [254, 455, 456], "base": [25, 36, 106, 124, 126, 140, 170, 181, 184, 194, 197, 202, 256, 258, 298, 310, 431, 432, 433, 438, 439, 453, 454, 463, 486, 493], "basesequentialmetarecommend": 187, "basic": [110, 172, 313, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 434, 435, 483, 485, 487, 492, 497], "basickernel": 107, "batch": 483, "batchify_ensemble_predictor": 290, "batchify_mean_var_predict": 291, "batteri": 475, "bayb": [0, 1, 2, 25, 27, 29, 30, 31, 32, 33, 35, 36, 42, 46, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 119, 123, 124, 126, 127, 129, 131, 133, 135, 137, 138, 139, 140, 144, 147, 149, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 181, 183, 184, 186, 191, 193, 194, 196, 197, 199, 201, 202, 204, 209, 213, 214, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 263, 265, 266, 267, 269, 272, 273, 274, 276, 277, 279, 281, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 308, 309, 310, 313, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 435, 475, 478], "bayesian": [196, 197, 199, 475, 490], "bayesianlinearsurrog": 282, "bayesianrecommend": 198, "bell": 495, "belltransform": [316, 497], "bernoulli": 456, "betabernoullimultiarmedbanditsurrog": 255, "betaprior": 173, "binari": [300, 302], "binarytarget": 301, "black": [430, 456], "block_deserialization_hook": 233, "block_serialization_hook": 234, "bo": 487, "boolean": [357, 358, 359, 360], "both": 465, "botorch": [127, 199, 303, 462], "botorchrecommend": 200, "bound": [446, 491], "box": [430, 456], "break": 477, "build": [456, 491], "bytes_to_human_read": 397, "cach": [483, 485], "call": 486, "callabl": [438, 439, 463, 493], "campaign": [33, 34, 430, 431, 432, 433, 436, 438, 439, 441, 442, 444, 447, 450, 451, 459, 462, 463, 465, 466, 483], "candid": [483, 486], "cardinalityconstraint": 37, "case": 456, "cast": 488, "catch_constant_target": 292, "categor": 144, "categoricalencod": 150, "categoricalparamet": [145, 489], "caution": 486, "chain": 497, "chainedmcobject": 128, "chainedtransform": 328, "challeng": 484, "chang": 477, "changelog": 477, "check_if_in": 358, "chemic": 475, "chemistri": [361, 362, 363, 364, 365], "choicevalu": 302, "citat": 475, "clampingtransform": [317, 497], "class": 478, "classproperti": 343, "clone": 475, "closer_el": 406, "closest_el": 407, "cluster": [204, 490], "clustering_algorithm": [366, 367, 368], "code": 478, "columntransform": 416, "combine_affine_transform": 331, "compar": 465, "compat": 498, "compon": 446, "compos": 344, "compose_two": 345, "composit": [119, 261, 326, 494, 497], "compositekernel": 108, "compositesurrog": 262, "compress": 497, "compress_transform": 332, "comput": [484, 487], "condit": [42, 43, 484], "config": [466, 467, 483], "configur": [450, 451, 466, 486, 488, 492], "consider": 495, "constraint": [35, 36, 38, 42, 46, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 437, 438, 439, 440, 441, 442, 443, 444, 453, 454, 484, 486, 491, 499], "construct": [431, 432, 433, 438, 439, 453, 462, 463, 488, 491, 497], "constructor": [491, 492], "continu": [46, 214, 437, 439, 453, 461, 481, 484, 489, 491, 496, 499], "continuouscardinalityconstraint": [47, 484], "continuousconstraint": 39, "continuouslinearconstraint": [48, 484], "continuouslinearequalityconstraint": 50, "continuouslinearinequalityconstraint": 51, "continuousnonlinearconstraint": 40, "continuousparamet": 141, "contribut": 478, "contributor": 479, "control": [483, 486], "conveni": [488, 497], "convent": 478, "convers": [370, 371, 372, 373, 488, 492], "convert": [235, 450], "convert_acqf": 30, "convert_to_float": 346, "convert_transform": 333, "convertibletointerv": 392, "copi": 492, "core": [216, 219, 220, 232, 233, 234, 235, 236, 237, 238, 245, 246, 267, 274, 276], "cpu": 476, "creat": [430, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 450, 451, 458, 461, 462, 465, 466, 469, 470, 483, 491], "create_fake_input": 379, "creation": [431, 432, 433, 453, 454, 483, 495, 497, 499], "current": 497, "custom": [147, 263, 265, 430, 441, 445, 446, 449, 450, 451, 458, 494, 495, 497], "customdiscreteparamet": [148, 489], "customencod": 151, "customonnxsurrog": 264, "customtransform": 318, "data": [431, 432, 433, 491, 496], "datafram": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 438, 439, 463, 491, 492, 493], "de": [465, 484, 492], "default": [277, 491, 492], "defaultkernelfactori": 278, "defin": [430, 438, 439, 446, 447, 448, 458, 459, 462, 463, 467, 469, 470, 475], "definit": 447, "depend": [442, 475, 489], "deprec": [49, 50, 51, 52, 477, 498], "deprecationerror": 70, "deseri": 492, "deserialize_datafram": 242, "design": [475, 478], "desir": [129, 458, 483], "desirabilityobject": [130, 488], "develop": 478, "df_apply_dependency_augment": 336, "df_apply_permutation_augment": 337, "df_drop_single_value_column": 380, "df_drop_string_column": 381, "df_uncorrelated_featur": 382, "dictionari": [466, 467], "differ": 436, "dimens": 463, "discret": [53, 221, 224, 225, 226, 440, 441, 442, 443, 453, 462, 483, 484, 489, 491], "discretecardinalityconstraint": [54, 484], "discreteconstraint": 41, "discretecustomconstraint": [55, 484], "discretedependenciesconstraint": [56, 484], "discreteexcludeconstraint": [57, 484], "discretelinkedparametersconstraint": [58, 484], "discretenolabelduplicatesconstraint": [59, 484], "discreteparamet": 142, "discretepermutationinvarianceconstraint": [60, 484], "discreteproductconstraint": [61, 484], "discretesamplingmethod": 412, "discretesumconstraint": [62, 484], "discuss": 456, "disk": 485, "do": 493, "docstr": 478, "document": 451, "domin": 488, "dtypefloatnumpi": 403, "dtypefloatonnx": 404, "dtypefloattorch": 418, "dummi": 339, "duplic": 453, "dure": 499, "dynam": 486, "edbo": 279, "edbokernelfactori": 280, "effici": [484, 499], "emptysearchspaceerror": 71, "encod": 489, "end": 475, "enum": [131, 149, 305], "environ": 485, "equal": 497, "equival": 492, "estim": 499, "exampl": [431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 450, 451, 462, 463, 465, 466, 467, 473, 475, 487, 488], "except": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "exceptiongroup": 476, "exclud": 486, "exclus": [443, 444, 486], "exist": [495, 497], "expect": 496, "expectedimprov": 3, "experi": [441, 442, 443, 444, 450, 451, 465, 475, 482, 493], "experiment": [483, 485, 487], "expir": 477, "explain": [98, 487], "explicit": 491, "exponentialtransform": 319, "extend": 478, "extract": 494, "fake": 499, "faq": 474, "farthest_point_sampl": 413, "featur": 485, "field": 492, "file": [466, 467], "filter_df": 383, "find_subclass": 347, "finite_float": 421, "fix": [476, 477], "float": 485, "fp": 485, "fpsiniti": 210, "fpsrecommend": 211, "fraction_to_float": 371, "from": [466, 475, 477, 483, 491, 492, 495, 497], "full": [431, 432, 433, 491], "function": [430, 431, 432, 433, 436, 438, 439, 447, 462, 463, 478, 482, 483], "further": 483, "fuzzy_row_match": 384, "gammaprior": 174, "gaussian_process": [266, 267, 269, 272, 273, 274, 276, 277, 279], "gaussianmixtureclusteringrecommend": 205, "gaussianprocesspreset": 275, "gaussianprocesssurrog": 268, "gener": [469, 470, 478, 490], "get": [435, 458, 483, 486], "get_base_structure_hook": 236, "get_baseclass": 348, "get_canonical_smil": 362, "get_fingerprint_class": 363, "get_parameters_from_datafram": 162, "get_subclass": 349, "get_transform_object": 385, "get_transform_paramet": 228, "github": 475, "global": 481, "group_duplicate_valu": 350, "guid": 498, "halfcauchyprior": 175, "halfnormalprior": 176, "handle_missing_valu": 386, "hilberts_factori": 351, "hook": [445, 446, 447, 448], "hybrid": [438, 463, 484], "identitytransform": 320, "imaginari": 456, "implement": [484, 485], "implicit": 488, "import": [430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 446, 448, 450, 451, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 487, 495], "improv": 448, "includ": 475, "inclus": 431, "incompatibilityerror": 72, "incompatibleacquisitionfunctionerror": 73, "incompatibleargumenterror": 74, "incompatibleexplainererror": 75, "incompatiblesearchspaceerror": 76, "incompatiblesurrogateerror": 77, "incomplet": 433, "incompletemeasurementserror": 78, "incorpor": 444, "independentgaussiansurrog": 257, "index": 475, "indic": 475, "infeasibilityerror": 79, "infiniteintervalerror": 393, "influenc": [484, 499], "inform": [483, 490], "initi": [431, 436], "inputdatatypewarn": 80, "insight": [96, 97, 98, 99, 101, 102, 103, 104, 487], "instal": [475, 476], "instanc": 446, "instead": [450, 451], "instruct": [485, 495], "interpret": 487, "interrupt": 447, "interv": [391, 392, 393, 394, 395], "invalidsurrogatemodelerror": 81, "invalidtargetvalueerror": 82, "invari": 453, "invok": 492, "irrelev": 496, "is_abstract": 359, "is_all_inst": 352, "is_cardinality_fulfil": 64, "is_inact": 163, "is_shap_explain": 103, "issu": [475, 476], "iter": [438, 439, 450, 451], "json": [483, 492], "kernel": [105, 106, 109, 110, 119], "kernel_factori": [269, 272], "kernelfactori": 270, "kmeansclusteringrecommend": 206, "kmedoid": [368, 369], "known": [475, 476], "label": 489, "laser": 472, "leak": 476, "learn": [468, 470, 481, 493, 496], "licens": [475, 480], "like": 489, "limit": [482, 484, 487, 495], "linear": [281, 439], "linearkernel": 111, "link": 451, "local": [475, 481], "logarithmictransform": 321, "logexpectedimprov": 4, "lognormalprior": 177, "look_up_target": 248, "lookup": [247, 248, 431, 432, 433, 438, 439, 447, 463, 469, 470, 493], "loop": [430, 431, 432, 433, 469, 470, 472, 475], "maco": 476, "maintain": [475, 479], "make_dict_valid": 294, "make_explainer_for_surrog": 104, "make_gp_from_preset": 276, "make_partit": 31, "manual": [441, 442, 443, 444], "mark": 482, "match": 495, "match_attribut": 353, "maternkernel": 112, "maxim": 495, "mean": 493, "meanpredictionsurrog": 284, "measur": [435, 450, 451, 483, 499], "measurablemetadata": 399, "mechan": [431, 432, 433, 493], "memori": [396, 397, 499], "memorys": 222, "meta": [183, 184, 186, 486, 490], "metadata": [398, 400, 401], "metarecommend": 185, "method": [446, 478, 481], "minim": 495, "minimumcardinalityviolatedwarn": 83, "miss": 493, "mixin": 239, "mixtur": [452, 453, 454], "model": [436, 450, 451, 453, 454, 456, 472, 484, 487, 494], "modelnottrainederror": 84, "monitor": 448, "monkeypatch": [446, 447, 448], "monotonictransform": 311, "multi": [455, 456, 457, 487, 488, 494], "multipl": [493, 497], "multiplicativetransform": 329, "naiv": [191, 283], "naivehybridspacerecommend": 192, "name": 489, "name_to_smil": 364, "necessari": [431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 450, 451, 462, 463, 465, 466, 467], "negat": 495, "nest": 492, "ngboost": 285, "ngboostsurrog": 286, "nois": 499, "nomcacquisitionfunctionerror": 85, "nomeasurementserror": 86, "non": 488, "non_inf_float": 422, "non_nan_float": 423, "non_shap_explain": 99, "none": 493, "nonpredict": [201, 202, 204, 209], "nonpredictiverecommend": 203, "nonstring_to_tupl": 372, "norecommenderslefterror": 87, "normal": [458, 488, 495], "normalize_input_dtyp": 387, "normalprior": 178, "notenoughpointslefterror": 88, "nothingtosimulateerror": 89, "numer": [154, 306, 402, 403, 404, 405, 406, 407], "numericalcontinuousparamet": [155, 489], "numericaldiscreteparamet": [156, 489], "numericaltarget": [307, 495], "numericalunderflowerror": 90, "object": [123, 124, 125, 126, 127, 129, 131, 133, 135, 137, 138, 431, 432, 433, 436, 438, 439, 441, 442, 443, 444, 458, 462, 465, 469, 470, 475, 483, 488, 492], "onnx": 450, "oper": 497, "optim": [430, 458, 459, 469, 470, 472, 475, 483, 495, 499], "option": [475, 489], "optionalimporterror": 91, "order": [453, 485, 497], "output": [450, 451, 487, 488, 494], "overrid": 478, "packag": 475, "page": 487, "pamclusteringrecommend": 207, "parallel": [483, 485], "paramet": [139, 140, 143, 144, 147, 149, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 431, 432, 433, 436, 451, 453, 454, 483, 487, 489, 491, 499], "parameter_cartesian_prod_panda": 224, "parameter_cartesian_prod_polar": 225, "parameterencod": 152, "pareto": [133, 459], "paretoobject": [134, 488], "partial": [27, 482], "partialacquisitionfunct": 28, "pass": 451, "pend": 482, "perform": [431, 462, 463], "periodickernel": 113, "perman": 486, "permut": 453, "piecewisepolynomialkernel": 114, "plainkernelfactori": 271, "plot": [430, 447, 448, 487], "point": [485, 495], "polar": [476, 484, 485], "polynomialkernel": 115, "posterior": 483, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 258, "power": 495, "powertransform": 322, "practic": 495, "pre": 450, "precis": 485, "predict": 483, "preset": [273, 274, 276, 277, 279], "pretrain": 450, "pretty_print_df": 388, "print": [441, 442, 444], "prior": [169, 170, 171, 172], "probabilityofimprov": 7, "probabl": 448, "problem": [430, 447, 459, 472, 476], "product": [444, 491], "productkernel": 121, "pull": 478, "pure": [193, 194, 196, 197, 199, 201, 202, 204, 209, 481, 490], "purerecommend": 195, "pycharm": 476, "qexpectedhypervolumeimprov": 9, "qexpectedimprov": 10, "qknowledgegradi": 11, "qlogexpectedhypervolumeimprov": 12, "qlogexpectedimprov": 13, "qlognoisyexpectedhypervolumeimprov": 15, "qlognoisyexpectedimprov": 16, "qlognparego": 14, "qnegintegratedposteriorvari": 17, "qnoisyexpectedhypervolumeimprov": 18, "qnoisyexpectedimprov": 19, "qposteriorstandarddevi": 20, "qprobabilityofimprov": 21, "qsimpleregret": 22, "qthompsonsampl": 23, "quick": 475, "qupperconfidencebound": 24, "ramp": 495, "random": [408, 409, 410], "random_forest": 287, "randomforestsurrog": 288, "randomrecommend": 212, "rbfkernel": 116, "recommend": [180, 181, 183, 184, 186, 191, 193, 194, 196, 197, 199, 201, 202, 204, 209, 435, 436, 450, 451, 458, 462, 463, 465, 482, 483, 486, 490], "recommenderprotocol": 182, "reduct": 481, "refers_to": 354, "regist": 446, "register_custom_architectur": 265, "register_hook": 355, "relat": 476, "remov": 477, "replic": 494, "represent": [453, 454, 487, 491], "reproduc": 499, "request": 478, "restrict": 491, "result": [430, 447, 448, 482], "rffkernel": 117, "role": 496, "row": 485, "rqkernel": 118, "run": [430, 438, 439, 456, 485], "sampl": [209, 481, 485, 490], "sample_numerical_df": 414, "sampling_algorithm": [411, 413, 414], "scalar": 132, "scale": 415, "scalekernel": 122, "scenario": [249, 250, 472, 485, 493], "scope": 497, "search": [453, 454, 458, 461, 469, 475, 481, 491, 499], "searchspac": [213, 214, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 431, 433, 436, 438, 439, 441, 442, 443, 444, 460, 462, 463, 470], "searchspacematchwarn": 92, "searchspacetyp": 218, "see": 496, "select_constructor_hook": 237, "semaphor": 476, "sequenti": [186, 483], "sequentialmetarecommend": 188, "serial": [231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 464, 465, 483, 492, 497], "serializ": 484, "serialize_datafram": 243, "serialmixin": 240, "set": [430, 447, 448, 459, 461, 469, 470, 472, 495], "set_random_se": 409, "setup": [435, 441, 442, 443, 444, 450, 451, 453, 454, 456, 459, 465], "shap": [97, 98, 99, 101, 102, 103, 104, 487], "shap_explain": 101, "shap_plot": 102, "shapinsight": 100, "sigmoid": 495, "sigmoidtransform": [323, 497], "signatur": 446, "simplex": [453, 491], "simul": [244, 245, 246, 247, 248, 249, 250, 251, 252, 430, 431, 432, 433, 447, 456, 469, 470, 472, 485, 493], "simulate_experi": 246, "simulate_scenario": 250, "simulate_transfer_learn": 252, "singl": [135, 459, 493], "singletargetobject": [136, 488], "sklearnclusteringrecommend": 208, "slot": [453, 454], "smile": 158, "smiles_to_fingerprint_featur": 365, "smoothedboxprior": 179, "some": [438, 439], "sort_paramet": 164, "space": [453, 454, 458, 461, 463, 469, 475, 481, 483, 491, 499], "span": 453, "stage": 450, "start": 475, "statist": 483, "stop": 447, "str_to_acqf": 32, "strategi": [436, 475], "streamingsequentialmetarecommend": 189, "string": [466, 492], "strtobool": 360, "structure_constraint": 52, "studi": 494, "sub": 481, "subselectioncondit": [44, 484], "subspac": 491, "subspacecontinu": 215, "subspacediscret": 223, "substanc": [157, 158, 453, 475], "substanceencod": 153, "substanceparamet": [159, 489], "suggest": 476, "suitabl": 436, "sum": 444, "support": [476, 482], "surrog": [253, 254, 256, 258, 259, 261, 263, 265, 266, 267, 269, 272, 273, 274, 276, 277, 279, 281, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 436, 449, 450, 451, 484, 487, 494], "surrogateprotocol": 260, "synchron": 478, "synthet": [462, 463], "tabl": [431, 432, 433, 469, 470, 475], "target": [297, 298, 299, 300, 302, 303, 305, 306, 308, 446, 457, 458, 459, 488, 495, 499], "task": [469, 470], "taskparamet": [146, 489, 496], "technologi": 496, "telemetri": 475, "temporary_se": 410, "terminologi": [453, 492, 493, 496], "test": [438, 439, 462, 463], "theoret": 453, "thi": [431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 444, 462, 463, 487], "third_parti": [367, 368], "thresholdcondit": [45, 484], "through": 496, "to_kernel_factori": 272, "to_metadata": 401, "to_object": 126, "to_searchspac": 219, "to_str": 373, "to_tensor": 389, "to_tupl": 356, "toggl": 486, "toler": 483, "tool": 478, "torch": [417, 418, 419, 476], "tradit": 454, "train": 450, "trajectori": 486, "transfer": [468, 470, 493, 496], "transfer_learn": [251, 252], "transform": [308, 309, 310, 312, 313, 326, 330, 331, 332, 333, 471, 495, 497], "transform_target_column": 390, "treasur": 496, "triangular": 495, "triangulartransform": [324, 497], "trigger": [446, 448], "two": 467, "twophasemetarecommend": 190, "twosidedaffinetransform": [325, 497], "type": 492, "type_validation_convert": 295, "uncertainbool": 341, "uncertainti": 481, "unidentifiedsubclasserror": 93, "uninterrupt": 447, "unlock": 496, "unmatchedattributeerror": 94, "unreleas": 477, "unspecifi": 340, "unspecifiedtyp": 342, "unstructure_bas": 238, "unsupport": 484, "unusedobjectwarn": 95, "upperconfidencebound": 8, "us": [431, 432, 433, 435, 436, 441, 442, 443, 444, 450, 451, 456, 462, 463, 491, 492, 493, 494], "usag": 487, "use_fallback_constructor_hook": 395, "user": 498, "util": [29, 30, 31, 32, 63, 64, 160, 161, 162, 163, 164, 241, 242, 243, 289, 290, 291, 292, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 499], "v": [446, 453, 459, 476, 483, 486], "valid": [65, 66, 67, 68, 137, 138, 165, 166, 167, 168, 227, 228, 229, 230, 293, 294, 295, 296, 420, 421, 422, 423, 424, 425, 426, 427, 428, 451, 467], "validate_cardinality_constraint_parameter_bound": 66, "validate_cardinality_constraints_are_nonoverlap": 67, "validate_constraint": 68, "validate_custom_architecture_cl": 296, "validate_decorrel": 166, "validate_is_finit": 167, "validate_not_nan": 424, "validate_object_nam": 425, "validate_objective_input": 426, "validate_paramet": 230, "validate_parameter_input": 427, "validate_parameter_nam": 229, "validate_searchspace_from_config": 220, "validate_simplex_subspace_from_config": 226, "validate_target_input": 428, "validate_target_nam": 138, "validate_unique_valu": 168, "valu": [458, 483, 489, 491, 492, 493], "variabl": 485, "varname_numpy_use_single_precis": 405, "varname_torch_use_single_precis": 419, "verif": [441, 442, 443, 444, 453, 454, 467], "verifi": 439, "via": [484, 487], "visual": 459, "wavelength": 472, "we": 493, "what": 493, "window": 476, "within": 491, "without": 476, "workflow": [478, 482], "wrap": [438, 439, 463, 497], "write": 478}})